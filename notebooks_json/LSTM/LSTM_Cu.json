{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "LSTM_Cu.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPNSYFpNHxvI9hIDj17ymxC",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "62b9d17d42a24216968bf2d9a17a726b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_53490962428040fbbb11cfc661ab39ba",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_fc06fb7f5a7448fc896007b83ab81108",
              "IPY_MODEL_f86bfdf89aa248949fcb7c6449847df4"
            ]
          }
        },
        "53490962428040fbbb11cfc661ab39ba": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fc06fb7f5a7448fc896007b83ab81108": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9b67da4d40ce42f7874393ae8c9b0899",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.83MB of 0.83MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a2df1ef81d5a429893b7bac6b1df87bb"
          }
        },
        "f86bfdf89aa248949fcb7c6449847df4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_dd9a97e4c0154beb80a9c3126baceaef",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_45f88f48bfbc4360b53ec99e7311965d"
          }
        },
        "9b67da4d40ce42f7874393ae8c9b0899": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a2df1ef81d5a429893b7bac6b1df87bb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dd9a97e4c0154beb80a9c3126baceaef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "45f88f48bfbc4360b53ec99e7311965d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "33fd9d45ff1c47f0883f60b39b3638df": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_db82df352b1d440ca5fd3b26742425b1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_144d90e580104a34ad0392c4e1cf015b",
              "IPY_MODEL_564fc3b9834d4e039c8347182ea7da88"
            ]
          }
        },
        "db82df352b1d440ca5fd3b26742425b1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "144d90e580104a34ad0392c4e1cf015b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_cc958c1459d04d1991c2d8535306d845",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.01MB of 1.01MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_902cc780c10a43b7bc9c1dca55279ca6"
          }
        },
        "564fc3b9834d4e039c8347182ea7da88": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2642d08ddd6f42de803af794a23e84e1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a0b98a0182e642c3bd3146a0457329cd"
          }
        },
        "cc958c1459d04d1991c2d8535306d845": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "902cc780c10a43b7bc9c1dca55279ca6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2642d08ddd6f42de803af794a23e84e1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a0b98a0182e642c3bd3146a0457329cd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dea4986117dc48bda3156c6b50e0a870": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1e9f34e8bbc74f25b56b958378592267",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_66d4d2e4aefc4ece8381939654f8b2ac",
              "IPY_MODEL_595d76cf9baa451d972a376c33862bfe"
            ]
          }
        },
        "1e9f34e8bbc74f25b56b958378592267": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "66d4d2e4aefc4ece8381939654f8b2ac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_cb23f271669c4d8195d29685c65cb6d3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.51MB of 2.51MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_00aa5be663e54629b3a4312be8881c8b"
          }
        },
        "595d76cf9baa451d972a376c33862bfe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_84dab9acc1284a91af7d791daca3094a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_84b8778dcc954272b671dc2f7ec1df5e"
          }
        },
        "cb23f271669c4d8195d29685c65cb6d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "00aa5be663e54629b3a4312be8881c8b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "84dab9acc1284a91af7d791daca3094a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "84b8778dcc954272b671dc2f7ec1df5e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ed35a96a20b0410ca99c28214bf7dc50": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6c392688bed44540a124b73d8bc6837c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6332041961cf4f988e00f232dae182b3",
              "IPY_MODEL_9aa0e9a2e9784a4898ce5102f26ec6e0"
            ]
          }
        },
        "6c392688bed44540a124b73d8bc6837c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6332041961cf4f988e00f232dae182b3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d6a25b9c86914435800259be13a68906",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.93MB of 0.93MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a5d699db41584c8eb7ad3a96ea80fc13"
          }
        },
        "9aa0e9a2e9784a4898ce5102f26ec6e0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_dc44b80691144619b34258efee7990b5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a437fb10cc7b4637b34678be42eeae5a"
          }
        },
        "d6a25b9c86914435800259be13a68906": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a5d699db41584c8eb7ad3a96ea80fc13": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc44b80691144619b34258efee7990b5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a437fb10cc7b4637b34678be42eeae5a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc387440ccf041cbbad05761049fc59d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a81470b6db904348873fce30474156cc",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_090c2641ac1d4296be0ca88c977ceb84",
              "IPY_MODEL_49ffff23a9cb4affad711a7dfd045580"
            ]
          }
        },
        "a81470b6db904348873fce30474156cc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "090c2641ac1d4296be0ca88c977ceb84": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_7320c370b9554d6faa3da1e948118358",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.19MB of 2.19MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ebba82f94a6a4e4a8429335eec9e69c2"
          }
        },
        "49ffff23a9cb4affad711a7dfd045580": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_cb7ed26b09db446a9077723308c31af2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dc35011bc16b41329dbcdf93a28ebbd0"
          }
        },
        "7320c370b9554d6faa3da1e948118358": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ebba82f94a6a4e4a8429335eec9e69c2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cb7ed26b09db446a9077723308c31af2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dc35011bc16b41329dbcdf93a28ebbd0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "85c8c68deabf44aabc4185c990892955": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_8465444c7f554180a81d2525c4c7e809",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f35cb0826c6942d286f2dcb67d42b57e",
              "IPY_MODEL_300b5b625e5f462189955c31707243c4"
            ]
          }
        },
        "8465444c7f554180a81d2525c4c7e809": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f35cb0826c6942d286f2dcb67d42b57e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_35c4fffb541f490fb343dbcca0e1e8f0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.22MB of 1.22MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3ce5742fb0084f5b8d64029464f5e8c0"
          }
        },
        "300b5b625e5f462189955c31707243c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_fb46d3049de24e419ef1ee9a16310532",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5e9e85a665fe4de599be6bbc8e10520d"
          }
        },
        "35c4fffb541f490fb343dbcca0e1e8f0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3ce5742fb0084f5b8d64029464f5e8c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fb46d3049de24e419ef1ee9a16310532": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5e9e85a665fe4de599be6bbc8e10520d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6a2a3706e3a8461fbabd40b1ddc55fc1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e437d34147054185b995f629d8aec254",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5a6b8b39d64f4d31abcd5cedbd01e522",
              "IPY_MODEL_3e241aa8f91b4e30a99619ecedba07ab"
            ]
          }
        },
        "e437d34147054185b995f629d8aec254": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5a6b8b39d64f4d31abcd5cedbd01e522": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6c3ee5981a4247b0813bc7d2cbc2fe17",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.17MB of 3.17MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_06c2816da1944a7895fa9ef9593c78f5"
          }
        },
        "3e241aa8f91b4e30a99619ecedba07ab": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2b737f769f474805b9b2b34c2bdc7e65",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1573818cbcee4ec1ae50568d262bc440"
          }
        },
        "6c3ee5981a4247b0813bc7d2cbc2fe17": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "06c2816da1944a7895fa9ef9593c78f5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2b737f769f474805b9b2b34c2bdc7e65": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1573818cbcee4ec1ae50568d262bc440": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c6f08b1696d34adabe37d7e02152045d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3e41973a203f4abcbcd4022c185be377",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f265b378457f4cab976ff5a345359e04",
              "IPY_MODEL_aae7fceb6afc4b879def7b4e8cd9df69"
            ]
          }
        },
        "3e41973a203f4abcbcd4022c185be377": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f265b378457f4cab976ff5a345359e04": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_03a1903ac17f4b63b2c4ead7d89aa6d6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.84MB of 1.84MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ae46de7b2314464dafbb5c2eff6c6edf"
          }
        },
        "aae7fceb6afc4b879def7b4e8cd9df69": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_fd32071dd2ff43938198cbd55498e04a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e2feb7a4140745cdbe8aa788e297fe68"
          }
        },
        "03a1903ac17f4b63b2c4ead7d89aa6d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ae46de7b2314464dafbb5c2eff6c6edf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fd32071dd2ff43938198cbd55498e04a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e2feb7a4140745cdbe8aa788e297fe68": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2514e7d5be7e4787ac0d9bbbaf0adc59": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2a5d2e70a08947668183e6a7efd5d711",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_df051a3825604965aa82bd983664666e",
              "IPY_MODEL_b1577425aedb48d7a3ab8d7f3cab31ee"
            ]
          }
        },
        "2a5d2e70a08947668183e6a7efd5d711": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "df051a3825604965aa82bd983664666e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_5d67114261214ccabfdb12fcfb62ffcd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.11MB of 1.11MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9e1484e32e334f5aa9a241f9e0b726fb"
          }
        },
        "b1577425aedb48d7a3ab8d7f3cab31ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_44189c8631d64d8892ebeaabcfb00340",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f51f740ea2414779bd761a84a277c99f"
          }
        },
        "5d67114261214ccabfdb12fcfb62ffcd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9e1484e32e334f5aa9a241f9e0b726fb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "44189c8631d64d8892ebeaabcfb00340": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f51f740ea2414779bd761a84a277c99f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1e03a7db36464a81ba0274e5db2c3db0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_90dc4efd327f41e8be1443d67cdf1429",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3102ed87d15042b591e4ae22df757e37",
              "IPY_MODEL_b35fc3b7a6764dd183c2d4689bbde826"
            ]
          }
        },
        "90dc4efd327f41e8be1443d67cdf1429": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3102ed87d15042b591e4ae22df757e37": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_830ac428ff3649ca863c1bebe31e3111",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.88MB of 1.88MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_97890aca76ca4471ae818b66b40c072d"
          }
        },
        "b35fc3b7a6764dd183c2d4689bbde826": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_869834493925450d9517fe839d70141e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_587184d0179140ebb846239021e8bc5a"
          }
        },
        "830ac428ff3649ca863c1bebe31e3111": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "97890aca76ca4471ae818b66b40c072d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "869834493925450d9517fe839d70141e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "587184d0179140ebb846239021e8bc5a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "827d72be79eb4c2eafd63fe2e45a1335": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1e38bd3721ac475a8963b41fe42f066c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3b95f3e82bc44562ba4872cbe41b7052",
              "IPY_MODEL_a71083d0846346bf875f098480a03d0b"
            ]
          }
        },
        "1e38bd3721ac475a8963b41fe42f066c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3b95f3e82bc44562ba4872cbe41b7052": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_354dde2c04ca4acdad4ee64923553db2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.97MB of 0.97MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8782b81ecf144be9a54681608b980ae6"
          }
        },
        "a71083d0846346bf875f098480a03d0b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6613914100f442499182d4256a450751",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9007c4cff3844859b94444ce3f0e6cbf"
          }
        },
        "354dde2c04ca4acdad4ee64923553db2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8782b81ecf144be9a54681608b980ae6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6613914100f442499182d4256a450751": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9007c4cff3844859b94444ce3f0e6cbf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2ef5cc5c745e4ced8855ebe1c9a102ed": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1bbe113e365041c7a7aaeb642442c747",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_902fa296a8b84abfbb55eb7318d219ec",
              "IPY_MODEL_92fa06ace707449e8918bdf748dccefb"
            ]
          }
        },
        "1bbe113e365041c7a7aaeb642442c747": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "902fa296a8b84abfbb55eb7318d219ec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_40ec7a41eb7b43f0b61e4bf8a3b2114c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.92MB of 0.92MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_97c7aead562a46aa8e5e820d4e3d2da9"
          }
        },
        "92fa06ace707449e8918bdf748dccefb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8405484ed846449f9351be2c6d4a4014",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9e88bce1da0e4ebeaa1810934158732a"
          }
        },
        "40ec7a41eb7b43f0b61e4bf8a3b2114c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "97c7aead562a46aa8e5e820d4e3d2da9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8405484ed846449f9351be2c6d4a4014": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9e88bce1da0e4ebeaa1810934158732a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "164215c5c5ba4a00a21bee8ba95e9c43": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ae712b5a31f847c997ee9882d992611f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d949f424a59948209a63e11d57eb1353",
              "IPY_MODEL_03c3681731de40faafdbacfc2e90ef5e"
            ]
          }
        },
        "ae712b5a31f847c997ee9882d992611f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d949f424a59948209a63e11d57eb1353": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9b82e9d085754bc58e35d8704a28292d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.50MB of 2.50MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b53e8a51631f4158a93db8c904fae3d4"
          }
        },
        "03c3681731de40faafdbacfc2e90ef5e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_fddc6ea0883c4833b593fea4656b8b44",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6567847344c64a739823cd3e1932adb7"
          }
        },
        "9b82e9d085754bc58e35d8704a28292d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b53e8a51631f4158a93db8c904fae3d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fddc6ea0883c4833b593fea4656b8b44": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6567847344c64a739823cd3e1932adb7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "56a1f7795c644352b913e28e192edbb8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d50081dc74af44d083df2bd096c6c85f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a25ec11655a64821b82499e9dc004f57",
              "IPY_MODEL_0d6b56f52c9044f8a9558a21a00346f3"
            ]
          }
        },
        "d50081dc74af44d083df2bd096c6c85f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a25ec11655a64821b82499e9dc004f57": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_0dff24ecdcc54904a7568cd0eeccdfeb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.60MB of 1.60MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ceb60376ffae4f9ba44b704fde5c9052"
          }
        },
        "0d6b56f52c9044f8a9558a21a00346f3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2d1268044eda45ae9e04b3a562386369",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_12d8e46c9de04440ab4bc56e835bca78"
          }
        },
        "0dff24ecdcc54904a7568cd0eeccdfeb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ceb60376ffae4f9ba44b704fde5c9052": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2d1268044eda45ae9e04b3a562386369": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "12d8e46c9de04440ab4bc56e835bca78": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "41375927f12e43f9bfd4c189fabd0b78": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a40c98a8b74948a886e9816965689c37",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ac6f8fff126a48c18d4336abf61c3b25",
              "IPY_MODEL_249eb683065b4ebea4f19cdc02443d46"
            ]
          }
        },
        "a40c98a8b74948a886e9816965689c37": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ac6f8fff126a48c18d4336abf61c3b25": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_cf7a8b26cf4b44f781327f1885dc1a94",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.46MB of 1.46MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1b6003cbfa3e4fb4aad1b0f7e534f8aa"
          }
        },
        "249eb683065b4ebea4f19cdc02443d46": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b7017ee29d7b448aa8644f939e60d0c7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_25aac8e496a54e21b9f91e4c1f8f35e4"
          }
        },
        "cf7a8b26cf4b44f781327f1885dc1a94": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1b6003cbfa3e4fb4aad1b0f7e534f8aa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b7017ee29d7b448aa8644f939e60d0c7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "25aac8e496a54e21b9f91e4c1f8f35e4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1678f866f7b3420cbbe2580325141bb8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_63f19d688f1a4eaab0494b4b741126a9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_050b82ae2efe41d2a76a98b2dc4fcebf",
              "IPY_MODEL_4a94288e7f38485a9611428f2636def6"
            ]
          }
        },
        "63f19d688f1a4eaab0494b4b741126a9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "050b82ae2efe41d2a76a98b2dc4fcebf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d60c45c0221e4b2bafb7f7283875adc8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.65MB of 1.65MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d129930f020843998b8d0122b28215a1"
          }
        },
        "4a94288e7f38485a9611428f2636def6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_480e239b1d0f4fbdb1ab81c9690a52ed",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_fd61c359af9643d9af31cb5bbb34f6b3"
          }
        },
        "d60c45c0221e4b2bafb7f7283875adc8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d129930f020843998b8d0122b28215a1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "480e239b1d0f4fbdb1ab81c9690a52ed": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "fd61c359af9643d9af31cb5bbb34f6b3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "504ba7816ea34507abd36f93ff0dadea": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_eb19054cebce4a60b477be658f32702d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b2353a1060fa4e00906911b77874d26d",
              "IPY_MODEL_827928d889554a63aff7a495c543b265"
            ]
          }
        },
        "eb19054cebce4a60b477be658f32702d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b2353a1060fa4e00906911b77874d26d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2b3047755dfb4b749648ba668aac8112",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.32MB of 3.32MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1353ec8fc19d45a4ab48bdff5b7ec82e"
          }
        },
        "827928d889554a63aff7a495c543b265": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5e3a0c9c378445de84e40a3029fbfc0b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_453f84385b754a8f80f12bfd09d877fa"
          }
        },
        "2b3047755dfb4b749648ba668aac8112": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1353ec8fc19d45a4ab48bdff5b7ec82e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5e3a0c9c378445de84e40a3029fbfc0b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "453f84385b754a8f80f12bfd09d877fa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "aa562787a9a446ad8f8fa49572d5e711": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_641a0c510afe485ba439c9d670bf97d9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f40b5b98fb07418ca1db581a85e03241",
              "IPY_MODEL_02cd22098c004119ad5a6ea73465c480"
            ]
          }
        },
        "641a0c510afe485ba439c9d670bf97d9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f40b5b98fb07418ca1db581a85e03241": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_372daa66aa81479fa800d773c028f0b0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.21MB of 2.21MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7e5355b291914805afed0d7a13f50d92"
          }
        },
        "02cd22098c004119ad5a6ea73465c480": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6cb7288d6c8d49af911a66815627083a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_379293caef1449b2ad8c9b1ea1a352c3"
          }
        },
        "372daa66aa81479fa800d773c028f0b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7e5355b291914805afed0d7a13f50d92": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6cb7288d6c8d49af911a66815627083a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "379293caef1449b2ad8c9b1ea1a352c3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9237d346f27744f0b8e8d1690aba67f3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a6529bb1ea6243d4ab65119aa1b29416",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2ac9ffd617cf48bf94f776b1278a50f0",
              "IPY_MODEL_2a6f00fd7c124975a4a59e1267abb368"
            ]
          }
        },
        "a6529bb1ea6243d4ab65119aa1b29416": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2ac9ffd617cf48bf94f776b1278a50f0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1e321850031b48c18d25a484cee102ad",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.41MB of 1.41MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5df9c3ee92974961afbf6d81de796277"
          }
        },
        "2a6f00fd7c124975a4a59e1267abb368": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e803ff468d954ef18cee12d0272a07f1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_02f9146d3667455bb270cb3dec216707"
          }
        },
        "1e321850031b48c18d25a484cee102ad": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5df9c3ee92974961afbf6d81de796277": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e803ff468d954ef18cee12d0272a07f1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "02f9146d3667455bb270cb3dec216707": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "16c69a05296a410fa9ced3d594fee3a8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_510a50fc7b19428299f4829bc7d83f92",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_fabe52fef23343fbaecf84d90af6f491",
              "IPY_MODEL_92e93455957f43dba70f62c1da5bb9f3"
            ]
          }
        },
        "510a50fc7b19428299f4829bc7d83f92": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fabe52fef23343fbaecf84d90af6f491": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b69faa1269d94bf78dbf3c9c7d865b6a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.44MB of 1.44MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_eba8047eb1194cf0886bc9c67384eceb"
          }
        },
        "92e93455957f43dba70f62c1da5bb9f3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_24f58a9beac24c28859a71d53c1db057",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f6a7fab2ac6546b8bad0b3ab0531012c"
          }
        },
        "b69faa1269d94bf78dbf3c9c7d865b6a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "eba8047eb1194cf0886bc9c67384eceb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "24f58a9beac24c28859a71d53c1db057": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f6a7fab2ac6546b8bad0b3ab0531012c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e82f88c57ae74dfa91b4030724b10763": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_abe0f8bb991c400982eb8ddfd3479cc5",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_dc9e773393884ee9b367cb80bd7f5747",
              "IPY_MODEL_6026f1c9e7cc4016ab41d6c5ade0ce4e"
            ]
          }
        },
        "abe0f8bb991c400982eb8ddfd3479cc5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc9e773393884ee9b367cb80bd7f5747": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_aa11d4626fde45918128591da3c82fff",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.76MB of 1.76MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2e3b61d1b3dc4556a2c7616e410a5775"
          }
        },
        "6026f1c9e7cc4016ab41d6c5ade0ce4e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6e32b356e1a94856a599d41bc3957bd9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_10d1f442ed2345779338a1b323a2a703"
          }
        },
        "aa11d4626fde45918128591da3c82fff": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2e3b61d1b3dc4556a2c7616e410a5775": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6e32b356e1a94856a599d41bc3957bd9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "10d1f442ed2345779338a1b323a2a703": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "520d5088389741949899f064e9980f21": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_05783d4e09f24a41b5631e113fa6a94b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3cf0f4dc8cb341cc8bd63e67164edb40",
              "IPY_MODEL_332af815d370422bb80fff23773e6890"
            ]
          }
        },
        "05783d4e09f24a41b5631e113fa6a94b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3cf0f4dc8cb341cc8bd63e67164edb40": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_7755c52253164712864057129ba3725d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.86MB of 1.86MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c7d1fd60ab344c929d23485bc165a772"
          }
        },
        "332af815d370422bb80fff23773e6890": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f9f3e4b93d8243579a0ad4bd2e77aa17",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_fd6dcc5594c3493b832715cdb8b3e665"
          }
        },
        "7755c52253164712864057129ba3725d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c7d1fd60ab344c929d23485bc165a772": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f9f3e4b93d8243579a0ad4bd2e77aa17": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "fd6dcc5594c3493b832715cdb8b3e665": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "385925fb55b94d1b8f7712e1ad7a0161": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2caa3f414ffe479797f29618de7195e9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f5b9ff5e1fe4479e9f988952b43e072a",
              "IPY_MODEL_f230f5a5de414f5f8dfce0bbd65704cf"
            ]
          }
        },
        "2caa3f414ffe479797f29618de7195e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f5b9ff5e1fe4479e9f988952b43e072a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_077dea6c365e4dcc840fb41cba373a10",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.80MB of 3.80MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dc9a97b288954d9a8461be46822766b4"
          }
        },
        "f230f5a5de414f5f8dfce0bbd65704cf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b9217f41428a4048a696f6f0f5fa3fe4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_32eed004bb8248b6b0ed199a9411d560"
          }
        },
        "077dea6c365e4dcc840fb41cba373a10": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dc9a97b288954d9a8461be46822766b4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b9217f41428a4048a696f6f0f5fa3fe4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "32eed004bb8248b6b0ed199a9411d560": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/LSTM/LSTM_Cu.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5F7GfFTgUo3"
      },
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5d32489a-bdc6-4520-f8d3-e326a7d892f8"
      },
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 144, done.\u001b[K\n",
            "remote: Counting objects: 100% (144/144), done.\u001b[K\n",
            "remote: Compressing objects: 100% (139/139), done.\u001b[K\n",
            "remote: Total 144 (delta 69), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (144/144), 119.43 KiB | 1.47 MiB/s, done.\n",
            "Resolving deltas: 100% (69/69), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6058094d-c0fb-46ab-edb3-19e6d2a9eea1"
      },
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/feeder_repo\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "de332ee0-537c-4696-b416-c902d844afb9"
      },
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRqkwo6kZUz_"
      },
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzVhwND1HAlw"
      },
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "6831bbeb-f350-4744-df86-85a67c99f8a4"
      },
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Wed Jul 14 10:36:31 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla V100-SXM2...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   40C    P0    25W / 300W |      0MiB / 16160MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WB9wD4Aahs8_"
      },
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vBlKerL-c4-3"
      },
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'Cu'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'LSTM'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfQJbuBk0vW0"
      },
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X53Fp1Gwh88_"
      },
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "24a4157a-900e-4851-ff77-05449d068309"
      },
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8MB 14.4MB/s \n",
            "\u001b[K     |████████████████████████████████| 102kB 12.6MB/s \n",
            "\u001b[K     |████████████████████████████████| 174kB 48.0MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 53.2MB/s \n",
            "\u001b[K     |████████████████████████████████| 71kB 11.4MB/s \n",
            "\u001b[?25h  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pbgZaoQDiIKX"
      },
      "source": [
        "!pip install wandb -qq"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "75c9565e-e432-45ee-fd0f-3f514b79b102"
      },
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j91IBGuSid5w"
      },
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.2, 0.3, 0.4]\n",
        "        },\n",
        "        'input_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'hidden_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'rmsprop']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0Sr9HsorH4E"
      },
      "source": [
        "# The sweep calls this function with each set of hyperparameters\n",
        "def train():\n",
        "    # Default values for hyper-parameters we're going to sweep over\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.2,\n",
        "        'input_size': 50,\n",
        "        'hidden_size': 50,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "    \n",
        "    # Define the model architecture\n",
        "    model = Sequential()\n",
        "\n",
        "    # input layer\n",
        "    model.add(LSTM(units=config.input_size, return_sequences=True, input_shape=(window_len, 1), activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # second model layer with dropout\n",
        "    model.add(LSTM(units=config.hidden_size, return_sequences=True, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # third model layer with dropout\n",
        "    model.add(LSTM(units=config.hidden_size, return_sequences=True, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # fourth model layer with dropout\n",
        "    model.add(LSTM(units=config.hidden_size, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # final layer with one output\n",
        "    model.add(Dense(units=1))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "b4159fe3-3753-476f-ba36-6cebdbf37ce6"
      },
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Create sweep with ID: k77xxqx9\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "62b9d17d42a24216968bf2d9a17a726b",
            "53490962428040fbbb11cfc661ab39ba",
            "fc06fb7f5a7448fc896007b83ab81108",
            "f86bfdf89aa248949fcb7c6449847df4",
            "9b67da4d40ce42f7874393ae8c9b0899",
            "a2df1ef81d5a429893b7bac6b1df87bb",
            "dd9a97e4c0154beb80a9c3126baceaef",
            "45f88f48bfbc4360b53ec99e7311965d",
            "33fd9d45ff1c47f0883f60b39b3638df",
            "db82df352b1d440ca5fd3b26742425b1",
            "144d90e580104a34ad0392c4e1cf015b",
            "564fc3b9834d4e039c8347182ea7da88",
            "cc958c1459d04d1991c2d8535306d845",
            "902cc780c10a43b7bc9c1dca55279ca6",
            "2642d08ddd6f42de803af794a23e84e1",
            "a0b98a0182e642c3bd3146a0457329cd",
            "dea4986117dc48bda3156c6b50e0a870",
            "1e9f34e8bbc74f25b56b958378592267",
            "66d4d2e4aefc4ece8381939654f8b2ac",
            "595d76cf9baa451d972a376c33862bfe",
            "cb23f271669c4d8195d29685c65cb6d3",
            "00aa5be663e54629b3a4312be8881c8b",
            "84dab9acc1284a91af7d791daca3094a",
            "84b8778dcc954272b671dc2f7ec1df5e",
            "ed35a96a20b0410ca99c28214bf7dc50",
            "6c392688bed44540a124b73d8bc6837c",
            "6332041961cf4f988e00f232dae182b3",
            "9aa0e9a2e9784a4898ce5102f26ec6e0",
            "d6a25b9c86914435800259be13a68906",
            "a5d699db41584c8eb7ad3a96ea80fc13",
            "dc44b80691144619b34258efee7990b5",
            "a437fb10cc7b4637b34678be42eeae5a",
            "dc387440ccf041cbbad05761049fc59d",
            "a81470b6db904348873fce30474156cc",
            "090c2641ac1d4296be0ca88c977ceb84",
            "49ffff23a9cb4affad711a7dfd045580",
            "7320c370b9554d6faa3da1e948118358",
            "ebba82f94a6a4e4a8429335eec9e69c2",
            "cb7ed26b09db446a9077723308c31af2",
            "dc35011bc16b41329dbcdf93a28ebbd0",
            "85c8c68deabf44aabc4185c990892955",
            "8465444c7f554180a81d2525c4c7e809",
            "f35cb0826c6942d286f2dcb67d42b57e",
            "300b5b625e5f462189955c31707243c4",
            "35c4fffb541f490fb343dbcca0e1e8f0",
            "3ce5742fb0084f5b8d64029464f5e8c0",
            "fb46d3049de24e419ef1ee9a16310532",
            "5e9e85a665fe4de599be6bbc8e10520d",
            "6a2a3706e3a8461fbabd40b1ddc55fc1",
            "e437d34147054185b995f629d8aec254",
            "5a6b8b39d64f4d31abcd5cedbd01e522",
            "3e241aa8f91b4e30a99619ecedba07ab",
            "6c3ee5981a4247b0813bc7d2cbc2fe17",
            "06c2816da1944a7895fa9ef9593c78f5",
            "2b737f769f474805b9b2b34c2bdc7e65",
            "1573818cbcee4ec1ae50568d262bc440",
            "c6f08b1696d34adabe37d7e02152045d",
            "3e41973a203f4abcbcd4022c185be377",
            "f265b378457f4cab976ff5a345359e04",
            "aae7fceb6afc4b879def7b4e8cd9df69",
            "03a1903ac17f4b63b2c4ead7d89aa6d6",
            "ae46de7b2314464dafbb5c2eff6c6edf",
            "fd32071dd2ff43938198cbd55498e04a",
            "e2feb7a4140745cdbe8aa788e297fe68",
            "2514e7d5be7e4787ac0d9bbbaf0adc59",
            "2a5d2e70a08947668183e6a7efd5d711",
            "df051a3825604965aa82bd983664666e",
            "b1577425aedb48d7a3ab8d7f3cab31ee",
            "5d67114261214ccabfdb12fcfb62ffcd",
            "9e1484e32e334f5aa9a241f9e0b726fb",
            "44189c8631d64d8892ebeaabcfb00340",
            "f51f740ea2414779bd761a84a277c99f",
            "1e03a7db36464a81ba0274e5db2c3db0",
            "90dc4efd327f41e8be1443d67cdf1429",
            "3102ed87d15042b591e4ae22df757e37",
            "b35fc3b7a6764dd183c2d4689bbde826",
            "830ac428ff3649ca863c1bebe31e3111",
            "97890aca76ca4471ae818b66b40c072d",
            "869834493925450d9517fe839d70141e",
            "587184d0179140ebb846239021e8bc5a",
            "827d72be79eb4c2eafd63fe2e45a1335",
            "1e38bd3721ac475a8963b41fe42f066c",
            "3b95f3e82bc44562ba4872cbe41b7052",
            "a71083d0846346bf875f098480a03d0b",
            "354dde2c04ca4acdad4ee64923553db2",
            "8782b81ecf144be9a54681608b980ae6",
            "6613914100f442499182d4256a450751",
            "9007c4cff3844859b94444ce3f0e6cbf",
            "2ef5cc5c745e4ced8855ebe1c9a102ed",
            "1bbe113e365041c7a7aaeb642442c747",
            "902fa296a8b84abfbb55eb7318d219ec",
            "92fa06ace707449e8918bdf748dccefb",
            "40ec7a41eb7b43f0b61e4bf8a3b2114c",
            "97c7aead562a46aa8e5e820d4e3d2da9",
            "8405484ed846449f9351be2c6d4a4014",
            "9e88bce1da0e4ebeaa1810934158732a",
            "164215c5c5ba4a00a21bee8ba95e9c43",
            "ae712b5a31f847c997ee9882d992611f",
            "d949f424a59948209a63e11d57eb1353",
            "03c3681731de40faafdbacfc2e90ef5e",
            "9b82e9d085754bc58e35d8704a28292d",
            "b53e8a51631f4158a93db8c904fae3d4",
            "fddc6ea0883c4833b593fea4656b8b44",
            "6567847344c64a739823cd3e1932adb7",
            "56a1f7795c644352b913e28e192edbb8",
            "d50081dc74af44d083df2bd096c6c85f",
            "a25ec11655a64821b82499e9dc004f57",
            "0d6b56f52c9044f8a9558a21a00346f3",
            "0dff24ecdcc54904a7568cd0eeccdfeb",
            "ceb60376ffae4f9ba44b704fde5c9052",
            "2d1268044eda45ae9e04b3a562386369",
            "12d8e46c9de04440ab4bc56e835bca78",
            "41375927f12e43f9bfd4c189fabd0b78",
            "a40c98a8b74948a886e9816965689c37",
            "ac6f8fff126a48c18d4336abf61c3b25",
            "249eb683065b4ebea4f19cdc02443d46",
            "cf7a8b26cf4b44f781327f1885dc1a94",
            "1b6003cbfa3e4fb4aad1b0f7e534f8aa",
            "b7017ee29d7b448aa8644f939e60d0c7",
            "25aac8e496a54e21b9f91e4c1f8f35e4",
            "1678f866f7b3420cbbe2580325141bb8",
            "63f19d688f1a4eaab0494b4b741126a9",
            "050b82ae2efe41d2a76a98b2dc4fcebf",
            "4a94288e7f38485a9611428f2636def6",
            "d60c45c0221e4b2bafb7f7283875adc8",
            "d129930f020843998b8d0122b28215a1",
            "480e239b1d0f4fbdb1ab81c9690a52ed",
            "fd61c359af9643d9af31cb5bbb34f6b3",
            "504ba7816ea34507abd36f93ff0dadea",
            "eb19054cebce4a60b477be658f32702d",
            "b2353a1060fa4e00906911b77874d26d",
            "827928d889554a63aff7a495c543b265",
            "2b3047755dfb4b749648ba668aac8112",
            "1353ec8fc19d45a4ab48bdff5b7ec82e",
            "5e3a0c9c378445de84e40a3029fbfc0b",
            "453f84385b754a8f80f12bfd09d877fa",
            "aa562787a9a446ad8f8fa49572d5e711",
            "641a0c510afe485ba439c9d670bf97d9",
            "f40b5b98fb07418ca1db581a85e03241",
            "02cd22098c004119ad5a6ea73465c480",
            "372daa66aa81479fa800d773c028f0b0",
            "7e5355b291914805afed0d7a13f50d92",
            "6cb7288d6c8d49af911a66815627083a",
            "379293caef1449b2ad8c9b1ea1a352c3",
            "9237d346f27744f0b8e8d1690aba67f3",
            "a6529bb1ea6243d4ab65119aa1b29416",
            "2ac9ffd617cf48bf94f776b1278a50f0",
            "2a6f00fd7c124975a4a59e1267abb368",
            "1e321850031b48c18d25a484cee102ad",
            "5df9c3ee92974961afbf6d81de796277",
            "e803ff468d954ef18cee12d0272a07f1",
            "02f9146d3667455bb270cb3dec216707",
            "16c69a05296a410fa9ced3d594fee3a8",
            "510a50fc7b19428299f4829bc7d83f92",
            "fabe52fef23343fbaecf84d90af6f491",
            "92e93455957f43dba70f62c1da5bb9f3",
            "b69faa1269d94bf78dbf3c9c7d865b6a",
            "eba8047eb1194cf0886bc9c67384eceb",
            "24f58a9beac24c28859a71d53c1db057",
            "f6a7fab2ac6546b8bad0b3ab0531012c",
            "e82f88c57ae74dfa91b4030724b10763",
            "abe0f8bb991c400982eb8ddfd3479cc5",
            "dc9e773393884ee9b367cb80bd7f5747",
            "6026f1c9e7cc4016ab41d6c5ade0ce4e",
            "aa11d4626fde45918128591da3c82fff",
            "2e3b61d1b3dc4556a2c7616e410a5775",
            "6e32b356e1a94856a599d41bc3957bd9",
            "10d1f442ed2345779338a1b323a2a703",
            "520d5088389741949899f064e9980f21",
            "05783d4e09f24a41b5631e113fa6a94b",
            "3cf0f4dc8cb341cc8bd63e67164edb40",
            "332af815d370422bb80fff23773e6890",
            "7755c52253164712864057129ba3725d",
            "c7d1fd60ab344c929d23485bc165a772",
            "f9f3e4b93d8243579a0ad4bd2e77aa17",
            "fd6dcc5594c3493b832715cdb8b3e665"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "587c8650-6854-4454-9f20-d1bf1b68af58"
      },
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: jtmzq5t8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">bright-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/jtmzq5t8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/jtmzq5t8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_103703-jtmzq5t8</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 25s 264ms/step - loss: 1.5943 - mean_squared_error: 1.5943 - mean_absolute_error: 0.7612 - val_loss: 0.1361 - val_mean_squared_error: 0.1361 - val_mean_absolute_error: 0.3057\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0766 - mean_squared_error: 0.0766 - mean_absolute_error: 0.2139 - val_loss: 0.1019 - val_mean_squared_error: 0.1019 - val_mean_absolute_error: 0.2777\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0672 - mean_squared_error: 0.0672 - mean_absolute_error: 0.2001 - val_loss: 0.0556 - val_mean_squared_error: 0.0556 - val_mean_absolute_error: 0.1974\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0537 - mean_squared_error: 0.0537 - mean_absolute_error: 0.1833 - val_loss: 0.0338 - val_mean_squared_error: 0.0338 - val_mean_absolute_error: 0.1467\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0360 - mean_squared_error: 0.0360 - mean_absolute_error: 0.1476 - val_loss: 0.0254 - val_mean_squared_error: 0.0254 - val_mean_absolute_error: 0.1223\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0318 - mean_squared_error: 0.0318 - mean_absolute_error: 0.1386 - val_loss: 0.0328 - val_mean_squared_error: 0.0328 - val_mean_absolute_error: 0.1473\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0265 - mean_squared_error: 0.0265 - mean_absolute_error: 0.1291 - val_loss: 0.0389 - val_mean_squared_error: 0.0389 - val_mean_absolute_error: 0.1661\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0362 - mean_squared_error: 0.0362 - mean_absolute_error: 0.1531 - val_loss: 0.0257 - val_mean_squared_error: 0.0257 - val_mean_absolute_error: 0.1232\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0239 - mean_squared_error: 0.0239 - mean_absolute_error: 0.1219 - val_loss: 0.0344 - val_mean_squared_error: 0.0344 - val_mean_absolute_error: 0.1500\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0337 - mean_squared_error: 0.0337 - mean_absolute_error: 0.1447 - val_loss: 0.0354 - val_mean_squared_error: 0.0354 - val_mean_absolute_error: 0.1470\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0212 - mean_squared_error: 0.0212 - mean_absolute_error: 0.1109 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0853\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0178 - mean_squared_error: 0.0178 - mean_absolute_error: 0.0993 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1259\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0205 - mean_squared_error: 0.0205 - mean_absolute_error: 0.1187 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0996\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0982 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1114\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0188 - mean_squared_error: 0.0188 - mean_absolute_error: 0.1065 - val_loss: 0.0278 - val_mean_squared_error: 0.0278 - val_mean_absolute_error: 0.1316\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0233 - mean_squared_error: 0.0233 - mean_absolute_error: 0.1201 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0884\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0952 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1261\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0983 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0801\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0815 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0736\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0902 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0888\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0809 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0794\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0713 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0815\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0223 - mean_squared_error: 0.0223 - mean_absolute_error: 0.1150 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0757\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0767 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0991\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0810 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0927\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0814 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1043\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0872 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1201\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - mean_absolute_error: 0.0972 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1124\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0902 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0713\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0887 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0659\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0710 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0873\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0886 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0733\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0810 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0764\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0671 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0839\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0717 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0776\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0859 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0685\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0620 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0657\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0724 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0596\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0690 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0908\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0768 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0707\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0757 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0775\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0627 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0608\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0586 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0680\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0718 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0524\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0652 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0784\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0658 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0893\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0692 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0913\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0744 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0789\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0723 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0775\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0643 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0772\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0671 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0552\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0685 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0527\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0523 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0612\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0706 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0682\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 175<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "62b9d17d42a24216968bf2d9a17a726b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.80MB of 0.80MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103703-jtmzq5t8/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103703-jtmzq5t8/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>53</td></tr><tr><td>loss</td><td>0.00872</td></tr><tr><td>mean_squared_error</td><td>0.00872</td></tr><tr><td>mean_absolute_error</td><td>0.07491</td></tr><tr><td>val_loss</td><td>0.00778</td></tr><tr><td>val_mean_squared_error</td><td>0.00778</td></tr><tr><td>val_mean_absolute_error</td><td>0.06823</td></tr><tr><td>_runtime</td><td>41</td></tr><tr><td>_timestamp</td><td>1626259064</td></tr><tr><td>_step</td><td>53</td></tr><tr><td>best_val_loss</td><td>0.00481</td></tr><tr><td>best_epoch</td><td>43</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▄▂▂▃▃▃▁▂▂▂▂▁▁▁▁▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▄▂▂▃▃▃▁▂▂▂▂▁▁▁▁▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▅▃▄▄▄▄▂▂▃▃▃▂▂▂▂▂▂▂▃▂▁▂▂▂▁▁▂▂▂▁▁▂▂▂▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▃▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▃▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">bright-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/jtmzq5t8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/jtmzq5t8</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: fkj970b8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">drawn-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/fkj970b8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/fkj970b8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_103759-fkj970b8</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 9s 135ms/step - loss: 0.1569 - mean_squared_error: 0.1569 - mean_absolute_error: 0.3051 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1133\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - mean_absolute_error: 0.1029 - val_loss: 0.0339 - val_mean_squared_error: 0.0339 - val_mean_absolute_error: 0.1420\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0922 - val_loss: 0.0309 - val_mean_squared_error: 0.0309 - val_mean_absolute_error: 0.1337\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0908 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1011\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0779 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1091\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0792 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.0983\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0858 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1042\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0832 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0962\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0828 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1017\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0745 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1071\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0831 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1089\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0777 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0977\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0721 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1158\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0754 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1141\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0745 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0896\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0737 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0986\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0704 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1044\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0715 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0902\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0718 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1046\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0664 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0942\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0678 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0896\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0700 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0956\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0700 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0853\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0642 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0908\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0713 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0874\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0663 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0912\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0673 - val_loss: 0.0207 - val_mean_squared_error: 0.0207 - val_mean_absolute_error: 0.1118\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0660 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0824\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0592 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0819\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0630 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0899\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0801 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0879\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0616 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0834\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0627 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0813\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0615 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0819\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0583 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0873\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0613 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0802\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0626 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0848\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0611 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0768\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0609 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0784\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0605 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0885\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0626 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0753\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0572 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0758\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0565 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0829\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0595 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0760\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0572 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0754\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0549 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0794\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0593 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0714\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0546 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0780\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0545 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0701\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0543 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0706\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0552 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0720\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0549 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0726\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0586 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0772\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0539 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0696\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0536 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0695\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0524 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0767\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0598 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0704\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0540 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0766\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0537 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0679\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0531 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0678\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0491 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0716\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0679\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0547 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0694\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0504 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0681\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0590 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0687\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0502 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0662\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0517 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0662\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0494 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0991\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0636 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0659\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0493 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0674\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0518 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0654\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0463 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0650\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0455 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0652\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0515 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0817\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0544 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0651\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0499 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0645\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0468 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0663\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0510 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0647\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0487 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0638\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0506 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0636\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0459 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0633\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0465 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0630\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0495 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0665\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0459 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0757\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0504 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0664\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0477 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0690\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0495 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0650\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0465 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0638\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0461 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0641\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0488 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0645\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0505 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0609\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0477 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0610\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0453 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0617\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0463 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0630\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0468 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0841\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0523 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0597\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0446 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0698\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0500 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0592\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0438 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0614\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0427 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0585\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0456 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0586\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0463 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0727\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0480 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0622\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0453 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0648\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0441 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0687\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0485 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0581\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0411 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0693\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0456 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0571\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0446 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0607\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0440 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0688\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0460 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0668\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0492 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0568\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0451 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0562\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0416 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0562\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0451 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0589\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0438 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0587\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0439 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0606\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0422 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0566\n",
            "Epoch 119/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0404 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0558\n",
            "Epoch 120/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0424 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0615\n",
            "Epoch 121/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0419 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0568\n",
            "Epoch 122/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0409 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0642\n",
            "Epoch 123/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0418 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0603\n",
            "Epoch 124/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0459 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0580\n",
            "Epoch 125/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0423 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0542\n",
            "Epoch 126/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0573\n",
            "Epoch 127/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0427 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0538\n",
            "Epoch 128/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0411 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0595\n",
            "Epoch 129/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0400 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0537\n",
            "Epoch 130/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0573\n",
            "Epoch 131/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0392 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0542\n",
            "Epoch 132/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0410 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0541\n",
            "Epoch 133/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0416 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0531\n",
            "Epoch 134/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0422 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0532\n",
            "Epoch 135/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0412 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0570\n",
            "Epoch 136/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0393 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0535\n",
            "Epoch 137/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0391 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0564\n",
            "Epoch 138/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0416 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0557\n",
            "Epoch 139/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0414 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0517\n",
            "Epoch 140/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0403 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0530\n",
            "Epoch 141/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0401 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0513\n",
            "Epoch 142/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0389 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0534\n",
            "Epoch 143/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0396 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0526\n",
            "Epoch 144/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0383 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0548\n",
            "Epoch 145/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0391 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0558\n",
            "Epoch 146/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0408 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0604\n",
            "Epoch 147/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0407 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0539\n",
            "Epoch 148/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0373 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0585\n",
            "Epoch 149/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0574\n",
            "Epoch 150/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0404 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0550\n",
            "Epoch 151/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0368 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0543\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 407<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "33fd9d45ff1c47f0883f60b39b3638df",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.97MB of 0.97MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103759-fkj970b8/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103759-fkj970b8/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>150</td></tr><tr><td>loss</td><td>0.00254</td></tr><tr><td>mean_squared_error</td><td>0.00254</td></tr><tr><td>mean_absolute_error</td><td>0.03826</td></tr><tr><td>val_loss</td><td>0.00488</td></tr><tr><td>val_mean_squared_error</td><td>0.00488</td></tr><tr><td>val_mean_absolute_error</td><td>0.05431</td></tr><tr><td>_runtime</td><td>69</td></tr><tr><td>_timestamp</td><td>1626259148</td></tr><tr><td>_step</td><td>150</td></tr><tr><td>best_val_loss</td><td>0.00464</td></tr><tr><td>best_epoch</td><td>140</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▆▅▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▆▅▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▇▅▅▅▄▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▁▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▄▄▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▄▄▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▅▅▄▄▃▃▃▃▃▃▂▂▃▂▂▂▃▂▂▃▂▂▂▁▂▁▁▁▁▂▁▁▁▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">drawn-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/fkj970b8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/fkj970b8</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 5eyt384y with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">gentle-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5eyt384y\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5eyt384y</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_103917-5eyt384y</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 9s 255ms/step - loss: 0.4467 - mean_squared_error: 0.4467 - mean_absolute_error: 0.4848 - val_loss: 0.0234 - val_mean_squared_error: 0.0234 - val_mean_absolute_error: 0.1242\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - mean_absolute_error: 0.1019 - val_loss: 0.0233 - val_mean_squared_error: 0.0233 - val_mean_absolute_error: 0.1178\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0840 - val_loss: 0.0250 - val_mean_squared_error: 0.0250 - val_mean_absolute_error: 0.1200\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0871 - val_loss: 0.0363 - val_mean_squared_error: 0.0363 - val_mean_absolute_error: 0.1499\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0192 - mean_squared_error: 0.0192 - mean_absolute_error: 0.1095 - val_loss: 0.0338 - val_mean_squared_error: 0.0338 - val_mean_absolute_error: 0.1433\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0944 - val_loss: 0.0567 - val_mean_squared_error: 0.0567 - val_mean_absolute_error: 0.1971\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0259 - mean_squared_error: 0.0259 - mean_absolute_error: 0.1241 - val_loss: 0.0397 - val_mean_squared_error: 0.0397 - val_mean_absolute_error: 0.1599\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0257 - mean_squared_error: 0.0257 - mean_absolute_error: 0.1291 - val_loss: 0.0334 - val_mean_squared_error: 0.0334 - val_mean_absolute_error: 0.1443\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0207 - mean_squared_error: 0.0207 - mean_absolute_error: 0.1155 - val_loss: 0.0306 - val_mean_squared_error: 0.0306 - val_mean_absolute_error: 0.1363\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0186 - mean_squared_error: 0.0186 - mean_absolute_error: 0.1053 - val_loss: 0.0268 - val_mean_squared_error: 0.0268 - val_mean_absolute_error: 0.1272\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.1035 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1114\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0210 - mean_squared_error: 0.0210 - mean_absolute_error: 0.1165 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1117\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.0976 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1179\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0207 - mean_squared_error: 0.0207 - mean_absolute_error: 0.1160 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1298\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0178 - mean_squared_error: 0.0178 - mean_absolute_error: 0.1050 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1102\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0172 - mean_squared_error: 0.0172 - mean_absolute_error: 0.1050 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0998\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0964 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0935\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0979 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1067\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0882 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0903\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0849 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1059\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0903 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0988\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0706 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1123\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.1011 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0973\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0868 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0874\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0715 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0833\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0844 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1135\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0868 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1023\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0729 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1063\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0811 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0807\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0664 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0899\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0795 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0745\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0647 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0757\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0580 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0838\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0756 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0739\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0722 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0736\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0585 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0750\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0590 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0873\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0756 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0729\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0700 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0763\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0640 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0757\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0649 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0827\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0589 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1022\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0772 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0834\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0701 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0749\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0651 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0723\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0536 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0874\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0719 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0780\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0649 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0779\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0674 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0659\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0460 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0880\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 915<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "dea4986117dc48bda3156c6b50e0a870",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.48MB of 2.48MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103917-5eyt384y/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103917-5eyt384y/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00357</td></tr><tr><td>mean_squared_error</td><td>0.00357</td></tr><tr><td>mean_absolute_error</td><td>0.04634</td></tr><tr><td>val_loss</td><td>0.01317</td></tr><tr><td>val_mean_squared_error</td><td>0.01317</td></tr><tr><td>val_mean_absolute_error</td><td>0.08796</td></tr><tr><td>_runtime</td><td>24</td></tr><tr><td>_timestamp</td><td>1626259181</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00749</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▃▃▅█▆▅▄▃▃▃▄▂▂▃▂▂▃▂▂▃▂▃▁▁▁▁▁▁▂▁▁▁▂▁▁▂▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▃▃▃▅█▆▅▄▃▃▃▄▂▂▃▂▂▃▂▂▃▂▃▁▁▁▁▁▁▂▁▁▁▂▁▁▂▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▄▄▅█▆▅▅▃▃▄▄▃▂▃▂▂▃▂▂▃▃▃▁▁▁▂▁▁▂▁▁▂▃▂▁▂▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">gentle-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5eyt384y\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5eyt384y</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: v0l0e1zj with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dandy-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/v0l0e1zj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/v0l0e1zj</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_103951-v0l0e1zj</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 8s 253ms/step - loss: 0.1655 - mean_squared_error: 0.1655 - mean_absolute_error: 0.3133 - val_loss: 0.0305 - val_mean_squared_error: 0.0305 - val_mean_absolute_error: 0.1380\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0198 - mean_squared_error: 0.0198 - mean_absolute_error: 0.1154 - val_loss: 0.0317 - val_mean_squared_error: 0.0317 - val_mean_absolute_error: 0.1400\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0267 - mean_squared_error: 0.0267 - mean_absolute_error: 0.1259 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1113\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0194 - mean_squared_error: 0.0194 - mean_absolute_error: 0.1098 - val_loss: 0.0491 - val_mean_squared_error: 0.0491 - val_mean_absolute_error: 0.1760\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0274 - mean_squared_error: 0.0274 - mean_absolute_error: 0.1266 - val_loss: 0.0267 - val_mean_squared_error: 0.0267 - val_mean_absolute_error: 0.1244\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.1028 - val_loss: 0.0451 - val_mean_squared_error: 0.0451 - val_mean_absolute_error: 0.1717\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0224 - mean_squared_error: 0.0224 - mean_absolute_error: 0.1168 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1204\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0934 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1055\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0829 - val_loss: 0.0241 - val_mean_squared_error: 0.0241 - val_mean_absolute_error: 0.1170\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0171 - mean_squared_error: 0.0171 - mean_absolute_error: 0.1005 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1026\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0899 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1095\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.0936 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1076\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0798 - val_loss: 0.0424 - val_mean_squared_error: 0.0424 - val_mean_absolute_error: 0.1651\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0219 - mean_squared_error: 0.0219 - mean_absolute_error: 0.1119 - val_loss: 0.0398 - val_mean_squared_error: 0.0398 - val_mean_absolute_error: 0.1605\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0215 - mean_squared_error: 0.0215 - mean_absolute_error: 0.1135 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1116\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0164 - mean_squared_error: 0.0164 - mean_absolute_error: 0.1010 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1269\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0947 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1389\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.1011 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1105\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0935 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0956\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0732 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1146\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0981 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.1005\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0883 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0937\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0836 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0985\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0901 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0923\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0785 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0910\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0795 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0980\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0919 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0890\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0818 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0988\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0773 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0879\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0722 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1226\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0912 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0856\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0792 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1071\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0778 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0830\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0681 - val_loss: 0.0248 - val_mean_squared_error: 0.0248 - val_mean_absolute_error: 0.1204\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0826 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0965\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0718 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1027\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0824 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0998\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0804 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0836\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0642 - val_loss: 0.0212 - val_mean_squared_error: 0.0212 - val_mean_absolute_error: 0.1101\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - mean_absolute_error: 0.0850 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0839\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0748 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0783\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0722 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0787\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0645 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0780\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0744 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0774\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0664 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0928\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0677 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0792\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0626 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0752\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0688 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0778\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0680 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0728\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0630 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0743\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0612 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0815\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0675 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0757\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0587 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0824\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0655 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0760\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0592 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0915\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0674 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0785\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0648 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0825\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0648 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0778\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0662 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0731\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1122<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ed35a96a20b0410ca99c28214bf7dc50",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.89MB of 0.89MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103951-v0l0e1zj/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_103951-v0l0e1zj/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>58</td></tr><tr><td>loss</td><td>0.00734</td></tr><tr><td>mean_squared_error</td><td>0.00734</td></tr><tr><td>mean_absolute_error</td><td>0.06473</td></tr><tr><td>val_loss</td><td>0.00888</td></tr><tr><td>val_mean_squared_error</td><td>0.00888</td></tr><tr><td>val_mean_absolute_error</td><td>0.07309</td></tr><tr><td>_runtime</td><td>24</td></tr><tr><td>_timestamp</td><td>1626259215</td></tr><tr><td>_step</td><td>58</td></tr><tr><td>best_val_loss</td><td>0.00877</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▃▃▂▂▂▂▂▂▂▁▂▂▂▂▂▁▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▅▃▄█▃▄▃▃▇▃▅▃▃▃▂▂▂▂▂▄▃▂▂▃▂▃▁▁▁▂▁▁▁▂▁▁▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▅▅▃▄█▃▄▃▃▇▃▅▃▃▃▂▂▂▂▂▄▃▂▂▃▂▃▁▁▁▂▁▁▁▂▁▁▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆▆▄▅█▃▄▄▃▇▄▆▄▄▃▃▂▃▂▂▅▃▂▃▃▂▄▁▁▁▂▁▁▁▂▂▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▂▂▂▂▂▂▃▃▃▃▃▃▃▃▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▂▂▂▃▃▃▃▃▃▃▃▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dandy-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/v0l0e1zj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/v0l0e1zj</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: bru91u9z with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">iconic-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/bru91u9z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/bru91u9z</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104026-bru91u9z</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 8s 264ms/step - loss: 3.3732 - mean_squared_error: 3.3732 - mean_absolute_error: 1.0585 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1179\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0251 - mean_squared_error: 0.0251 - mean_absolute_error: 0.1238 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1134\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0197 - mean_squared_error: 0.0197 - mean_absolute_error: 0.1099 - val_loss: 0.0624 - val_mean_squared_error: 0.0624 - val_mean_absolute_error: 0.2004\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0473 - mean_squared_error: 0.0473 - mean_absolute_error: 0.1722 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1286\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0582 - mean_squared_error: 0.0582 - mean_absolute_error: 0.1891 - val_loss: 0.0280 - val_mean_squared_error: 0.0280 - val_mean_absolute_error: 0.1397\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0250 - mean_squared_error: 0.0250 - mean_absolute_error: 0.1252 - val_loss: 0.0408 - val_mean_squared_error: 0.0408 - val_mean_absolute_error: 0.1701\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0390 - mean_squared_error: 0.0390 - mean_absolute_error: 0.1629 - val_loss: 0.0286 - val_mean_squared_error: 0.0286 - val_mean_absolute_error: 0.1402\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0255 - mean_squared_error: 0.0255 - mean_absolute_error: 0.1269 - val_loss: 0.0468 - val_mean_squared_error: 0.0468 - val_mean_absolute_error: 0.1789\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0441 - mean_squared_error: 0.0441 - mean_absolute_error: 0.1670 - val_loss: 0.0289 - val_mean_squared_error: 0.0289 - val_mean_absolute_error: 0.1431\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0245 - mean_squared_error: 0.0245 - mean_absolute_error: 0.1244 - val_loss: 0.0397 - val_mean_squared_error: 0.0397 - val_mean_absolute_error: 0.1679\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0321 - mean_squared_error: 0.0321 - mean_absolute_error: 0.1377 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0920\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0198 - mean_squared_error: 0.0198 - mean_absolute_error: 0.1086 - val_loss: 0.1092 - val_mean_squared_error: 0.1092 - val_mean_absolute_error: 0.2482\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0927 - mean_squared_error: 0.0927 - mean_absolute_error: 0.2507 - val_loss: 0.0345 - val_mean_squared_error: 0.0345 - val_mean_absolute_error: 0.1647\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0259 - mean_squared_error: 0.0259 - mean_absolute_error: 0.1300 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0902\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0188 - mean_squared_error: 0.0188 - mean_absolute_error: 0.0997 - val_loss: 0.0205 - val_mean_squared_error: 0.0205 - val_mean_absolute_error: 0.1220\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0190 - mean_squared_error: 0.0190 - mean_absolute_error: 0.1101 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1058\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0206 - mean_squared_error: 0.0206 - mean_absolute_error: 0.1130 - val_loss: 0.0432 - val_mean_squared_error: 0.0432 - val_mean_absolute_error: 0.1827\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0331 - mean_squared_error: 0.0331 - mean_absolute_error: 0.1463 - val_loss: 0.0259 - val_mean_squared_error: 0.0259 - val_mean_absolute_error: 0.1267\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0206 - mean_squared_error: 0.0206 - mean_absolute_error: 0.1119 - val_loss: 0.0273 - val_mean_squared_error: 0.0273 - val_mean_absolute_error: 0.1331\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0259 - mean_squared_error: 0.0259 - mean_absolute_error: 0.1241 - val_loss: 0.0413 - val_mean_squared_error: 0.0413 - val_mean_absolute_error: 0.1591\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0295 - mean_squared_error: 0.0295 - mean_absolute_error: 0.1367 - val_loss: 0.0462 - val_mean_squared_error: 0.0462 - val_mean_absolute_error: 0.1720\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0301 - mean_squared_error: 0.0301 - mean_absolute_error: 0.1368 - val_loss: 0.0528 - val_mean_squared_error: 0.0528 - val_mean_absolute_error: 0.1855\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0249 - mean_squared_error: 0.0249 - mean_absolute_error: 0.1228 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1036\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.1026 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0790\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0764 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1030\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0826 - val_loss: 0.0224 - val_mean_squared_error: 0.0224 - val_mean_absolute_error: 0.1121\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0908 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1204\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0945 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0856\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0872 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0712\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0737 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0886\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0937 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0792\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0861 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0693\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0845 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0673\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0597 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1098\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0916 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0775\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0720 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0889\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0787 - val_loss: 0.0308 - val_mean_squared_error: 0.0308 - val_mean_absolute_error: 0.1300\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0955 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0696\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0756 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0835\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0786 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0678\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0879 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0624\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0605 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0785\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0673 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0883\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0883 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0619\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0728 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0605\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0705 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0707\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0714 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0710\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0591 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0684\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0708 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0748\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0561 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0976\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0687 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1052\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0128 - mean_squared_error: 0.0128 - mean_absolute_error: 0.0903 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0636\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0736 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0548\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0562 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0696\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0854 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0631\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0600 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0552\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0619 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0758\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0781 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0665\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0576 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0980\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0615 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1024\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0619 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0554\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0685 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0565\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0575 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0683\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0642 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0529\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0698 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0563\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0467 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0808\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0784 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0586\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0522 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0574\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0725 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0552\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0535 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0601\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0640 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0551\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0515 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1112\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0797 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0665\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0647 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0524\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0452\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0710 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0559\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0514 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0526\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0608 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0535\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0627 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0532\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0511 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0774\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0648 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0754\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0572 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0745\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0614 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0724\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0555 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0591\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0635 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0637\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1354<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "dc387440ccf041cbbad05761049fc59d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.15MB of 2.15MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104026-bru91u9z/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104026-bru91u9z/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>84</td></tr><tr><td>loss</td><td>0.00572</td></tr><tr><td>mean_squared_error</td><td>0.00572</td></tr><tr><td>mean_absolute_error</td><td>0.06072</td></tr><tr><td>val_loss</td><td>0.00687</td></tr><tr><td>val_mean_squared_error</td><td>0.00687</td></tr><tr><td>val_mean_absolute_error</td><td>0.06368</td></tr><tr><td>_runtime</td><td>45</td></tr><tr><td>_timestamp</td><td>1626259271</td></tr><tr><td>_step</td><td>84</td></tr><tr><td>best_val_loss</td><td>0.00349</td></tr><tr><td>best_epoch</td><td>74</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▃▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃█▄▄▄▂▅▂▄▅▇▂▃▂▂▁▂▄▂▁▁▁▁▂▁▁▁▃▁▂▁▁▁▃▁▁▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▃█▄▄▄▂▅▂▄▅▇▂▃▂▂▁▂▄▂▁▁▁▁▂▁▁▁▃▁▂▁▁▁▃▁▁▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▄█▅▅▅▃▆▄▅▆▇▂▄▂▂▂▂▅▂▁▁▂▂▃▂▂▂▃▁▂▁▁▁▄▁▁▁▂▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">iconic-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/bru91u9z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/bru91u9z</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: a5hsc6nv with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">zany-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/a5hsc6nv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/a5hsc6nv</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104120-a5hsc6nv</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 8s 69ms/step - loss: 0.1224 - mean_squared_error: 0.1224 - mean_absolute_error: 0.2656 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1046\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0956 - val_loss: 0.0222 - val_mean_squared_error: 0.0222 - val_mean_absolute_error: 0.1109\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0855 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1095\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0898 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0993\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0905 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0991\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0846 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0964\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0809 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.0982\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0790 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0926\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 0s 15ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0762 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0904\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0790 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0900\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0798 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0981\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0791 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0919\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 0s 16ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0756 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0874\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 0s 16ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0715 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0858\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0764 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0850\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0730 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0880\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0722 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0831\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 0s 16ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0671 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0929\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0712 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0853\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 0s 16ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0672 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0842\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0669 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0822\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0631 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0832\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0697 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0819\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 0s 16ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0673 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0829\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0646 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0801\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0640 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0852\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0623 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0805\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0634 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0781\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0628 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0770\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0598 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0779\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0610 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0750\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0553 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0766\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0623 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0814\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0608 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0752\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0574 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0737\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0565 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0726\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0545 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0746\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0541 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0742\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0532 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0749\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0552 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0778\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0549 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0775\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0561 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0722\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0547 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0757\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0541 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0725\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0559 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0712\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0548 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0688\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0527 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0719\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0545 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0693\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0702\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0498 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0686\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0526 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0683\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0518 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0734\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0544 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0692\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0525 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0676\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0510 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0685\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0488 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0674\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0502 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0700\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0481 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0668\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0525 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0678\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0501 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0666\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0463 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0670\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0475 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0654\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0497 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0670\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0512 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0674\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0496 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0660\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0722\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0505 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0688\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0473 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0644\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0474 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0642\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0431 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0650\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0467 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0672\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0480 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0634\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0478 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0624\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0450 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0619\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0471 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0621\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0617\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0465 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0607\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0440 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0620\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0455 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0665\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0431 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0601\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0441 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0624\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0466 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0610\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0437 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0618\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0451 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0592\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0457 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0619\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0439 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0606\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0439 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0604\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0459 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0586\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0446 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0643\n",
            "Epoch 90/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0463 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0566\n",
            "Epoch 91/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0569\n",
            "Epoch 92/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0445 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0569\n",
            "Epoch 93/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0410 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0569\n",
            "Epoch 94/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0443 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0558\n",
            "Epoch 95/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0444 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0571\n",
            "Epoch 96/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0432 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0553\n",
            "Epoch 97/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0583\n",
            "Epoch 98/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0440 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0556\n",
            "Epoch 99/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0440 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0548\n",
            "Epoch 100/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0447 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0550\n",
            "Epoch 101/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0447 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0538\n",
            "Epoch 102/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0443 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0554\n",
            "Epoch 103/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0463 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0556\n",
            "Epoch 104/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0424 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0539\n",
            "Epoch 105/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0574\n",
            "Epoch 106/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0436 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0535\n",
            "Epoch 107/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0441 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0551\n",
            "Epoch 108/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0437 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0528\n",
            "Epoch 109/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0418 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0568\n",
            "Epoch 110/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0421 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0527\n",
            "Epoch 111/200\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0427 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0530\n",
            "Epoch 112/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0428 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0569\n",
            "Epoch 113/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0421 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0521\n",
            "Epoch 114/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0414 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0516\n",
            "Epoch 115/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0419 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0515\n",
            "Epoch 116/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0396 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0533\n",
            "Epoch 117/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0410 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0521\n",
            "Epoch 118/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0415 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0517\n",
            "Epoch 119/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0518\n",
            "Epoch 120/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0409 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0515\n",
            "Epoch 121/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0417 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0549\n",
            "Epoch 122/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0443 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0528\n",
            "Epoch 123/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0408 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0531\n",
            "Epoch 124/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0414 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0516\n",
            "Epoch 125/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0431 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0568\n",
            "Epoch 126/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0444 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0495\n",
            "Epoch 127/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0431 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0491\n",
            "Epoch 128/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0422 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0500\n",
            "Epoch 129/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0496\n",
            "Epoch 130/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0404 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0518\n",
            "Epoch 131/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0410 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0479\n",
            "Epoch 132/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0390 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0478\n",
            "Epoch 133/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0378 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0478\n",
            "Epoch 134/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0410 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0474\n",
            "Epoch 135/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0386 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0494\n",
            "Epoch 136/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0473\n",
            "Epoch 137/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0398 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0485\n",
            "Epoch 138/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0501\n",
            "Epoch 139/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0450 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0484\n",
            "Epoch 140/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0391 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0485\n",
            "Epoch 141/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0402 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0493\n",
            "Epoch 142/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0403 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 143/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0379 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0493\n",
            "Epoch 144/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0395 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0465\n",
            "Epoch 145/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0373 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0467\n",
            "Epoch 146/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0481\n",
            "Epoch 147/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0402 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0460\n",
            "Epoch 148/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0396 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0464\n",
            "Epoch 149/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0369 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0451\n",
            "Epoch 150/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0413 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0459\n",
            "Epoch 151/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0398 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0470\n",
            "Epoch 152/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0408 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0448\n",
            "Epoch 153/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0376 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 154/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0379 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0488\n",
            "Epoch 155/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0383 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0434\n",
            "Epoch 156/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0453\n",
            "Epoch 157/200\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0405 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0450\n",
            "Epoch 158/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0408 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0441\n",
            "Epoch 159/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0384 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 160/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0388 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0448\n",
            "Epoch 161/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0395 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 162/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0402 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0433\n",
            "Epoch 163/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0376 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 164/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0405 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0449\n",
            "Epoch 165/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0383 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0430\n",
            "Epoch 166/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0407 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0445\n",
            "Epoch 167/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0397 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 168/200\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0390 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 169/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0410 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0443\n",
            "Epoch 170/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0393 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0444\n",
            "Epoch 171/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0389 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0434\n",
            "Epoch 172/200\n",
            "31/31 [==============================] - 0s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0378 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0424\n",
            "Epoch 173/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0380 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0437\n",
            "Epoch 174/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0378 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 175/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0365 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0431\n",
            "Epoch 176/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0455\n",
            "Epoch 177/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0438 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 178/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0380 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0429\n",
            "Epoch 179/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0379 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0419\n",
            "Epoch 180/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0421\n",
            "Epoch 181/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0355 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 182/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0376 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0426\n",
            "Epoch 183/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0380 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0424\n",
            "Epoch 184/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0416 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0418\n",
            "Epoch 185/200\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0442\n",
            "Epoch 186/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0362 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0441\n",
            "Epoch 187/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0377 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 188/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0374 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0436\n",
            "Epoch 189/200\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0378 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0422\n",
            "Epoch 190/200\n",
            "31/31 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0367 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0424\n",
            "Epoch 191/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0354 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0414\n",
            "Epoch 192/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 193/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0385 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0422\n",
            "Epoch 194/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0369 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 195/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0391 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0430\n",
            "Epoch 196/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 197/200\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0362 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0408\n",
            "Epoch 198/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0387 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0437\n",
            "Epoch 199/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0393 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 200/200\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0393 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1664<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "85c8c68deabf44aabc4185c990892955",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.17MB of 1.17MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104120-a5hsc6nv/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104120-a5hsc6nv/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00246</td></tr><tr><td>mean_squared_error</td><td>0.00246</td></tr><tr><td>mean_absolute_error</td><td>0.03896</td></tr><tr><td>val_loss</td><td>0.00282</td></tr><tr><td>val_mean_squared_error</td><td>0.00282</td></tr><tr><td>val_mean_absolute_error</td><td>0.04094</td></tr><tr><td>_runtime</td><td>129</td></tr><tr><td>_timestamp</td><td>1626259409</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00282</td></tr><tr><td>best_epoch</td><td>199</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▆▅▅▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▆▅▅▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▇▆▅▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▅▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▅▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▆▆▅▅▅▄▄▄▄▄▃▃▃▃▃▃▃▂▂▂▃▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">zany-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/a5hsc6nv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/a5hsc6nv</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: gk3g8oxd with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">easy-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/gk3g8oxd\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/gk3g8oxd</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104339-gk3g8oxd</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 9s 245ms/step - loss: 0.2695 - mean_squared_error: 0.2695 - mean_absolute_error: 0.4349 - val_loss: 0.0966 - val_mean_squared_error: 0.0966 - val_mean_absolute_error: 0.2323\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0928 - mean_squared_error: 0.0928 - mean_absolute_error: 0.2514 - val_loss: 0.0337 - val_mean_squared_error: 0.0337 - val_mean_absolute_error: 0.1618\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0363 - mean_squared_error: 0.0363 - mean_absolute_error: 0.1591 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1271\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0994 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0962\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0907 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1061\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0175 - mean_squared_error: 0.0175 - mean_absolute_error: 0.1034 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0951\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0792 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0971\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0775 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1115\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.1091 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0898\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0684 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0939\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0691 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1147\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0858 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0942\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0632 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0844\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0664 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0840\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.0956 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0928\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0717 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0828\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0749 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0862\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0676 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0866\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0626 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0828\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0565 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0870\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0636 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0802\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0598 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1069\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0951 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0800\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0649 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0817\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0573 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0764\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0679 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0768\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0655 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0765\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0542 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0757\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0726 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0744\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0555 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0803\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0657 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0739\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0564 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0746\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0532 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0846\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0658 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0781\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0650 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0777\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0597 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0717\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0539 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0737\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0612 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0708\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0593 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0688\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0534 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0675\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0515 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0748\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0579 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0688\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0503 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0695\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0518 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0723\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0525 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0769\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0545 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0659\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0519 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0993\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0675 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0695\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0516 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0655\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0508 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0647\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0511 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0651\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0472 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0693\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0550 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0737\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0533 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0645\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0483 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0646\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0489 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0639\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0455 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0637\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0474 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0737\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0569 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0626\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0477 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0629\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0471 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0620\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0456 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0676\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0495 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0598\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0457 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0599\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0430 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0596\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0482 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0594\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0451 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0594\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0511 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0610\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0439 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0624\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0518 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0815\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0606 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0606\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0482 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0587\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0545 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0694\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0482 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0611\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0440 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0704\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0492 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0830\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0566 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0563\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0439 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0567\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0425 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0608\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0578\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0442 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0655\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0445 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0549\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0449 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0550\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0452 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0603\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0510 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0563\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0514 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0627\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0481 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0577\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0434 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0593\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0440 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0534\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0455 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0567\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0436 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0583\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0449 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0684\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0487 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0542\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0440 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0525\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0412 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0553\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0447 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0659\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0570 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0618\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0473 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0587\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0443 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0544\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0406 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0579\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2319<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "6a2a3706e3a8461fbabd40b1ddc55fc1",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.13MB of 3.13MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104339-gk3g8oxd/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104339-gk3g8oxd/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00275</td></tr><tr><td>mean_squared_error</td><td>0.00275</td></tr><tr><td>mean_absolute_error</td><td>0.04095</td></tr><tr><td>val_loss</td><td>0.00546</td></tr><tr><td>val_mean_squared_error</td><td>0.00546</td></tr><tr><td>val_mean_absolute_error</td><td>0.05795</td></tr><tr><td>_runtime</td><td>39</td></tr><tr><td>_timestamp</td><td>1626259458</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00486</td></tr><tr><td>best_epoch</td><td>93</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">easy-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/gk3g8oxd\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/gk3g8oxd</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: x927l16j with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">upbeat-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/x927l16j\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/x927l16j</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104443-x927l16j</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 8s 160ms/step - loss: 0.1131 - mean_squared_error: 0.1131 - mean_absolute_error: 0.2649 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0966\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0859 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0910\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0706 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0937\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0628 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0887\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0634 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0929\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0593 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0838\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0628 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0843\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0609 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0812\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0611 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0802\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0520 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0793\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0538 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0763\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0516 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0753\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0529 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1068\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0580 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0731\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0557 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0713\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0766\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0476 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0721\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0453 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0735\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0476 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0719\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0456 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0686\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0458 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0813\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0495 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0711\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0508 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0658\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0475 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0716\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0421 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0669\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0455 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0638\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0427 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0628\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0429 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0832\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0508 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0619\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0424 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0631\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0423 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0632\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0599\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0410 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0659\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0397 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0587\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0403 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0627\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0435 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0592\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0385 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0595\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0399 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0612\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0427 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0607\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0394 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0665\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0421 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0567\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0399 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0572\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0378 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0539\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0365 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0564\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0382 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0539\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0355 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0543\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0358 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0524\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0394 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0537\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0353 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0558\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0413 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0558\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0409 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0514\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0386 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0497\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0343 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0528\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0364 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0559\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0489\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0357 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0484\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0504\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0498\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0331 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0485\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0360 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0606\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0384 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0489\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0344 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0469\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0319 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0543\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0353 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0463\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0336 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0475\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0341 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0484\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0332 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0451\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0327 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0434\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0317 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0442\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0297 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0437\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0329 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0429\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0334 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0439\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0341 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0326 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0418\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0316 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0434\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0293 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0426\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0309 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0339 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0424\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0334 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0483\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0357 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0426\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0311 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0295 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0399\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0322 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0309 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0318 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0315 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0398\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0333 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0398\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0309 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0407\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0294 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0281 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0394\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0309 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0290 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0402\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0394\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0285 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0401\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0310 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0394\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0297 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0307 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0448\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0348 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0305 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0405\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0298 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0385\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0426\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0319 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0422\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0402\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0295 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0389\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0394\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0390\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0305 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0396\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0273 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0383\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0285 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0380\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0279 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0379\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0291 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0381\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0281 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0394\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0292 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0456\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0320 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0378\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0280 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0434\n",
            "Epoch 119/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 120/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0276 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0386\n",
            "Epoch 121/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0292 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0411\n",
            "Epoch 122/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0282 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 123/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0287 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0387\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2674<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c6f08b1696d34adabe37d7e02152045d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.80MB of 1.80MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104443-x927l16j/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104443-x927l16j/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>122</td></tr><tr><td>loss</td><td>0.00127</td></tr><tr><td>mean_squared_error</td><td>0.00127</td></tr><tr><td>mean_absolute_error</td><td>0.02766</td></tr><tr><td>val_loss</td><td>0.00257</td></tr><tr><td>val_mean_squared_error</td><td>0.00257</td></tr><tr><td>val_mean_absolute_error</td><td>0.03873</td></tr><tr><td>_runtime</td><td>56</td></tr><tr><td>_timestamp</td><td>1626259539</td></tr><tr><td>_step</td><td>122</td></tr><tr><td>best_val_loss</td><td>0.00242</td></tr><tr><td>best_epoch</td><td>112</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▅█▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▅█▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▆▆▅█▅▄▄▄▃▃▄▃▃▃▂▂▃▂▃▃▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">upbeat-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/x927l16j\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/x927l16j</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 5a3dk19v with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fallen-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5a3dk19v\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5a3dk19v</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104550-5a3dk19v</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 245ms/step - loss: 0.1504 - mean_squared_error: 0.1504 - mean_absolute_error: 0.2992 - val_loss: 0.0349 - val_mean_squared_error: 0.0349 - val_mean_absolute_error: 0.1473\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0183 - mean_squared_error: 0.0183 - mean_absolute_error: 0.1084 - val_loss: 0.0275 - val_mean_squared_error: 0.0275 - val_mean_absolute_error: 0.1258\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0976 - val_loss: 0.0256 - val_mean_squared_error: 0.0256 - val_mean_absolute_error: 0.1263\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0200 - mean_squared_error: 0.0200 - mean_absolute_error: 0.1111 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1079\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0897 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1230\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0939 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1072\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0886 - val_loss: 0.0335 - val_mean_squared_error: 0.0335 - val_mean_absolute_error: 0.1411\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.1032 - val_loss: 0.0271 - val_mean_squared_error: 0.0271 - val_mean_absolute_error: 0.1241\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0920 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1267\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0938 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1043\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0147 - mean_squared_error: 0.0147 - mean_absolute_error: 0.0946 - val_loss: 0.0249 - val_mean_squared_error: 0.0249 - val_mean_absolute_error: 0.1181\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0941 - val_loss: 0.0248 - val_mean_squared_error: 0.0248 - val_mean_absolute_error: 0.1181\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0918 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1029\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0780 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1060\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0175 - mean_squared_error: 0.0175 - mean_absolute_error: 0.1034 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1034\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0826 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1175\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - mean_absolute_error: 0.0980 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1043\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0753 - val_loss: 0.0271 - val_mean_squared_error: 0.0271 - val_mean_absolute_error: 0.1252\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0997 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1037\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0877 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0982\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0811 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1000\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0847 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0987\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0815 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0993\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0918 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0966\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0750 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1190\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0873 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0984\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0770 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1192\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0892 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0944\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0806 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0961\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0746 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1045\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0839 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1054\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0777 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1154\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0832 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0929\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0806 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0912\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0794 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0910\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0729 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0967\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0821 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0982\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0783 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1043\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0760 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0979\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0706 - val_loss: 0.0226 - val_mean_squared_error: 0.0226 - val_mean_absolute_error: 0.1158\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0766 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1005\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0750 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1029\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0750 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0888\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0776 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0965\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0780 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0976\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0687 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0883\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0691 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0869\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0678 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0909\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0830 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0866\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0657 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1083\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3098<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2514e7d5be7e4787ac0d9bbbaf0adc59",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.78MB of 0.78MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104550-5a3dk19v/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104550-5a3dk19v/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.0082</td></tr><tr><td>mean_squared_error</td><td>0.0082</td></tr><tr><td>mean_absolute_error</td><td>0.06927</td></tr><tr><td>val_loss</td><td>0.02013</td></tr><tr><td>val_mean_squared_error</td><td>0.02013</td></tr><tr><td>val_mean_absolute_error</td><td>0.10834</td></tr><tr><td>_runtime</td><td>23</td></tr><tr><td>_timestamp</td><td>1626259573</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.01301</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▂▂▂▁▁▁▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▂▁▁▁▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▃▃▂▃▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▄▄█▅▆▅▅▃▃▄▃▆▃▂▂▂▂▂▄▂▂▃▄▂▂▂▂▃▂▂▃▁▂▁▁▁▃</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▄▄█▅▆▅▅▃▃▄▃▆▃▂▂▂▂▂▄▂▂▃▄▂▂▂▂▃▂▂▃▁▂▁▁▁▃</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▆▃▃▇▅▆▅▅▃▃▅▃▅▃▃▂▂▂▂▅▂▂▃▄▂▂▂▂▃▂▃▃▁▂▁▁▁▃</td></tr><tr><td>_runtime</td><td>▁▂▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">fallen-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5a3dk19v\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/5a3dk19v</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: t362kejm with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">snowy-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/t362kejm\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/t362kejm</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104624-t362kejm</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 9s 73ms/step - loss: 0.1410 - mean_squared_error: 0.1410 - mean_absolute_error: 0.2801 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1099\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0854 - val_loss: 0.0262 - val_mean_squared_error: 0.0262 - val_mean_absolute_error: 0.1204\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0796 - val_loss: 0.0240 - val_mean_squared_error: 0.0240 - val_mean_absolute_error: 0.1162\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0775 - val_loss: 0.0268 - val_mean_squared_error: 0.0268 - val_mean_absolute_error: 0.1239\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0795 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0983\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0742 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0962\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0745 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1142\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0723 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1097\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0669 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0970\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0696 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0923\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0674 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0895\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0692 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0919\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0673 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0914\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0663 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0949\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0659 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0932\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0638 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0888\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0637 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0854\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0596 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0902\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0604 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0860\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0614 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0931\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0578 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0871\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0598 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0847\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0584 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0813\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0537 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0939\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0597 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0814\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0608 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0821\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0549 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0793\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0567 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0770\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0571 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0766\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0528 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0768\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0515 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0801\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0520 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0747\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0540 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0757\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0516 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0732\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0516 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0753\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0514 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0775\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0506 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0721\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0529 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0726\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0717\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0487 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0723\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0723\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0506 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0705\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0502 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0724\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0500 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0705\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0481 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0698\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0480 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0744\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0470 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0686\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0485 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0698\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0457 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0727\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0450 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0717\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3303<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "1e03a7db36464a81ba0274e5db2c3db0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.85MB of 1.85MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104624-t362kejm/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104624-t362kejm/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00364</td></tr><tr><td>mean_squared_error</td><td>0.00364</td></tr><tr><td>mean_absolute_error</td><td>0.04706</td></tr><tr><td>val_loss</td><td>0.00855</td></tr><tr><td>val_mean_squared_error</td><td>0.00855</td></tr><tr><td>val_mean_absolute_error</td><td>0.07167</td></tr><tr><td>_runtime</td><td>49</td></tr><tr><td>_timestamp</td><td>1626259633</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00815</td></tr><tr><td>best_epoch</td><td>46</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆█▇█▄▇▆▄▃▄▃▄▃▃▃▃▃▂▂▃▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▆█▇█▄▇▆▄▃▄▃▄▃▃▃▃▃▂▂▃▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆█▇█▅▇▆▅▄▄▄▄▄▃▄▃▃▃▃▄▃▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">snowy-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/t362kejm\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/t362kejm</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: pxe715os with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">daily-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/pxe715os\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/pxe715os</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104725-pxe715os</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 9s 72ms/step - loss: 0.0876 - mean_squared_error: 0.0876 - mean_absolute_error: 0.2198 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1016\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0226 - mean_squared_error: 0.0226 - mean_absolute_error: 0.1147 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1077\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0186 - mean_squared_error: 0.0186 - mean_absolute_error: 0.1047 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0941\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0880 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0962\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0934 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0964\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0774 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0893\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0725 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0835\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0812 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0943\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0803 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0765\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0697 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0755\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0712 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0889\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0674 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0726\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0633 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0800\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0651 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0710\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0589 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0706\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0614 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0688\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0648 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1040\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0706 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0642\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0565 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0647\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0555 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0687\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0559 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0694\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0562 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0610\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0521 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0694\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0594 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0653\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0524 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0613\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0569 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0605\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0559 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0570\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0539 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0618\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0541 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0608\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0530 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0686\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0509 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0636\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0536 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0548\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0544 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0565\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0520 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0538\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0521 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0524\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0525 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0552\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0504 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0513\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0519 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0610\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0516 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0574\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0471 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0535\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0512 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0550\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 1s 30ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0543 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0551\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0503 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0527\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0503 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0550\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0479 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0559\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0492 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0667\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0529 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0489\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0483 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0570\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0508 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0505\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0492 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0481\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0509 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0514\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0486 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0603\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0513 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0556\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0501 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0534\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0468\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0484 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0492\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0484 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0482\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0518 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0564\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0488 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0492\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0493 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0469\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0487 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0536\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0495\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0489 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0475\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0477 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0450\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0473 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0461 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0479\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0457 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0452\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0503 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0441\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0486 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0474\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0464 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0444\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0442 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0597\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0529 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0482\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0486 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0511\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0513 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0553\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0485 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0475\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0434 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0485\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0494 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0434\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0464 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0463\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0483 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0467\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0447 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0452\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0446 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0441 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0448\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0424 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0421\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0476 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0431\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0469 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0435 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0441\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0424 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0475\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0445 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0637\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0509 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0456\n",
            "Epoch 90/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0441 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0427\n",
            "Epoch 91/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0448 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0531\n",
            "Epoch 92/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0450 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0525\n",
            "Epoch 93/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0442 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0427\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3508<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "827d72be79eb4c2eafd63fe2e45a1335",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.93MB of 0.93MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104725-pxe715os/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104725-pxe715os/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>92</td></tr><tr><td>loss</td><td>0.00315</td></tr><tr><td>mean_squared_error</td><td>0.00315</td></tr><tr><td>mean_absolute_error</td><td>0.04298</td></tr><tr><td>val_loss</td><td>0.00322</td></tr><tr><td>val_mean_squared_error</td><td>0.00322</td></tr><tr><td>val_mean_absolute_error</td><td>0.04266</td></tr><tr><td>_runtime</td><td>77</td></tr><tr><td>_timestamp</td><td>1626259722</td></tr><tr><td>_step</td><td>92</td></tr><tr><td>best_val_loss</td><td>0.00306</td></tr><tr><td>best_epoch</td><td>82</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▇▆▄▄▃▇▃▃▃▂▂▃▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▂▂▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▇▆▄▄▃▇▃▃▃▂▂▃▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▂▂▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▇▇▅▄▄█▄▃▄▃▃▃▂▂▃▂▂▃▃▂▃▂▂▂▂▁▁▂▃▂▂▁▁▁▁▃▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">daily-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/pxe715os\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/pxe715os</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 26mynbrt with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">wise-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/26mynbrt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/26mynbrt</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104856-26mynbrt</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 8s 321ms/step - loss: 0.2101 - mean_squared_error: 0.2101 - mean_absolute_error: 0.3803 - val_loss: 0.0300 - val_mean_squared_error: 0.0300 - val_mean_absolute_error: 0.1468\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0269 - mean_squared_error: 0.0269 - mean_absolute_error: 0.1333 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1239\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0178 - mean_squared_error: 0.0178 - mean_absolute_error: 0.1070 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1182\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0203 - mean_squared_error: 0.0203 - mean_absolute_error: 0.1087 - val_loss: 0.0288 - val_mean_squared_error: 0.0288 - val_mean_absolute_error: 0.1264\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.0980 - val_loss: 0.0396 - val_mean_squared_error: 0.0396 - val_mean_absolute_error: 0.1538\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0179 - mean_squared_error: 0.0179 - mean_absolute_error: 0.1023 - val_loss: 0.0260 - val_mean_squared_error: 0.0260 - val_mean_absolute_error: 0.1192\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0923 - val_loss: 0.0264 - val_mean_squared_error: 0.0264 - val_mean_absolute_error: 0.1206\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0870 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1106\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0906 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1128\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.0964 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1068\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0916 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1117\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0941 - val_loss: 0.0212 - val_mean_squared_error: 0.0212 - val_mean_absolute_error: 0.1063\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0895 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1084\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0862 - val_loss: 0.0249 - val_mean_squared_error: 0.0249 - val_mean_absolute_error: 0.1170\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0817 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1112\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0859 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1129\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0164 - mean_squared_error: 0.0164 - mean_absolute_error: 0.1022 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1064\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0841 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1185\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0888 - val_loss: 0.0262 - val_mean_squared_error: 0.0262 - val_mean_absolute_error: 0.1212\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0881 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1018\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0820 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0998\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0802 - val_loss: 0.0227 - val_mean_squared_error: 0.0227 - val_mean_absolute_error: 0.1124\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0827 - val_loss: 0.0258 - val_mean_squared_error: 0.0258 - val_mean_absolute_error: 0.1208\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0790 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0987\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0866 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1028\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0817 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1001\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0876 - val_loss: 0.0232 - val_mean_squared_error: 0.0232 - val_mean_absolute_error: 0.1145\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0835 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0964\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0843 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1001\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0801 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0991\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0708 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1059\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0128 - mean_squared_error: 0.0128 - mean_absolute_error: 0.0878 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0955\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0765 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0949\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0755 - val_loss: 0.0212 - val_mean_squared_error: 0.0212 - val_mean_absolute_error: 0.1096\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0756 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1036\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0849 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0949\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0810 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0935\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0724 - val_loss: 0.0231 - val_mean_squared_error: 0.0231 - val_mean_absolute_error: 0.1150\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0814 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0923\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0772 - val_loss: 0.0275 - val_mean_squared_error: 0.0275 - val_mean_absolute_error: 0.1277\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0801 - val_loss: 0.0230 - val_mean_squared_error: 0.0230 - val_mean_absolute_error: 0.1152\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0817 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0915\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0719 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0907\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0806 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0931\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0787 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1034\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0757 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0922\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0730 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0899\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0757 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0927\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0732 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0924\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0775 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0909\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0675 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0916\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0803 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1001\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0738 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0927\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0718 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0882\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0718 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.0992\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0709 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0898\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0704 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0899\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0706 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0929\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0795 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0903\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0692 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0879\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0656 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0868\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0696 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0893\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0710 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0879\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0706 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0899\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0651 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0866\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0699 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0868\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0655 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0918\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0700 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0994\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0688 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0890\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0654 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0946\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0674 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0913\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0680 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0974\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0687 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0859\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0670 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0869\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0662 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0860\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0672 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0874\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0658 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0870\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0664 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0836\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0652 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0845\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0650 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0846\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0682 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0856\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0635 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0983\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0724 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0826\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0653 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0833\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0608 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0830\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0687 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0875\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0674 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0858\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0625 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0858\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0676 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0819\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0606 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0815\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0633 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0813\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0637 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0874\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0619 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0815\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0655 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0833\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0568 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0938\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0697 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0797\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0584 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0807\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0619 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0860\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0593 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0833\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0584 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0816\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0639 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0785\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0589 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0789\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0599 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0790\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0664 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0834\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0588 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0810\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0584 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0814\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0607 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0769\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0585 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0778\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0565 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0766\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0575 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0820\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0618 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0795\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0531 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0762\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0540 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0863\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0641 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0841\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0587 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0782\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0544 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0749\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0592 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0769\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0614 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0760\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0595 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0747\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0609 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0747\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0563 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0767\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0542 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0793\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0566 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0756\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0591 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0772\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0576 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0739\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0547 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0738\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0536 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0735\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0621 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0736\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0592 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0742\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0527 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0772\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0603 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0761\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0554 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0928\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0589 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0731\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0557 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0803\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0538 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0789\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0561 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0755\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0536 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0781\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0522 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0800\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0620 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0743\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0540 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0759\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0580 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0720\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0538 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0813\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0558 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0787\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0553 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0746\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0589 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0732\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0570 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0712\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0532 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0727\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0544 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0768\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0545 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0782\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0544 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0757\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0572 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0748\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0522 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0713\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0539 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0706\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0505 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0818\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0588 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0722\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0508 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0763\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0551 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0741\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0531 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0734\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0540 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0727\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0516 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0752\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0528 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0762\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0529 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0698\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0530 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0730\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0545 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0697\n",
            "Epoch 165/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0513 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0694\n",
            "Epoch 166/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0547 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0711\n",
            "Epoch 167/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0502 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0713\n",
            "Epoch 168/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0548 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0759\n",
            "Epoch 169/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0534 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0692\n",
            "Epoch 170/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0503 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0693\n",
            "Epoch 171/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0523 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0704\n",
            "Epoch 172/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0502 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0732\n",
            "Epoch 173/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0689\n",
            "Epoch 174/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0521 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0728\n",
            "Epoch 175/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0488 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0750\n",
            "Epoch 176/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0509 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0684\n",
            "Epoch 177/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0463 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0729\n",
            "Epoch 178/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0578 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0682\n",
            "Epoch 179/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0532 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0680\n",
            "Epoch 180/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0506 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0729\n",
            "Epoch 181/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0533 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0730\n",
            "Epoch 182/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0540 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0797\n",
            "Epoch 183/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0521 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0696\n",
            "Epoch 184/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0473 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0747\n",
            "Epoch 185/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0554 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0694\n",
            "Epoch 186/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0468 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0694\n",
            "Epoch 187/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0473 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0722\n",
            "Epoch 188/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0558 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0679\n",
            "Epoch 189/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0493 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0677\n",
            "Epoch 190/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0486 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0675\n",
            "Epoch 191/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0515 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0717\n",
            "Epoch 192/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0506 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0671\n",
            "Epoch 193/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0499 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0670\n",
            "Epoch 194/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0491 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0665\n",
            "Epoch 195/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0494 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0884\n",
            "Epoch 196/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0529 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0665\n",
            "Epoch 197/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0458 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0668\n",
            "Epoch 198/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0530 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0672\n",
            "Epoch 199/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0473 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0771\n",
            "Epoch 200/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0513 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0724\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3842<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2ef5cc5c745e4ced8855ebe1c9a102ed",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.87MB of 0.87MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104856-26mynbrt/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104856-26mynbrt/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00416</td></tr><tr><td>mean_squared_error</td><td>0.00416</td></tr><tr><td>mean_absolute_error</td><td>0.04954</td></tr><tr><td>val_loss</td><td>0.00852</td></tr><tr><td>val_mean_squared_error</td><td>0.00852</td></tr><tr><td>val_mean_absolute_error</td><td>0.07242</td></tr><tr><td>_runtime</td><td>48</td></tr><tr><td>_timestamp</td><td>1626259784</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00759</td></tr><tr><td>best_epoch</td><td>193</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▅▄▄▄▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▁▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>██▆▆▇▅▄▄▄▄▅▄▃▅▄▃▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>██▆▆▇▅▄▄▄▄▅▄▃▅▄▃▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▆▇▇▅▅▄▄▄▅▄▄▅▅▃▅▃▄▃▃▂▂▂▃▂▃▃▂▂▃▂▁▂▂▁▂▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">wise-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/26mynbrt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/26mynbrt</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 90t33h16 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">solar-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/90t33h16\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/90t33h16</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_104959-90t33h16</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 8s 242ms/step - loss: 0.1572 - mean_squared_error: 0.1572 - mean_absolute_error: 0.3128 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1181\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.1022 - val_loss: 0.0436 - val_mean_squared_error: 0.0436 - val_mean_absolute_error: 0.1676\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0256 - mean_squared_error: 0.0256 - mean_absolute_error: 0.1260 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1161\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0193 - mean_squared_error: 0.0193 - mean_absolute_error: 0.1061 - val_loss: 0.0308 - val_mean_squared_error: 0.0308 - val_mean_absolute_error: 0.1345\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - mean_absolute_error: 0.0974 - val_loss: 0.0264 - val_mean_squared_error: 0.0264 - val_mean_absolute_error: 0.1226\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0928 - val_loss: 0.0281 - val_mean_squared_error: 0.0281 - val_mean_absolute_error: 0.1267\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0172 - mean_squared_error: 0.0172 - mean_absolute_error: 0.1010 - val_loss: 0.0357 - val_mean_squared_error: 0.0357 - val_mean_absolute_error: 0.1483\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.0979 - val_loss: 0.0287 - val_mean_squared_error: 0.0287 - val_mean_absolute_error: 0.1295\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0178 - mean_squared_error: 0.0178 - mean_absolute_error: 0.1037 - val_loss: 0.0349 - val_mean_squared_error: 0.0349 - val_mean_absolute_error: 0.1466\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - mean_absolute_error: 0.1064 - val_loss: 0.0257 - val_mean_squared_error: 0.0257 - val_mean_absolute_error: 0.1220\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0888 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1049\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0933 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1038\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0869 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1006\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0863 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1009\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0842 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1030\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0931 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1098\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0877 - val_loss: 0.0259 - val_mean_squared_error: 0.0259 - val_mean_absolute_error: 0.1271\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0988 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1075\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0939 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0992\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0917 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1031\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0921 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0973\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0735 - val_loss: 0.0289 - val_mean_squared_error: 0.0289 - val_mean_absolute_error: 0.1346\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.0904 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0983\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0707 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1116\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0908 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1110\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0718 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0986\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0947 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0929\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0803 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1077\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0877 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0967\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0805 - val_loss: 0.0261 - val_mean_squared_error: 0.0261 - val_mean_absolute_error: 0.1262\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0833 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0975\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0741 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0931\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0673 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1153\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0875 - val_loss: 0.0245 - val_mean_squared_error: 0.0245 - val_mean_absolute_error: 0.1222\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0853 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1079\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0787 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0874\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0766 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0874\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0722 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0890\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0701 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0858\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0754 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0892\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0786 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1009\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0715 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0899\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0751 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0877\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0662 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0898\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0671 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0893\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0743 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0859\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0769 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0965\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0680 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0861\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0882 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0832\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0694 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0978\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0761 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0924\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0615 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0923\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0713 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0860\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0608 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0945\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0700 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0824\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0602 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0863\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0725 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0848\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0672 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0788\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0603 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0846\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0728 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0780\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0586 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0770\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0741 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0770\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0580 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0862\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0786 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0765\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0688 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0826\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0719 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0753\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0599 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0874\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0604 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0967\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0645 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0743\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0655 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0730\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0577 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0823\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0707 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0735\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0577 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0884\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0589 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0736\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0624 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0745\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0648 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0773\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0562 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0801\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0696 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0786\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0641 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0720\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0602 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0726\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0641 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0724\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0566 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0771\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0705 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0706\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0506 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1072\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0687 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0837\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0607 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0706\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0605 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0712\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0550 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0805\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0705 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0694\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0581 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0695\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0553 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0772\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0549 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0932\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0664 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0838\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0654 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0716\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0576 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0684\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0547 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0748\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0536 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0701\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0618 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0692\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0577 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0697\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0579 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0689\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4497<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "164215c5c5ba4a00a21bee8ba95e9c43",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.46MB of 2.46MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104959-90t33h16/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_104959-90t33h16/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00559</td></tr><tr><td>mean_squared_error</td><td>0.00559</td></tr><tr><td>mean_absolute_error</td><td>0.05789</td></tr><tr><td>val_loss</td><td>0.00783</td></tr><tr><td>val_mean_squared_error</td><td>0.00783</td></tr><tr><td>val_mean_absolute_error</td><td>0.06888</td></tr><tr><td>_runtime</td><td>35</td></tr><tr><td>_timestamp</td><td>1626259834</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00783</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▂▂▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆▆██▅▄▅▅▄▄▄▅▄▇▃▃▄▃▃▂▃▃▃▂▂▂▃▁▁▁▂▁▂▄▁▁▃▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▆▆██▅▄▅▅▄▄▄▅▄▇▃▃▄▃▃▂▃▃▃▂▂▂▃▁▁▁▂▁▂▄▁▁▃▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▆██▅▅▆▅▄▄▄▅▄▇▃▃▅▃▃▃▄▄▃▃▂▂▃▂▂▂▂▁▂▅▁▁▄▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">solar-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/90t33h16\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/90t33h16</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: yab4ryeh with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">tough-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/yab4ryeh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/yab4ryeh</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105104-yab4ryeh</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 9s 125ms/step - loss: 0.1597 - mean_squared_error: 0.1597 - mean_absolute_error: 0.3165 - val_loss: 0.0453 - val_mean_squared_error: 0.0453 - val_mean_absolute_error: 0.1753\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0390 - mean_squared_error: 0.0390 - mean_absolute_error: 0.1597 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0999\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0958 - val_loss: 0.0333 - val_mean_squared_error: 0.0333 - val_mean_absolute_error: 0.1471\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0818 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1005\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0782 - val_loss: 0.0266 - val_mean_squared_error: 0.0266 - val_mean_absolute_error: 0.1248\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0933 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0911\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0778 - val_loss: 0.0322 - val_mean_squared_error: 0.0322 - val_mean_absolute_error: 0.1412\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0893 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0874\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0715 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1114\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0817 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0909\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0664 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0861\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0785 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0860\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0622 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0859\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0716 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0832\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0636 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0979\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0779 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0909\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0639 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0810\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0635 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0967\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0693 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0791\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0638 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0908\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0707 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0797\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0585 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0745\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0558 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1005\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0706\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0570 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0703\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0588 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0814\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0668 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0736\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0511 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0877\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0553 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0717\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0722\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0579 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0674\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0523 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0661\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0584 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0669\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0506 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0666\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0511 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0648\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0478 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0727\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0505 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0681\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0512 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0661\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0486 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0630\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0484 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0641\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0483 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0619\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0514 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0590\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0447 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0633\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0474 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0603\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0537 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0638\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0488 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0569\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0432 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0699\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0514 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0647\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0451 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0633\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0441 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0594\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0455 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0593\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0475 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0610\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0448 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0549\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0429 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0650\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0491 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0648\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0430 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0540\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0422 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0554\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0412 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0577\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0473 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0580\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0418 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0515\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0410 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0748\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0504 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0581\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0456 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0590\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0399 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0560\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0426 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0519\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0401 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0661\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0427 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0525\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0421 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0480\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0388 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0548\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0537\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0412 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0608\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0453 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0634\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0535 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0561\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0406 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0526\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0415 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0491\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0582\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0424 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0737\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0457 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0550\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0422 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0658\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0415 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0524\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0421 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0678\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0464 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0526\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0419 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0471\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0418 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0524\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0407 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0551\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0385 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0450\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0365 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0480\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0394 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0438 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0531\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0375 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0378 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0466\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0389 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0458\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0363 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0445\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0365 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0433\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0359 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0369 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0440\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0343 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0459\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0490\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0407 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0364 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0482\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0387 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0426\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0394 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0549\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0396 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0353 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0355 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0387 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0370 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0437\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0333 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0454\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0392 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0408\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0355 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0418\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0396 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0558\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0400 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0447\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0363 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0498\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0461\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0336 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0346 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0584\n",
            "Epoch 119/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0391 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0483\n",
            "Epoch 120/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0383 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4852<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "56a1f7795c644352b913e28e192edbb8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.55MB of 1.55MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105104-yab4ryeh/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105104-yab4ryeh/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>119</td></tr><tr><td>loss</td><td>0.0024</td></tr><tr><td>mean_squared_error</td><td>0.0024</td></tr><tr><td>mean_absolute_error</td><td>0.03785</td></tr><tr><td>val_loss</td><td>0.00365</td></tr><tr><td>val_mean_squared_error</td><td>0.00365</td></tr><tr><td>val_mean_absolute_error</td><td>0.04776</td></tr><tr><td>_runtime</td><td>63</td></tr><tr><td>_timestamp</td><td>1626259927</td></tr><tr><td>_step</td><td>119</td></tr><tr><td>best_val_loss</td><td>0.0029</td></tr><tr><td>best_epoch</td><td>109</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▆▃▃▃▂▂▂▃▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▆▃▃▃▂▂▂▃▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▆▄▃▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▃▂▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">tough-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/yab4ryeh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/yab4ryeh</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: rjwf32n0 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">autumn-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/rjwf32n0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/rjwf32n0</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105248-rjwf32n0</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 237ms/step - loss: 0.3082 - mean_squared_error: 0.3082 - mean_absolute_error: 0.4204 - val_loss: 0.0842 - val_mean_squared_error: 0.0842 - val_mean_absolute_error: 0.2182\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0722 - mean_squared_error: 0.0722 - mean_absolute_error: 0.2189 - val_loss: 0.0418 - val_mean_squared_error: 0.0418 - val_mean_absolute_error: 0.1724\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0399 - mean_squared_error: 0.0399 - mean_absolute_error: 0.1653 - val_loss: 0.0401 - val_mean_squared_error: 0.0401 - val_mean_absolute_error: 0.1682\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0198 - mean_squared_error: 0.0198 - mean_absolute_error: 0.1131 - val_loss: 0.0237 - val_mean_squared_error: 0.0237 - val_mean_absolute_error: 0.1124\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.0969 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0943\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0786 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0966\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0789 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0906\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0715 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0894\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0759 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0936\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0700 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0933\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0707 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0925\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0671 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0886\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0679 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0875\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0663 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0867\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0704 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0856\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0637 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0865\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0661 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0867\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0641 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0864\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0636 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0866\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0673 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0842\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0619 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0863\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0631 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0887\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0640 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0833\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0593 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0834\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0593 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0812\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0617 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0841\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0626 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0829\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0591 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0790\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0603 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0778\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0602 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0838\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0619 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0918\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0613 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0841\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0577 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0765\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0562 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0746\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0567 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0744\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0538 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0735\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0539 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0733\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0540 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0741\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0530 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0788\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0562 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0763\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0543 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0747\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0535 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0706\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0522 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0705\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0511 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0716\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0535 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0730\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0557 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0695\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0538 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0689\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0502 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0687\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0482 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0687\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0523 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0679\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5267<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "41375927f12e43f9bfd4c189fabd0b78",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.43MB of 1.43MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105248-rjwf32n0/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105248-rjwf32n0/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.0044</td></tr><tr><td>mean_squared_error</td><td>0.0044</td></tr><tr><td>mean_absolute_error</td><td>0.0515</td></tr><tr><td>val_loss</td><td>0.00773</td></tr><tr><td>val_mean_squared_error</td><td>0.00773</td></tr><tr><td>val_mean_absolute_error</td><td>0.06793</td></tr><tr><td>_runtime</td><td>24</td></tr><tr><td>_timestamp</td><td>1626259992</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00773</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▄▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▄▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▆▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">autumn-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/rjwf32n0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/rjwf32n0</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ntj9mmyz with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">lively-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/ntj9mmyz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/ntj9mmyz</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105325-ntj9mmyz</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 9s 238ms/step - loss: 0.2063 - mean_squared_error: 0.2063 - mean_absolute_error: 0.3710 - val_loss: 0.0328 - val_mean_squared_error: 0.0328 - val_mean_absolute_error: 0.1506\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0322 - mean_squared_error: 0.0322 - mean_absolute_error: 0.1479 - val_loss: 0.0466 - val_mean_squared_error: 0.0466 - val_mean_absolute_error: 0.1774\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0332 - mean_squared_error: 0.0332 - mean_absolute_error: 0.1399 - val_loss: 0.0482 - val_mean_squared_error: 0.0482 - val_mean_absolute_error: 0.1742\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0322 - mean_squared_error: 0.0322 - mean_absolute_error: 0.1318 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1023\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0895 - val_loss: 0.0464 - val_mean_squared_error: 0.0464 - val_mean_absolute_error: 0.1769\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0278 - mean_squared_error: 0.0278 - mean_absolute_error: 0.1307 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1015\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - mean_absolute_error: 0.0960 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0966\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0991 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1112\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - mean_absolute_error: 0.1046 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0963\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0808 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0912\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0201 - mean_squared_error: 0.0201 - mean_absolute_error: 0.1061 - val_loss: 0.0227 - val_mean_squared_error: 0.0227 - val_mean_absolute_error: 0.1171\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0902 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0917\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0827 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0891\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0864 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0888\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0785 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1020\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0855 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1075\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0766 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0868\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0707 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0914\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0909 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0992\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0811 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0872\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0714 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0843\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0657 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0955\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0690 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0938\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0701 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0970\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0760 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0881\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0631 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0856\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0719 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0804\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0681 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0798\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0701 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0856\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0767 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0783\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0667 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0755\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0602 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0788\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0689 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0791\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0651 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0729\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0579 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0818\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0720 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0778\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 31ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0615 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0723\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0574 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0722\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0599 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0784\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0693 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0723\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0604 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0719\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0562 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0732\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0541 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0709\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0601 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0707\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0555 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0677\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0562 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0681\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0602 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0678\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0563 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0678\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0534 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0690\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0534 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0696\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0603 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0662\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0504 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0738\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0551 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0654\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0531 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0804\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0734 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0647\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0528 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0642\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0551 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0703\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0550 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0674\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0576 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0662\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0500 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0643\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0500 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0653\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0620 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0745\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0587 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0639\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0510 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0641\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0528 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0624\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0515 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0612\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0515 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0709\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0539 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0611\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0482 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0719\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0543 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0649\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0504 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0632\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0518 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0659\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0573 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0592\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0496 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0589\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0624\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0459 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0581\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0498 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0590\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0513 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0606\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0478 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0606\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0485 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0565\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0475 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0569\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0457 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0694\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0518 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0709\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0535 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0616\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0471 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0568\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0448 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0643\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0486 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0644\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0593\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0492 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0548\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0454 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0627\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0518 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0564\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0474 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0536\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0425 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0567\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0491 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0565\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0469 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0530\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0467 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0532\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0423 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0518\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0444 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0571\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0443 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0544\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0455 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0521\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5472<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "1678f866f7b3420cbbe2580325141bb8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.29MB of 1.29MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105325-ntj9mmyz/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105325-ntj9mmyz/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00331</td></tr><tr><td>mean_squared_error</td><td>0.00331</td></tr><tr><td>mean_absolute_error</td><td>0.04504</td></tr><tr><td>val_loss</td><td>0.00484</td></tr><tr><td>val_mean_squared_error</td><td>0.00484</td></tr><tr><td>val_mean_absolute_error</td><td>0.05214</td></tr><tr><td>_runtime</td><td>38</td></tr><tr><td>_timestamp</td><td>1626260043</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00483</td></tr><tr><td>best_epoch</td><td>96</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▃▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆█▃▃▄▃▃▂▂▃▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▆█▃▃▄▃▃▂▂▃▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇█▄▄▅▃▄▃▃▃▃▃▂▂▂▃▂▂▂▂▂▃▂▂▂▂▂▂▂▁▁▂▂▂▂▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">lively-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/ntj9mmyz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/ntj9mmyz</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 1s9qaguk with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">earthy-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/1s9qaguk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/1s9qaguk</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105417-1s9qaguk</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 8s 70ms/step - loss: 0.0938 - mean_squared_error: 0.0938 - mean_absolute_error: 0.2269 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1219\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0875 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1011\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0796 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0963\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0758 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0951\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0760 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0946\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0672 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1080\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0741 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0909\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0693 - val_loss: 0.0247 - val_mean_squared_error: 0.0247 - val_mean_absolute_error: 0.1235\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0766 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0909\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0680 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0863\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0730 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0893\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0669 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0898\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0630 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0835\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0638 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0839\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0646 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0829\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0612 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0872\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0612 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0908\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0663 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0808\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0613 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0799\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0616 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0845\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 32ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0602 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0770\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0571 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0828\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0563 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0767\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0559 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0808\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0545 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0782\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0550 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0804\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0624 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0745\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0521 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0731\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0566 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0710\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0526 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0725\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0571 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0698\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0519 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0728\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0499 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0687\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0514 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0718\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0527 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0680\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0497 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0683\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0493 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0670\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0484 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0679\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0465 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0735\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0512 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0667\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0513 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0656\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0485 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0652\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0490 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0710\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0479 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0651\n",
            "Epoch 45/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0478 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0652\n",
            "Epoch 46/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0461 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0637\n",
            "Epoch 47/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0489 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0742\n",
            "Epoch 48/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0481 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0630\n",
            "Epoch 49/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0464 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0661\n",
            "Epoch 50/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0467 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0632\n",
            "Epoch 51/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0452 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0654\n",
            "Epoch 52/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0466 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0622\n",
            "Epoch 53/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0458 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0609\n",
            "Epoch 54/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0444 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0664\n",
            "Epoch 55/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0488 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0618\n",
            "Epoch 56/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0470 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0599\n",
            "Epoch 57/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0487 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0596\n",
            "Epoch 58/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0448 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0590\n",
            "Epoch 59/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0433 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0607\n",
            "Epoch 60/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0410 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0583\n",
            "Epoch 61/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0437 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0606\n",
            "Epoch 62/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0411 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0593\n",
            "Epoch 63/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0445 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0593\n",
            "Epoch 64/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0441 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0577\n",
            "Epoch 65/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0437 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0621\n",
            "Epoch 66/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0415 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0602\n",
            "Epoch 67/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0458 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0587\n",
            "Epoch 68/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0443 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0577\n",
            "Epoch 69/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0596\n",
            "Epoch 70/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0565\n",
            "Epoch 71/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0413 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0571\n",
            "Epoch 72/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0422 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0558\n",
            "Epoch 73/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0397 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0552\n",
            "Epoch 74/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0387 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0549\n",
            "Epoch 75/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0411 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0541\n",
            "Epoch 76/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0399 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0569\n",
            "Epoch 77/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0420 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0555\n",
            "Epoch 78/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0420 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0550\n",
            "Epoch 79/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0410 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0527\n",
            "Epoch 80/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0385 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0544\n",
            "Epoch 81/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0417 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0567\n",
            "Epoch 82/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0454 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0531\n",
            "Epoch 83/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0416 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0546\n",
            "Epoch 84/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0415 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0522\n",
            "Epoch 85/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0423 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0530\n",
            "Epoch 86/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0435 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0570\n",
            "Epoch 87/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0402 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0559\n",
            "Epoch 88/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0389 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0527\n",
            "Epoch 89/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0361 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0519\n",
            "Epoch 90/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0386 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0540\n",
            "Epoch 91/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0546\n",
            "Epoch 92/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0382 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0510\n",
            "Epoch 93/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0407 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0541\n",
            "Epoch 94/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0383 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 95/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0391 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0535\n",
            "Epoch 96/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0393 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0532\n",
            "Epoch 97/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0388 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0501\n",
            "Epoch 98/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0522\n",
            "Epoch 99/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0407 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 100/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0411 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0488\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5827<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "504ba7816ea34507abd36f93ff0dadea",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.28MB of 3.28MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105417-1s9qaguk/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105417-1s9qaguk/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00239</td></tr><tr><td>mean_squared_error</td><td>0.00239</td></tr><tr><td>mean_absolute_error</td><td>0.03821</td></tr><tr><td>val_loss</td><td>0.00431</td></tr><tr><td>val_mean_squared_error</td><td>0.00431</td></tr><tr><td>val_mean_absolute_error</td><td>0.0488</td></tr><tr><td>_runtime</td><td>75</td></tr><tr><td>_timestamp</td><td>1626260132</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00431</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▆█▄▄▄▃▃▃▃▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▆█▄▄▄▃▃▃▃▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▇█▅▄▅▄▄▄▄▃▃▃▃▃▃▃▂▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">earthy-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/1s9qaguk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/1s9qaguk</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 67bu64zd with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">vague-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/67bu64zd\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/67bu64zd</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105545-67bu64zd</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 7s 123ms/step - loss: 0.1803 - mean_squared_error: 0.1803 - mean_absolute_error: 0.3455 - val_loss: 0.0285 - val_mean_squared_error: 0.0285 - val_mean_absolute_error: 0.1337\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0281 - mean_squared_error: 0.0281 - mean_absolute_error: 0.1329 - val_loss: 0.0367 - val_mean_squared_error: 0.0367 - val_mean_absolute_error: 0.1553\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0199 - mean_squared_error: 0.0199 - mean_absolute_error: 0.1144 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1096\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0946 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1022\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0868 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1018\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0811 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1000\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0830 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.0999\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0814 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1036\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0789 - val_loss: 0.0212 - val_mean_squared_error: 0.0212 - val_mean_absolute_error: 0.1082\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0830 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1003\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0753 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0995\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0767 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0966\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0769 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1003\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0768 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0966\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0739 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1026\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0704 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.0983\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0732 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0937\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0710 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1021\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0734 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0957\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0711 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0932\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0737 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0966\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0710 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0916\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0722 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0906\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0685 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0968\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0721 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0922\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0676 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0890\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0637 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0896\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0639 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0916\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0616 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0913\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0619 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0904\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0650 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0959\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0672 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0888\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0630 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0868\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0646 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0873\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 1s 56ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0647 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0910\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0656 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0866\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0663 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0851\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0625 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0854\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0614 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0862\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0630 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0859\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0622 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0841\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0679 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0860\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0618 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0893\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0632 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0825\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0602 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0880\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0626 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0818\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0595 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0900\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0614 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0834\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0596 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0807\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0611 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0896\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0591 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0804\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0604 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0828\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0577 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0800\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0592 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0800\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0602 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0812\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0570 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0785\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0591 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0825\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0569 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0781\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0582 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0777\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0577 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0778\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0549 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0779\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0562 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0795\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0558 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0777\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0573 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0766\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0538 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0795\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0572 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0772\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0525 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0776\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0551 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0764\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0537 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0777\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0526 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0765\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0536 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0803\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0572 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0789\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0526 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0746\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0520 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0746\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0560 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0793\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0541 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0752\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0543 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0759\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0578 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0746\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0546 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0779\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0539 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0745\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0522 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0753\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0522 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0729\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0537 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0768\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0551 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0765\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0507 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0723\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0503 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0791\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0504 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0715\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0489 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0730\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0501 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0739\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0517 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0717\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0529 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0794\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0532 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0716\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0487 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0715\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0500 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0713\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0511 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0734\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0498 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0719\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0535 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0745\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0494 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0715\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0506 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0739\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0513 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0704\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0497 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0705\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0492 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0713\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0529 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0732\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0492 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0696\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0491 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0691\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0491 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0706\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0452 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0690\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0485 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0704\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0464 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0694\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0481 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0688\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0493 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0733\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0500 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0686\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0479 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0720\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0491 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0683\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0460 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0697\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0465 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0680\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0478 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0709\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0500 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0679\n",
            "Epoch 119/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0483 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0704\n",
            "Epoch 120/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0487 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0712\n",
            "Epoch 121/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0504 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0681\n",
            "Epoch 122/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0471 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0680\n",
            "Epoch 123/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0478 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0675\n",
            "Epoch 124/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0488 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0671\n",
            "Epoch 125/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0493 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0682\n",
            "Epoch 126/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0483 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0696\n",
            "Epoch 127/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0493 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0691\n",
            "Epoch 128/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0487 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0666\n",
            "Epoch 129/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0472 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0662\n",
            "Epoch 130/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0458 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0685\n",
            "Epoch 131/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0442 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0673\n",
            "Epoch 132/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0465 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0670\n",
            "Epoch 133/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0459 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0693\n",
            "Epoch 134/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0478 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0657\n",
            "Epoch 135/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0461 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0708\n",
            "Epoch 136/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0476 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0663\n",
            "Epoch 137/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0464 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0670\n",
            "Epoch 138/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0500 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0649\n",
            "Epoch 139/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0447 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0647\n",
            "Epoch 140/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0444 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0653\n",
            "Epoch 141/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0448 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0781\n",
            "Epoch 142/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0516 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0641\n",
            "Epoch 143/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0493 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0643\n",
            "Epoch 144/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0491 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0682\n",
            "Epoch 145/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0475 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0640\n",
            "Epoch 146/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0447 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0649\n",
            "Epoch 147/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0424 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0669\n",
            "Epoch 148/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0457 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0676\n",
            "Epoch 149/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0440 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0649\n",
            "Epoch 150/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0444 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0642\n",
            "Epoch 151/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0450 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0639\n",
            "Epoch 152/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0435 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0638\n",
            "Epoch 153/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0428 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0641\n",
            "Epoch 154/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0419 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0664\n",
            "Epoch 155/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0418 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0637\n",
            "Epoch 156/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0460 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0625\n",
            "Epoch 157/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0448 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0642\n",
            "Epoch 158/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0449 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0658\n",
            "Epoch 159/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0471 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0662\n",
            "Epoch 160/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0458 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0639\n",
            "Epoch 161/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0426 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0634\n",
            "Epoch 162/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0453 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0644\n",
            "Epoch 163/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0425 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0620\n",
            "Epoch 164/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0422 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0629\n",
            "Epoch 165/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0437 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0681\n",
            "Epoch 166/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0435 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0612\n",
            "Epoch 167/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0474 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0616\n",
            "Epoch 168/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0438 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0639\n",
            "Epoch 169/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0420 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0611\n",
            "Epoch 170/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0427 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0622\n",
            "Epoch 171/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0446 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0658\n",
            "Epoch 172/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0453 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0601\n",
            "Epoch 173/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0452 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0605\n",
            "Epoch 174/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0448 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0636\n",
            "Epoch 175/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0419 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0617\n",
            "Epoch 176/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0417 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0599\n",
            "Epoch 177/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0440 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0664\n",
            "Epoch 178/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0463 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0606\n",
            "Epoch 179/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0595\n",
            "Epoch 180/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0396 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0597\n",
            "Epoch 181/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0423 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0617\n",
            "Epoch 182/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0425 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0590\n",
            "Epoch 183/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0427 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0592\n",
            "Epoch 184/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0419 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0606\n",
            "Epoch 185/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0424 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0638\n",
            "Epoch 186/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0436 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0588\n",
            "Epoch 187/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0424 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0599\n",
            "Epoch 188/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0425 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0614\n",
            "Epoch 189/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0415 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0590\n",
            "Epoch 190/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0451 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0596\n",
            "Epoch 191/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0435 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0579\n",
            "Epoch 192/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0410 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0606\n",
            "Epoch 193/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0438 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0646\n",
            "Epoch 194/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0427 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0595\n",
            "Epoch 195/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0425 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0601\n",
            "Epoch 196/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0424 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0581\n",
            "Epoch 197/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0406 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0607\n",
            "Epoch 198/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0426 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0575\n",
            "Epoch 199/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0404 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0599\n",
            "Epoch 200/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0407 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0583\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6182<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "aa562787a9a446ad8f8fa49572d5e711",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.17MB of 2.17MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105545-67bu64zd/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105545-67bu64zd/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00293</td></tr><tr><td>mean_squared_error</td><td>0.00293</td></tr><tr><td>mean_absolute_error</td><td>0.04154</td></tr><tr><td>val_loss</td><td>0.00579</td></tr><tr><td>val_mean_squared_error</td><td>0.00579</td></tr><tr><td>val_mean_absolute_error</td><td>0.05829</td></tr><tr><td>_runtime</td><td>88</td></tr><tr><td>_timestamp</td><td>1626260233</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00579</td></tr><tr><td>best_epoch</td><td>199</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▄▄▃▃▃▃▃▃▃▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">vague-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/67bu64zd\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/67bu64zd</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 56xe4jbc with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sweepy-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/56xe4jbc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/56xe4jbc</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105726-56xe4jbc</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 327ms/step - loss: 0.3582 - mean_squared_error: 0.3582 - mean_absolute_error: 0.4629 - val_loss: 0.0410 - val_mean_squared_error: 0.0410 - val_mean_absolute_error: 0.1564\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0402 - mean_squared_error: 0.0402 - mean_absolute_error: 0.1631 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1102\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0331 - mean_squared_error: 0.0331 - mean_absolute_error: 0.1408 - val_loss: 0.0443 - val_mean_squared_error: 0.0443 - val_mean_absolute_error: 0.1668\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0342 - mean_squared_error: 0.0342 - mean_absolute_error: 0.1473 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1038\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0194 - mean_squared_error: 0.0194 - mean_absolute_error: 0.1061 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1031\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0217 - mean_squared_error: 0.0217 - mean_absolute_error: 0.1169 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1006\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0186 - mean_squared_error: 0.0186 - mean_absolute_error: 0.1066 - val_loss: 0.0236 - val_mean_squared_error: 0.0236 - val_mean_absolute_error: 0.1192\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0276 - mean_squared_error: 0.0276 - mean_absolute_error: 0.1346 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0890\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0871 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1240\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0216 - mean_squared_error: 0.0216 - mean_absolute_error: 0.1165 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1014\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0208 - mean_squared_error: 0.0208 - mean_absolute_error: 0.1161 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0844\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0772 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1137\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0211 - mean_squared_error: 0.0211 - mean_absolute_error: 0.1185 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0877\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0718 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0819\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.0986 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0810\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0788 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1121\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0823 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1032\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0953 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1001\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0794 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1005\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0840 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1130\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0786 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1028\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0813 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0904\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0705 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0826\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0708 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0866\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6837<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9237d346f27744f0b8e8d1690aba67f3",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.39MB of 1.39MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105726-56xe4jbc/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105726-56xe4jbc/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>23</td></tr><tr><td>loss</td><td>0.00857</td></tr><tr><td>mean_squared_error</td><td>0.00857</td></tr><tr><td>mean_absolute_error</td><td>0.07209</td></tr><tr><td>val_loss</td><td>0.01259</td></tr><tr><td>val_mean_squared_error</td><td>0.01259</td></tr><tr><td>val_mean_absolute_error</td><td>0.08659</td></tr><tr><td>_runtime</td><td>19</td></tr><tr><td>_timestamp</td><td>1626260265</td></tr><tr><td>_step</td><td>23</td></tr><tr><td>best_val_loss</td><td>0.01112</td></tr><tr><td>best_epoch</td><td>13</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▃▄▄▄▅▅▅▆▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▁▂▂▁▂▁▂▁▁▂▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▃█▂▂▂▄▁▄▂▁▃▁▁▁▃▃▂▂▃▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▃█▂▂▂▄▁▄▂▁▃▁▁▁▃▃▂▂▃▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▃█▃▃▃▄▂▅▃▁▄▂▁▁▄▃▃▃▄▃▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▄▄▄▄▄▅▅▅▅▅▅▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▄▄▄▄▄▅▅▅▅▅▅▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▃▄▄▄▅▅▅▆▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sweepy-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/56xe4jbc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/56xe4jbc</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 61v9i74w with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dazzling-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/61v9i74w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/61v9i74w</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105758-61v9i74w</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 8s 119ms/step - loss: 0.1089 - mean_squared_error: 0.1089 - mean_absolute_error: 0.2396 - val_loss: 0.0384 - val_mean_squared_error: 0.0384 - val_mean_absolute_error: 0.1547\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0168 - mean_squared_error: 0.0168 - mean_absolute_error: 0.1040 - val_loss: 0.0278 - val_mean_squared_error: 0.0278 - val_mean_absolute_error: 0.1252\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0839 - val_loss: 0.0217 - val_mean_squared_error: 0.0217 - val_mean_absolute_error: 0.1157\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0127 - mean_squared_error: 0.0127 - mean_absolute_error: 0.0873 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1110\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0907 - val_loss: 0.0222 - val_mean_squared_error: 0.0222 - val_mean_absolute_error: 0.1106\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0806 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1026\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0866 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1018\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0807 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1010\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0738 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1197\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0769 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1011\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0779 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1035\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0804 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0994\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0789 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0958\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0749 - val_loss: 0.0249 - val_mean_squared_error: 0.0249 - val_mean_absolute_error: 0.1209\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0786 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0956\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0765 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0933\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0732 - val_loss: 0.0240 - val_mean_squared_error: 0.0240 - val_mean_absolute_error: 0.1186\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0688 - val_loss: 0.0224 - val_mean_squared_error: 0.0224 - val_mean_absolute_error: 0.1142\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0746 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0973\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0653 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1065\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0755 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0917\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0754 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0886\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0698 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0921\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0682 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1017\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0752 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1136\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0733 - val_loss: 0.0341 - val_mean_squared_error: 0.0341 - val_mean_absolute_error: 0.1469\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0810 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0914\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0677 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0953\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0656 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0889\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0665 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0895\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0649 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0872\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0645 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0835\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0583 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0842\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0657 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0869\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0590 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0940\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0668 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0824\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0575 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0902\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0575 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0857\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0659 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1002\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0601 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0797\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0611 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0831\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0621 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0780\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0599 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0804\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0602 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0914\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0624 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0767\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0600 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0760\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0564 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0757\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0585 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0949\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0608 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0803\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0576 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0740\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0534 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0951\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0666 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0721\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0546 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0819\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0510 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0899\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 1s 54ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0629 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0728\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0545 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0708\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0723\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0557 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0771\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0559 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1150\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0571 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0702\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0529 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0723\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0546 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0775\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0519 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0708\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0534 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0688\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0493 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0736\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0517 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0697\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0520 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0724\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0516 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1132\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0577 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0717\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0516 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0736\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0526 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0777\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0541 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0684\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0512 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0794\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0504 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0738\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0485 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0672\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0487 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0665\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0485 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0753\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0522 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0665\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0482 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0677\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0539 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0675\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0490 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0770\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0532 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0772\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0506 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0662\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0483 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0657\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0497 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0660\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0487 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0752\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0484 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0671\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0457 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0711\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0478 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0812\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0636\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0462 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0635\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0437 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0635\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0463 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0632\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0491 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0641\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0494 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0633\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0448 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0647\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0451 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0753\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0469 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0771\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0510 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0711\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0469 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0641\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0426 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0650\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0452 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0686\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0452 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0744\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0450 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0819\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0494 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0627\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0455 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0632\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0446 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0920\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0487 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0616\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0439 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0644\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0475 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0610\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0434 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0597\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0448 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0618\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0458 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0609\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0461 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0747\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0459 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0614\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0505 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0598\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0452 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0626\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0401 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0692\n",
            "Epoch 119/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0455 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0734\n",
            "Epoch 120/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0469 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0585\n",
            "Epoch 121/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0411 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0652\n",
            "Epoch 122/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0439 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0633\n",
            "Epoch 123/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0445 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0615\n",
            "Epoch 124/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0430 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0677\n",
            "Epoch 125/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0441 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0670\n",
            "Epoch 126/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0459 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0703\n",
            "Epoch 127/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0425 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0664\n",
            "Epoch 128/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0442 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0570\n",
            "Epoch 129/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0414 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0590\n",
            "Epoch 130/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0409 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0582\n",
            "Epoch 131/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0415 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0630\n",
            "Epoch 132/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0434 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0606\n",
            "Epoch 133/200\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0429 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0571\n",
            "Epoch 134/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0415 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0575\n",
            "Epoch 135/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0406 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0565\n",
            "Epoch 136/200\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0414 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0589\n",
            "Epoch 137/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0406 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0572\n",
            "Epoch 138/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0418 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0659\n",
            "Epoch 139/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0416 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0650\n",
            "Epoch 140/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0447 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0734\n",
            "Epoch 141/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0451 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0545\n",
            "Epoch 142/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0389 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0556\n",
            "Epoch 143/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0427 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0569\n",
            "Epoch 144/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0404 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0553\n",
            "Epoch 145/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0391 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0661\n",
            "Epoch 146/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0419 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0614\n",
            "Epoch 147/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0440 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0647\n",
            "Epoch 148/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0405 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0554\n",
            "Epoch 149/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0432 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0662\n",
            "Epoch 150/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0415 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0614\n",
            "Epoch 151/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0407 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0569\n",
            "Epoch 152/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0379 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0553\n",
            "Epoch 153/200\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0437 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0699\n",
            "Epoch 154/200\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0406 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0586\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6964<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "16c69a05296a410fa9ced3d594fee3a8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.40MB of 1.40MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105758-61v9i74w/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105758-61v9i74w/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>153</td></tr><tr><td>loss</td><td>0.00261</td></tr><tr><td>mean_squared_error</td><td>0.00261</td></tr><tr><td>mean_absolute_error</td><td>0.03911</td></tr><tr><td>val_loss</td><td>0.00563</td></tr><tr><td>val_mean_squared_error</td><td>0.00563</td></tr><tr><td>val_mean_absolute_error</td><td>0.05858</td></tr><tr><td>_runtime</td><td>65</td></tr><tr><td>_timestamp</td><td>1626260343</td></tr><tr><td>_step</td><td>153</td></tr><tr><td>best_val_loss</td><td>0.00529</td></tr><tr><td>best_epoch</td><td>143</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▆▆▅▅▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▆▆▅▅▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▇▆▅▅▄▄▄▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▅▄▅▅▄▃▃▃▄▄▂▂▂▂▅▂▂▂▂▂▁▁▂▂▁▁▂▂▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▅▄▅▅▄▃▃▃▄▄▂▂▂▂▅▂▂▂▂▂▁▁▂▂▁▁▂▂▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▆▅▅▆▆▅▄▄▃▅▅▃▃▂▂▇▂▂▂▃▃▂▂▃▂▂▂▃▂▂▂▁▁▂▁▂▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dazzling-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/61v9i74w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/61v9i74w</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: nctfovo0 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">vivid-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/nctfovo0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/nctfovo0</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_105917-nctfovo0</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 9s 90ms/step - loss: 0.1121 - mean_squared_error: 0.1121 - mean_absolute_error: 0.2449 - val_loss: 0.0491 - val_mean_squared_error: 0.0491 - val_mean_absolute_error: 0.1784\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0305 - mean_squared_error: 0.0305 - mean_absolute_error: 0.1315 - val_loss: 0.0282 - val_mean_squared_error: 0.0282 - val_mean_absolute_error: 0.1299\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0180 - mean_squared_error: 0.0180 - mean_absolute_error: 0.1025 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0952\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.0954 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1099\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0922 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0974\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0127 - mean_squared_error: 0.0127 - mean_absolute_error: 0.0861 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0945\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0831 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0958\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0802 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0804\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0728 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0770\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0728 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0814\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0696 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0849\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0641 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0824\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0650 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0796\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0642 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0742\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0619 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0786\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0617 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0689\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0598 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0755\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0622 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0682\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0583 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0652\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0607 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0761\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0595 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0630\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0613 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0646\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0522 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0888\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0627 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0592\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0554 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0641\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0532 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0580\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0539 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0594\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0544 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0569\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0540 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0554\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0526 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0591\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0472 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0601\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0496 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0537\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0508 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0646\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0545 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0565\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0537 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0561\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0513 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0527\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0515 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0524\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0524 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0524\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0498 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0551\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0490 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0520\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0465 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0515\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0537 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0595\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0511 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0498\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0469 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0663\n",
            "Epoch 45/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0534 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0476\n",
            "Epoch 46/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0507 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0494\n",
            "Epoch 47/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0496 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0520\n",
            "Epoch 48/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0460 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0576\n",
            "Epoch 49/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0511 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0453\n",
            "Epoch 50/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0472 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0489\n",
            "Epoch 51/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0479 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0706\n",
            "Epoch 52/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0542 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0457\n",
            "Epoch 53/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0458 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0467\n",
            "Epoch 54/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0502 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 55/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0477 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0472\n",
            "Epoch 56/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0471 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0470\n",
            "Epoch 57/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0455 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0550\n",
            "Epoch 58/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0435\n",
            "Epoch 59/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0519 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0580\n",
            "Epoch 60/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0488 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0577\n",
            "Epoch 61/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0489 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0447\n",
            "Epoch 62/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0476 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0524\n",
            "Epoch 63/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0460 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0499\n",
            "Epoch 64/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0493 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0438\n",
            "Epoch 65/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0474 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0612\n",
            "Epoch 66/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0470 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0439\n",
            "Epoch 67/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0479 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0442\n",
            "Epoch 68/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0463 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0452\n",
            "Epoch 69/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0466 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0431\n",
            "Epoch 70/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0471 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0517\n",
            "Epoch 71/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0464 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0495\n",
            "Epoch 72/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0465 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0502\n",
            "Epoch 73/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0501 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0437\n",
            "Epoch 74/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0501 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 75/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0536 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0448\n",
            "Epoch 76/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0459 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0530\n",
            "Epoch 77/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0462 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 78/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0439 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 79/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0470 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 80/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0483 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0500\n",
            "Epoch 81/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0447 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0489\n",
            "Epoch 82/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0469 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0419\n",
            "Epoch 83/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0438 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0430\n",
            "Epoch 84/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0451 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0420\n",
            "Epoch 85/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0438 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 86/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0449 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0499\n",
            "Epoch 87/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0503 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0439\n",
            "Epoch 88/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0430 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0412\n",
            "Epoch 89/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0455 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0441\n",
            "Epoch 90/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0463 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0417\n",
            "Epoch 91/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0452 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0471\n",
            "Epoch 92/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0450 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0488\n",
            "Epoch 93/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0449 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 94/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0471 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0522\n",
            "Epoch 95/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0463 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0405\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7481<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e82f88c57ae74dfa91b4030724b10763",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.92MB of 0.92MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105917-nctfovo0/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_105917-nctfovo0/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>94</td></tr><tr><td>loss</td><td>0.0035</td></tr><tr><td>mean_squared_error</td><td>0.0035</td></tr><tr><td>mean_absolute_error</td><td>0.04505</td></tr><tr><td>val_loss</td><td>0.00288</td></tr><tr><td>val_mean_squared_error</td><td>0.00288</td></tr><tr><td>val_mean_absolute_error</td><td>0.04049</td></tr><tr><td>_runtime</td><td>80</td></tr><tr><td>_timestamp</td><td>1626260437</td></tr><tr><td>_step</td><td>94</td></tr><tr><td>best_val_loss</td><td>0.00288</td></tr><tr><td>best_epoch</td><td>84</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▃▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">vivid-sweep-21</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/nctfovo0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/nctfovo0</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4r4hwxy4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">light-sweep-22</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/sweeps/k77xxqx9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/4r4hwxy4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/4r4hwxy4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210714_110102-4r4hwxy4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 9s 72ms/step - loss: 0.2034 - mean_squared_error: 0.2034 - mean_absolute_error: 0.3495 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1155\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.1005 - val_loss: 0.0205 - val_mean_squared_error: 0.0205 - val_mean_absolute_error: 0.1065\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - mean_absolute_error: 0.0983 - val_loss: 0.0310 - val_mean_squared_error: 0.0310 - val_mean_absolute_error: 0.1326\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0957 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1071\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0930 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1028\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.0936 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1028\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0846 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1173\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0901 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1030\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0852 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0988\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0832 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1104\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0889 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0996\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 1s 37ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0834 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0987\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0865 - val_loss: 0.0258 - val_mean_squared_error: 0.0258 - val_mean_absolute_error: 0.1235\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - mean_absolute_error: 0.0877 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1074\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0806 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0979\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0799 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1026\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0777 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0956\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0813 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0981\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0764 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0914\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0776 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0932\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0792 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0907\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0734 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1170\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0780 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0886\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0735 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0882\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0704 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0879\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0725 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0902\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0707 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0868\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0708 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0863\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0699 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0879\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0735 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1125\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0689 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0864\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0656 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1000\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0687 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0853\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0658 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0854\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0638 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0836\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0692 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0840\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0633 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0831\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0657 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0831\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0655 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0817\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0640 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0814\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0622 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0822\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0678 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0812\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0607 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0800\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0665 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0795\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0658 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0795\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0586 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0790\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0647 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0781\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0595 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0769\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0597 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0785\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0634 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0763\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7821<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "520d5088389741949899f064e9980f21",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.83MB of 1.83MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_110102-4r4hwxy4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_110102-4r4hwxy4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00652</td></tr><tr><td>mean_squared_error</td><td>0.00652</td></tr><tr><td>mean_absolute_error</td><td>0.06175</td></tr><tr><td>val_loss</td><td>0.00943</td></tr><tr><td>val_mean_squared_error</td><td>0.00943</td></tr><tr><td>val_mean_absolute_error</td><td>0.07628</td></tr><tr><td>_runtime</td><td>50</td></tr><tr><td>_timestamp</td><td>1626260512</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00943</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▅█▅▄▆▄▄▄▃▆▅▄▃▃▃▃▅▂▂▃▂▂▂▂▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▅▅█▅▄▆▄▄▄▃▆▅▄▃▃▃▃▅▂▂▃▂▂▂▂▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆▅█▅▄▆▄▄▄▄▇▅▄▃▄▃▃▆▃▂▃▂▂▂▂▄▂▂▂▂▂▂▂▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">light-sweep-22</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/4r4hwxy4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/4r4hwxy4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: otd0huvb with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n",
            "Failed to detect the name of this notebook, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable to enable code saving.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gFTu29dbi18i"
      },
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwsO8cDJPMdj",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7d8ab276-28ca-4dbf-a98b-8e843eb1854a"
      },
      "source": [
        "# picking the best values\n",
        "best_config = {\n",
        "    'epochs': 200,\n",
        "    'batch_size': 64,\n",
        "    'dropout': 0.2,\n",
        "    'input_size': 100,\n",
        "    'hidden_size': 50,\n",
        "    'learning_rate': 0.005,\n",
        "    'optimizer': 'adam',\n",
        "    'activation': 'tanh'\n",
        "}"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0565 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0789\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0574 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0739\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0570 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0731\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0578 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0803\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0556 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0752\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0552 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0739\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0543 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0734\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0549 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0725\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0560 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0722\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0557 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0721\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0553 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0721\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0546 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0726\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0514 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0738\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0552 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0719\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0538 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0735\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0560 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0720\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0557 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0712\n",
            "Epoch 119/200\n",
            " 8/16 [==============>...............] - ETA: 0s - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0564"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "7cf60635-6696-48d0-b809-0dd4d11c0fb0"
      },
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# input layer\n",
        "model.add(LSTM(units=best_config['input_size'], return_sequences=True, input_shape=(window_len, 1), activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# second model layer with dropout\n",
        "model.add(LSTM(units=best_config['hidden_size'], return_sequences=True, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# third model layer with dropout\n",
        "model.add(LSTM(units=best_config['hidden_size'], return_sequences=True, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# fourth model layer with dropout\n",
        "model.add(LSTM(units=best_config['hidden_size'], activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# final layer with one output\n",
        "model.add(Dense(units=1))\n",
        "\n",
        "# defining the optimiser\n",
        "if best_config['optimizer'] == 'sgd':\n",
        "  optimizer = SGD(learning_rate=best_config['learning_rate'], decay=1e-5, momentum=0.9, nesterov=True)\n",
        "elif best_config['optimizer'] == 'rmsprop':\n",
        "  optimizer = RMSprop(learning_rate=best_config['learning_rate'], decay=1e-5)\n",
        "elif best_config['optimizer'] == 'adam':\n",
        "  optimizer = Adam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "elif best_config['optimizer'] == 'nadam':\n",
        "  optimizer = Nadam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0455 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0641\n",
            "Epoch 186/200\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0464 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0662\n",
            "Epoch 187/200\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0435 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0656\n",
            "Epoch 188/200\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0466 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0643\n",
            "Epoch 189/200\n",
            " 7/16 [============>.................] - ETA: 0s - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0437Total number of trainable parameters:  111451\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0445 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0636\n",
            "Epoch 190/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0452 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0644\n",
            "Epoch 191/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0447 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0665\n",
            "Epoch 192/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0478 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0630\n",
            "Epoch 193/200\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0458 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0659\n",
            "Epoch 194/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0455 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0643\n",
            "Epoch 195/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0625\n",
            "Epoch 196/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0479 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0639\n",
            "Epoch 197/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0436 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0645\n",
            "Epoch 198/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0450 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0625\n",
            "Epoch 199/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0682\n",
            "Epoch 200/200\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0459 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0651\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "385925fb55b94d1b8f7712e1ad7a0161",
            "2caa3f414ffe479797f29618de7195e9",
            "f5b9ff5e1fe4479e9f988952b43e072a",
            "f230f5a5de414f5f8dfce0bbd65704cf",
            "077dea6c365e4dcc840fb41cba373a10",
            "dc9a97b288954d9a8461be46822766b4",
            "b9217f41428a4048a696f6f0f5fa3fe4",
            "32eed004bb8248b6b0ed199a9411d560"
          ]
        },
        "id": "W3v718GcE39o",
        "outputId": "55ae3713-09f7-4eb1-e9a6-21726d170df4"
      },
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=best_config['epochs'], batch_size=best_config['batch_size'])"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "20/20 [==============================] - 6s 14ms/step - loss: 0.1826\n",
            "Epoch 2/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0168\n",
            "Epoch 3/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0096\n",
            "Epoch 4/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0071\n",
            "Epoch 5/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0076\n",
            "Epoch 6/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0068\n",
            "Epoch 7/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0060\n",
            "Epoch 8/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0056\n",
            "Epoch 9/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0057\n",
            "Epoch 10/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0051\n",
            "Epoch 11/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0057\n",
            "Epoch 12/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0066\n",
            "Epoch 13/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0047\n",
            "Epoch 14/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0047\n",
            "Epoch 15/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0042\n",
            "Epoch 16/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0040\n",
            "Epoch 17/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0038\n",
            "Epoch 18/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0045\n",
            "Epoch 19/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0047\n",
            "Epoch 20/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0041\n",
            "Epoch 21/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0038\n",
            "Epoch 22/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0036\n",
            "Epoch 23/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0035\n",
            "Epoch 24/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0035\n",
            "Epoch 25/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0030\n",
            "Epoch 26/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0029\n",
            "Epoch 27/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0032\n",
            "Epoch 28/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0034\n",
            "Epoch 29/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0033\n",
            "Epoch 30/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0030\n",
            "Epoch 31/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0031\n",
            "Epoch 32/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0029\n",
            "Epoch 33/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0029\n",
            "Epoch 34/200\n",
            "20/20 [==============================] - 0s 21ms/step - loss: 0.0028\n",
            "Epoch 35/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0027\n",
            "Epoch 36/200\n",
            "16/20 [=======================>......] - ETA: 0s - loss: 0.0029"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 8028<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "20/20 [==============================] - 0s 16ms/step - loss: 0.0028\n",
            "Epoch 37/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0023\n",
            "Epoch 38/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0025\n",
            "Epoch 39/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0024\n",
            "Epoch 40/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0024\n",
            "Epoch 41/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0023\n",
            "Epoch 42/200\n",
            " 1/20 [>.............................] - ETA: 0s - loss: 0.0019"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "385925fb55b94d1b8f7712e1ad7a0161",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.74MB of 3.74MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "20/20 [==============================] - 0s 16ms/step - loss: 0.0021\n",
            "Epoch 43/200\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0021\n",
            "Epoch 44/200\n",
            "20/20 [==============================] - 0s 16ms/step - loss: 0.0023\n",
            "Epoch 45/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0025\n",
            "Epoch 46/200\n",
            "20/20 [==============================] - 0s 16ms/step - loss: 0.0023\n",
            "Epoch 47/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0022\n",
            "Epoch 48/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0021\n",
            "Epoch 49/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0020\n",
            "Epoch 50/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0021\n",
            "Epoch 51/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0020\n",
            "Epoch 52/200\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0022\n",
            "Epoch 53/200\n",
            " 7/20 [=========>....................] - ETA: 0s - loss: 0.0020"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_110210-otd0huvb/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210714_110210-otd0huvb/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00398</td></tr><tr><td>mean_squared_error</td><td>0.00398</td></tr><tr><td>mean_absolute_error</td><td>0.04813</td></tr><tr><td>val_loss</td><td>0.00703</td></tr><tr><td>val_mean_squared_error</td><td>0.00703</td></tr><tr><td>val_mean_absolute_error</td><td>0.06514</td></tr><tr><td>_runtime</td><td>72</td></tr><tr><td>_timestamp</td><td>1626260602</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00672</td></tr><tr><td>best_epoch</td><td>197</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▄▃▃▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▆▅▅▇▄▄▄▅▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▆▅▅▇▄▄▄▅▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▅▅▆▄▄▄▄▄▄▃▃▃▃▃▂▃▂▃▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 4 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sweepy-sweep-23</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/otd0huvb\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM/runs/otd0huvb</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0020\n",
            "Epoch 54/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n",
            "Epoch 55/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0021\n",
            "Epoch 56/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0019\n",
            "Epoch 57/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0021\n",
            "Epoch 58/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n",
            "Epoch 59/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n",
            "Epoch 60/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0019\n",
            "Epoch 61/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0019\n",
            "Epoch 62/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n",
            "Epoch 63/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0017\n",
            "Epoch 64/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n",
            "Epoch 65/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 66/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n",
            "Epoch 67/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 68/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 69/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0018\n",
            "Epoch 70/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 71/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0021\n",
            "Epoch 72/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 73/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 74/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 75/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 76/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 77/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 78/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0022\n",
            "Epoch 79/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 80/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 81/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 82/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0019\n",
            "Epoch 83/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 84/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0015\n",
            "Epoch 85/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0016\n",
            "Epoch 86/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 87/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 88/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 89/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 90/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 91/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 92/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0017\n",
            "Epoch 93/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n",
            "Epoch 94/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 95/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 96/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0015\n",
            "Epoch 97/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0014\n",
            "Epoch 98/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 99/200\n",
            "20/20 [==============================] - 0s 16ms/step - loss: 0.0016\n",
            "Epoch 100/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0014\n",
            "Epoch 101/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 102/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0017\n",
            "Epoch 103/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0014\n",
            "Epoch 104/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0015\n",
            "Epoch 105/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 106/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 107/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 108/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 109/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 110/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0015\n",
            "Epoch 111/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 112/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 113/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 114/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 115/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 116/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 117/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 118/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0015\n",
            "Epoch 119/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0014\n",
            "Epoch 120/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0012\n",
            "Epoch 121/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 122/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 123/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 124/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0015\n",
            "Epoch 125/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0013\n",
            "Epoch 126/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 127/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 128/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 129/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 130/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 131/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0012\n",
            "Epoch 132/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 133/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 134/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 135/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 136/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 137/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 138/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 139/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 140/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0014\n",
            "Epoch 141/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0013\n",
            "Epoch 142/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0015\n",
            "Epoch 143/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 144/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0015\n",
            "Epoch 145/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 146/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 147/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0012\n",
            "Epoch 148/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0015\n",
            "Epoch 149/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 150/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 151/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0013\n",
            "Epoch 152/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 153/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0014\n",
            "Epoch 154/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 155/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 156/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0012\n",
            "Epoch 157/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 158/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 159/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 160/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 161/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 162/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 163/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 164/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0012\n",
            "Epoch 165/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 166/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 167/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 168/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 169/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0012\n",
            "Epoch 170/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0014\n",
            "Epoch 171/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 172/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0019\n",
            "Epoch 173/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 174/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 175/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0012\n",
            "Epoch 176/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0012\n",
            "Epoch 177/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0013\n",
            "Epoch 178/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 179/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 180/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0017\n",
            "Epoch 181/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 182/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 183/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 184/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 185/200\n",
            "20/20 [==============================] - 0s 13ms/step - loss: 0.0013\n",
            "Epoch 186/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0012\n",
            "Epoch 187/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 188/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 189/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 190/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0012\n",
            "Epoch 191/200\n",
            "20/20 [==============================] - 0s 15ms/step - loss: 0.0015\n",
            "Epoch 192/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0022\n",
            "Epoch 193/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0016\n",
            "Epoch 194/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0015\n",
            "Epoch 195/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 196/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0013\n",
            "Epoch 197/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0011\n",
            "Epoch 198/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 199/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0014\n",
            "Epoch 200/200\n",
            "20/20 [==============================] - 0s 14ms/step - loss: 0.0018\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f73b630db50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rTXJN51l9Y-F"
      },
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H-D-XHyRjFMp"
      },
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "05be8d2d-f441-4931-bbca-7fccf0cc4d81"
      },
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "dd856adc-3db5-47ab-df26-38a80bfef7cb"
      },
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "4ee4ede1-1ed6-4a8c-f969-768b2ad875cd"
      },
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MSE:  0.0034582120637364146\n",
            "RMSE:  0.058806564801358825\n",
            "MAE:  0.04729168276386314\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "15e2803e-3486-4de7-c273-a0f265f23aa4"
      },
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE:'+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n')\n",
        "error_file.close()"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive/\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:absl:Found untraced functions such as lstm_cell_layer_call_fn, lstm_cell_layer_call_and_return_conditional_losses, lstm_cell_1_layer_call_fn, lstm_cell_1_layer_call_and_return_conditional_losses, lstm_cell_2_layer_call_fn while saving (showing 5 of 20). These functions will not be directly callable after loading.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/LSTM_Cu/assets\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/LSTM_Cu/assets\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}