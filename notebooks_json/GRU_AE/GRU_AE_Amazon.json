{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "GRU_AE_Amazon.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyO68VKTT5DhskSJnC8CDILA",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "78abf94921914b43b3501b2387831349": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_cd15cfac37de4d99827540582d6ceec4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b480879bc6a84a8f9bd52cbd744c88ce",
              "IPY_MODEL_68d0fef7e0c0465ba37470cbd7f6b783"
            ]
          }
        },
        "cd15cfac37de4d99827540582d6ceec4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b480879bc6a84a8f9bd52cbd744c88ce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d7ef98ff22c9445e8278d42c390d6272",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.52MB of 2.52MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_335ff7b72c45496a85b79f8dcd1b332f"
          }
        },
        "68d0fef7e0c0465ba37470cbd7f6b783": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9a11598e11a84178a6656751d9c6b240",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_27f4859f8fb9409284e06ca83619adf9"
          }
        },
        "d7ef98ff22c9445e8278d42c390d6272": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "335ff7b72c45496a85b79f8dcd1b332f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9a11598e11a84178a6656751d9c6b240": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "27f4859f8fb9409284e06ca83619adf9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f964621b66434aff8d8ee59cf75b05a6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3ed055bc27fe4b5a936bf05492013c5f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b3c0553b400e4c87a8a815241918a011",
              "IPY_MODEL_1db59c87e5284c88af74ef355d0a7f0b"
            ]
          }
        },
        "3ed055bc27fe4b5a936bf05492013c5f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b3c0553b400e4c87a8a815241918a011": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_321c6407deb74a899dde970934ba3e30",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.54MB of 2.54MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_40cb90048be9495a90b1bf2b2ef495cf"
          }
        },
        "1db59c87e5284c88af74ef355d0a7f0b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_584d11cf17d849bb83fa66a7b0ca5d0d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3e03ffbef13c4f3782931b2718512c23"
          }
        },
        "321c6407deb74a899dde970934ba3e30": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "40cb90048be9495a90b1bf2b2ef495cf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "584d11cf17d849bb83fa66a7b0ca5d0d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3e03ffbef13c4f3782931b2718512c23": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "739097ca53b842c98901676440201c1a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c755d9826dc14e259c81bef7fb66c830",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ef5dd3e5c4e84aa7bcfc5103a4942393",
              "IPY_MODEL_53f2eda1e78141c3971dbe5fff73f3bc"
            ]
          }
        },
        "c755d9826dc14e259c81bef7fb66c830": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ef5dd3e5c4e84aa7bcfc5103a4942393": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f316af887d814086b90308bc1e3392aa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.61MB of 2.61MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3828130e40564df3847a392b3223b05e"
          }
        },
        "53f2eda1e78141c3971dbe5fff73f3bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_998554132ae84685a30b85d1719615c3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_74ec0859c1b04a3bbe58e267c0d009a9"
          }
        },
        "f316af887d814086b90308bc1e3392aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3828130e40564df3847a392b3223b05e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "998554132ae84685a30b85d1719615c3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "74ec0859c1b04a3bbe58e267c0d009a9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9ae73cf55d7440e297ca1032f68feeba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_df1f4f9792fa45fd8cbbf219d108e22e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_c3cff1380a354329ac408054a6e4a090",
              "IPY_MODEL_f6a18bc90dac4241aa9b02e773600e35"
            ]
          }
        },
        "df1f4f9792fa45fd8cbbf219d108e22e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c3cff1380a354329ac408054a6e4a090": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_405c814c9e1648469a9b96a9e8c65efa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.86MB of 1.86MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5b89e608ffb24bf3b51519cc96fc3185"
          }
        },
        "f6a18bc90dac4241aa9b02e773600e35": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c2692de02a4c4a6e8a30d4c9d48c88dc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_087c0de07067421ea30ef80f31eb4d7b"
          }
        },
        "405c814c9e1648469a9b96a9e8c65efa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5b89e608ffb24bf3b51519cc96fc3185": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c2692de02a4c4a6e8a30d4c9d48c88dc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "087c0de07067421ea30ef80f31eb4d7b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "89d0091184ac4e73a227d2ee4550cdf9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b3a035e4936c41ea8885b47b9f12af5c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2a9034053abf43b6a4bea0cfc2ff22fd",
              "IPY_MODEL_a107074f1630475ebdcfd96e131523ba"
            ]
          }
        },
        "b3a035e4936c41ea8885b47b9f12af5c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2a9034053abf43b6a4bea0cfc2ff22fd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_a3eaff49c69c45dab80b04fa402cb49f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.63MB of 2.63MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_cbdee13af70c4965995ac4d62ebff3b3"
          }
        },
        "a107074f1630475ebdcfd96e131523ba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f32cf02f2783413c92aed78d76b43d63",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f26ce5bfefa0413ab714e82e86d5de9f"
          }
        },
        "a3eaff49c69c45dab80b04fa402cb49f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "cbdee13af70c4965995ac4d62ebff3b3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f32cf02f2783413c92aed78d76b43d63": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f26ce5bfefa0413ab714e82e86d5de9f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3cc528aa8f384b5f82f2fcdc6a297a7d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7c123b6e10194751ba78dff34e72ed2b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6b1228a43bae46b4b37b8ca7496f019d",
              "IPY_MODEL_a505e223826a432987bcecf75b9fc619"
            ]
          }
        },
        "7c123b6e10194751ba78dff34e72ed2b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6b1228a43bae46b4b37b8ca7496f019d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_575d977dabcc46dfbedee740ec454a83",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.91MB of 1.91MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d065ffe8ba71459888216ab9ab8506a5"
          }
        },
        "a505e223826a432987bcecf75b9fc619": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a839c9f4033f4d7daef174badae2d357",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f07127fc8b05485692841e85030ccb29"
          }
        },
        "575d977dabcc46dfbedee740ec454a83": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d065ffe8ba71459888216ab9ab8506a5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a839c9f4033f4d7daef174badae2d357": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f07127fc8b05485692841e85030ccb29": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "439fa2b8e89949e0901063d0d50ef2a6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_37927564d9134a5d89b9496c2b5fbbc6",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e53bc69bab7a428e8046c7faee197a72",
              "IPY_MODEL_2ca9502212a8400f8c59ff50c5d8118b"
            ]
          }
        },
        "37927564d9134a5d89b9496c2b5fbbc6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e53bc69bab7a428e8046c7faee197a72": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6d10e26fab684518b264ce2909c62c8e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.94MB of 1.94MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_21e99a01a3fe4fcebf2d835a19f4b302"
          }
        },
        "2ca9502212a8400f8c59ff50c5d8118b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c9d226283c3d40829017e11ad8b37475",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_291151636c6d443ea5244afe1534f3b2"
          }
        },
        "6d10e26fab684518b264ce2909c62c8e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "21e99a01a3fe4fcebf2d835a19f4b302": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c9d226283c3d40829017e11ad8b37475": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "291151636c6d443ea5244afe1534f3b2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8d65b0d6d1124068b9e22c0e3ec018dd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c107eb2254e94b689bd7a0921b8aa829",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_c92c94ab20eb4e9dbcd0b54081eb4693",
              "IPY_MODEL_59c00b7649024a8b90f587f1910c1307"
            ]
          }
        },
        "c107eb2254e94b689bd7a0921b8aa829": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c92c94ab20eb4e9dbcd0b54081eb4693": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8cd74fcee6f14e238bf0dd20e1f75757",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.67MB of 2.67MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5f720286b0014eb3babe79e360355249"
          }
        },
        "59c00b7649024a8b90f587f1910c1307": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_800ba759ff804f9d92eb032b9aa9af7f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9b034a8e0c7347179cba49d3499d0458"
          }
        },
        "8cd74fcee6f14e238bf0dd20e1f75757": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5f720286b0014eb3babe79e360355249": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "800ba759ff804f9d92eb032b9aa9af7f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9b034a8e0c7347179cba49d3499d0458": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b15c622ebd5a4ca89243d43a580050d0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6fdc589bf9c24035985ecaed228fa883",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2fa5ed4e94f943d48ccaf681e0996b70",
              "IPY_MODEL_9f14f3b5eaf34ac4884b5ba2e3be6ff2"
            ]
          }
        },
        "6fdc589bf9c24035985ecaed228fa883": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2fa5ed4e94f943d48ccaf681e0996b70": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b2bc44d8a71b4b2bb714554468b3c36a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.68MB of 2.68MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_171473c23006494f9c1902e145c3d09b"
          }
        },
        "9f14f3b5eaf34ac4884b5ba2e3be6ff2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_05b7d3888b3b46ca8acb1cec2afc8c11",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3fa709a844594bb5b65a1bdd2059cd0b"
          }
        },
        "b2bc44d8a71b4b2bb714554468b3c36a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "171473c23006494f9c1902e145c3d09b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "05b7d3888b3b46ca8acb1cec2afc8c11": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3fa709a844594bb5b65a1bdd2059cd0b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "109ccbb3460d4b1d865b009555731e6e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_970b9971cd0f4694be06646f12445621",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_679b317341df43548acf20ab9b7c03e4",
              "IPY_MODEL_5ba723c4e3e74c9c9358dc40de9efeb9"
            ]
          }
        },
        "970b9971cd0f4694be06646f12445621": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "679b317341df43548acf20ab9b7c03e4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_cbe2808c9cb94c5fa77fd937ce1b32fa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.74MB of 2.74MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1b78cc5d5757415684bd59ae17941028"
          }
        },
        "5ba723c4e3e74c9c9358dc40de9efeb9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f3488518658541f79d9fc1cbb687e916",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b42a0c0958fe4012b963f684128e6306"
          }
        },
        "cbe2808c9cb94c5fa77fd937ce1b32fa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1b78cc5d5757415684bd59ae17941028": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f3488518658541f79d9fc1cbb687e916": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b42a0c0958fe4012b963f684128e6306": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "aafdb13eab284d40a35c5cf0b7352694": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_56253643acaa43118a38e0ecb4ae6333",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4dbb5a1e600c47eeb041c7183bef0646",
              "IPY_MODEL_949ff8565c014fa6960ecb4e1b79eeee"
            ]
          }
        },
        "56253643acaa43118a38e0ecb4ae6333": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4dbb5a1e600c47eeb041c7183bef0646": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_343d9e30073a4a13adfe0603e79398bc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.04MB of 2.04MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8a327551d4104481a8e98e7d16a7a635"
          }
        },
        "949ff8565c014fa6960ecb4e1b79eeee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_27291db80c854d138ef2d1d5d80b9f81",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_78c68fc4fd8e4c20be44c29202adcdea"
          }
        },
        "343d9e30073a4a13adfe0603e79398bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8a327551d4104481a8e98e7d16a7a635": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "27291db80c854d138ef2d1d5d80b9f81": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "78c68fc4fd8e4c20be44c29202adcdea": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ebf3acb5c8b548b18ed7b06ecd86ffaf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_8d60755069414522a2f9772dee735ff6",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_49f61175ab62472f809c3b7d802b0078",
              "IPY_MODEL_cb34a0bb083f4ba3aa6fe92b6a4d5c6e"
            ]
          }
        },
        "8d60755069414522a2f9772dee735ff6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "49f61175ab62472f809c3b7d802b0078": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_74d99d53881844a0bd83b6051549f0cc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.76MB of 2.76MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3b8a88dffe644b85bcbbf0992b5de967"
          }
        },
        "cb34a0bb083f4ba3aa6fe92b6a4d5c6e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ba6694b920fe4f8f8bf7f64c8d0b881a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_750ad9595db94c2fbef36423ffb53c2f"
          }
        },
        "74d99d53881844a0bd83b6051549f0cc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3b8a88dffe644b85bcbbf0992b5de967": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ba6694b920fe4f8f8bf7f64c8d0b881a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "750ad9595db94c2fbef36423ffb53c2f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a870ead8388440df8dcb3e20cc2bcf21": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_97438b2490aa43da806dfd434252007e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3c5437b81e5b4141bc4645c708dfae39",
              "IPY_MODEL_21407737f42a49fdbb5cb9dead6da424"
            ]
          }
        },
        "97438b2490aa43da806dfd434252007e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3c5437b81e5b4141bc4645c708dfae39": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ebd2aa43176a47d397479df3d9013ce4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.82MB of 2.82MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d6921f467b0344c9a12031b4489c139a"
          }
        },
        "21407737f42a49fdbb5cb9dead6da424": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_736d6c0152564663b510e39f1c9f0554",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7b439b619bba40c0a64b2599570d89e6"
          }
        },
        "ebd2aa43176a47d397479df3d9013ce4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d6921f467b0344c9a12031b4489c139a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "736d6c0152564663b510e39f1c9f0554": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7b439b619bba40c0a64b2599570d89e6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e3d98113942b4c1fa06f0a0bab1064e2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_401b5afb8c7846929d9a189afde2b341",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_15d224e9ae854323be1c135c161f8f1f",
              "IPY_MODEL_07412e97ca9d4d8a89b71c5723af2029"
            ]
          }
        },
        "401b5afb8c7846929d9a189afde2b341": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "15d224e9ae854323be1c135c161f8f1f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_58e1682279d5407c9acf9b294cb2efcc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.84MB of 2.84MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_df6f1be89f114e7bbdcd54c6cbf011ab"
          }
        },
        "07412e97ca9d4d8a89b71c5723af2029": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3c2a81a1751f46d59bebdf70a3ae685d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_82d560992f98406b86b9949cb1038650"
          }
        },
        "58e1682279d5407c9acf9b294cb2efcc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "df6f1be89f114e7bbdcd54c6cbf011ab": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3c2a81a1751f46d59bebdf70a3ae685d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "82d560992f98406b86b9949cb1038650": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1096549ebc3e49028889079c1d1ba3a8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7a2ecf9cc13b4bd39968286d40d72e43",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3e670401892044d4a6c544365cdaf04f",
              "IPY_MODEL_eb7e9f844ab24436a149f16347833165"
            ]
          }
        },
        "7a2ecf9cc13b4bd39968286d40d72e43": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3e670401892044d4a6c544365cdaf04f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_00a62699b2fd46b98bc6f13566e5cbc8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.86MB of 2.86MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1729e2bd82f842dc980b2afdb96e341a"
          }
        },
        "eb7e9f844ab24436a149f16347833165": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_031ea4f5da584fc7b21cf38f7651010c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b9d1e8426bd7482585691a600c451c8d"
          }
        },
        "00a62699b2fd46b98bc6f13566e5cbc8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1729e2bd82f842dc980b2afdb96e341a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "031ea4f5da584fc7b21cf38f7651010c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b9d1e8426bd7482585691a600c451c8d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e89814e1ba7e4352a731217181914b8e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0d1c3ea76d624fe6a57b82b01f56b149",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a1817c91e933496c8155b24af2172f79",
              "IPY_MODEL_025ca8a35a5b409c9539af5b9bed9ff4"
            ]
          }
        },
        "0d1c3ea76d624fe6a57b82b01f56b149": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a1817c91e933496c8155b24af2172f79": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_47cffbda3b2340c5a710336fc0dcefd3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.87MB of 2.87MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6b2f345376af47f6aa1adfc8d1b5a999"
          }
        },
        "025ca8a35a5b409c9539af5b9bed9ff4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2c82093a0fd0470abaf5bffb69688309",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_42734661626e4b379b860571048dbae4"
          }
        },
        "47cffbda3b2340c5a710336fc0dcefd3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6b2f345376af47f6aa1adfc8d1b5a999": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2c82093a0fd0470abaf5bffb69688309": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "42734661626e4b379b860571048dbae4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3ad0bbcbbf4c46929772f189d52fff0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_075bc8e720a54901bdea1a053442b39c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_1ffb2ed36e584579ab34dde82b5f9e00",
              "IPY_MODEL_3d4708a3c7c44a20a13eab6e5084a8b4"
            ]
          }
        },
        "075bc8e720a54901bdea1a053442b39c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1ffb2ed36e584579ab34dde82b5f9e00": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_c67f3b588840480bb963453af24ed0d3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.89MB of 2.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_485bcdd95ecb4815bc06fb0c8e6ff786"
          }
        },
        "3d4708a3c7c44a20a13eab6e5084a8b4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_7809ca3ca5164cb09d30a7a682e1b707",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c2e42cf404c24e9da51121b3d0a2af6b"
          }
        },
        "c67f3b588840480bb963453af24ed0d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "485bcdd95ecb4815bc06fb0c8e6ff786": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7809ca3ca5164cb09d30a7a682e1b707": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c2e42cf404c24e9da51121b3d0a2af6b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a949a3ba94454da39a975bdf094a2408": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6dd546221cf2407d9a77b30ab140019e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ab4a87970852460bbd8186fedbb9130c",
              "IPY_MODEL_1ab5ef9dd1e748f69587b36670ad5643"
            ]
          }
        },
        "6dd546221cf2407d9a77b30ab140019e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ab4a87970852460bbd8186fedbb9130c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_5467c9108800472ca089f30d529a361b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.91MB of 2.91MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_35a337ac1d714f4ba16df6642b45b2cb"
          }
        },
        "1ab5ef9dd1e748f69587b36670ad5643": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_931c79a5eb20492b9de9df461dd4f934",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ab21c66c59624063893dc0332829707a"
          }
        },
        "5467c9108800472ca089f30d529a361b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "35a337ac1d714f4ba16df6642b45b2cb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "931c79a5eb20492b9de9df461dd4f934": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ab21c66c59624063893dc0332829707a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0e6d1916fd014f9a8d6cb7fe85250c8d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_599cf463c738498782d05c37b4692547",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6236a109da754cf19b690d43301078f2",
              "IPY_MODEL_5f2966a5450e49c287f15d8b24237c42"
            ]
          }
        },
        "599cf463c738498782d05c37b4692547": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6236a109da754cf19b690d43301078f2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_7cdc2f5f2b064d4d8b0beadb812f391b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.94MB of 2.94MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ce4346c5909447b694f2404287834d1b"
          }
        },
        "5f2966a5450e49c287f15d8b24237c42": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2e2403970c7c4ec293e399cbca49b5cd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1be5efac203c4a3f9478805286d282ce"
          }
        },
        "7cdc2f5f2b064d4d8b0beadb812f391b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ce4346c5909447b694f2404287834d1b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2e2403970c7c4ec293e399cbca49b5cd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1be5efac203c4a3f9478805286d282ce": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c9d75c71eafc4fd5b35991a9ca99971d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_17d20c7d9b474ea584ba351ccba0db1b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d74ff5414a6640c0b1436870eebd46c7",
              "IPY_MODEL_db073563afbb4a3a955a07b78bda2e4c"
            ]
          }
        },
        "17d20c7d9b474ea584ba351ccba0db1b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d74ff5414a6640c0b1436870eebd46c7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_a2764f8167554417b801b9148a2fa6c0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.95MB of 2.95MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ea150eaf8c7d4f03bb6c2c66554270f1"
          }
        },
        "db073563afbb4a3a955a07b78bda2e4c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a22798eb25aa448baa5a4b0b66ce957b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_43a7779fa80145ca8c7115878829b2a7"
          }
        },
        "a2764f8167554417b801b9148a2fa6c0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ea150eaf8c7d4f03bb6c2c66554270f1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a22798eb25aa448baa5a4b0b66ce957b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "43a7779fa80145ca8c7115878829b2a7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d5e82e75986644a58cd7b5d3d873ef16": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_969a06c2a6c14a3588b5a51c8c81928a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9d2506e0ec8b4467940ca9accddb1646",
              "IPY_MODEL_262b155cf4b84f2f9da5d8a4a8368c39"
            ]
          }
        },
        "969a06c2a6c14a3588b5a51c8c81928a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9d2506e0ec8b4467940ca9accddb1646": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_0ae2bf2a4b6d4f43bae57e226a5cc653",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.96MB of 2.96MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ad92622314de4166a255c4badafe77c8"
          }
        },
        "262b155cf4b84f2f9da5d8a4a8368c39": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0c6c5b43661241b888608ee72d5f2d1e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4db9def4dce74d1c8ae8f1951666ac2a"
          }
        },
        "0ae2bf2a4b6d4f43bae57e226a5cc653": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ad92622314de4166a255c4badafe77c8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0c6c5b43661241b888608ee72d5f2d1e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4db9def4dce74d1c8ae8f1951666ac2a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "90e571a8091b4009b64b69506da61c3a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_4909d43134b741bebdfc1d70fe91d4a0",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_554dcad16ba140efa94c303ffb1a6734",
              "IPY_MODEL_6230fccbfcb243b386b63a2a26232f21"
            ]
          }
        },
        "4909d43134b741bebdfc1d70fe91d4a0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "554dcad16ba140efa94c303ffb1a6734": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ab51bdbac9bf4977b1312b25e1c0b423",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.26MB of 2.26MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b8e18582de7a4d109ac60bdf2a232b17"
          }
        },
        "6230fccbfcb243b386b63a2a26232f21": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0fdf58cb565149d7b3eb390ba839922e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a849d03ce416427e87439529f857f2ec"
          }
        },
        "ab51bdbac9bf4977b1312b25e1c0b423": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b8e18582de7a4d109ac60bdf2a232b17": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0fdf58cb565149d7b3eb390ba839922e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a849d03ce416427e87439529f857f2ec": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b3ecf7e8b7a94cc897775f25120ed4bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_aee4d4ee121046e295a30e4d251bcf67",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_1a3f7f75d06448629457208ef05616ca",
              "IPY_MODEL_3a852e381a0e483995c8b7b026481ea7"
            ]
          }
        },
        "aee4d4ee121046e295a30e4d251bcf67": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1a3f7f75d06448629457208ef05616ca": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_3d13cda9fb694f5e8c4a4b8c408d75fb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.00MB of 3.00MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dc878fd58bed460db69d019b36614d03"
          }
        },
        "3a852e381a0e483995c8b7b026481ea7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9cef2db67eda46a7b7d72378861d3d88",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_38df9768b4f241ac92fc257cab6fad54"
          }
        },
        "3d13cda9fb694f5e8c4a4b8c408d75fb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dc878fd58bed460db69d019b36614d03": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9cef2db67eda46a7b7d72378861d3d88": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "38df9768b4f241ac92fc257cab6fad54": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4c5217f36c6443769d92a531d82da1e4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a6dfe14396714d00914c2cb7f9ad330a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f977afb6e850498f9089937139b1d749",
              "IPY_MODEL_a6af498692284b2b85a2b84fac7bb310"
            ]
          }
        },
        "a6dfe14396714d00914c2cb7f9ad330a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f977afb6e850498f9089937139b1d749": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_c42f9f3b599a4433b87b16443d059fc6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.02MB of 3.02MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_39c2b1e740494c9285b32035570cf860"
          }
        },
        "a6af498692284b2b85a2b84fac7bb310": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d6f9e3ddd8f74967a86162be8224c796",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5c0dcc103f5b4ef7aa143aeed25382eb"
          }
        },
        "c42f9f3b599a4433b87b16443d059fc6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "39c2b1e740494c9285b32035570cf860": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d6f9e3ddd8f74967a86162be8224c796": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5c0dcc103f5b4ef7aa143aeed25382eb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "278c61c1deb749b49b0a698a7e562bd3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_eca10c23128044aeb2ae3db75c6cb928",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9b418cfa1f134394bbd669b2e9ae0afe",
              "IPY_MODEL_98452c01ad824228b154d2119c78fafa"
            ]
          }
        },
        "eca10c23128044aeb2ae3db75c6cb928": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9b418cfa1f134394bbd669b2e9ae0afe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b0a9a5057a19435b85556a93a0b80a84",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.03MB of 3.03MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1d47237edc514fc18443e69dfc151935"
          }
        },
        "98452c01ad824228b154d2119c78fafa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_534bd405030e41a0a27d623d79389a73",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_31c596bac3104bf28d8c9c24ba5f01e2"
          }
        },
        "b0a9a5057a19435b85556a93a0b80a84": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1d47237edc514fc18443e69dfc151935": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "534bd405030e41a0a27d623d79389a73": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "31c596bac3104bf28d8c9c24ba5f01e2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "34413587d922489db9ff277f7dc2ec89": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c9227221ef654626b845507dd9b021c3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_10c2e727b1964029ad12e5218c8c9a53",
              "IPY_MODEL_e62bff6f6341418c8dc6f815f85e069e"
            ]
          }
        },
        "c9227221ef654626b845507dd9b021c3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "10c2e727b1964029ad12e5218c8c9a53": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_3fcb7d680ea2475b892189a3423b30b7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.06MB of 3.06MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_77b4e95d6cd641a4a10e4257857ed0a3"
          }
        },
        "e62bff6f6341418c8dc6f815f85e069e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_080c76c4fe1247d7815a51a7ca960abe",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a4e27034b05e487aaf14abc21ebe0939"
          }
        },
        "3fcb7d680ea2475b892189a3423b30b7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "77b4e95d6cd641a4a10e4257857ed0a3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "080c76c4fe1247d7815a51a7ca960abe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a4e27034b05e487aaf14abc21ebe0939": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "372438d51e7e4ce6abcba28c0ef66890": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_9e17c2fd40dd45d89db55e80c8257042",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b9f2e68012914e6bb5f11d65b7542741",
              "IPY_MODEL_ffac635976814920aecb504a9fabfafe"
            ]
          }
        },
        "9e17c2fd40dd45d89db55e80c8257042": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b9f2e68012914e6bb5f11d65b7542741": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ce8a5006101042ed9e8bed689d276891",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.36MB of 2.36MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b18187a70076482080d3f4a8d3967982"
          }
        },
        "ffac635976814920aecb504a9fabfafe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e462c149895142bba49d76a49a1a8cdf",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3ecc980712d84bd99e407ab8c27fc6bd"
          }
        },
        "ce8a5006101042ed9e8bed689d276891": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b18187a70076482080d3f4a8d3967982": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e462c149895142bba49d76a49a1a8cdf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3ecc980712d84bd99e407ab8c27fc6bd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/GRU_AE/GRU_AE_Amazon.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5F7GfFTgUo3"
      },
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "db153e7b-74e0-47b0-860c-44170cf12cf5"
      },
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 147, done.\u001b[K\n",
            "remote: Counting objects: 100% (147/147), done.\u001b[K\n",
            "remote: Compressing objects: 100% (142/142), done.\u001b[K\n",
            "remote: Total 147 (delta 71), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (147/147), 120.19 KiB | 2.00 MiB/s, done.\n",
            "Resolving deltas: 100% (71/71), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e954d4d8-b862-4fdf-d669-91661c3fa5bb"
      },
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/feeder_repo\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1f6cddce-96c0-4e6e-d98d-37414e59b9f4"
      },
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRqkwo6kZUz_"
      },
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzVhwND1HAlw"
      },
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "f7586638-6c50-4799-9f0b-e23c3f8ba95c"
      },
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Tue Jul 20 14:01:49 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla V100-SXM2...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   35C    P0    23W / 300W |      0MiB / 16160MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WB9wD4Aahs8_"
      },
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vBlKerL-c4-3"
      },
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'Amazon'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'GRU_AE'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfQJbuBk0vW0"
      },
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X53Fp1Gwh88_"
      },
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "dcdd868c-a698-4dd8-87d4-2a942be7a9ea"
      },
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8 MB 4.4 MB/s \n",
            "\u001b[K     |████████████████████████████████| 170 kB 52.2 MB/s \n",
            "\u001b[K     |████████████████████████████████| 133 kB 45.2 MB/s \n",
            "\u001b[K     |████████████████████████████████| 138 kB 50.9 MB/s \n",
            "\u001b[K     |████████████████████████████████| 97 kB 5.9 MB/s \n",
            "\u001b[K     |████████████████████████████████| 63 kB 1.5 MB/s \n",
            "\u001b[K     |████████████████████████████████| 62 kB 892 kB/s \n",
            "\u001b[?25h  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.26.0 which is incompatible.\n",
            "datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\u001b[0m\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pbgZaoQDiIKX"
      },
      "source": [
        "!pip install wandb -qq"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "0cd9fc54-48a3-4e66-aa41-b547ded7a2ea"
      },
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j91IBGuSid5w"
      },
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.1, 0.2, 0.3]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'rmsprop']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0Sr9HsorH4E"
      },
      "source": [
        "# wandb calls this training function to run through the hyperparameter search\n",
        "def train():\n",
        "    # default values for searching\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "\n",
        "    # setting keras model to sequential mode\n",
        "    model = Sequential()\n",
        "\n",
        "     # layer 1\n",
        "    model.add(GRU(units=128, return_sequences=True, input_shape=(window_len, 1), activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 2\n",
        "    model.add(GRU(units=64, return_sequences=False, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 3\n",
        "    model.add(RepeatVector(window_len))\n",
        "    # layer 4\n",
        "    model.add(GRU(units=64, return_sequences=True, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 5\n",
        "    model.add(GRU(units=128, return_sequences=False, activation=config.activation))\n",
        "    model.add(Dropout(0.1))\n",
        "    # layer 6\n",
        "    model.add((Dense(1)))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "a044b998-075d-4049-f3d9-f69372cd47b9"
      },
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Create sweep with ID: h1sinbn9\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "78abf94921914b43b3501b2387831349",
            "cd15cfac37de4d99827540582d6ceec4",
            "b480879bc6a84a8f9bd52cbd744c88ce",
            "68d0fef7e0c0465ba37470cbd7f6b783",
            "d7ef98ff22c9445e8278d42c390d6272",
            "335ff7b72c45496a85b79f8dcd1b332f",
            "9a11598e11a84178a6656751d9c6b240",
            "27f4859f8fb9409284e06ca83619adf9",
            "f964621b66434aff8d8ee59cf75b05a6",
            "3ed055bc27fe4b5a936bf05492013c5f",
            "b3c0553b400e4c87a8a815241918a011",
            "1db59c87e5284c88af74ef355d0a7f0b",
            "321c6407deb74a899dde970934ba3e30",
            "40cb90048be9495a90b1bf2b2ef495cf",
            "584d11cf17d849bb83fa66a7b0ca5d0d",
            "3e03ffbef13c4f3782931b2718512c23",
            "739097ca53b842c98901676440201c1a",
            "c755d9826dc14e259c81bef7fb66c830",
            "ef5dd3e5c4e84aa7bcfc5103a4942393",
            "53f2eda1e78141c3971dbe5fff73f3bc",
            "f316af887d814086b90308bc1e3392aa",
            "3828130e40564df3847a392b3223b05e",
            "998554132ae84685a30b85d1719615c3",
            "74ec0859c1b04a3bbe58e267c0d009a9",
            "9ae73cf55d7440e297ca1032f68feeba",
            "df1f4f9792fa45fd8cbbf219d108e22e",
            "c3cff1380a354329ac408054a6e4a090",
            "f6a18bc90dac4241aa9b02e773600e35",
            "405c814c9e1648469a9b96a9e8c65efa",
            "5b89e608ffb24bf3b51519cc96fc3185",
            "c2692de02a4c4a6e8a30d4c9d48c88dc",
            "087c0de07067421ea30ef80f31eb4d7b",
            "89d0091184ac4e73a227d2ee4550cdf9",
            "b3a035e4936c41ea8885b47b9f12af5c",
            "2a9034053abf43b6a4bea0cfc2ff22fd",
            "a107074f1630475ebdcfd96e131523ba",
            "a3eaff49c69c45dab80b04fa402cb49f",
            "cbdee13af70c4965995ac4d62ebff3b3",
            "f32cf02f2783413c92aed78d76b43d63",
            "f26ce5bfefa0413ab714e82e86d5de9f",
            "3cc528aa8f384b5f82f2fcdc6a297a7d",
            "7c123b6e10194751ba78dff34e72ed2b",
            "6b1228a43bae46b4b37b8ca7496f019d",
            "a505e223826a432987bcecf75b9fc619",
            "575d977dabcc46dfbedee740ec454a83",
            "d065ffe8ba71459888216ab9ab8506a5",
            "a839c9f4033f4d7daef174badae2d357",
            "f07127fc8b05485692841e85030ccb29",
            "439fa2b8e89949e0901063d0d50ef2a6",
            "37927564d9134a5d89b9496c2b5fbbc6",
            "e53bc69bab7a428e8046c7faee197a72",
            "2ca9502212a8400f8c59ff50c5d8118b",
            "6d10e26fab684518b264ce2909c62c8e",
            "21e99a01a3fe4fcebf2d835a19f4b302",
            "c9d226283c3d40829017e11ad8b37475",
            "291151636c6d443ea5244afe1534f3b2",
            "8d65b0d6d1124068b9e22c0e3ec018dd",
            "c107eb2254e94b689bd7a0921b8aa829",
            "c92c94ab20eb4e9dbcd0b54081eb4693",
            "59c00b7649024a8b90f587f1910c1307",
            "8cd74fcee6f14e238bf0dd20e1f75757",
            "5f720286b0014eb3babe79e360355249",
            "800ba759ff804f9d92eb032b9aa9af7f",
            "9b034a8e0c7347179cba49d3499d0458",
            "b15c622ebd5a4ca89243d43a580050d0",
            "6fdc589bf9c24035985ecaed228fa883",
            "2fa5ed4e94f943d48ccaf681e0996b70",
            "9f14f3b5eaf34ac4884b5ba2e3be6ff2",
            "b2bc44d8a71b4b2bb714554468b3c36a",
            "171473c23006494f9c1902e145c3d09b",
            "05b7d3888b3b46ca8acb1cec2afc8c11",
            "3fa709a844594bb5b65a1bdd2059cd0b",
            "109ccbb3460d4b1d865b009555731e6e",
            "970b9971cd0f4694be06646f12445621",
            "679b317341df43548acf20ab9b7c03e4",
            "5ba723c4e3e74c9c9358dc40de9efeb9",
            "cbe2808c9cb94c5fa77fd937ce1b32fa",
            "1b78cc5d5757415684bd59ae17941028",
            "f3488518658541f79d9fc1cbb687e916",
            "b42a0c0958fe4012b963f684128e6306",
            "aafdb13eab284d40a35c5cf0b7352694",
            "56253643acaa43118a38e0ecb4ae6333",
            "4dbb5a1e600c47eeb041c7183bef0646",
            "949ff8565c014fa6960ecb4e1b79eeee",
            "343d9e30073a4a13adfe0603e79398bc",
            "8a327551d4104481a8e98e7d16a7a635",
            "27291db80c854d138ef2d1d5d80b9f81",
            "78c68fc4fd8e4c20be44c29202adcdea",
            "ebf3acb5c8b548b18ed7b06ecd86ffaf",
            "8d60755069414522a2f9772dee735ff6",
            "49f61175ab62472f809c3b7d802b0078",
            "cb34a0bb083f4ba3aa6fe92b6a4d5c6e",
            "74d99d53881844a0bd83b6051549f0cc",
            "3b8a88dffe644b85bcbbf0992b5de967",
            "ba6694b920fe4f8f8bf7f64c8d0b881a",
            "750ad9595db94c2fbef36423ffb53c2f",
            "a870ead8388440df8dcb3e20cc2bcf21",
            "97438b2490aa43da806dfd434252007e",
            "3c5437b81e5b4141bc4645c708dfae39",
            "21407737f42a49fdbb5cb9dead6da424",
            "ebd2aa43176a47d397479df3d9013ce4",
            "d6921f467b0344c9a12031b4489c139a",
            "736d6c0152564663b510e39f1c9f0554",
            "7b439b619bba40c0a64b2599570d89e6",
            "e3d98113942b4c1fa06f0a0bab1064e2",
            "401b5afb8c7846929d9a189afde2b341",
            "15d224e9ae854323be1c135c161f8f1f",
            "07412e97ca9d4d8a89b71c5723af2029",
            "58e1682279d5407c9acf9b294cb2efcc",
            "df6f1be89f114e7bbdcd54c6cbf011ab",
            "3c2a81a1751f46d59bebdf70a3ae685d",
            "82d560992f98406b86b9949cb1038650",
            "1096549ebc3e49028889079c1d1ba3a8",
            "7a2ecf9cc13b4bd39968286d40d72e43",
            "3e670401892044d4a6c544365cdaf04f",
            "eb7e9f844ab24436a149f16347833165",
            "00a62699b2fd46b98bc6f13566e5cbc8",
            "1729e2bd82f842dc980b2afdb96e341a",
            "031ea4f5da584fc7b21cf38f7651010c",
            "b9d1e8426bd7482585691a600c451c8d",
            "e89814e1ba7e4352a731217181914b8e",
            "0d1c3ea76d624fe6a57b82b01f56b149",
            "a1817c91e933496c8155b24af2172f79",
            "025ca8a35a5b409c9539af5b9bed9ff4",
            "47cffbda3b2340c5a710336fc0dcefd3",
            "6b2f345376af47f6aa1adfc8d1b5a999",
            "2c82093a0fd0470abaf5bffb69688309",
            "42734661626e4b379b860571048dbae4",
            "3ad0bbcbbf4c46929772f189d52fff0c",
            "075bc8e720a54901bdea1a053442b39c",
            "1ffb2ed36e584579ab34dde82b5f9e00",
            "3d4708a3c7c44a20a13eab6e5084a8b4",
            "c67f3b588840480bb963453af24ed0d3",
            "485bcdd95ecb4815bc06fb0c8e6ff786",
            "7809ca3ca5164cb09d30a7a682e1b707",
            "c2e42cf404c24e9da51121b3d0a2af6b",
            "a949a3ba94454da39a975bdf094a2408",
            "6dd546221cf2407d9a77b30ab140019e",
            "ab4a87970852460bbd8186fedbb9130c",
            "1ab5ef9dd1e748f69587b36670ad5643",
            "5467c9108800472ca089f30d529a361b",
            "35a337ac1d714f4ba16df6642b45b2cb",
            "931c79a5eb20492b9de9df461dd4f934",
            "ab21c66c59624063893dc0332829707a",
            "0e6d1916fd014f9a8d6cb7fe85250c8d",
            "599cf463c738498782d05c37b4692547",
            "6236a109da754cf19b690d43301078f2",
            "5f2966a5450e49c287f15d8b24237c42",
            "7cdc2f5f2b064d4d8b0beadb812f391b",
            "ce4346c5909447b694f2404287834d1b",
            "2e2403970c7c4ec293e399cbca49b5cd",
            "1be5efac203c4a3f9478805286d282ce",
            "c9d75c71eafc4fd5b35991a9ca99971d",
            "17d20c7d9b474ea584ba351ccba0db1b",
            "d74ff5414a6640c0b1436870eebd46c7",
            "db073563afbb4a3a955a07b78bda2e4c",
            "a2764f8167554417b801b9148a2fa6c0",
            "ea150eaf8c7d4f03bb6c2c66554270f1",
            "a22798eb25aa448baa5a4b0b66ce957b",
            "43a7779fa80145ca8c7115878829b2a7",
            "d5e82e75986644a58cd7b5d3d873ef16",
            "969a06c2a6c14a3588b5a51c8c81928a",
            "9d2506e0ec8b4467940ca9accddb1646",
            "262b155cf4b84f2f9da5d8a4a8368c39",
            "0ae2bf2a4b6d4f43bae57e226a5cc653",
            "ad92622314de4166a255c4badafe77c8",
            "0c6c5b43661241b888608ee72d5f2d1e",
            "4db9def4dce74d1c8ae8f1951666ac2a",
            "90e571a8091b4009b64b69506da61c3a",
            "4909d43134b741bebdfc1d70fe91d4a0",
            "554dcad16ba140efa94c303ffb1a6734",
            "6230fccbfcb243b386b63a2a26232f21",
            "ab51bdbac9bf4977b1312b25e1c0b423",
            "b8e18582de7a4d109ac60bdf2a232b17",
            "0fdf58cb565149d7b3eb390ba839922e",
            "a849d03ce416427e87439529f857f2ec",
            "b3ecf7e8b7a94cc897775f25120ed4bc",
            "aee4d4ee121046e295a30e4d251bcf67",
            "1a3f7f75d06448629457208ef05616ca",
            "3a852e381a0e483995c8b7b026481ea7",
            "3d13cda9fb694f5e8c4a4b8c408d75fb",
            "dc878fd58bed460db69d019b36614d03",
            "9cef2db67eda46a7b7d72378861d3d88",
            "38df9768b4f241ac92fc257cab6fad54",
            "4c5217f36c6443769d92a531d82da1e4",
            "a6dfe14396714d00914c2cb7f9ad330a",
            "f977afb6e850498f9089937139b1d749",
            "a6af498692284b2b85a2b84fac7bb310",
            "c42f9f3b599a4433b87b16443d059fc6",
            "39c2b1e740494c9285b32035570cf860",
            "d6f9e3ddd8f74967a86162be8224c796",
            "5c0dcc103f5b4ef7aa143aeed25382eb",
            "278c61c1deb749b49b0a698a7e562bd3",
            "eca10c23128044aeb2ae3db75c6cb928",
            "9b418cfa1f134394bbd669b2e9ae0afe",
            "98452c01ad824228b154d2119c78fafa",
            "b0a9a5057a19435b85556a93a0b80a84",
            "1d47237edc514fc18443e69dfc151935",
            "534bd405030e41a0a27d623d79389a73",
            "31c596bac3104bf28d8c9c24ba5f01e2",
            "34413587d922489db9ff277f7dc2ec89",
            "c9227221ef654626b845507dd9b021c3",
            "10c2e727b1964029ad12e5218c8c9a53",
            "e62bff6f6341418c8dc6f815f85e069e",
            "3fcb7d680ea2475b892189a3423b30b7",
            "77b4e95d6cd641a4a10e4257857ed0a3",
            "080c76c4fe1247d7815a51a7ca960abe",
            "a4e27034b05e487aaf14abc21ebe0939",
            "372438d51e7e4ce6abcba28c0ef66890",
            "9e17c2fd40dd45d89db55e80c8257042",
            "b9f2e68012914e6bb5f11d65b7542741",
            "ffac635976814920aecb504a9fabfafe",
            "ce8a5006101042ed9e8bed689d276891",
            "b18187a70076482080d3f4a8d3967982",
            "e462c149895142bba49d76a49a1a8cdf",
            "3ecc980712d84bd99e407ab8c27fc6bd"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "ef3b5faf-1c46-4e46-c53f-ec24a172f6b0"
      },
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4efphyl8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">glowing-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4efphyl8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4efphyl8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_140221-4efphyl8</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 39s 333ms/step - loss: 0.1348 - mean_squared_error: 0.1348 - mean_absolute_error: 0.2716 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0426 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0494\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 9s 284ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0346 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0491\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0364 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0485\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 8s 266ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0331 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0525\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 8s 263ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0334 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0476\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 9s 274ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0306 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0666\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0313 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0587\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0298 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0473\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0588\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 9s 280ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0314 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0815\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0356 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 8s 266ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0282 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0467\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 8s 261ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0279 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0531\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0329 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0543\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 8s 270ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0451\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 9s 284ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0316 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0299 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0654\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0367 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0646\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0314 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0541\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0461\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0286 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0533\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0260 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0530\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 9s 279ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0515\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0299 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0515\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0258 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0483\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 8s 262ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0652\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 8s 266ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0705\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0450\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 8s 262ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0593\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0489\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0274 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0442\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0472\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0257 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0446\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 9s 279ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0594\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 9s 286ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0440\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0300 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0455\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0244 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0426\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0484\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 8s 270ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0262 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 8s 266ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0420\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0244 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0469\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 9.9012e-04 - mean_squared_error: 9.9012e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0427\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0459\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 9.7303e-04 - mean_squared_error: 9.7303e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0441\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 8s 262ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 8s 270ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0511\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 8s 262ms/step - loss: 9.8772e-04 - mean_squared_error: 9.8772e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 9.8211e-04 - mean_squared_error: 9.8211e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0586\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 9s 280ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 9.6961e-04 - mean_squared_error: 9.6961e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0586\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 8s 272ms/step - loss: 9.5019e-04 - mean_squared_error: 9.5019e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0521\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0622\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 8s 260ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 8s 257ms/step - loss: 8.9522e-04 - mean_squared_error: 8.9522e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0403\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 8s 261ms/step - loss: 8.8522e-04 - mean_squared_error: 8.8522e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 9.3549e-04 - mean_squared_error: 9.3549e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0750\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0414\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 8s 272ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0224 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0530\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 8s 262ms/step - loss: 8.0657e-04 - mean_squared_error: 8.0657e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0777\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 174<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "78abf94921914b43b3501b2387831349",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.48MB of 2.48MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_140221-4efphyl8/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_140221-4efphyl8/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>62</td></tr><tr><td>loss</td><td>0.0009</td></tr><tr><td>mean_squared_error</td><td>0.0009</td></tr><tr><td>mean_absolute_error</td><td>0.02137</td></tr><tr><td>val_loss</td><td>0.00774</td></tr><tr><td>val_mean_squared_error</td><td>0.00774</td></tr><tr><td>val_mean_absolute_error</td><td>0.07773</td></tr><tr><td>_runtime</td><td>570</td></tr><tr><td>_timestamp</td><td>1626790311</td></tr><tr><td>_step</td><td>62</td></tr><tr><td>best_val_loss</td><td>0.00303</td></tr><tr><td>best_epoch</td><td>52</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄▄▄▄▇▅▅▄▄▄▃▇▄▄▃▃▃▆█▅▂▃▂▅▂▂▂▂▁▂▂▁▂▁▃▅▁▁▁▃</td></tr><tr><td>val_mean_squared_error</td><td>▄▄▄▄▇▅▅▄▄▄▃▇▄▄▃▃▃▆█▅▂▃▂▅▂▂▂▂▁▂▂▁▂▁▃▅▁▁▁▃</td></tr><tr><td>val_mean_absolute_error</td><td>▃▃▃▄▇▅▅▄▂▄▂▇▄▂▄▄▄▇█▅▃▂▃▅▂▂▂▁▂▂▃▁▃▁▄▆▁▂▁▄</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">glowing-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4efphyl8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4efphyl8</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: y28kb4am with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">ethereal-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y28kb4am\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y28kb4am</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_141229-y28kb4am</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 13s 73ms/step - loss: 0.0547 - mean_squared_error: 0.0547 - mean_absolute_error: 0.1491 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0486\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0469 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1029\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0431 - val_loss: 0.0285 - val_mean_squared_error: 0.0285 - val_mean_absolute_error: 0.1545\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0493 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0539\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0388 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0452\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0432 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0459\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0311 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0492\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0350 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0442\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0305 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0437\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0295 - val_loss: 0.0328 - val_mean_squared_error: 0.0328 - val_mean_absolute_error: 0.1623\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0590 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0470\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0318 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0692\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0465\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0305 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0605\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0430 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0426\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0290 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0419\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0279 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0412\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0285 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0407\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0298 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0690\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0320 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0497\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0284 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0338 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0264 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0407\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0284 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0439\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0311 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0438\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0327 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0275 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0393\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0417\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0290 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0552\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0267 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0423\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0304 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0709\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0309 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0388\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0263 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0436\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0386\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0258 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0479\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0269 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0397\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0340 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0503\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0368\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0269 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0384\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0294 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0374\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0260 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0751\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0265 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0361\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0287 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0251 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0459\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0383\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0260 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0365\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.1686e-04 - mean_squared_error: 9.1686e-04 - mean_absolute_error: 0.0234 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0356\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0271 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0378\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0265 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0575\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0278 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0361\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.5292e-04 - mean_squared_error: 9.5292e-04 - mean_absolute_error: 0.0236 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0585\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0276 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0895\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0337 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0840\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0302 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0344\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0262 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0544\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0260 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0369\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0252 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0391\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.9082e-04 - mean_squared_error: 9.9082e-04 - mean_absolute_error: 0.0242 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0469\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0244 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0503\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0286 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0355\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0340\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.9212e-04 - mean_squared_error: 9.9212e-04 - mean_absolute_error: 0.0235 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0362\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0274 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0375\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.8830e-04 - mean_squared_error: 9.8830e-04 - mean_absolute_error: 0.0237 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0341\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0254 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0342\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0306 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0353\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.0644e-04 - mean_squared_error: 9.0644e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0372\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0250 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0443\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.6454e-04 - mean_squared_error: 8.6454e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0359\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.6191e-04 - mean_squared_error: 9.6191e-04 - mean_absolute_error: 0.0235 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0351\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.6151e-04 - mean_squared_error: 9.6151e-04 - mean_absolute_error: 0.0241 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0395\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 545<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f964621b66434aff8d8ee59cf75b05a6",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.50MB of 2.50MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141229-y28kb4am/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141229-y28kb4am/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>71</td></tr><tr><td>loss</td><td>0.00106</td></tr><tr><td>mean_squared_error</td><td>0.00106</td></tr><tr><td>mean_absolute_error</td><td>0.02543</td></tr><tr><td>val_loss</td><td>0.00291</td></tr><tr><td>val_mean_squared_error</td><td>0.00291</td></tr><tr><td>val_mean_absolute_error</td><td>0.03951</td></tr><tr><td>_runtime</td><td>67</td></tr><tr><td>_timestamp</td><td>1626790416</td></tr><tr><td>_step</td><td>71</td></tr><tr><td>best_val_loss</td><td>0.00217</td></tr><tr><td>best_epoch</td><td>61</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▂▃▂▂▂▁▂▂▂▂▁▁▂▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂▄▂▁▁█▁▁▁▁▂▁▁▁▁▁▁▂▁▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▂▄▂▁▁█▁▁▁▁▂▁▁▁▁▁▁▂▁▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▂▅▂▂▂█▂▂▁▁▃▂▂▂▂▁▁▃▂▂▂▁▃▁▂▁▁▁▂▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">ethereal-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y28kb4am\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y28kb4am</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 85e1vlrm with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">gallant-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/85e1vlrm\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/85e1vlrm</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_141349-85e1vlrm</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 19s 338ms/step - loss: 0.1048 - mean_squared_error: 0.1048 - mean_absolute_error: 0.2280 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0481\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0351 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0482\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0438 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0473\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0342 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0475\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0356 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0612\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0354 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0518\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 8s 261ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0339 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0534\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0336 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0493\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0305 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0996\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 9s 279ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0421 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0482\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 9s 274ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0345 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0563\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0527\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 8s 270ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0473\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0264 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1232\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0469\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0314 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0924\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0315 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0503\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0284 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0667\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0429\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 8s 272ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0280 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0451\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 8s 270ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0498\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 8s 272ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0291 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0493\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0599\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 8s 275ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0289 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0494\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0283 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0675\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0428\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 9.5186e-04 - mean_squared_error: 9.5186e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0581\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 9s 280ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0333 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0492\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0426\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 8.9997e-04 - mean_squared_error: 8.9997e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0427\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0530\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 8s 261ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0403\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0653\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0448\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 8s 262ms/step - loss: 9.9037e-04 - mean_squared_error: 9.9037e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0421\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 8.6481e-04 - mean_squared_error: 8.6481e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0488\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 9.5697e-04 - mean_squared_error: 9.5697e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0396\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 9.3576e-04 - mean_squared_error: 9.3576e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0407\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 8s 272ms/step - loss: 8.9494e-04 - mean_squared_error: 8.9494e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0395\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 9.0248e-04 - mean_squared_error: 9.0248e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0692\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0315 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0596\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 9.6229e-04 - mean_squared_error: 9.6229e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0474\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0427\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 9.3738e-04 - mean_squared_error: 9.3738e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0389\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 9.2727e-04 - mean_squared_error: 9.2727e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0423\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0391\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 8.7530e-04 - mean_squared_error: 8.7530e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0392\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 8.9079e-04 - mean_squared_error: 8.9079e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0404\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 8s 270ms/step - loss: 7.6673e-04 - mean_squared_error: 7.6673e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0386\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 9s 288ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0482\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 9.7263e-04 - mean_squared_error: 9.7263e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0440\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 9.7087e-04 - mean_squared_error: 9.7087e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0381\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0417\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 9.9391e-04 - mean_squared_error: 9.9391e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0380\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 8s 262ms/step - loss: 8.8331e-04 - mean_squared_error: 8.8331e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0376\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 6.7646e-04 - mean_squared_error: 6.7646e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0375\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 7.0650e-04 - mean_squared_error: 7.0650e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0382\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 9s 284ms/step - loss: 7.6010e-04 - mean_squared_error: 7.6010e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0487\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 9.6020e-04 - mean_squared_error: 9.6020e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 9.6037e-04 - mean_squared_error: 9.6037e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0383\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 9.0386e-04 - mean_squared_error: 9.0386e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0422\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 8.5356e-04 - mean_squared_error: 8.5356e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0426\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 8.4863e-04 - mean_squared_error: 8.4863e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0394\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 6.7353e-04 - mean_squared_error: 6.7353e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0416\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 8.1364e-04 - mean_squared_error: 8.1364e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0367\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 9s 283ms/step - loss: 7.1418e-04 - mean_squared_error: 7.1418e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0473\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 9s 284ms/step - loss: 9.1225e-04 - mean_squared_error: 9.1225e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0368\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 8.2054e-04 - mean_squared_error: 8.2054e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0380\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 6.9328e-04 - mean_squared_error: 6.9328e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0474\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 9s 274ms/step - loss: 6.5398e-04 - mean_squared_error: 6.5398e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0383\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 7.0523e-04 - mean_squared_error: 7.0523e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0364\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 8.0804e-04 - mean_squared_error: 8.0804e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0419\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 7.2522e-04 - mean_squared_error: 7.2522e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 6.9403e-04 - mean_squared_error: 6.9403e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0363\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 7.1938e-04 - mean_squared_error: 7.1938e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 9s 292ms/step - loss: 7.1720e-04 - mean_squared_error: 7.1720e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0364\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 9s 285ms/step - loss: 6.4642e-04 - mean_squared_error: 6.4642e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0607\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 9s 287ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0372\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 9s 290ms/step - loss: 6.1516e-04 - mean_squared_error: 6.1516e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0389\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 9s 279ms/step - loss: 7.1183e-04 - mean_squared_error: 7.1183e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0351\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 8s 272ms/step - loss: 6.9992e-04 - mean_squared_error: 6.9992e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0362\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 7.0029e-04 - mean_squared_error: 7.0029e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0454\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 7.4826e-04 - mean_squared_error: 7.4826e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0352\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 9s 285ms/step - loss: 7.8954e-04 - mean_squared_error: 7.8954e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0464\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 9s 291ms/step - loss: 9.2436e-04 - mean_squared_error: 9.2436e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0385\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 9s 283ms/step - loss: 6.2517e-04 - mean_squared_error: 6.2517e-04 - mean_absolute_error: 0.0179 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0381\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 5.9884e-04 - mean_squared_error: 5.9884e-04 - mean_absolute_error: 0.0180 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0358\n",
            "Epoch 90/200\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 7.7991e-04 - mean_squared_error: 7.7991e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0362\n",
            "Epoch 91/200\n",
            "31/31 [==============================] - 9s 273ms/step - loss: 6.1705e-04 - mean_squared_error: 6.1705e-04 - mean_absolute_error: 0.0179 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0398\n",
            "Epoch 92/200\n",
            "31/31 [==============================] - 8s 270ms/step - loss: 8.2049e-04 - mean_squared_error: 8.2049e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0526\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 832<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "739097ca53b842c98901676440201c1a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.54MB of 2.54MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141349-85e1vlrm/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141349-85e1vlrm/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>91</td></tr><tr><td>loss</td><td>0.00081</td></tr><tr><td>mean_squared_error</td><td>0.00081</td></tr><tr><td>mean_absolute_error</td><td>0.02089</td></tr><tr><td>val_loss</td><td>0.00382</td></tr><tr><td>val_mean_squared_error</td><td>0.00382</td></tr><tr><td>val_mean_absolute_error</td><td>0.05258</td></tr><tr><td>_runtime</td><td>798</td></tr><tr><td>_timestamp</td><td>1626791227</td></tr><tr><td>_step</td><td>91</td></tr><tr><td>best_val_loss</td><td>0.00228</td></tr><tr><td>best_epoch</td><td>81</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▅▇▆▆▅▄▆▃▄▄▃▄▅█▃▂▃▆▂▂▂▄▂▂▂▂▂▂▃▃▁▃▁▁▁▁▁▁▄</td></tr><tr><td>val_mean_squared_error</td><td>▅▅▇▆▆▅▄▆▃▄▄▃▄▅█▃▂▃▆▂▂▂▄▂▂▂▂▂▂▃▃▁▃▁▁▁▁▁▁▄</td></tr><tr><td>val_mean_absolute_error</td><td>▄▄▇▄▄▅▄▅▃▄▄▃▃▅█▃▂▃▇▃▃▂▄▂▂▂▃▃▂▄▄▁▄▁▁▁▁▂▁▅</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">gallant-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/85e1vlrm\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/85e1vlrm</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: osfidzi2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">worldly-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/osfidzi2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/osfidzi2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_142719-osfidzi2</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 19s 348ms/step - loss: 0.0962 - mean_squared_error: 0.0962 - mean_absolute_error: 0.2232 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0962\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 9s 279ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0612 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.1025\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0526 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0471\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0483 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0485\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0491 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0932\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 9s 284ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0475 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0971\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0491 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0491\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 9s 291ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0525 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0571\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 9s 276ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0404 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0506\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 9s 278ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0454 - val_loss: 0.0264 - val_mean_squared_error: 0.0264 - val_mean_absolute_error: 0.1455\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 9s 286ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0437 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.1056\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0490 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0608\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0403 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0754\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1317<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9ae73cf55d7440e297ca1032f68feeba",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.84MB of 1.84MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142719-osfidzi2/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142719-osfidzi2/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>12</td></tr><tr><td>loss</td><td>0.00344</td></tr><tr><td>mean_squared_error</td><td>0.00344</td></tr><tr><td>mean_absolute_error</td><td>0.04267</td></tr><tr><td>val_loss</td><td>0.00784</td></tr><tr><td>val_mean_squared_error</td><td>0.00784</td></tr><tr><td>val_mean_absolute_error</td><td>0.07536</td></tr><tr><td>_runtime</td><td>128</td></tr><tr><td>_timestamp</td><td>1626791367</td></tr><tr><td>_step</td><td>12</td></tr><tr><td>best_val_loss</td><td>0.00436</td></tr><tr><td>best_epoch</td><td>2</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▄▁▁▃▃▁▁▁█▄▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▃▄▁▁▃▃▁▁▁█▄▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▅▁▁▄▅▁▂▁█▅▂▃</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▄▅▆▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▄▅▆▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">worldly-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/osfidzi2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/osfidzi2</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: kk4eksx4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">desert-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kk4eksx4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kk4eksx4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143003-kk4eksx4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 9s 127ms/step - loss: 0.1053 - mean_squared_error: 0.1053 - mean_absolute_error: 0.2396 - val_loss: 0.0231 - val_mean_squared_error: 0.0231 - val_mean_absolute_error: 0.1297\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0829 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0527\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0371 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0491\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0310 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0484\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0297 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0473\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0299 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0470\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0289 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0468\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0523\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0283 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0468\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0285 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0470\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0265 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0470\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0480\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0266 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0469\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0270 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0457\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0258 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0517\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0478\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0520\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0455\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0255 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0449\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0236 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0462\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0217 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0446\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0459\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0451\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0452\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0461\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.6795e-04 - mean_squared_error: 8.6795e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0439\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 9.8804e-04 - mean_squared_error: 9.8804e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0435\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0446\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 8.8574e-04 - mean_squared_error: 8.8574e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0434\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 9.1615e-04 - mean_squared_error: 9.1615e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0432\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0223 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0431\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0434\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 9.6868e-04 - mean_squared_error: 9.6868e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0531\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0236 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0501\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0437\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 8.5972e-04 - mean_squared_error: 8.5972e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0442\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0226 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0424\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 9.7806e-04 - mean_squared_error: 9.7806e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0421\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 8.1592e-04 - mean_squared_error: 8.1592e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0422\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 9.5222e-04 - mean_squared_error: 9.5222e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0427\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.1753e-04 - mean_squared_error: 8.1753e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0413\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 7.4919e-04 - mean_squared_error: 7.4919e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0417\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.2896e-04 - mean_squared_error: 8.2896e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0416\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 8.6697e-04 - mean_squared_error: 8.6697e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0413\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 7.7554e-04 - mean_squared_error: 7.7554e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0412\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 8.4415e-04 - mean_squared_error: 8.4415e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0445\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0410\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 9.2952e-04 - mean_squared_error: 9.2952e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0405\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 9.1074e-04 - mean_squared_error: 9.1074e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.4660e-04 - mean_squared_error: 7.4660e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0439\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.4435e-04 - mean_squared_error: 8.4435e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0404\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 7.1356e-04 - mean_squared_error: 7.1356e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0419\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.7077e-04 - mean_squared_error: 8.7077e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0447\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0435\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 8.5372e-04 - mean_squared_error: 8.5372e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 7.8015e-04 - mean_squared_error: 7.8015e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0400\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 8.1190e-04 - mean_squared_error: 8.1190e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0405\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 8.1640e-04 - mean_squared_error: 8.1640e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0415\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 7.8008e-04 - mean_squared_error: 7.8008e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0409\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 7.6875e-04 - mean_squared_error: 7.6875e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0396\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.9808e-04 - mean_squared_error: 8.9808e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0401\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 7.9515e-04 - mean_squared_error: 7.9515e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0398\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.0716e-04 - mean_squared_error: 7.0716e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0395\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.3030e-04 - mean_squared_error: 8.3030e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0469\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 9.3558e-04 - mean_squared_error: 9.3558e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0416\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.5427e-04 - mean_squared_error: 8.5427e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0393\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 7.7576e-04 - mean_squared_error: 7.7576e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0392\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 7.9509e-04 - mean_squared_error: 7.9509e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0383\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 8.0089e-04 - mean_squared_error: 8.0089e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0389\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.7229e-04 - mean_squared_error: 8.7229e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0383\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.4643e-04 - mean_squared_error: 7.4643e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0386\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.3395e-04 - mean_squared_error: 7.3395e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0422\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 7.6049e-04 - mean_squared_error: 7.6049e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0386\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 7.0062e-04 - mean_squared_error: 7.0062e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 8.4713e-04 - mean_squared_error: 8.4713e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0421\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 6.8306e-04 - mean_squared_error: 6.8306e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0387\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 7.1427e-04 - mean_squared_error: 7.1427e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0394\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 6.0226e-04 - mean_squared_error: 6.0226e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0380\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 6.4484e-04 - mean_squared_error: 6.4484e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0389\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.6101e-04 - mean_squared_error: 7.6101e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0376\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 7.4174e-04 - mean_squared_error: 7.4174e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0386\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 9.4195e-04 - mean_squared_error: 9.4195e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0373\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 6.9680e-04 - mean_squared_error: 6.9680e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0370\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.1138e-04 - mean_squared_error: 7.1138e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0378\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 6.9249e-04 - mean_squared_error: 6.9249e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.3663e-04 - mean_squared_error: 7.3663e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 7.0942e-04 - mean_squared_error: 7.0942e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0373\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 6.9446e-04 - mean_squared_error: 6.9446e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0369\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 6.2288e-04 - mean_squared_error: 6.2288e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0368\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 6.4119e-04 - mean_squared_error: 6.4119e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0371\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 6.6885e-04 - mean_squared_error: 6.6885e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0387\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 8.3451e-04 - mean_squared_error: 8.3451e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0364\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 6.4796e-04 - mean_squared_error: 6.4796e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0366\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 5.6617e-04 - mean_squared_error: 5.6617e-04 - mean_absolute_error: 0.0177 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0366\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 1s 35ms/step - loss: 6.0630e-04 - mean_squared_error: 6.0630e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0389\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 9.1189e-04 - mean_squared_error: 9.1189e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0368\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 6.7654e-04 - mean_squared_error: 6.7654e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0363\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1443<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "89d0091184ac4e73a227d2ee4550cdf9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.59MB of 2.59MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143003-kk4eksx4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143003-kk4eksx4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.0007</td></tr><tr><td>mean_squared_error</td><td>0.0007</td></tr><tr><td>mean_absolute_error</td><td>0.01948</td></tr><tr><td>val_loss</td><td>0.0024</td></tr><tr><td>val_mean_squared_error</td><td>0.0024</td></tr><tr><td>val_mean_absolute_error</td><td>0.03631</td></tr><tr><td>_runtime</td><td>51</td></tr><tr><td>_timestamp</td><td>1626791454</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.0024</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">desert-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kk4eksx4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kk4eksx4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: cn8pcfzw with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">cool-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cn8pcfzw\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cn8pcfzw</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143107-cn8pcfzw</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 12s 568ms/step - loss: 1.6947 - mean_squared_error: 1.6947 - mean_absolute_error: 0.8143 - val_loss: 0.1598 - val_mean_squared_error: 0.1598 - val_mean_absolute_error: 0.3668\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 2s 305ms/step - loss: 0.0547 - mean_squared_error: 0.0547 - mean_absolute_error: 0.1826 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1179\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 2s 305ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.1056 - val_loss: 0.0277 - val_mean_squared_error: 0.0277 - val_mean_absolute_error: 0.1485\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 2s 304ms/step - loss: 0.0288 - mean_squared_error: 0.0288 - mean_absolute_error: 0.1222 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0654\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 2s 300ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0828 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0592\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 2s 284ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0899 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0802\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 2s 287ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - mean_absolute_error: 0.0963 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0780\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 2s 290ms/step - loss: 0.0163 - mean_squared_error: 0.0163 - mean_absolute_error: 0.1000 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0652\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 2s 300ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0788 - val_loss: 0.0297 - val_mean_squared_error: 0.0297 - val_mean_absolute_error: 0.1560\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 2s 312ms/step - loss: 0.0222 - mean_squared_error: 0.0222 - mean_absolute_error: 0.1105 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1506\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 2s 294ms/step - loss: 0.0252 - mean_squared_error: 0.0252 - mean_absolute_error: 0.1219 - val_loss: 0.0632 - val_mean_squared_error: 0.0632 - val_mean_absolute_error: 0.2295\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 2s 298ms/step - loss: 0.0204 - mean_squared_error: 0.0204 - mean_absolute_error: 0.1118 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0656\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 2s 286ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0621 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0724\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 2s 294ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.0878 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0765\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 2s 278ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0720 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0689\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1810<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3cc528aa8f384b5f82f2fcdc6a297a7d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.89MB of 1.89MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143107-cn8pcfzw/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143107-cn8pcfzw/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>14</td></tr><tr><td>loss</td><td>0.01397</td></tr><tr><td>mean_squared_error</td><td>0.01397</td></tr><tr><td>mean_absolute_error</td><td>0.08691</td></tr><tr><td>val_loss</td><td>0.00792</td></tr><tr><td>val_mean_squared_error</td><td>0.00792</td></tr><tr><td>val_mean_absolute_error</td><td>0.06887</td></tr><tr><td>_runtime</td><td>50</td></tr><tr><td>_timestamp</td><td>1626791517</td></tr><tr><td>_step</td><td>14</td></tr><tr><td>best_val_loss</td><td>0.00623</td></tr><tr><td>best_epoch</td><td>4</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▁▁▁▁▁▂▂▄▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▁▁▁▁▁▂▂▄▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▃▁▁▁▁▁▃▃▅▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▄▄▄▅▅▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▄▄▄▅▅▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">cool-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cn8pcfzw\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cn8pcfzw</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ib1vhs6t with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">solar-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ib1vhs6t\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ib1vhs6t</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143211-ib1vhs6t</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 10s 69ms/step - loss: 0.0645 - mean_squared_error: 0.0645 - mean_absolute_error: 0.1688 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0591\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0638 - val_loss: 0.0305 - val_mean_squared_error: 0.0305 - val_mean_absolute_error: 0.1589\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0799 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0649\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0640 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0652\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0513 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0546\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0474 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1271\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0615 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0605\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0511 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.1118\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0526 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0403 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0485\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0486 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0419\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0424 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0695\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0461 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0881\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0436 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0488\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0444 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0718\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0423 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0436\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0397 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0426\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0467 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0484\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0474 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0574\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0395 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0529\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0421 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1033\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0463 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0864\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0413 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0404\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0384 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0461\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0352 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0407\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0401 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0371\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0348 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0604\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0428 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0454\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0395 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0628\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0413 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0363\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0361 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0354 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0474\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0357 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0362\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0370 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0347\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0349 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0382 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0457\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0411 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0341\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0362 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0352 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0376\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0326 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0501\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 0s 16ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0410 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0882\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0345 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0587\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0343\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0303 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 45/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0395 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0631\n",
            "Epoch 46/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0375 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0387\n",
            "Epoch 47/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0357 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0353\n",
            "Epoch 48/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0336 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0493\n",
            "Epoch 49/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0382 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0385\n",
            "Epoch 50/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0364 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0376\n",
            "Epoch 51/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0332 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0531\n",
            "Epoch 52/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0353 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0352\n",
            "Epoch 53/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0294 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0523\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1922<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "439fa2b8e89949e0901063d0d50ef2a6",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.91MB of 1.91MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143211-ib1vhs6t/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143211-ib1vhs6t/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>52</td></tr><tr><td>loss</td><td>0.00186</td></tr><tr><td>mean_squared_error</td><td>0.00186</td></tr><tr><td>mean_absolute_error</td><td>0.033</td></tr><tr><td>val_loss</td><td>0.00435</td></tr><tr><td>val_mean_squared_error</td><td>0.00435</td></tr><tr><td>val_mean_absolute_error</td><td>0.05227</td></tr><tr><td>_runtime</td><td>44</td></tr><tr><td>_timestamp</td><td>1626791575</td></tr><tr><td>_step</td><td>52</td></tr><tr><td>best_val_loss</td><td>0.00224</td></tr><tr><td>best_epoch</td><td>42</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▂▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂█▂▂▆▂▁▂▁▃▁▂▁▁▂▄▃▁▁▁▂▂▁▁▁▁▁▁▁▁▃▂▁▂▁▁▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▂█▂▂▆▂▁▂▁▃▁▂▁▁▂▄▃▁▁▁▂▂▁▁▁▁▁▁▁▁▃▂▁▂▁▁▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▂█▃▂▆▂▁▂▁▄▂▃▁▂▂▅▄▁▁▁▂▃▁▂▁▁▂▁▁▁▄▂▁▃▁▁▁▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">solar-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ib1vhs6t\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ib1vhs6t</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: b7np29x5 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">lively-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/b7np29x5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/b7np29x5</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143317-b7np29x5</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 12s 569ms/step - loss: 0.1445 - mean_squared_error: 0.1445 - mean_absolute_error: 0.3044 - val_loss: 0.1357 - val_mean_squared_error: 0.1357 - val_mean_absolute_error: 0.3269\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 2s 298ms/step - loss: 0.0613 - mean_squared_error: 0.0613 - mean_absolute_error: 0.2045 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0654\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 2s 294ms/step - loss: 0.0205 - mean_squared_error: 0.0205 - mean_absolute_error: 0.1220 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0532\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 2s 310ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0736 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0515\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 2s 294ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0594 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0596\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 2s 305ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0550 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0614\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 2s 297ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0528 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0545\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 2s 291ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0479 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0615\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 2s 292ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0419 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0662\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 2s 307ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0421 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0812\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 2s 288ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0403 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0821\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 2s 292ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0408 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0665\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 2s 278ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0382 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0575\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 2s 309ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0394 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0571\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 2s 285ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0364 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0552\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 2s 284ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0353 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0563\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 2s 298ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0323 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0749\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2136<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "8d65b0d6d1124068b9e22c0e3ec018dd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.12MB of 2.12MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143317-b7np29x5/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143317-b7np29x5/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>16</td></tr><tr><td>loss</td><td>0.00199</td></tr><tr><td>mean_squared_error</td><td>0.00199</td></tr><tr><td>mean_absolute_error</td><td>0.0323</td></tr><tr><td>val_loss</td><td>0.00765</td></tr><tr><td>val_mean_squared_error</td><td>0.00765</td></tr><tr><td>val_mean_absolute_error</td><td>0.07492</td></tr><tr><td>_runtime</td><td>55</td></tr><tr><td>_timestamp</td><td>1626791652</td></tr><tr><td>_step</td><td>16</td></tr><tr><td>best_val_loss</td><td>0.00497</td></tr><tr><td>best_epoch</td><td>6</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▁▁▁▁▁▁▁▂▂▁▁▁▁▁▂</td></tr><tr><td>_runtime</td><td>▁▂▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">lively-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/b7np29x5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/b7np29x5</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: nw3ba5hk with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">expert-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nw3ba5hk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nw3ba5hk</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143502-nw3ba5hk</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 15s 426ms/step - loss: 0.1475 - mean_squared_error: 0.1475 - mean_absolute_error: 0.2937 - val_loss: 0.0307 - val_mean_squared_error: 0.0307 - val_mean_absolute_error: 0.1393\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 5s 286ms/step - loss: 0.0314 - mean_squared_error: 0.0314 - mean_absolute_error: 0.1486 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0664\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 5s 285ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0731 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0896\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 4s 283ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0602 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0762\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 5s 290ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0479 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0903\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 5s 284ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0452 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.1072\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 5s 285ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0413 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0855\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 5s 289ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0461 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.1113\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 5s 282ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0388 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1226\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0373 - val_loss: 0.0256 - val_mean_squared_error: 0.0256 - val_mean_absolute_error: 0.1421\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 5s 303ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0402 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.1043\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 5s 293ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0351 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1479\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2242<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b15c622ebd5a4ca89243d43a580050d0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.66MB of 2.66MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143502-nw3ba5hk/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143502-nw3ba5hk/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>11</td></tr><tr><td>loss</td><td>0.00256</td></tr><tr><td>mean_squared_error</td><td>0.00256</td></tr><tr><td>mean_absolute_error</td><td>0.03611</td></tr><tr><td>val_loss</td><td>0.02744</td></tr><tr><td>val_mean_squared_error</td><td>0.02744</td></tr><tr><td>val_mean_absolute_error</td><td>0.1479</td></tr><tr><td>_runtime</td><td>71</td></tr><tr><td>_timestamp</td><td>1626791773</td></tr><tr><td>_step</td><td>11</td></tr><tr><td>best_val_loss</td><td>0.00655</td></tr><tr><td>best_epoch</td><td>1</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>loss</td><td>█▃▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▂▁▂▃▂▄▅▇▃▇</td></tr><tr><td>val_mean_squared_error</td><td>█▁▂▁▂▃▂▄▅▇▃▇</td></tr><tr><td>val_mean_absolute_error</td><td>▇▁▃▂▃▅▃▅▆▇▄█</td></tr><tr><td>_runtime</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">expert-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nw3ba5hk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nw3ba5hk</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: oumcx6eh with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">glorious-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/oumcx6eh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/oumcx6eh</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143648-oumcx6eh</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 9s 247ms/step - loss: 0.1901 - mean_squared_error: 0.1901 - mean_absolute_error: 0.3517 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0984\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0308 - mean_squared_error: 0.0308 - mean_absolute_error: 0.1417 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1184\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0885 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0741\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0573 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0452\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0449 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0446\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0412 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0425\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0396 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0441\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0364 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0337 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0429\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0351 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0433\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0348 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0432\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0344 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0429\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0335 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0336 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0478\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0351 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0436\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0318 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0509\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0328 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0436\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0326 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0311 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0422\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0312 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0516\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0313 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0445\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0324 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0406\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0327 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0423\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0323 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0433\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0301 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0420\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0291 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0418\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0297 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0418\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0314 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0411\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0278 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0425\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0291 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0414\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0299 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0415\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0482\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0319 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0398\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0411\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0284 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0403\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0282 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0422\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0287 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0409\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0256 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0447\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0295 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0476\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0314 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0397\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0290 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0276 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0408\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0418\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0275 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0383\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0280 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0381\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0284 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0283 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0406\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0299 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0408\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0273 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0384\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0270 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0269 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0377\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0279 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0382\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0268 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0393\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0259 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0272 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0404\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0290 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0295 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0414\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0314 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0540\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0337 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0427\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0298 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0260 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0391\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0291 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0386\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0257 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0377\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0256 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0391\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0246 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0418\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0254 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0368\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0248 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0402\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0270 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0385\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0283 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0390\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0286 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0369\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0251 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0379\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0245 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0403\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0284 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0375\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0263 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0361\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0271 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0365\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0274 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0377\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0370\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0262 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0418\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0357\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0280 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0392\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0272 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0383\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0263 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0434\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0276 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0408\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0252 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0373\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0250 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0467\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0281 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0357\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 9.9318e-04 - mean_squared_error: 9.9318e-04 - mean_absolute_error: 0.0242 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0371\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0243 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0360\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0250 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0390\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0261 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0398\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0250 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0375\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0254 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0350\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0249 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0357\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0269 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0350\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0249 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0384\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0244 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0368\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0248 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0351\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 9.6083e-04 - mean_squared_error: 9.6083e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0358\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0251 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0351\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0254 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0355\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0487\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0295 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0365\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2333<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "109ccbb3460d4b1d865b009555731e6e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.70MB of 2.70MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143648-oumcx6eh/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143648-oumcx6eh/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>105</td></tr><tr><td>loss</td><td>0.00143</td></tr><tr><td>mean_squared_error</td><td>0.00143</td></tr><tr><td>mean_absolute_error</td><td>0.02876</td></tr><tr><td>val_loss</td><td>0.00261</td></tr><tr><td>val_mean_squared_error</td><td>0.00261</td></tr><tr><td>val_mean_absolute_error</td><td>0.03646</td></tr><tr><td>_runtime</td><td>37</td></tr><tr><td>_timestamp</td><td>1626791845</td></tr><tr><td>_step</td><td>105</td></tr><tr><td>best_val_loss</td><td>0.00231</td></tr><tr><td>best_epoch</td><td>95</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▂▂▂▂▂▁▁▁▂▁▁▁▁▂▂▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▂▂▂▂▂▁▁▁▂▁▁▁▁▂▂▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▂▂▁▂▁▁▁▁▂▁▁▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">glorious-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/oumcx6eh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/oumcx6eh</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 8ey1x85r with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">lyric-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8ey1x85r\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8ey1x85r</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143739-8ey1x85r</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 14s 399ms/step - loss: 4.7970 - mean_squared_error: 4.7970 - mean_absolute_error: 0.8125 - val_loss: 0.0369 - val_mean_squared_error: 0.0369 - val_mean_absolute_error: 0.1717\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 4s 283ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0677 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0947\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 4s 279ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0669 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0764\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 5s 293ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0661 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1165\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 4s 281ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0800 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0927\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 5s 293ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0824 - val_loss: 0.0236 - val_mean_squared_error: 0.0236 - val_mean_absolute_error: 0.1354\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 5s 296ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0891 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1087\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 5s 294ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0811 - val_loss: 0.0356 - val_mean_squared_error: 0.0356 - val_mean_absolute_error: 0.1743\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 5s 299ms/step - loss: 0.0246 - mean_squared_error: 0.0246 - mean_absolute_error: 0.1168 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1356\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 5s 291ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0983 - val_loss: 0.0226 - val_mean_squared_error: 0.0226 - val_mean_absolute_error: 0.1302\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 5s 290ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0884 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0826\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 5s 289ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0834 - val_loss: 0.0404 - val_mean_squared_error: 0.0404 - val_mean_absolute_error: 0.1890\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 5s 289ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.0927 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0471\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 4s 278ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0529 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.1026\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 4s 279ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0732 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0770\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 4s 269ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0649 - val_loss: 0.0243 - val_mean_squared_error: 0.0243 - val_mean_absolute_error: 0.1419\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 4s 278ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0792 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1131\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 4s 279ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0771 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0609\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0517 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0553\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 5s 290ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0488 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0456\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 5s 290ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0572 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0908\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 5s 295ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0570 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0590\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 5s 292ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0645 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 5s 305ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0471 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1184\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 5s 286ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0640 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0457\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0473 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0498\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 4s 278ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0570 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1315\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 5s 296ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0497 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0483\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 5s 299ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0434 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0563\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 5s 293ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0487 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0664\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 5s 295ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0482 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0403\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 5s 297ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0435 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0404\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 5s 281ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0416 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0468\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 5s 287ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0396 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 5s 285ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0377 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 5s 284ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0404 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0368 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0621\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 4s 275ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0508 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0541\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0424 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0427\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0354 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0758\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 5s 284ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0428 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0377\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 5s 292ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0494 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0443\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 5s 285ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0470 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0592\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 5s 293ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0487 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0426\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 5s 299ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0360 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0512\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 5s 286ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0432 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0494\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 4s 272ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0340 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0380\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 5s 284ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0416 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0525\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 4s 278ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0444 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0633\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 5s 287ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0414 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0584\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2706<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "aafdb13eab284d40a35c5cf0b7352694",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.00MB of 2.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143739-8ey1x85r/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143739-8ey1x85r/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00303</td></tr><tr><td>mean_squared_error</td><td>0.00303</td></tr><tr><td>mean_absolute_error</td><td>0.04218</td></tr><tr><td>val_loss</td><td>0.0059</td></tr><tr><td>val_mean_squared_error</td><td>0.0059</td></tr><tr><td>val_mean_absolute_error</td><td>0.05836</td></tr><tr><td>_runtime</td><td>244</td></tr><tr><td>_timestamp</td><td>1626792103</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00257</td></tr><tr><td>best_epoch</td><td>46</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▁▁▁▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▃▂▄▅▄▇▅▂█▁▃▅▄▂▁▃▂▁▄▁▅▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▇▃▂▄▅▄▇▅▂█▁▃▅▄▂▁▃▂▁▄▁▅▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▇▄▃▅▆▄▇▆▃█▁▄▆▄▂▂▃▂▂▅▂▅▁▂▁▁▁▁▁▂▂▁▁▁▂▁▂▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">lyric-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8ey1x85r\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8ey1x85r</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: inue64p8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">silver-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/inue64p8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/inue64p8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_144226-inue64p8</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 12s 521ms/step - loss: 0.2029 - mean_squared_error: 0.2029 - mean_absolute_error: 0.3538 - val_loss: 0.2684 - val_mean_squared_error: 0.2684 - val_mean_absolute_error: 0.4831\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 2s 301ms/step - loss: 0.1375 - mean_squared_error: 0.1375 - mean_absolute_error: 0.2874 - val_loss: 0.0927 - val_mean_squared_error: 0.0927 - val_mean_absolute_error: 0.2626\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 2s 292ms/step - loss: 0.0475 - mean_squared_error: 0.0475 - mean_absolute_error: 0.1827 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0917\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 2s 287ms/step - loss: 0.0354 - mean_squared_error: 0.0354 - mean_absolute_error: 0.1618 - val_loss: 0.0342 - val_mean_squared_error: 0.0342 - val_mean_absolute_error: 0.1522\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 2s 288ms/step - loss: 0.0230 - mean_squared_error: 0.0230 - mean_absolute_error: 0.1277 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0960\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 2s 287ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0882 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0616\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 2s 278ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0693 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0699\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 2s 302ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0646 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0912\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 2s 284ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0642 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0743\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 2s 282ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0543 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0902\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 2s 294ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0506 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0832\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 2s 279ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0487 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0885\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 2s 277ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0499 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0986\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 2s 266ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0441 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0990\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 2s 309ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0418 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0817\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 2s 311ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0442 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0959\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2911<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ebf3acb5c8b548b18ed7b06ecd86ffaf",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.74MB of 2.74MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144226-inue64p8/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144226-inue64p8/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>15</td></tr><tr><td>loss</td><td>0.00365</td></tr><tr><td>mean_squared_error</td><td>0.00365</td></tr><tr><td>mean_absolute_error</td><td>0.04354</td></tr><tr><td>val_loss</td><td>0.01191</td></tr><tr><td>val_mean_squared_error</td><td>0.01191</td></tr><tr><td>val_mean_absolute_error</td><td>0.09594</td></tr><tr><td>_runtime</td><td>52</td></tr><tr><td>_timestamp</td><td>1626792198</td></tr><tr><td>_step</td><td>15</td></tr><tr><td>best_val_loss</td><td>0.00549</td></tr><tr><td>best_epoch</td><td>5</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▅▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▄▃▃▂▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▂▃▂▁▁▁▁▁▁▁▂▂▁▂</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">silver-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/inue64p8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/inue64p8</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 9zxmk3fy with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">chocolate-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/9zxmk3fy\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/9zxmk3fy</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_144332-9zxmk3fy</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 10s 71ms/step - loss: 0.0666 - mean_squared_error: 0.0666 - mean_absolute_error: 0.1746 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0769\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0433 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0620\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0374 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0654\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0429 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0542\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0331 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0610\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0375 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0481\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0347 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0461\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0298 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0471\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0295 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0449\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0310 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0460\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0297 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0600\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0343 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0490\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0330 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0467\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0308 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0439\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0475\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0267 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0655\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0332 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0445\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0289 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0441\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0281 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0537\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0636\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0307 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0462\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0454\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0270 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0492\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0261 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0432\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0253 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0506\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0265 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0419\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0290 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0420\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0285 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0281 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0446\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0522\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0254 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0445\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.7616e-04 - mean_squared_error: 9.7616e-04 - mean_absolute_error: 0.0239 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0935\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0319 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0717\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0282 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0420\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0461\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0284 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0414\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0261 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0427\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0417\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0293 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0253 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0510\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0253 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0444\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0409\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0777\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0310 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0239 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0399\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0267 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0428\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0410\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0282 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0491\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0291 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0387\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0267 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0403\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0240 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0392\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0615\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0253 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0248 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0390\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.9465e-04 - mean_squared_error: 9.9465e-04 - mean_absolute_error: 0.0243 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0388\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0282 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0412\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0260 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0388\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0492\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.7294e-04 - mean_squared_error: 9.7294e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0426\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0280 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0372\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0276 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0409\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0244 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0370\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0263 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0380\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.1426e-04 - mean_squared_error: 9.1426e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0372\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0247 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0240 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0398\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0291 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0264 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0440\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0252 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0368\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0264 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0368\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0235 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0385\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0377\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.3654e-04 - mean_squared_error: 9.3654e-04 - mean_absolute_error: 0.0231 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0373\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0419\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0378\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0256 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0362\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.5341e-04 - mean_squared_error: 9.5341e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0476\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0251 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0358\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.3930e-04 - mean_squared_error: 9.3930e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0445\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0247 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0403\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0243 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0393\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0245 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0355\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.5465e-04 - mean_squared_error: 9.5465e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0384\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.7830e-04 - mean_squared_error: 8.7830e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0354\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0253 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0375\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.3311e-04 - mean_squared_error: 8.3311e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0467\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.3446e-04 - mean_squared_error: 9.3446e-04 - mean_absolute_error: 0.0236 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0359\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.2885e-04 - mean_squared_error: 9.2885e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0480\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.7841e-04 - mean_squared_error: 8.7841e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0360\n",
            "Epoch 90/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.1241e-04 - mean_squared_error: 9.1241e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0499\n",
            "Epoch 91/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0256 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 92/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.0512e-04 - mean_squared_error: 9.0512e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0379\n",
            "Epoch 93/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0237 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0389\n",
            "Epoch 94/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.5063e-04 - mean_squared_error: 7.5063e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0365\n",
            "Epoch 95/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.8802e-04 - mean_squared_error: 8.8802e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0348\n",
            "Epoch 96/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.8556e-04 - mean_squared_error: 9.8556e-04 - mean_absolute_error: 0.0240 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0519\n",
            "Epoch 97/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0242 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0349\n",
            "Epoch 98/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.5608e-04 - mean_squared_error: 9.5608e-04 - mean_absolute_error: 0.0236 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0364\n",
            "Epoch 99/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0235 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0467\n",
            "Epoch 100/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0249 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0448\n",
            "Epoch 101/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0393\n",
            "Epoch 102/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.6429e-04 - mean_squared_error: 8.6429e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0345\n",
            "Epoch 103/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.1204e-04 - mean_squared_error: 8.1204e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0381\n",
            "Epoch 104/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.4626e-04 - mean_squared_error: 9.4626e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0354\n",
            "Epoch 105/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.5700e-04 - mean_squared_error: 7.5700e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0510\n",
            "Epoch 106/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0260 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0339\n",
            "Epoch 107/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.9091e-04 - mean_squared_error: 8.9091e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0460\n",
            "Epoch 108/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.7155e-04 - mean_squared_error: 9.7155e-04 - mean_absolute_error: 0.0234 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0336\n",
            "Epoch 109/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.2651e-04 - mean_squared_error: 8.2651e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0335\n",
            "Epoch 110/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.0267e-04 - mean_squared_error: 9.0267e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0348\n",
            "Epoch 111/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 7.9590e-04 - mean_squared_error: 7.9590e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0343\n",
            "Epoch 112/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 7.9139e-04 - mean_squared_error: 7.9139e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0396\n",
            "Epoch 113/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.0173e-04 - mean_squared_error: 9.0173e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0360\n",
            "Epoch 114/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.6998e-04 - mean_squared_error: 8.6998e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0439\n",
            "Epoch 115/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.5715e-04 - mean_squared_error: 9.5715e-04 - mean_absolute_error: 0.0231 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0367\n",
            "Epoch 116/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.7019e-04 - mean_squared_error: 8.7019e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0337\n",
            "Epoch 117/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.3552e-04 - mean_squared_error: 8.3552e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0408\n",
            "Epoch 118/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0248 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0334\n",
            "Epoch 119/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.9265e-04 - mean_squared_error: 8.9265e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0636\n",
            "Epoch 120/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0375\n",
            "Epoch 121/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.1224e-04 - mean_squared_error: 9.1224e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0396\n",
            "Epoch 122/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.5488e-04 - mean_squared_error: 8.5488e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0332\n",
            "Epoch 123/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.9467e-04 - mean_squared_error: 9.9467e-04 - mean_absolute_error: 0.0234 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0448\n",
            "Epoch 124/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.7266e-04 - mean_squared_error: 8.7266e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0334\n",
            "Epoch 125/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.8517e-04 - mean_squared_error: 9.8517e-04 - mean_absolute_error: 0.0241 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0330\n",
            "Epoch 126/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.7293e-04 - mean_squared_error: 9.7293e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0396\n",
            "Epoch 127/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.0731e-04 - mean_squared_error: 9.0731e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0356\n",
            "Epoch 128/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.8003e-04 - mean_squared_error: 8.8003e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0335\n",
            "Epoch 129/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 7.8604e-04 - mean_squared_error: 7.8604e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0387\n",
            "Epoch 130/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.5572e-04 - mean_squared_error: 9.5572e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0324\n",
            "Epoch 131/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.4175e-04 - mean_squared_error: 9.4175e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0334\n",
            "Epoch 132/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.1511e-04 - mean_squared_error: 9.1511e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0342\n",
            "Epoch 133/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.0553e-04 - mean_squared_error: 9.0553e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0423\n",
            "Epoch 134/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.3369e-04 - mean_squared_error: 9.3369e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n",
            "Epoch 135/200\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.3252e-04 - mean_squared_error: 8.3252e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0355\n",
            "Epoch 136/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.6680e-04 - mean_squared_error: 9.6680e-04 - mean_absolute_error: 0.0237 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0372\n",
            "Epoch 137/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 7.8489e-04 - mean_squared_error: 7.8489e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0330\n",
            "Epoch 138/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.1936e-04 - mean_squared_error: 9.1936e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0392\n",
            "Epoch 139/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.4873e-04 - mean_squared_error: 8.4873e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0336\n",
            "Epoch 140/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.2410e-04 - mean_squared_error: 8.2410e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0339\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3014<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "a870ead8388440df8dcb3e20cc2bcf21",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.78MB of 2.78MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144332-9zxmk3fy/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144332-9zxmk3fy/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>139</td></tr><tr><td>loss</td><td>0.00075</td></tr><tr><td>mean_squared_error</td><td>0.00075</td></tr><tr><td>mean_absolute_error</td><td>0.02069</td></tr><tr><td>val_loss</td><td>0.00213</td></tr><tr><td>val_mean_squared_error</td><td>0.00213</td></tr><tr><td>val_mean_absolute_error</td><td>0.03393</td></tr><tr><td>_runtime</td><td>115</td></tr><tr><td>_timestamp</td><td>1626792327</td></tr><tr><td>_step</td><td>139</td></tr><tr><td>best_val_loss</td><td>0.00209</td></tr><tr><td>best_epoch</td><td>129</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>██▅▄▂▄▃▂▃▂▃▂▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>██▅▄▂▄▃▂▃▂▃▂▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>██▅▅▃▅▄▃▄▃▄▃▃▃▃▂▃▃▂▃▂▃▂▂▂▂▁▂▂▂▂▂▂▂▁▁▁▂▂▁</td></tr><tr><td>val_loss</td><td>▄▃▂▂▅▂▂▂▂█▂▂▂▃▂▁▂▁▁▂▁▁▁▁▂▂▁▃▂▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▄▃▂▂▅▂▂▂▂█▂▂▂▃▂▁▂▁▁▂▁▁▁▁▂▂▁▃▂▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▄▃▃▃▅▂▂▂▃█▂▃▂▃▂▂▃▁▁▂▂▁▁▁▃▃▁▃▂▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">chocolate-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/9zxmk3fy\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/9zxmk3fy</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: y2yu3147 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">balmy-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y2yu3147\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y2yu3147</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_144542-y2yu3147</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 260ms/step - loss: 0.1599 - mean_squared_error: 0.1599 - mean_absolute_error: 0.3041 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0791\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0317 - mean_squared_error: 0.0317 - mean_absolute_error: 0.1602 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1117\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0175 - mean_squared_error: 0.0175 - mean_absolute_error: 0.1069 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0836\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0703 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0603\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0481 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0764\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0467 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0621\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0416 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0584\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0379 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0484\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0364 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0495\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0361 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0494\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0372 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0500\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0487\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0338 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0543\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0363 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0486\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0328 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0540\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0341 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0483\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0328 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0493\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0312 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0489\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0321 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0486\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0315 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0523\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0323 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0484\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0339 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0479\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0323 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0483\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0293 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0487\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0307 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0324 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0476\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0294 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0497\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0276 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0299 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0275 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0270 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0473\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0484\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0281 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0513\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0280 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0490\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0272 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0470\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0295 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0476\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0291 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0487\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0305 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0495\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0283 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0489\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0284 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0468\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0281 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0470\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0467\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0283 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0265 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0466\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0482\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0462\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0492\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0489\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0535\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0291 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0511\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3489<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e3d98113942b4c1fa06f0a0bab1064e2",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.81MB of 2.81MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144542-y2yu3147/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144542-y2yu3147/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00164</td></tr><tr><td>mean_squared_error</td><td>0.00164</td></tr><tr><td>mean_absolute_error</td><td>0.0292</td></tr><tr><td>val_loss</td><td>0.00412</td></tr><tr><td>val_mean_squared_error</td><td>0.00412</td></tr><tr><td>val_mean_absolute_error</td><td>0.05114</td></tr><tr><td>_runtime</td><td>26</td></tr><tr><td>_timestamp</td><td>1626792368</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00397</td></tr><tr><td>best_epoch</td><td>44</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄█▄▂▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▄█▄▂▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅█▅▃▃▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">balmy-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y2yu3147\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/y2yu3147</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 8c93f0fn with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">usual-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8c93f0fn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8c93f0fn</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_144622-8c93f0fn</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 330ms/step - loss: 0.1240 - mean_squared_error: 0.1240 - mean_absolute_error: 0.2638 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0804\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0179 - mean_squared_error: 0.0179 - mean_absolute_error: 0.1042 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0679\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0735 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0881\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0559 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0648\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0354 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0532\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0306 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0461\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0463\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0302 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0489\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0470\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0269 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0456\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0475\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0268 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0457\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0264 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0459\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0245 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0466\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0258 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0450\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0452\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0483\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0252 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0465\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0261 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0470\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0245 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0452\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0237 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0463\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0446\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0237 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0440\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0456\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0263 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0443\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0447\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0235 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0443\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0436\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0228 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0432\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0434\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0429\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0456\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0473\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0451\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0463\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0441\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0421\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 9.8067e-04 - mean_squared_error: 9.8067e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0432\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0424\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 9.6120e-04 - mean_squared_error: 9.6120e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0421\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 8.7251e-04 - mean_squared_error: 8.7251e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0420\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 8.5112e-04 - mean_squared_error: 8.5112e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0427\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 8.2098e-04 - mean_squared_error: 8.2098e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0424\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 9.2274e-04 - mean_squared_error: 9.2274e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0417\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 8.5676e-04 - mean_squared_error: 8.5676e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0421\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0431\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3694<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "1096549ebc3e49028889079c1d1ba3a8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.83MB of 2.83MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144622-8c93f0fn/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144622-8c93f0fn/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.0011</td></tr><tr><td>mean_squared_error</td><td>0.0011</td></tr><tr><td>mean_absolute_error</td><td>0.02404</td></tr><tr><td>val_loss</td><td>0.00314</td></tr><tr><td>val_mean_squared_error</td><td>0.00314</td></tr><tr><td>val_mean_absolute_error</td><td>0.04307</td></tr><tr><td>_runtime</td><td>25</td></tr><tr><td>_timestamp</td><td>1626792407</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00314</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆█▅▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆█▅▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▅█▄▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▂▂▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">usual-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8c93f0fn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8c93f0fn</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: qkpuyvmw with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">royal-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qkpuyvmw\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qkpuyvmw</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_144711-qkpuyvmw</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 14s 412ms/step - loss: 0.1508 - mean_squared_error: 0.1508 - mean_absolute_error: 0.3000 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1271\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 4s 276ms/step - loss: 0.0280 - mean_squared_error: 0.0280 - mean_absolute_error: 0.1398 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0566\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 4s 281ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0840 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0777\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 5s 282ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0623 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0921\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0519 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0972\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 4s 275ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0488 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0778\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 4s 273ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0460 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0755\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0412 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1132\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 5s 285ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0409 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0890\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 4s 270ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0378 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1153\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 5s 291ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0379 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0952\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 5s 292ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0383 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0979\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3899<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e89814e1ba7e4352a731217181914b8e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.85MB of 2.85MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144711-qkpuyvmw/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144711-qkpuyvmw/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>11</td></tr><tr><td>loss</td><td>0.00322</td></tr><tr><td>mean_squared_error</td><td>0.00322</td></tr><tr><td>mean_absolute_error</td><td>0.03934</td></tr><tr><td>val_loss</td><td>0.01278</td></tr><tr><td>val_mean_squared_error</td><td>0.01278</td></tr><tr><td>val_mean_absolute_error</td><td>0.09786</td></tr><tr><td>_runtime</td><td>69</td></tr><tr><td>_timestamp</td><td>1626792500</td></tr><tr><td>_step</td><td>11</td></tr><tr><td>best_val_loss</td><td>0.00621</td></tr><tr><td>best_epoch</td><td>1</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▂▃▃▂▂▅▃▅▃▃</td></tr><tr><td>val_mean_squared_error</td><td>█▁▂▃▃▂▂▅▃▅▃▃</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▃▅▅▃▃▇▄▇▅▅</td></tr><tr><td>_runtime</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">royal-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qkpuyvmw\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qkpuyvmw</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4wixk2xo with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">peachy-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4wixk2xo\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4wixk2xo</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_144900-4wixk2xo</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 13s 547ms/step - loss: 0.1863 - mean_squared_error: 0.1863 - mean_absolute_error: 0.3329 - val_loss: 0.0552 - val_mean_squared_error: 0.0552 - val_mean_absolute_error: 0.1917\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 3s 312ms/step - loss: 0.0315 - mean_squared_error: 0.0315 - mean_absolute_error: 0.1496 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1227\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 2s 300ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0652 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0904\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 2s 310ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0586 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0595\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 3s 316ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0369 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0706\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 2s 303ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0356 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0535\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 2s 303ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0375 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0479\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 2s 315ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0361 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.1047\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 2s 311ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0692 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0599\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 2s 304ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0325 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0597\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 2s 298ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0511 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0730\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 2s 293ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0368 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0496\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 2s 301ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0336 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0868\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 2s 282ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0455 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0716\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 2s 287ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0414 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0847\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 2s 286ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0408 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0836\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 2s 293ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0333 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0592\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3990<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3ad0bbcbbf4c46929772f189d52fff0c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.86MB of 2.86MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144900-4wixk2xo/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144900-4wixk2xo/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>16</td></tr><tr><td>loss</td><td>0.00194</td></tr><tr><td>mean_squared_error</td><td>0.00194</td></tr><tr><td>mean_absolute_error</td><td>0.03121</td></tr><tr><td>val_loss</td><td>0.00508</td></tr><tr><td>val_mean_squared_error</td><td>0.00508</td></tr><tr><td>val_mean_absolute_error</td><td>0.05917</td></tr><tr><td>_runtime</td><td>58</td></tr><tr><td>_timestamp</td><td>1626792598</td></tr><tr><td>_step</td><td>16</td></tr><tr><td>best_val_loss</td><td>0.00435</td></tr><tr><td>best_epoch</td><td>6</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▁▁▁▁▃▁▁▁▁▂▁▂▂▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▁▁▁▁▃▁▁▁▁▂▁▂▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▃▂▂▁▁▄▂▂▂▁▃▂▃▃▂</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">peachy-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4wixk2xo\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/4wixk2xo</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: pekrd8l2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sparkling-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pekrd8l2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pekrd8l2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145013-pekrd8l2</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 10s 75ms/step - loss: 0.0797 - mean_squared_error: 0.0797 - mean_absolute_error: 0.1983 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0525\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0650 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0554\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0541 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0677\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0487 - val_loss: 0.0418 - val_mean_squared_error: 0.0418 - val_mean_absolute_error: 0.1875\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0654 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1329\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0636 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0457\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0470 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0412\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0483 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0420\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0384 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0413\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0413 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.1021\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0561 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0519\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0362 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0459\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0375 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0396\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0397 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0480\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0368 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0554\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0457 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0510\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0368 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0379\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0371 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0771\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0391 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0358\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0396 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0396\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0397 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0376\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0371 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0419\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0440 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0502\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0320 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0376\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0334 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0383\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0311 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0372\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0357 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0351\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0400 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0343\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0373 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0355 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0359\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0340 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0523\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0468 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0795\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0395 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0462\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0344 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0396\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0291 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0778\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0445 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0645\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0348 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0354\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0358 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0554\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4096<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "a949a3ba94454da39a975bdf094a2408",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.88MB of 2.88MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145013-pekrd8l2/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145013-pekrd8l2/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>37</td></tr><tr><td>loss</td><td>0.00202</td></tr><tr><td>mean_squared_error</td><td>0.00202</td></tr><tr><td>mean_absolute_error</td><td>0.03511</td></tr><tr><td>val_loss</td><td>0.00478</td></tr><tr><td>val_mean_squared_error</td><td>0.00478</td></tr><tr><td>val_mean_absolute_error</td><td>0.05542</td></tr><tr><td>_runtime</td><td>43</td></tr><tr><td>_timestamp</td><td>1626792656</td></tr><tr><td>_step</td><td>37</td></tr><tr><td>best_val_loss</td><td>0.00219</td></tr><tr><td>best_epoch</td><td>27</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▃▃▂▃▂▂▂▂▂▂▁▂▂▂▁▂▂▂▂▁▁▁▂▂▂▁▁▂▁▁▁▂▁▁</td></tr><tr><td>val_loss</td><td>▁▁▂█▅▁▁▁▁▃▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▂▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▁▁▂█▅▁▁▁▁▃▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▂▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▂▂▃█▆▂▁▁▁▄▂▂▁▂▂▂▁▃▁▁▁▁▂▁▁▁▁▁▁▁▂▃▂▁▃▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sparkling-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pekrd8l2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pekrd8l2</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0gadjma3 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">hearty-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0gadjma3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0gadjma3</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145111-0gadjma3</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 15s 398ms/step - loss: 0.1641 - mean_squared_error: 0.1641 - mean_absolute_error: 0.3138 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1030\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 5s 284ms/step - loss: 0.0240 - mean_squared_error: 0.0240 - mean_absolute_error: 0.1287 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0573\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 4s 274ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0540 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0512\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 4s 273ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0451 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0587\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 4s 280ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0450 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0485\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 5s 286ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0416 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0426 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0627\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 5s 297ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0390 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0474\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 5s 302ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0363 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0904\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 5s 293ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0444 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0559\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 5s 304ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0354 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0527\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 5s 297ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0364 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0678\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 5s 292ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0320 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1179\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 5s 291ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0406 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0552\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 5s 288ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0333 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0716\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0324 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0533\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 4s 278ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0351 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0862\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 4s 275ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0391 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0460\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 4s 278ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0338 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0618\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 4s 275ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0304 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0956\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0383 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0768\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 5s 285ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0310 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0846\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 5s 301ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0344 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0681\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 5s 303ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0313 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0553\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 5s 291ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0314 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0605\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 5s 301ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0309 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0452\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 5s 297ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0346 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0764\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0575\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 5s 282ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0458\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 5s 289ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0396 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0618\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0282 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0612\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 4s 282ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0302 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0633\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0299 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0476\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 4s 277ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0281 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0579\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 4s 274ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0449\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 4s 273ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0317 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0522\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 5s 298ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0514\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 5s 296ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0810\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 5s 292ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0318 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0685\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 5s 305ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0285 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 5s 309ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0278 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0456\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 5s 280ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0352 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0668\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 4s 278ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0500\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 5s 291ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0551\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 5s 283ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0257 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0444\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Processing terminal ouput (stdout)...\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Done.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4265<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "0e6d1916fd014f9a8d6cb7fe85250c8d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.91MB of 2.91MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145111-0gadjma3/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145111-0gadjma3/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>44</td></tr><tr><td>loss</td><td>0.0012</td></tr><tr><td>mean_squared_error</td><td>0.0012</td></tr><tr><td>mean_absolute_error</td><td>0.02616</td></tr><tr><td>val_loss</td><td>0.00406</td></tr><tr><td>val_mean_squared_error</td><td>0.00406</td></tr><tr><td>val_mean_absolute_error</td><td>0.04443</td></tr><tr><td>_runtime</td><td>225</td></tr><tr><td>_timestamp</td><td>1626792896</td></tr><tr><td>_step</td><td>44</td></tr><tr><td>best_val_loss</td><td>0.00396</td></tr><tr><td>best_epoch</td><td>34</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▁▁▂▁▁▁▂█▁▃▁▄▂▅▃▄▂▁▂▁▁▁▂▂▂▁▂▁▁▃▂▁▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▁▁▂▁▁▁▂█▁▃▁▄▂▅▃▄▂▁▂▁▁▁▂▂▂▁▂▁▁▃▂▁▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▂▂▂▁▁▃▁▂▂▃█▂▄▂▅▃▆▄▅▃▂▃▁▂▁▃▃▃▁▂▁▂▄▃▂▁▃▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">hearty-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0gadjma3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0gadjma3</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 1s2mxsjb with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dry-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/1s2mxsjb\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/1s2mxsjb</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145556-1s2mxsjb</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 13s 545ms/step - loss: 0.2015 - mean_squared_error: 0.2015 - mean_absolute_error: 0.3528 - val_loss: 0.2286 - val_mean_squared_error: 0.2286 - val_mean_absolute_error: 0.4416\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 2s 287ms/step - loss: 0.1008 - mean_squared_error: 0.1008 - mean_absolute_error: 0.2429 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1095\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 2s 289ms/step - loss: 0.0221 - mean_squared_error: 0.0221 - mean_absolute_error: 0.1260 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0659\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 2s 309ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0727 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0501\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 2s 287ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0641 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0672\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 2s 281ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0558 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0601\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 2s 310ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0546 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0662\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 3s 313ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0499 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0527\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 2s 306ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0490 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1184\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 2s 307ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0536 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0776\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 2s 300ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0488 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0743\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 2s 315ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0465 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0993\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 2s 310ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0458 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0846\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 2s 301ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0457 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0786\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4455<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c9d75c71eafc4fd5b35991a9ca99971d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.92MB of 2.92MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145556-1s2mxsjb/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145556-1s2mxsjb/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>13</td></tr><tr><td>loss</td><td>0.00464</td></tr><tr><td>mean_squared_error</td><td>0.00464</td></tr><tr><td>mean_absolute_error</td><td>0.04692</td></tr><tr><td>val_loss</td><td>0.00832</td></tr><tr><td>val_mean_squared_error</td><td>0.00832</td></tr><tr><td>val_mean_absolute_error</td><td>0.07857</td></tr><tr><td>_runtime</td><td>50</td></tr><tr><td>_timestamp</td><td>1626793006</td></tr><tr><td>_step</td><td>13</td></tr><tr><td>best_val_loss</td><td>0.00447</td></tr><tr><td>best_epoch</td><td>3</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr><tr><td>loss</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▃▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▁▁▁▁▁▁▂▁▁▂▂▂</td></tr><tr><td>_runtime</td><td>▁▁▂▃▃▄▄▅▅▆▆▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▃▃▄▄▅▅▆▆▇██</td></tr><tr><td>_step</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dry-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/1s2mxsjb\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/1s2mxsjb</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 6wcewqyi with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">drawn-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/6wcewqyi\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/6wcewqyi</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145706-6wcewqyi</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 18s 332ms/step - loss: 0.1241 - mean_squared_error: 0.1241 - mean_absolute_error: 0.2716 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0498\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 8s 272ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0684 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0615\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0410 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0557\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0363 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0820\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 8s 263ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0400 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0745\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 9s 279ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0885\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 8s 274ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0360 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0896\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0321 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0818\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0331 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0579\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0341 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0842\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 8s 261ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0834\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4552<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d5e82e75986644a58cd7b5d3d873ef16",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.94MB of 2.94MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145706-6wcewqyi/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145706-6wcewqyi/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>10</td></tr><tr><td>loss</td><td>0.00173</td></tr><tr><td>mean_squared_error</td><td>0.00173</td></tr><tr><td>mean_absolute_error</td><td>0.02971</td></tr><tr><td>val_loss</td><td>0.0094</td></tr><tr><td>val_mean_squared_error</td><td>0.0094</td></tr><tr><td>val_mean_absolute_error</td><td>0.08336</td></tr><tr><td>_runtime</td><td>108</td></tr><tr><td>_timestamp</td><td>1626793134</td></tr><tr><td>_step</td><td>10</td></tr><tr><td>best_val_loss</td><td>0.00465</td></tr><tr><td>best_epoch</td><td>0</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▄▅▅▆▇▇█</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▁▂▁▆▅██▆▁▇▇</td></tr><tr><td>val_mean_squared_error</td><td>▁▂▁▆▅██▆▁▇▇</td></tr><tr><td>val_mean_absolute_error</td><td>▁▃▂▇▅██▇▂▇▇</td></tr><tr><td>_runtime</td><td>▁▂▂▃▄▅▅▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▄▅▅▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▄▅▅▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">drawn-sweep-21</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/6wcewqyi\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/6wcewqyi</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Sweep Agent: Waiting for job.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Job received.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: seck3gge with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">giddy-sweep-22</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/seck3gge\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/seck3gge</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145930-seck3gge</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 12s 535ms/step - loss: 0.2343 - mean_squared_error: 0.2343 - mean_absolute_error: 0.3938 - val_loss: 0.2243 - val_mean_squared_error: 0.2243 - val_mean_absolute_error: 0.4386\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 2s 281ms/step - loss: 0.0701 - mean_squared_error: 0.0701 - mean_absolute_error: 0.2006 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0844\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 2s 295ms/step - loss: 0.0220 - mean_squared_error: 0.0220 - mean_absolute_error: 0.1178 - val_loss: 0.0439 - val_mean_squared_error: 0.0439 - val_mean_absolute_error: 0.1920\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 2s 290ms/step - loss: 0.0434 - mean_squared_error: 0.0434 - mean_absolute_error: 0.1593 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0964\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 2s 286ms/step - loss: 0.0198 - mean_squared_error: 0.0198 - mean_absolute_error: 0.1137 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1131\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 2s 295ms/step - loss: 0.0252 - mean_squared_error: 0.0252 - mean_absolute_error: 0.1235 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0654\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 2s 288ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0808 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0897\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 2s 283ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0744 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0684\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 2s 280ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0746 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1374\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 2s 283ms/step - loss: 0.0179 - mean_squared_error: 0.0179 - mean_absolute_error: 0.1008 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0702\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 2s 281ms/step - loss: 0.0205 - mean_squared_error: 0.0205 - mean_absolute_error: 0.0966 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0801\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 2s 289ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - mean_absolute_error: 0.1064 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0573\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 2s 291ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0561 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0587\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 2s 292ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0755 - val_loss: 0.0239 - val_mean_squared_error: 0.0239 - val_mean_absolute_error: 0.1403\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 2s 299ms/step - loss: 0.0165 - mean_squared_error: 0.0165 - mean_absolute_error: 0.1054 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0702\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 2s 290ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0742 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0895\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 2s 301ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0861 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0597\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 2s 299ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1143\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 2s 302ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0919 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0600\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 2s 295ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0636 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0800\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 2s 306ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0482 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1076\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 2s 300ms/step - loss: 0.0147 - mean_squared_error: 0.0147 - mean_absolute_error: 0.1007 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0727\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Processing terminal ouput (stdout)...\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Done.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4649<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "90e571a8091b4009b64b69506da61c3a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.24MB of 2.24MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145930-seck3gge/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145930-seck3gge/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>21</td></tr><tr><td>loss</td><td>0.0123</td></tr><tr><td>mean_squared_error</td><td>0.0123</td></tr><tr><td>mean_absolute_error</td><td>0.08996</td></tr><tr><td>val_loss</td><td>0.0082</td></tr><tr><td>val_mean_squared_error</td><td>0.0082</td></tr><tr><td>val_mean_absolute_error</td><td>0.07266</td></tr><tr><td>_runtime</td><td>68</td></tr><tr><td>_timestamp</td><td>1626793238</td></tr><tr><td>_step</td><td>21</td></tr><tr><td>best_val_loss</td><td>0.0057</td></tr><tr><td>best_epoch</td><td>11</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▃▂▂▂▂▂▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▂▂▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂</td></tr><tr><td>val_loss</td><td>█▁▂▁▁▁▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▂▁▁▁▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▃▂▂▁▂▁▂▁▁▁▁▃▁▂▁▂▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">giddy-sweep-22</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/seck3gge\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/seck3gge</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0s6umnwu with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">solar-sweep-23</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0s6umnwu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0s6umnwu</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150117-0s6umnwu</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 10s 73ms/step - loss: 0.0816 - mean_squared_error: 0.0816 - mean_absolute_error: 0.2057 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0826\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0547 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0441\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0581 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0484\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0425 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0757\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0562 - val_loss: 0.0248 - val_mean_squared_error: 0.0248 - val_mean_absolute_error: 0.1432\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0567 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0708\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0409 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0992\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0615 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0769\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0447 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0400\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0417 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0546\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0454 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0830\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0648 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0489\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0323 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1274\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0403 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0644\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0371 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0281 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0469\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0347 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0402\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0343 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0769\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0452 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0369\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0311 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0777\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0379 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0398\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0372 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0584\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0361 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0333 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0352 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0974\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0404 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0823\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0363 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0322\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0289 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0358\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0328 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0655\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0439 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0344\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0365 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0346\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0335\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0334 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0350 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0351\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0285 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0342\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0292 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0328\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4790<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b3ecf7e8b7a94cc897775f25120ed4bc",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.98MB of 2.98MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150117-0s6umnwu/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150117-0s6umnwu/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>36</td></tr><tr><td>loss</td><td>0.00186</td></tr><tr><td>mean_squared_error</td><td>0.00186</td></tr><tr><td>mean_absolute_error</td><td>0.03351</td></tr><tr><td>val_loss</td><td>0.00276</td></tr><tr><td>val_mean_squared_error</td><td>0.00276</td></tr><tr><td>val_mean_absolute_error</td><td>0.04276</td></tr><tr><td>_runtime</td><td>44</td></tr><tr><td>_timestamp</td><td>1626793321</td></tr><tr><td>_step</td><td>36</td></tr><tr><td>best_val_loss</td><td>0.0021</td></tr><tr><td>best_epoch</td><td>26</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▃▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▂▁▁▂▁▁▂▁▁▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▂▂▃█▂▄▃▁▂▄▁▇▂▁▂▁▃▁▃▁▂▁▁▄▃▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▃▂▂▃█▂▄▃▁▂▄▁▇▂▁▂▁▃▁▃▁▂▁▁▄▃▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▄▂▂▄█▃▅▄▁▂▄▂▇▃▂▂▂▄▁▄▁▃▂▁▅▄▁▁▃▁▁▁▂▁▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">solar-sweep-23</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0s6umnwu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0s6umnwu</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0la9bxi3 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">desert-sweep-24</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0la9bxi3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0la9bxi3</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150216-0la9bxi3</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 13s 540ms/step - loss: 0.2059 - mean_squared_error: 0.2059 - mean_absolute_error: 0.3599 - val_loss: 0.2615 - val_mean_squared_error: 0.2615 - val_mean_absolute_error: 0.4762\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 2s 292ms/step - loss: 0.1187 - mean_squared_error: 0.1187 - mean_absolute_error: 0.2636 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1119\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 2s 299ms/step - loss: 0.0216 - mean_squared_error: 0.0216 - mean_absolute_error: 0.1244 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0577\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 2s 303ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0717 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0506\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 2s 293ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0455 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0562\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 2s 280ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0440 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0540\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 2s 283ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0391 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0512\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 2s 297ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0340 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0578\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 2s 295ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0335 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0541\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 2s 281ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0338 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0486\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 2s 286ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0312 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0534\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 2s 284ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0371 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0756\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 2s 291ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0391 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0537\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 2s 307ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0315 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0568\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 2s 299ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0299 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0480\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 2s 296ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0333 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0547\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 2s 302ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0308 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0522\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 2s 310ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0324 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0561\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 2s 297ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0305 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0788\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 2s 308ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0443 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0655\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4966<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4c5217f36c6443769d92a531d82da1e4",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.99MB of 2.99MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150216-0la9bxi3/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150216-0la9bxi3/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>19</td></tr><tr><td>loss</td><td>0.00326</td></tr><tr><td>mean_squared_error</td><td>0.00326</td></tr><tr><td>mean_absolute_error</td><td>0.04164</td></tr><tr><td>val_loss</td><td>0.00601</td></tr><tr><td>val_mean_squared_error</td><td>0.00601</td></tr><tr><td>val_mean_absolute_error</td><td>0.06551</td></tr><tr><td>_runtime</td><td>65</td></tr><tr><td>_timestamp</td><td>1626793401</td></tr><tr><td>_step</td><td>19</td></tr><tr><td>best_val_loss</td><td>0.0044</td></tr><tr><td>best_epoch</td><td>9</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▄▄▄▅▅▅▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▄▄▄▅▅▅▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">desert-sweep-24</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0la9bxi3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0la9bxi3</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: kmygmthk with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">bright-sweep-25</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kmygmthk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kmygmthk</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150407-kmygmthk</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 18s 347ms/step - loss: 0.1078 - mean_squared_error: 0.1078 - mean_absolute_error: 0.2600 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0650\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0799 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0790\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 8s 261ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0570 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0777\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0496 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0629\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0445 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0728\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0433 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0554\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 9s 287ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0388 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0596\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 9s 282ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0610\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 9s 280ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0353 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0737\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 8s 264ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0398 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0847\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 9s 272ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.1037\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0423 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0718\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0354 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0741\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0387 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0514\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 9s 290ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0380 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0730\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0343 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0677\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5103<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "278c61c1deb749b49b0a698a7e562bd3",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.01MB of 3.01MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150407-kmygmthk/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150407-kmygmthk/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>15</td></tr><tr><td>loss</td><td>0.002</td></tr><tr><td>mean_squared_error</td><td>0.002</td></tr><tr><td>mean_absolute_error</td><td>0.03369</td></tr><tr><td>val_loss</td><td>0.00648</td></tr><tr><td>val_mean_squared_error</td><td>0.00648</td></tr><tr><td>val_mean_absolute_error</td><td>0.0677</td></tr><tr><td>_runtime</td><td>153</td></tr><tr><td>_timestamp</td><td>1626793600</td></tr><tr><td>_step</td><td>15</td></tr><tr><td>best_val_loss</td><td>0.00504</td></tr><tr><td>best_epoch</td><td>5</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▄▄▂▃▁▂▁▃▄█▃▃▁▃▂</td></tr><tr><td>val_mean_squared_error</td><td>▃▄▄▂▃▁▂▁▃▄█▃▃▁▃▂</td></tr><tr><td>val_mean_absolute_error</td><td>▃▅▅▃▄▂▂▂▄▅█▄▄▁▄▃</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">bright-sweep-25</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kmygmthk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kmygmthk</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: cz14z0l1 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dauntless-sweep-26</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cz14z0l1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cz14z0l1</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150656-cz14z0l1</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 9s 70ms/step - loss: 0.0877 - mean_squared_error: 0.0877 - mean_absolute_error: 0.2002 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0780\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0486 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0444\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0398 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1217\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0494 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0532\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0543 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0713\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0487 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0600\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0580 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0459\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0367 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0585\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0375 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0441\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0325 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0691\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0404 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1077\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0458 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0389\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0359 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1209\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0534 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0385\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0279 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0358 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0390\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0394 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0889\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0343 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0454\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0406 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0553\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0351 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0326\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0366 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0338\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0340 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0461\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0345 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0350\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0289 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0350\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0315 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0371 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0335\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.8709e-04 - mean_squared_error: 9.8709e-04 - mean_absolute_error: 0.0241 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0474\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0477 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0390\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0330 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0337\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0332 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0358\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0277 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0320\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0359\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0292 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0436\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0342 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0325\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0266 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0336\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0266 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0318\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.7384e-04 - mean_squared_error: 9.7384e-04 - mean_absolute_error: 0.0241 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0359\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.6827e-04 - mean_squared_error: 9.6827e-04 - mean_absolute_error: 0.0237 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0388\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0306 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0620\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0247 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0393\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.2848e-04 - mean_squared_error: 9.2848e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0280 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0337\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.8257e-04 - mean_squared_error: 8.8257e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0358\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5238<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "34413587d922489db9ff277f7dc2ec89",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.03MB of 3.03MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150656-cz14z0l1/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150656-cz14z0l1/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>43</td></tr><tr><td>loss</td><td>0.00131</td></tr><tr><td>mean_squared_error</td><td>0.00131</td></tr><tr><td>mean_absolute_error</td><td>0.0273</td></tr><tr><td>val_loss</td><td>0.00231</td></tr><tr><td>val_mean_squared_error</td><td>0.00231</td></tr><tr><td>val_mean_absolute_error</td><td>0.03576</td></tr><tr><td>_runtime</td><td>48</td></tr><tr><td>_timestamp</td><td>1626793664</td></tr><tr><td>_step</td><td>43</td></tr><tr><td>best_val_loss</td><td>0.00205</td></tr><tr><td>best_epoch</td><td>33</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▂▁▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▂▁▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▃▂▃▃▂▂▂▂▂▂▃▁▂▂▂▂▂▂▁▁▁▂▁▂▁▂▁▂▂▁▁▁▁▁▂▁▁▁</td></tr><tr><td>val_loss</td><td>▃▂█▂▃▂▁▂▂▃▁█▁▁▁▄▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▃▂█▂▃▂▁▂▂▃▁█▁▁▁▄▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅▂█▃▄▃▂▃▂▄▂█▂▂▂▅▂▃▁▁▁▁▂▁▂▂▁▁▁▁▁▁▁▂▁▂▃▂▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dauntless-sweep-26</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cz14z0l1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/cz14z0l1</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 2jkvg6um with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sage-sweep-27</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2jkvg6um\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2jkvg6um</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150807-2jkvg6um</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 18s 334ms/step - loss: 0.1028 - mean_squared_error: 0.1028 - mean_absolute_error: 0.2194 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0960\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0577 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0556\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 8s 266ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0574 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0603\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 9s 277ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0468 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0665\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0453 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0937\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 9s 289ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0451 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0470\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 9s 285ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0460 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0568\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0403 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0703\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0493 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0653\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0394 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0554\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0375 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.1174\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 8s 271ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0427 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0725\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 8s 268ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0395 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0455\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 9s 285ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0391 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0874\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 9s 283ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0354 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0501\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 9s 281ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0385 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0737\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 9s 279ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0367 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0452\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0349 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0532\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 8s 267ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0352 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0714\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 8s 269ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0429 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0964\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 8s 273ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0407 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0597\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 9s 285ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0346 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0539\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 9s 283ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0380 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0689\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 9s 275ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0306 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0463\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 8s 265ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0338 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0469\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5439<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "372438d51e7e4ce6abcba28c0ef66890",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.33MB of 2.33MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150807-2jkvg6um/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150807-2jkvg6um/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>24</td></tr><tr><td>loss</td><td>0.00204</td></tr><tr><td>mean_squared_error</td><td>0.00204</td></tr><tr><td>mean_absolute_error</td><td>0.03332</td></tr><tr><td>val_loss</td><td>0.0045</td></tr><tr><td>val_mean_squared_error</td><td>0.0045</td></tr><tr><td>val_mean_absolute_error</td><td>0.04688</td></tr><tr><td>_runtime</td><td>229</td></tr><tr><td>_timestamp</td><td>1626793916</td></tr><tr><td>_step</td><td>24</td></tr><tr><td>best_val_loss</td><td>0.00412</td></tr><tr><td>best_epoch</td><td>14</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▂▂▂▅▁▂▃▂▁█▃▁▄▁▃▁▁▃▅▂▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▅▂▂▂▅▁▂▃▂▁█▃▁▄▁▃▁▁▃▅▂▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆▂▂▃▆▁▂▃▃▂█▄▁▅▁▄▁▂▄▆▂▂▃▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sage-sweep-27</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2jkvg6um\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2jkvg6um</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: jzsb15cf with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">glorious-sweep-28</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/h1sinbn9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/jzsb15cf\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/jzsb15cf</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_151212-jzsb15cf</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 12s 582ms/step - loss: 0.1459 - mean_squared_error: 0.1459 - mean_absolute_error: 0.2939 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0917\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 2s 312ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.1077 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0661\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 2s 306ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0612 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0800\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 3s 318ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0514 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0733\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 3s 324ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0503 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0557\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 2s 312ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0548 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0487\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 2s 300ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1201\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 3s 320ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0627 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0487\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 3s 315ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0450 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0483\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 2s 298ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0396 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0780\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 2s 282ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0538 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0709\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 2s 290ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0504 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0502\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 2s 298ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0365 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.1034\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 2s 287ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0465 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0659\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 2s 293ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0383 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1217\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 2s 294ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0474 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0493\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 2s 283ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0341 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1072\n",
            "Epoch 18/100\n",
            "3/8 [==========>...................] - ETA: 1s - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0844"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gFTu29dbi18i"
      },
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwsO8cDJPMdj"
      },
      "source": [
        "# picking the best values\n",
        "best_config = {\n",
        "    'epochs': 200,\n",
        "    'batch_size': 32,\n",
        "    'learning_rate': 0.0005,\n",
        "    'dropout': 0.2,\n",
        "    'optimizer': 'nadam',\n",
        "    'activation': 'tanh'\n",
        "}"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "029284dd-364a-4ed8-ccde-6e3a52ff98b9"
      },
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# layer 1\n",
        "model.add(GRU(units=128, return_sequences=True, input_shape=(window_len, 1), activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 2\n",
        "model.add(GRU(units=64, return_sequences=False, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 3\n",
        "model.add(RepeatVector(window_len))\n",
        "# layer 4\n",
        "model.add(GRU(units=64, return_sequences=True, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 5\n",
        "model.add(GRU(units=128, return_sequences=False, activation=best_config['activation']))\n",
        "model.add(Dropout(0.1))\n",
        "# layer 6\n",
        "model.add((Dense(1)))\n",
        "\n",
        "# defining the optimiser\n",
        "if best_config['optimizer'] == 'sgd':\n",
        "  optimizer = SGD(learning_rate=best_config['learning_rate'], decay=1e-5, momentum=0.9, nesterov=True)\n",
        "elif best_config['optimizer'] == 'rmsprop':\n",
        "  optimizer = RMSprop(learning_rate=best_config['learning_rate'], decay=1e-5)\n",
        "elif best_config['optimizer'] == 'adam':\n",
        "  optimizer = Adam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "elif best_config['optimizer'] == 'nadam':\n",
        "  optimizer = Nadam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total number of trainable parameters:  187137\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5UG8j_4r7kSu",
        "outputId": "efc01a44-1d10-484c-9630-ab24cb7a3fc0"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "gru (GRU)                    (None, 30, 128)           50304     \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 30, 128)           0         \n",
            "_________________________________________________________________\n",
            "gru_1 (GRU)                  (None, 64)                37248     \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "repeat_vector (RepeatVector) (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "gru_2 (GRU)                  (None, 30, 64)            24960     \n",
            "_________________________________________________________________\n",
            "dropout_2 (Dropout)          (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "gru_3 (GRU)                  (None, 128)               74496     \n",
            "_________________________________________________________________\n",
            "dropout_3 (Dropout)          (None, 128)               0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 1)                 129       \n",
            "=================================================================\n",
            "Total params: 187,137\n",
            "Trainable params: 187,137\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "1964ad57-2817-48d3-8644-b64d68ddcf9c"
      },
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=best_config['epochs'], batch_size=best_config['batch_size'])"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "39/39 [==============================] - 8s 18ms/step - loss: 0.0414\n",
            "Epoch 2/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0035\n",
            "Epoch 3/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0019\n",
            "Epoch 4/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0030\n",
            "Epoch 5/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0021\n",
            "Epoch 6/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0024\n",
            "Epoch 7/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0023\n",
            "Epoch 8/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0016\n",
            "Epoch 9/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0019\n",
            "Epoch 10/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0015\n",
            "Epoch 11/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0013\n",
            "Epoch 12/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0014\n",
            "Epoch 13/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 0.0011\n",
            "Epoch 14/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0014\n",
            "Epoch 15/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0013\n",
            "Epoch 16/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0013\n",
            "Epoch 17/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0014\n",
            "Epoch 18/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0013\n",
            "Epoch 19/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0018\n",
            "Epoch 20/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0011\n",
            "Epoch 21/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0013\n",
            "Epoch 22/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0015\n",
            "Epoch 23/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0013\n",
            "Epoch 24/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.7803e-04\n",
            "Epoch 25/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.5919e-04\n",
            "Epoch 26/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0015\n",
            "Epoch 27/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0011\n",
            "Epoch 28/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 29/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0010\n",
            "Epoch 30/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0010\n",
            "Epoch 31/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0014\n",
            "Epoch 32/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 33/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 34/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 35/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0016\n",
            "Epoch 36/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 9.4999e-04\n",
            "Epoch 37/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.2434e-04\n",
            "Epoch 38/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 0.0021\n",
            "Epoch 39/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.9900e-04\n",
            "Epoch 40/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0013\n",
            "Epoch 41/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.0558e-04\n",
            "Epoch 42/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.9670e-04\n",
            "Epoch 43/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.9860e-04\n",
            "Epoch 44/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 0.0010\n",
            "Epoch 45/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.6506e-04\n",
            "Epoch 46/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.8170e-04\n",
            "Epoch 47/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 48/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.2055e-04\n",
            "Epoch 49/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0010\n",
            "Epoch 50/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 51/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0010\n",
            "Epoch 52/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.8576e-04\n",
            "Epoch 53/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 54/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.2960e-04\n",
            "Epoch 55/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.3778e-04\n",
            "Epoch 56/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0012\n",
            "Epoch 57/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.4736e-04\n",
            "Epoch 58/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 8.1758e-04\n",
            "Epoch 59/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.8224e-04\n",
            "Epoch 60/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.8711e-04\n",
            "Epoch 61/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.9593e-04\n",
            "Epoch 62/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.3760e-04\n",
            "Epoch 63/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.9443e-04\n",
            "Epoch 64/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.2226e-04\n",
            "Epoch 65/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0010\n",
            "Epoch 66/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.1896e-04\n",
            "Epoch 67/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 0.0011\n",
            "Epoch 68/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.7529e-04\n",
            "Epoch 69/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.1503e-04\n",
            "Epoch 70/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.2152e-04\n",
            "Epoch 71/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.5998e-04\n",
            "Epoch 72/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.7514e-04\n",
            "Epoch 73/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.4611e-04\n",
            "Epoch 74/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0011\n",
            "Epoch 75/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2487e-04\n",
            "Epoch 76/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.7872e-04\n",
            "Epoch 77/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.9583e-04\n",
            "Epoch 78/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.1986e-04\n",
            "Epoch 79/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.1160e-04\n",
            "Epoch 80/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.1110e-04\n",
            "Epoch 81/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.4487e-04\n",
            "Epoch 82/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2636e-04\n",
            "Epoch 83/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.1831e-04\n",
            "Epoch 84/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.7044e-04\n",
            "Epoch 85/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.5268e-04\n",
            "Epoch 86/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.0273e-04\n",
            "Epoch 87/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.7877e-04\n",
            "Epoch 88/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.7507e-04\n",
            "Epoch 89/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.3807e-04\n",
            "Epoch 90/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0010\n",
            "Epoch 91/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.8777e-04\n",
            "Epoch 92/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.5567e-04\n",
            "Epoch 93/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.7808e-04\n",
            "Epoch 94/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.6015e-04\n",
            "Epoch 95/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.8773e-04\n",
            "Epoch 96/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2639e-04\n",
            "Epoch 97/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.8920e-04\n",
            "Epoch 98/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.7480e-04\n",
            "Epoch 99/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.8014e-04\n",
            "Epoch 100/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.8914e-04\n",
            "Epoch 101/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.0828e-04\n",
            "Epoch 102/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.9077e-04\n",
            "Epoch 103/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.2223e-04\n",
            "Epoch 104/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.9060e-04\n",
            "Epoch 105/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.3104e-04\n",
            "Epoch 106/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2476e-04\n",
            "Epoch 107/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 0.0014\n",
            "Epoch 108/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.4098e-04\n",
            "Epoch 109/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.7568e-04\n",
            "Epoch 110/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.5373e-04\n",
            "Epoch 111/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.6738e-04\n",
            "Epoch 112/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.4607e-04\n",
            "Epoch 113/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.3078e-04\n",
            "Epoch 114/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.3680e-04\n",
            "Epoch 115/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.5052e-04\n",
            "Epoch 116/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 9.9906e-04\n",
            "Epoch 117/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.8335e-04\n",
            "Epoch 118/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2379e-04\n",
            "Epoch 119/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.7646e-04\n",
            "Epoch 120/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.4632e-04\n",
            "Epoch 121/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2770e-04\n",
            "Epoch 122/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.7401e-04\n",
            "Epoch 123/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.9180e-04\n",
            "Epoch 124/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 7.5357e-04\n",
            "Epoch 125/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.7076e-04\n",
            "Epoch 126/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.9122e-04\n",
            "Epoch 127/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.5580e-04\n",
            "Epoch 128/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.3600e-04\n",
            "Epoch 129/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.1036e-04\n",
            "Epoch 130/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.9518e-04\n",
            "Epoch 131/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.9643e-04\n",
            "Epoch 132/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.1288e-04\n",
            "Epoch 133/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.1421e-04\n",
            "Epoch 134/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.0898e-04\n",
            "Epoch 135/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.9373e-04\n",
            "Epoch 136/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.2945e-04\n",
            "Epoch 137/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.5230e-04\n",
            "Epoch 138/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.8355e-04\n",
            "Epoch 139/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.2902e-04\n",
            "Epoch 140/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.1116e-04\n",
            "Epoch 141/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 8.0841e-04\n",
            "Epoch 142/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.0072e-04\n",
            "Epoch 143/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 9.5260e-04\n",
            "Epoch 144/200\n",
            "39/39 [==============================] - 1s 19ms/step - loss: 6.3057e-04\n",
            "Epoch 145/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.3428e-04\n",
            "Epoch 146/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.8699e-04\n",
            "Epoch 147/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.2893e-04\n",
            "Epoch 148/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.4679e-04\n",
            "Epoch 149/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.3049e-04\n",
            "Epoch 150/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.0587e-04\n",
            "Epoch 151/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.5500e-04\n",
            "Epoch 152/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.6659e-04\n",
            "Epoch 153/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.0920e-04\n",
            "Epoch 154/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.7610e-04\n",
            "Epoch 155/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.8325e-04\n",
            "Epoch 156/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.1012e-04\n",
            "Epoch 157/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.5851e-04\n",
            "Epoch 158/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.7446e-04\n",
            "Epoch 159/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.6935e-04\n",
            "Epoch 160/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2296e-04\n",
            "Epoch 161/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.3568e-04\n",
            "Epoch 162/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.8269e-04\n",
            "Epoch 163/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.3293e-04\n",
            "Epoch 164/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.4712e-04\n",
            "Epoch 165/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.9949e-04\n",
            "Epoch 166/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.2063e-04\n",
            "Epoch 167/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.5878e-04\n",
            "Epoch 168/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 7.0906e-04\n",
            "Epoch 169/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 8.6136e-04\n",
            "Epoch 170/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.3331e-04\n",
            "Epoch 171/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 4.9087e-04\n",
            "Epoch 172/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.0787e-04\n",
            "Epoch 173/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.3774e-04\n",
            "Epoch 174/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 8.2034e-04\n",
            "Epoch 175/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.5878e-04\n",
            "Epoch 176/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.7975e-04\n",
            "Epoch 177/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.4173e-04\n",
            "Epoch 178/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.9765e-04\n",
            "Epoch 179/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.5076e-04\n",
            "Epoch 180/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.1724e-04\n",
            "Epoch 181/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.8853e-04\n",
            "Epoch 182/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.8111e-04\n",
            "Epoch 183/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.2584e-04\n",
            "Epoch 184/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.5675e-04\n",
            "Epoch 185/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.1341e-04\n",
            "Epoch 186/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.4255e-04\n",
            "Epoch 187/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.2023e-04\n",
            "Epoch 188/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.8751e-04\n",
            "Epoch 189/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.7222e-04\n",
            "Epoch 190/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 7.2745e-04\n",
            "Epoch 191/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.3050e-04\n",
            "Epoch 192/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.8604e-04\n",
            "Epoch 193/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.7700e-04\n",
            "Epoch 194/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.7275e-04\n",
            "Epoch 195/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 6.0910e-04\n",
            "Epoch 196/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 6.0164e-04\n",
            "Epoch 197/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.8746e-04\n",
            "Epoch 198/200\n",
            "39/39 [==============================] - 1s 18ms/step - loss: 5.0011e-04\n",
            "Epoch 199/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 5.1938e-04\n",
            "Epoch 200/200\n",
            "39/39 [==============================] - 1s 17ms/step - loss: 4.9984e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f3b62ba83d0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rTXJN51l9Y-F"
      },
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H-D-XHyRjFMp"
      },
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "28acd26b-eac1-4d3a-fee6-6329a1ce5b63"
      },
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str, model_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAtoAAAF6CAYAAAAnGv9AAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdd3hUVfrA8e/JpHdIIbSQ0AkQQg2CFOm4ggUQy09B113Rxa7rLq5i113bCthAFHARUewIKAhIV1qklwAJLYT0RurM+f1xb5JJDykk4Pt5nnnC3Ln3nvfOTMg7Z95zjtJaI4QQQgghhKhbDg0dgBBCCCGEEFciSbSFEEIIIYSoB5JoCyGEEEIIUQ8k0RZCCCGEEKIeSKIthBBCCCFEPZBEWwghhBBCiHogibYQQlxmlFJDlVKnGzoOAKWUVkq1N//9vlLq6UvQ5lSl1Kb6bsdsa71S6p5L0dblRCk1SCl1uKHjEKKxk0RbiEZGKXWLUupXpVSWUuq8+e/7lVLKfHyBUipPKZWplEpWSq1WSnW2O/5ZpdT/yjlvUUJUjRgWKKUKlFLNS21/VimVb7ZdeEut4lye5n4rq/cMNH7m86CVUpF1eL4yr1kdnXuoUspmvgYZSqnDSqm76qMtrfU0rfUL1Yjpikhe7X4fMszbEaXUnNK/N5cDpVSI+Z4u/L2OUUr9o6L9tdYbtdadLmWMQlyOJNEWohFRSj0GvA28BgQBzYBpwEDA2W7X/2itPYGWwBlgfh3G4AFMANKA/ytnl6Vaa0+7m28Vp5wA5AIjlVJBdRVnQzE/8NwJJJs/LwdnzfeLN/AkME8pFVZ6J6WU4yWP7PK3VGvtBTQFbsT4vd15OSbbJl/zvXIr8IxSakzpHeR9IkT1SaItRCOhlPIBngfu11ov01pnaMNurfXtWuvc0sdorbOBz4GIOgxlApBqxjKlDs43BXgf2EOpxN3sNXtCKbXH7MGfr5RqppRaafYQrlFKNbHb/wul1DmlVJpSaoNSqqu5vUWpXvYLSiltPuaglPqXUirW/IZgkflc2/fiTVFKnVRKJSqlnqriegYBzYEHgVuUUkUfgJRSbkqpN8y20pRSm8xtZUo9zGsfYSYyM4DJZuy/m4/fpZQ6aD4Px5VS99bo2bdjvp++AVKAMLMEY7NS6i2lVBLwrFLKRSn1uvl8xCujHMTNLu4nlFJxSqmzSqm7S13TAqXUi3b3r1dKRSml0pVSx5RSY5RSL5nP4RzzeueY+3ZWxrczyWav+8125/FTSn1nnuc3oF1l11nR+8QuxneUUj+Yz+2vSql2do+PVEodMo+dA6hqPrf5Wuv9wGQgAXjMPF+ZMhdVstxmgVLqXfM9n2m+HkFKqf8qpVLMWHraHVvt3xnzGh8o1fYepdSN1biercB+oFvh+1cp9aRS6hzwcen3tFKqtVLqK6VUglIqqfB1NR+723wvpyilflRKtTG3K/O9d958bfcqpbpV5/kW4nIhibYQjcdVgAvwbXUPUEbv861AdB3GMQVYAnwGdFZK9a7picw/qEOBxeatvB7gCcBIoCMwDliJkXgGYPwf9aDdviuBDkAgsMs8J1rrs/a97MDXZvwAU83bNUBbwBOYQ0lXA52A4Ri9eF0quawpwPcYH3AwYy70OtAbGIDRw/l3wFbJudBarwJepvibgh7mQ+eB6zB6oe8C3lJK9arsXFVRxoeOGwFfYK+5ORI4jvHtyUvAqxivRQTQHuNbk2fM48cAj2O8Xh2AEZW01Q9YBDxhtjcYiNFaPwVsBKab1zvdfB+vBj7FeG1vAd5Vxb3u7wA5GB9w7jZvlSn3fWLnFuA5oAnG785LZsz+wFfAvwB/4BjGt0nVprW2YvwOD7qIw262azMX2GrG7Q8sA94stX91f2cWYvfhVinVA+P1/KGyYMwEeCDQFdhtbg7CeE+3Af5aan8LsByIBULMNj4zH7vejO0mM76NGP+/AIzCeF90BHzM5yGpstiEuNxIoi1E4+EPJGqtCwo3KKW2KKVSlVLZSqnBdvs+roza6AyMJPGOughAKRWMkZB+qrWOB36mbHJ8sxlT4W1dJae8A9ijtT6A8Ye3q33vnGm21jpea30G44/wr2Yvfg5Gwly0v9b6I7OnPxd4FuihzN5pu2t4EuhMcTJ2O/Cm1vq41joT+CdGT7T919/Paa2ztda/A78DPSiHUsodmGQ+P/kYSdCd5mMOZpsPaa3PaK2tWust5X0TUR1a6x+01sfMXuhfgJ+4uOTNXgvz/ZIIzATu0FoXDmQ7q7Webb7vcjCSqEe01sla6wyMDwG3mPveDHystd6ntc7CeA0q8mfgI631aq21zXxODlWw73UYSfjHWusCrfVu4EtgkpnETQCe0Vpnaa33YSSQFarG++RrrfVv5jUvpvgboWuB/eY3SvnAf4FzlbVVgbMYSWl1fa213mn3ns/RWi8yk/al2P0OmKr7O/Md0FEp1cG8fwfGB7q8SmJJxCiL+hD4h9b6Z3O7DZiptc41v0mz1w9oATxhvkY5WuvCXvxpwCta64Pm8/0yEGF+CM8HvDB+X5W5T1x1njAhLheSaAvReCQB/vYJoNZ6gFkDnUTJ39fXze0hQDZGb2yhAsDJ/sRKqcL7+VXEcAdwUGsdZd5fDNxmdzzA51prX7vbNZWc706Ke53PAL9Qthwl3u7f2eXc9zSvwaKUetUsQUgHYsx9/O2ucyzwEHCDXTLQAqOnrVAs4IjRg1vIPpm6UNhmOW7EeH5XmPcXA2OVUgFmHK4YvaC1ppQaq5TaZpZSpGIkgf5VHVeBs+Zr1VRrHaG1/szusVN2/w4A3DFqjFPNdleZ28F4Lu33t39eS2tN9Z+LNkCk/Qc4jA9IQWbbjtVttzrvEyp+vUtcn9Zal2q3ulpiJKvVVa3fgYvd30y8lwL/Z34QvBX4pIpY/LXWTbTWXbTWs+y2J5jnK09rINa+k8BOG+Btu9c1GaMcp6XWei3Gt0vvAOeVUnOVUt5VxCfEZUUSbSEaj60YXxtfX90DtNYnMRLLt1VxHe1JjATcXihGgnimilPeCbRVRn3rOYyvrP0xkryLopQagPH1/T/tzheJkbjXZDDVbRjPzQiMr5lDCpsy2+uE0dN5s9baPjk6i/HHvlAwxnNhn5xU1xSMJOakeT1fYHyouQ2jJzCH8uuHszASWMxYLRQnrwDafmellAtGj+7rQDPzQ9UKqlkvfJHs207ESNS62n2Q8jHLcQDiMJKqQsGVnPcUFddS61L3TwG/lPoA56m1vg+j3rngItqt9H1ShRLXp5RSpdqtkpnQjsPoaYayr/2lHhC8EONDy3Dggll7XROlXzN7p4DgCn6vTwH3lnpt3bTWWwC01rO01r2BMIwSkidqGJ8QjZIk2kI0ElrrVIy60XeVUhOVUl5mTW0E4FHJcasxksnCuslVGLXVdyilnJRSTTG+rv2ygh4nAJRSV2EkRv0wvkqPALph1M3WZHaNKRh1t2GlzucGjK3B+bwwPogkYSQuL9vF7o1RF/uU3VfWhZYAjyilQpVSnhTXQ1f4XJRHKdUSI1m5zu56egD/Bu7UWtuAj4A3lTE406KUuspMmo8ArkqpP5nfDvwLox6/UDwQYiZpYMww44KZZJo99aMqiW2BUmrBxVxPecxrmIdRDx5YeN1KqdHmLp8DU5VSYWYZzcxKTjcfuEspNdx8H7dUxdNQxmPUyxdajlHiUPiedVJK9VVKdTHLJ77CGKjpbtZtVzZIt8L3STX8gFHedJOZND6I0ateJaWUo1nbv8Q8prCu+nfznBFKKVcqL7epc2ZibQPeoOre7Jr6DeNDyqtKKQ+llKtZ4w3GQOh/quKByz5KqUnmv/sqpSLN34ksjA+qlY5pEOJyI4m2EI2I1vo/wKMYg+jizdsHGFOybank0NeAvyulXLTW5zES2XsxBtTtw5hF5L4qmp8CfKu13qu1Pld4w5hu8DozYYfi2THsb4H2JzITipsxaknP2d1OYPyxr8lsJoswSgbOAAeAbXaP9cIon3nLPi7zsY/MNjcAJzD+mJeYiaGa7gCitNY/lXp+ZgHhypgt4XGMQYbbMb4i/zfgoLVOA+7HqHs9g5FU2M9C8oX5M0kptcusjX4QI7FNweil/a6S2FoDm2twTeV5EmOA4Daz9GINZmmS1nolRt3yWnOftRWdRGv9G+YgToypIn+h+JuFt4GJypiFYpZ5vaMwasHPYpR2/JviDyPTMb5JOAcsAD6uJP7K3ieV0lonYtTgv4qRqHeg6ud1svleS8N4jZKA3lrrs+Y5j2DM4LMGOApckoV2SlkEdAfqZa5288PQOIzBsycx3tuTzce+xngtPzPfT/so/qDtjfHBLgXjNUvC+L9MiCuGMkrQhBBCXI6UMb3g70C4OYBPiBKUUncCf9VaX93QsQjxRyOTzgshxGXMnEGisukIxR+YWeJzP/BuQ8cixB+RlI4I8QdTTtlH4a2mU8cJIRohs7Y+AaME7dMGDkeIPyQpHRFCCCGEEKIeSI+2EEIIIYQQ9UASbSGEEEIIIerBFTkY0t/fX4eEhDR0GEIIIYQQ4gq3c+fORK11QHmPXZGJdkhICDt27GjoMIQQQgghxBVOKRVb0WNSOiKEEEIIIUQ9kERbCCGEEEKIeiCJthBCCCGEEPXgiqzRFkIIIYRorPLz8zl9+jQ5OTkNHYq4CK6urrRq1QonJ6dqHyOJthBCCCHEJXT69Gm8vLwICQlBKdXQ4Yhq0FqTlJTE6dOnCQ0NrfZxUjoihBBCCHEJ5eTk4OfnJ0n2ZUQphZ+f30V/CyGJthBCCCHEJSZJ9uWnJq+ZJNpCCCGEEH9A33zzDUopDh06VONzrF+/ni1btlS534IFC5g+fXq52wMCAoiIiCAsLIx58+aVe/x3333Hq6++WuM4G4ok2kIIIYQQf0BLlizh6quvZsmSJTU+R3UT7cpMnjyZqKgo1q9fz4wZM4iPjy/xeEFBAePHj+cf//hHrdppCJJoCyGEEEL8wWRmZrJp0ybmz5/PZ599VrTdarXy+OOP061bN8LDw5k9ezZgrLqdmJgIwI4dOxg6dCgxMTG8//77vPXWW0RERLBx40a+//57IiMj6dmzJyNGjCiTNFcmMDCQdu3aERsby9SpU5k2bRqRkZH8/e9/L9EjHh8fz4033kiPHj3o0aNHUaL/v//9j379+hEREcG9996L1Wqtq6erxmTWESGEuMx9tOkE59JzmHFtl4YORQhxkZ77fj8HzqbX6TnDWngzc1zXSvf59ttvGTNmDB07dsTPz4+dO3fSu3dv5s6dS0xMDFFRUTg6OpKcnFzhOUJCQpg2bRqenp48/vjjAKSkpLBt2zaUUnz44Yf85z//4Y033qhW3MePH+f48eO0b98eMGZn2bJlCxaLhQULFhTt9+CDDzJkyBC+/vprrFYrmZmZHDx4kKVLl7J582acnJy4//77Wbx4MXfeeWe12q4vkmgLIcRl7JOtMTy//ABKwX1D2tHEw7mhQxJCXAaWLFnCQw89BMAtt9zCkiVL6N27N2vWrGHatGk4OhopYtOmTS/qvKdPn2by5MnExcWRl5dXranwli5dyqZNm3BxceGDDz4oanPSpElYLJYy+69du5ZFixYBYLFY8PHx4ZNPPmHnzp307dsXgOzsbAIDAy8q9vogibYQQjRSWmvmbzrBxN6t8HUvm0Cv2BvHM9/tp3OQF4fOZbD5WCLXhbdogEiFEDVVVc9zfUhOTmbt2rXs3bsXpRRWqxWlFK+99lqFxzg6OmKz2QAqneLugQce4NFHH2X8+PGsX7+eZ599tsp4Jk+ezJw5c8ps9/DwqPpiTFprpkyZwiuvvFLtYy4FqdEWQohG6kh8Ji/+cJBlO0+XeWxLdCIPfxZF7+AmLLtvAF6ujmw6mtgAUQohLjfLli3jjjvuIDY2lpiYGE6dOkVoaCgbN25k5MiRfPDBBxQUFAAUlY6EhISwc+dOAL788suic3l5eZGRkVF0Py0tjZYtWwKwcOHCeol/+PDhvPfee4BRU56Wlsbw4cNZtmwZ58+fL4o7Nja2Xtq/GJJoCyFEI3Uu3eg1OhiXUWL7vjNp/PWTnYT4uzN/Sl88XRwZ2M6fjUcT0Vo3RKhCiMvIkiVLuPHGG0tsmzBhAkuWLOGee+4hODiY8PBwevTowaeffgrAzJkzeeihh+jTp0+Jco5x48bx9ddfFw2GfPbZZ5k0aRK9e/fG39+/XuJ/++23WbduHd27d6d3794cOHCAsLAwXnzxRUaNGkV4eDgjR44kLi6uXtq/GOpK/E+5T58+eseOHQ0dhhBC1Mrn20/x9y/3ENbcmxUPDQIgNimLCe9txcXRgS/vG0CQjysAi3+N5amv9/HzY0NoF+DZkGELIapw8OBBunSRwcuXo/JeO6XUTq11n/L2lx5tIYRopOLNHu2j5zPIK7CRkpXHnR/9RoHNxsK7+xUl2QCD2gcASPmIEEI0IpJoCyFEI1VYOpJv1RxLyGTZztPEJl1g/pQ+tA8s2Wsd7OdOGz93Nh5NaIhQhRBClEMSbSGEaKTi03NxczJqIQ+cTWf1wXi6NPemd5vyp9vqHdyEfWfqdj5eIYQQNSeJthBCNFLx6Tn0btMEF0cHthxLYkdMMiO7VDwvbIdmXpxLzyEtO/8SRimEEKIikmgLIUQjFZ+eQwtfVzoFefFt1BlsGkaENatw/05BRjnJ0fiMCvcRQghx6dRboq2Uaq2UWqeUOqCU2q+Uesjc3lQptVopddT82cTcrpRSs5RS0UqpPUqpXnbnmmLuf1QpNaW+YhZCiMaiwGojMTOXIG9XugR5U2DTNPN2oVsLnwqP6RDoBRjzbwshhGh49dmjXQA8prUOA/oDf1NKhQH/AH7WWncAfjbvA4wFOpi3vwLvgZGYAzOBSKAfMLMwORdCiCtVQmYuNg3NfFzp0txIoId3aYaDg6rwmJa+brg7WzhSgx5trTU5+dYaxyuEuLxYLBYiIiLo1q0bkyZN4sKFCzU+19SpU1m2bBkA99xzDwcOHKhw3/Xr17Nly5aLbiMkJITExLKzKoWEhNC9e3fCw8MZNWoU586dK/f4a6+9ltTU1Itut7bqLdHWWsdprXeZ/84ADgItgeuBwqWCFgI3mP++HlikDdsAX6VUc2A0sFprnay1TgFWA2PqK24hhGgM4tNzAWjm5Vo0+PFP3ZtXeoxD8jFu8T1EbNz5i25v9tporv73Wqy2K29tBSFEWW5ubkRFRbFv3z6cnZ15//33SzxeuDLkxfrwww8JCwur8PGaJtqVWbduHXv27KFPnz68/PLLJR7TWmOz2VixYgW+vr512m51XJIabaVUCNAT+BVoprUuXKrnHFBYcNgSOGV32GlzW0XbS7fxV6XUDqXUjoQEmd5KCHF5O5dmTO0X5ONK91Y+bP3nMAa2r2SVNa3h8zt4Jn0mc+MmwtZ3qt1WWnY+8zYcJzEzj8TM3NqGLoS4zAwaNIjo6GjWr1/PoEGDGD9+PGFhYVitVp544gn69u1LeHg4H3zwAWAkr9OnT6dTp06MGDGiaNlzgKFDh1K4aOCqVavo1asXPXr0YPjw4cTExPD+++/z1ltvFa0kmZCQwIQJE+jbty99+/Zl8+bNACQlJTFq1Ci6du3KPffcU61VbwcPHkx0dDQxMTF06tSJO++8k27dunHq1KkSPeKLFi0qWvnyjjvuAKgwjtpyrJOzVEIp5Ql8CTystU5XqvhrT621VkrVSfeJ1nouMBeMlSHr4pxCCNFQzmcYiXagtwsAzX3cKj8gLgrOH2Bv69vJi/2NnhvfwiFyGjhYKj8O+GRrDBm5Ru/V2dRsmnm7Vn6AEKLurPwHnNtbt+cM6g5jX63WrgUFBaxcuZIxY4xigV27drFv3z5CQ0OZO3cuPj4+bN++ndzcXAYOHMioUaPYvXs3hw8f5sCBA8THxxMWFsbdd99d4rwJCQn85S9/YcOGDYSGhpKcnEzTpk2ZNm0anp6ePP744wDcdtttPPLII1x99dWcPHmS0aNHc/DgQZ577jmuvvpqnnnmGX744Qfmz59f5bUsX76c7t27A3D06FEWLlxI//79S+yzf/9+XnzxRbZs2YK/vz/JyckAPPTQQ+XGUVv1mmgrpZwwkuzFWuuvzM3xSqnmWus4szSk8GPQGaC13eGtzG1ngKGltq+vz7iFEKKhnUvLwdFB4e/hUr0DopaAxYX0yEdZeuxjel+YA6e3Q3D/Sg+7kFfAR5tjCG7qzsnkC8Sl5dCzDuIXQjRu2dnZREREAEaP9p///Ge2bNlCv379CA0NBeCnn35iz549RfXXaWlpHD16lA0bNnDrrbdisVho0aIFw4YNK3P+bdu2MXjw4KJzNW1a/vz/a9asKVHTnZ6eTmZmJhs2bOCrr4zU8U9/+hNNmlQ8PO+aa67BYrEQHh7Oiy++SGpqKm3atCmTZAOsXbuWSZMm4e/vXyKuiuLw9PQsc46LUW+JtjK6rucDB7XWb9o99B0wBXjV/Pmt3fbpSqnPMAY+ppnJ+I/Ay3YDIEcB/6yvuIUQojGIT88l0Mul0sGPRQryYO8X0Pla2rZuyTpbBFbliOXg91Um2l/tOkNyVh7/nhDOXxbtIM4sWRFCXCLV7Hmua4U12qV5eHgU/VtrzezZsxk9enSJfVasWFFncdhsNrZt24ara82/SVu3bl1R4gyQmppa4jouVRzlqc8a7YHAHcAwpVSUebsWI8EeqZQ6Coww7wOsAI4D0cA84H4ArXUy8AKw3bw9b24TQogrVnx6DoHVLeE4shKyk6HHbQR5u4KrN8c8e8Oh5UbtdiW++/0s7QM9GdElEFcnB+JSs+sgeiHElWD06NG899575Ocbi2AdOXKErKwsBg8ezNKlS7FarcTFxbFu3boyx/bv358NGzZw4sQJgKISDS8vLzIyimdGGjVqFLNnzy66X5j8Dx48mE8//RSAlStXkpKSUifXNGzYML744guSkpJKxFVRHLVVbz3aWutNQEVdMcPL2V8Df6vgXB8BH9VddEII0bjFp+fQLqCSryy1hphNsH0eHFwO3q2g3TCUUnQJ8mZNZj86psyG+P0Q1K3CNrbHJPPw8I4opWju40ZcuvRoCyEM99xzDzExMfTq1QutNQEBAXzzzTfceOONrF27lrCwMIKDg7nqqqvKHBsQEMDcuXO56aabsNlsBAYGsnr1asaNG8fEiRP59ttvmT17NrNmzeJvf/sb4eHhFBQUMHjwYN5//31mzpzJrbfeSteuXRkwYADBwcF1ck1du3blqaeeYsiQIVgsFnr27MmCBQsqjKO2VHVGcV5u+vTpowtHvAohxOWo+7M/MqFXK54d37XkA7kZ8PtnsH0+JBwEV1/o+X8QeS/4Gn+IXllxkO82R7HF6T7U0H/C0CfLbeOjTSd4fvkBfn5sCO0CPLlt3jZy8q18df/A+r48If7QDh48SJcuXRo6DFED5b12SqmdWus+5e0vS7ALIUQjk51nJSOngAAvu4GQ2amw9kV4owuseBwcnWH8HHj0IIx+qSjJBugZ7Euc1ZsL/uFw7OcK2/l+z1nCmnsX9Zw393GTGm0hhKhD9T69nxBCiItTOJd1gKeZaGecg/cGwIUkCLsBrpoOrfqAKr86r2ewMXb8qGcfImIXQE46uHqX2Od0ygV2n0zl72M6FW1r7uOKY8ZpCmK24BgyoO4vTAgh/mCkR1sIIRqZ5Kw8APw8nY0Np341kuzbvoCbF0LrvhUm2QDNvF1p6evGLwXdQFshtuzCC59vP4VSMC68RdG2Fj5OfOD4Bg6LJxozmQghhKgVSbSFEKKRScoyerSbepiJdupJ42frftU+R0SwL18ntARHNzi+vsRjuQVWFv96kuGdA2nd1L1oe++EbwlziMUhPwvOyDgXIYSoLUm0hRCikUnKNHu0CxerSYkFFx9w8632OXq29iUmrYDclv3LJNrLf48jKSuPqQNCizdeSKbdvv+y29YejQMc/6W2lyGEEH94kmgLIUQjk1S6dCQ1Fppc3NRWhXXaMT59IeEQpMcBxgIUC7bE0D7Qk4Ht/YoP2DILS146T+b/hUSvznBCEm0hhKgtSbSFEKKRSc7Kw8XRAXdni7EhJRZ821zUObq19MbZ4sBmW3djQ/RqAHadTGHvmTSmDghBFdZ5W/Nh92LoOJrTTiEc9uhtLN+em1lXlySEaGQsFgsRERF07dqVHj168MYbb2Cz2Ro6rDKmTp1KaGgoERER9OrVi61bt5a73zPPPMOaNWsucXRVk0RbCCEamcTMXPw9XYxEWGujRrtJyEWdw8XRQlgLb35M9INm3WD1M5ASy8ebY/BydeSmXi2Ldz76E2SdR/WaQpCPKzst4WArgNgtdXthQohGo3AJ9v3797N69WpWrlzJc88919Bhleu1114jKiqKV199lXvvvbfM41arleeff54RI0Y0QHSVk0RbCCEameSsvOKBkFkJUJB90T3aYMyn/fuZdAomLgSbjfwlt7N230lu6dsad2e72V13LQLPIGg/khY+bmzObQ8WFykfEeIPIjAwkLlz5zJnzhyjvGzBAqZPn170+HXXXcf69esB8PT05IknnqBr166MGDGC3377jaFDh9K2bVu+++47ABYsWMANN9zAyJEjCQkJYc6cObz55pv07NmT/v37k5yczLFjx+jVq1dRG0ePHi1xvzyDBw8mOjoagJCQEJ588kl69erFF198wdSpU1m2bBkA27dvZ8CAAfTo0YN+/fqRkZGB1WrliSeeoG/fvoSHh/PBBx/U5VNYIZlHWwghGpnkrLzi+uyUWOOn78UvP9wzuAkfb47hUF4A3SbMw/HTybxomUefyM+Ld0qPM3q0Bz4EFkeCfFzZeD4DgiPhyCoY9WKlUwkKIWrn37/9m0PJh+r0nJ2bdubJfuWvCFuRtm3bYrVaOX/+fKX7ZWVlMWzYMF577TVuvPFG/vWvf7F69WoOHDjAlClTGD9+PAD79u1j9+7d5OTk0L59e/7973+ze/duHnnkERYtWsTDDz+Mj48PUVFRRERE8PHHH3PXXXdV2vb3339P9+7di+77+fmxa9cuAFatWgVAXl4ekydPZrdrpZcAACAASURBVOnSpfTt25f09HTc3NyYP38+Pj4+bN++ndzcXAYOHMioUaMIDQ0tt626Ij3aQgjRyCRl2vVop5qJdpOL79HuFWzMUrL7VCo5oSN4X93MTZZNBB/7X/FOO+aDtkHPOwBo5u1CYmYetm6TICkaTm6r1bUIIa4szs7OjBkzBoDu3bszZMgQnJyc6N69OzExMUX7XXPNNXh5eREQEICPjw/jxo0rOqZwv3vuuYePP/4Yq9XK0qVLue2228pt84knniAiIoK5c+cyf/78ou2TJ08us+/hw4dp3rw5ffv2BcDb2xtHR0d++uknFi1aREREBJGRkSQlJXH06NG6eEoqJT3aQgjRiGitScoyarQBSIkxftagR7ulrxsBXi7sPpmCq6MD/8kex+R2iTT9cQYEdYeAzrDtfQi7HvzaARDo5YrVpkkKvY4A5xmwcwG0uapuLk4IUcbF9jzXl+PHj2OxWAgMDMTR0bHEwMicnJyifzs5ORUNpHZwcMDFxaXo3wUFBUX7FW6vbL8JEybw3HPPMWzYMHr37o2fn91MSHZee+01Jk6cWGa7h4dHta9Pa83s2bMZPXp0tY+pC9KjLYQQjciFPCs5+baSPdoeAeBc/T8ohZRS9Gzty+6TqeaUft40+b+PjHrvz++ENTMhLwOGFP+hD/Qy/hiez7FA+CQ48A1kp9TJtQkhGqeEhASmTZvG9OnTUUoREhJCVFQUNpuNU6dO8dtvv9VLu66urowePZr77ruvyrKR6urUqRNxcXFs374dgIyMDAoKChg9ejTvvfce+fn5ABw5coSsrKw6abMykmgLIUQjUrT8uoddjXYNBkIW6hnchBOJWew/m87UgSEoN1+4ZTHkXTAGQYZdD826Fu0f6O0KwPmMXOg9FQpyYM/nFZxdCHG5ys7OLpreb8SIEYwaNYqZM2cCMHDgQEJDQwkLC+PBBx+scpBibdx+++04ODgwatSoOjmfs7MzS5cu5YEHHqBHjx6MHDmSnJwc7rnnHsLCwujVqxfdunXj3nvvLdEDX1+U1rreG7nU+vTpo3fskOWDhRCXn90nU7jx3S18NLUPwzo3g7cjoEVPmPRxjc637XgSt8zdhrerI9tmDC+ebeTg9/DjDLjtCwjsXLT/qeQLDPrPOv4zIZyb+7aGuUOhIA/u21w0KDLPmse2uG2cTD9JSm4K4f7hRDaPxNXRtbaXL8QfwsGDB+nSpUtDh9EovP7666SlpfHCCy80dCjVUt5rp5TaqbXuU97+UqMthBCNSHGPtgvYrJB2GrreUOPzhbfywcPZwm2RbUpO6ddlHHS+rsyMIgFm6Uh8ulmT2WsKtuUPE3P4O/Y4aqLOR7Hm5BrSctNKHOfm6MaEDhO4M+xOmns2r3G8Qog/jhtvvJFjx46xdu3ahg6l3kiiLUQjtWJvHP9dc4T/3RNJoJf0FP5RJGUaiXZTD2dIPwu2/FqVjrg7O7LmsSEEeLqUfbCcaftcnSz4uDkRnRrN27tWsDdhN/vbtCLz138B4OHkwaCWgxjfbjzd/Lvh4eTBjnM7+OHED3x26DMWH1xMmF8YA1oMYECLAfQI7IGTg1ON4xdCXLm+/vrrhg6h3kmiLUQjte9MGkfiM3lwyW7+9+dIHC0ypOKPIKmwR9vTGc7WfGo/e8193C5q/ya+5/glcw4b9uXTsWlH/uTWiu5xh+l++3eEBHTDQZV8Lw5oOYABLQcwPWI63x77li1nt/DRvo+Yt3ceHk4e9Avqx8SOExncanCtrkMIIS43kmgL0Uhl5RqDNLYdT+atNUd4YnTnKo4QV4KkzFzcnCxGmUfRYjW1S7QvxuHkw6T6vIOyebDy5iUEeQTBmZ0wbxjEbofA8AqPbe7ZnGk9pjGtxzTS89LZHredzWc3s/HMRh5c+yDzR8+nd7Pel+xahGjMtNZF0+SJy0NNxjVKF5kQjVRWnpWWvm5M7tOad9YdY93hylfrEleGEsuvp54EFPi0uiRtx2fFc/+a+3FULrgm3m8k2QAtekGz7sac2tXk7ezN8DbDeeaqZ/hq/Fe09mrNY+sf4/wFeR8L4erqSlJSUo0SN9EwtNYkJSXh6npxpZzSoy1EI5WVW4CHi4Xnru/KnjNpPLI0ih8eHERL34srAxCXl8SsPPw97ebQ9m4BjuXUV9ex7IJsHlz3IBn5GQxr8hzfHLHrcVMKek+BFY/D2d3GLCgXwcvZi7eGvsVtK27j4XUP8+GoD3F3cq+nKxGi8WvVqhWnT58mISGhoUMRF8HV1ZVWrS6u46PKRFsp1Qx4GWihtR6rlAoDrtJaz6/iUCFELWTmFuDu7Iirk4V3b+/FuNmb+NviXXx+71U4O8qXUVeq5Kzc4oGLtZxDu7ps2sZTm57iYNJBZg2bxbHYNuRZD5CWnY+vu5n0h98MPz1t9GpfZKIN0L5Je14d9CqPrH+Ex355jFnDZskgSfGH5eTkRGhoaEOHIS6B6vy1XgD8CLQw7x8BHq6vgIQQhgt5VjxdjM/Cof4evDYxnKhTqbyy8mADRybqi9aahIxc/AoT7dTYWg+ErI45u+ewOnY1j/d5nKGthxavDpmRW7yTqw90uwn2LoPczBq1Myx4GE/3f5pNZzbxyLpHykwRKIQQV5rqJNr+WuvPARuA1roAsNZrVEJcYTZHJ7IjJvmijsnKLcDd2VJ0f2z35tw1MISPN8ewal9cXYcoGpjWmheWHyQ+PZeewb5QkGtM71fPPdqrY1czb+88JnacyB1hdwDFy7AXzaVdqPdUyMuE/TWfkmtix4nMiJzB5rObmfT9JLbFbavxuYQQorGrTqKdpZTyAzSAUqo/IN0QQlyEF5YfYMpHv3EiMavax2TlFRT1aBf659gutA3wYOGW2LoOUTSw1386zEebTzB1QAi39Qs2FqpBg29wvbWZlpvGS9teIswvjBmRM4pmQChahj09t+QBrfqCiw+c21Ordm/tfCufjP0ERwdH/vLTX3hw7YNsObuFXGtu1QcLIcRlpDqDIR8FvgPaKaU2AwHAxHqNSogrTFp2Pll5VqZ/uouv7h+Ai6OlymOycq24u5Tcz9nRgS7NvTl4Nr2+QhUNYPbPR3ln3TFu7RfMzHFhRsKbWjdzaFfmv7v+S0puCu+NeK9EvXS5pSNgDIr0aQlpZ2rddjf/bnx9/dd8cuAT5u2Zx7pT63C1uNI3qC8DWw7k6pZX08b70k1rKIQQ9aHKRFtrvUspNQToBCjgsNY6v94jE+IKkp6dT+cgL/afTeflHw7y3PXdqjzGmHWk7K9oMy9X1qfLFGlXinkbjvPG6iPc1LMlL93QrXhe3XqcQzvfls8nBz5h2ZFl3Bl2J138upR43MPFEQ9nC+czcsoe7N0C0mufaAO4WFy4p/s93Nb5NnbE72Dzmc3GvNu/bQSgrU9bXh/yOh2adKiT9oQQ4lKrzqwjfwMWa633m/ebKKVu1Vq/W+/RCXEFKLDayMqzMqZbEAPb+zN/0wmuaufHmG7NKz0mt8CGp3M5iba3C1l5VjJzy5aWiMvLJ1tjeGnFQf7UvTn/mRiOg4Pd4hWpseDgZCS2dWhX/C5e2PYC0anRDG09lL9F/K3c/Zp5u5bt0QYjnrjalY6U5u7kzuBWg4tWjjyVfopNZzcxb8887vrxLj4Y+QFd/brWaZtCCHEpVKdG+y9a69TCO1rrFOAv9ReSEFeWjBxjhUdvVyeeHNOZHq18eGLZHk4lX6jwmKxcY7yxe3k92mb9bGbU13Bubz1ELOqbzab5cONxnv52PyO6NOO/t0TgaCn133FKrLFQjUPVZUbVkZKTwtObn2bKqilk5Wfx9jVvM3vY7Arnsw7wcuF86cGQAN6tIOs8FOTVSVzlae3dmls738rCMQvxcPTgzz/+mS1nttRbe0IIUV+qk2hblN0aoUopC+BcfyEJcWVJzzEqrbzdnHB2dGDObb0AmL5kN3kFtnKPycozknNPl7JJVjNvV/xJI/DH++CX/9RT1KK+RJ/P5OYPtvLiDwcZ0aUZc27riVPpJBvqdGq/7499z7hvxrH82HLu7nY331z/DcOCh1V6TKcgL/adSScnv9QkU4U97Bn1P/NNa+/WLBy7kJaeLbn/5/tZdmRZvbcphBB1qTqJ9ipgqVJquFJqOLDE3CaEqIb07MIebaN3unVTd/49IZzfT6Xy2o+Hyj0mK9c4xr2C0pGbLetxsOVDUnQ9RS3qWr7Vxjvrorn27Y0cPZ/J65N6MO/O3rg6VdBjnXqyTmYcOZJyhBmbZhDqHcoX477gkd6PVGtVxms6B5Kdb2Xb8aSSDxQm2ulnax1bdQR5BLFo7CL6N+/P81ufZ1f8rkvSrhBC1IXqJNpPAuuA+8zbz8Df6zMoIa4kGXY92oWu7d6cO/q3Yd7GE2UTGSArz+hFLK8GO9DTiVsta407ScfAVn6vuGhcXllxiNd+PMzIsGaseXQIE3u3wu7LwpLS4yArAZq2rXW78/fOx83RjTnD59C+SftqH3dVWz/cnCysO1Rq4K13SzPGuhkQWR0eTh68MfQNWni24KlNT3Ehv+KyKyGEaEyqTLS11jat9Xta64nm7QOttSxYI0Q1FZWOuJZcbvqpP3XB3dnCir1lv4Iv7tEu29vpeeoXWjskcMyrL1hzIf10PUQt6tKukyl8vOUEd/Rvwzu39yLAnD6vQrv/Z/zsMr5W7Z5MP8mqmFVM7jQZHxefizrW1cnCwPb+/HzoPFrr4gcucY92IQ8nD14c+CJnMs/wxo43LmnbQghRUxUm2kqpz82fe5VSe0rfLl2IQlzeCktHfNxLJtquThb6hDRl67FyerTNRLu86f3YuYAk1YQfvCcb9xOP1m3Aok7lFdj4x5d7CPJ25cmxnas+wGaFXYsgdAj4tatV2x/t+whH5cidYXfW6PjhXQI5nZLN0fN2S667eoOz1yVPtAH6BPXhzrA7+fzI52w+s/mSty+EEBersh7th8yf1wHjyrkJIaqhuEe7bNJ8VVs/jp7PJKHUNGqFgyHLJNrWfDi+nh1uV/N7rjk9YNKxug9a1Jnvfz/LkfhMXri+W/WmYzy2DtJOGsud10JidiLfHfuO69tfT4B7QI3OcU2nQAB+Pli6fKTu5tK+WA/0eoB2Pu14ZvMzpOXKIsVCiMatwkRbax1nzjCyQGsdW/p2CWMU4rKWnp2PgwKPcgY2XtXODxfySFj1KuQUJw2F0/t5lJ515MwuyM/ijG8fDme6GT2LMiCyUdtyLImmHs4M6xxY9c752bDtXXD3h87X1ardLw5/Qb4tnzvC7qjxOYJ8XOnawpu1h+JLPuDTssESbReLCy8NeonknGSm/zydLWe3lCxtEUKIRqTSGm2zFtumlLq44j4hRJH0nAK8XJ1KLkZi6tbCm3tdfiJs/5uwe3HR9qLSkdLJecwG45xBkZzPyEP7tYMkKR1pzLYdTyIytGm5r3+RjHOw9kV4MwyO/QyR08Cx5rOo5lnzWHp4KVe3vJpQn9AanwdgeOdAdsamkJJlN2+2d4sGKR0p1NWvKzMHzORkxknuXX0vN313E8uOLCOnoJx5v4UQogFVZ9aRTGCvUmq+UmpW4a2+AxPiSpGenY+3W/klA465qUxz+Na4c3hF0fas3AKUArfSU7+d2ADNuuHdNIg8q40833bSo92InUq+wJnUbPq39St/h7g98PU0eKsbbHgdgvvDlOUw+PFatftjzI8k5STxf13+r1bnARjWpRk2DRuOJhRv9G5pfDiw5tf6/DV1Q/sbWD1xNS8OfBGLsvDc1ucYuWwks3bNIiMvo8HiEkIIe9VZv/kr8yaEqIH0nPwyM44U2fgGrjqbVda+jI7dgrqQDO5Nycqz4u5kKdkLWpALp36D3ncVrQ6Z7tGGgNSvID8HnFwvwdWIi/HriWSAsom2zQbLH4ZdC8HJA/rcZfRi13LwY6Elh5YQ6hPKgBYDan2u8JY++Hs68/PB81wfYU7t590C0JAZb6xe2UCcLc5c3/56xrcbz474HXxy4BM+3Pshu87vYt7IeThZKvi9E0KIS6Q60/stxFikZjewC1hibhNCVEN6dkH5ifaFZPhtHqkdJvBewTiUtsKRHwGjR7vMQMjT26EgB0IH0czbmB4uwakVoCHlRD1fhaiJbceTaOLuRIdAz+KNWsPKvxtJ9lXT4dH9cO1rdZZkH087zt7EvUzoMKHiebovgoOD4ppOgaw/fJ4Cqzlne9Fc2g1XPmJPKUXfoL7MGjaLVwa9ws74nTy/7Xmp3RZCNLgqE22l1LXAMWAWMAeIVkqNre/AhLgcHUvI5H/bSo4VTs+poHTk2Fqw5uJ19b0ccmhPhpM/HP4BMBasKTNDxYmNgII2A4p6tE9bzN5EmeKvUTLqs/1KfjPx8/OwfR4MeABGvQhuTeq0zR+O/4CDcuDa0Gvr7JzDuwSSnlPAztgUY0PRXNoNMyCyMn9q+yfuDb+Xb6K/4Zvobxo6HCHEH1x1arTfBK7RWg/VWg8BrgHeqt+whLg8Ld1+in99s49MczAjmDXa5fVoR68Bt6Y4te5F5+Y+/OrUD6LXQn4OWbkFuJeecSRmIzQPB7cmRQueHLc2Mx5LPFJflyRq6ExqNqdTsunftmnxxo1vwKY3jan7Rr4AddDjbM+mbfxw/Af6N+9f4yn9ynN1hwCcLIq1hatE+rQ2fqY0zgmo7o+4n16BvXhr51syBaAQokFVJ9HO0Frbj7Y6DshIEyHKkZhpzId9Mql4iej0nIISy68DRo1u9BpoNwwcLHRr6cNXWeGQnwUntxilI/YzjuRnG6UjIYMAY7EbX3cnfk+wogM6w/H19X1p4iIVJqUD2/sbGw6vNHqzu0+CP71Z50k2QNT5KM5knuG6trWbGrA0TxdHIkP9+Lkw0Xb1Bs+gRvtNioNyYEbkDNLz0pm9e3ZDhyOE+AOrTqK9Qym1Qik1VSk1Bfge2K6UukkpdVM9xyfEZSXZnALtZHIWAAVWG5m55dRon9sDWQnQYSQA4a18+CW3A1pZIGYzWXmlarRP/QrWPAgdXLTp5j6tWbnvHDvdBkLsFqPmW9RYboG1Ts/30/5ztPX3oH1hffaRVeDqAze8Bw6Wyg+uoe+OfYeboxvDg4fX+bmHdQ4k+nxm8YdI/w6QeLjO26krnZp24tbOt/L54c/Zn7S/ocMRQvxBVSfRdgXigSHAUCABcMNYHbJuu02EuMwlZRqJdoyZjBSWkJSp0Y5eY/xsNwyA7i19ycKNVJ8wiN1MVq61ZKJ9YiMoCwRfVbTpH2M6c2PPljx7NBS01egxFTVyPCGT7s/+VHZhlhpKu5DP1mNJjOoaVDwg8WwUNO8B9TQTRnJOMj8c/4ExIWNwd3Kv8/MP72IsuFP0HPl3NEqWGvGAw/sj7qepa1Ne3vYyNm1r6HCEEH9A1Zl15K5KbndfiiCFuFwU9mjHmol2eraZaJfu0Y7+2Ui6PI3kpUMzT5wdHTjk2h3O7KQgJwsPZ7tez5iN0CLC+Mre5OCgeG1iOOc9OpPiGAiHltfjlUG+LZ+YtBjWn1rP8uPLOZd1rl7bu5SW74kjr8DGe+vrZjn7tYfjKbBpRnc1a+gL8uD8AWgeUSfnL8+SQ0vIseYwtevUejl/Gz8P2gV4FJePBHQyVjPNSqj8wAbk5ezFY30eY0/iHhkYKYRoENWZR1sIUU1JWWaNtlk6kp5jLOhRokY7J80oBbn64aJNThYHwpp7syG3E1dZ82hvO4iHi7miX24mnNlpTAVXiqPFgc4tfNgYH8n4Y6shLwucPWocv9aapJwkYtJiiEmPISYthtj0WGLSYzidcZoCXVBi/yCPILycvXB3dMfd0R0PJw/cndxxc3Qz/m1ua+vblnD/cDydPStouWGt3HcORwfF9pgU9pxOJbyVb9FjBVYbu06m4mRR9Ayu3gwhq/adI8jblR6F50k4aJT+tKifRPtC/gWWHFrCNa2voa1v23ppA2B4l2Ys2BxDZm4Bnv4djI0Jh4s+MDZG17W9jmVHlvHWzrcYHjwcHxdZ6FgIcelIoi1EHbmQV0BOvvH1dHGPtplou9r9qh3/xSj1aD+ixPHdW/rwze5g/q4UPWz7sTmPMx44tQ1sBRA6qNx2OwZ6suxEBOMt3xs95WHjLyruPGse7/3+HtvObiMmPYbM/Myix1wsLgR7B9OhSQdGthlJG+82hPiE4GJx4de4XzmUfIgL+Re4UHCBrIIsErITiu/nZ5FvK1450EE5MKjlICZ1nMRVLa7C2VLzJcbrUmxSFgfj0nl4RAc+3HiCjzadYMa1XVh/JIFfDiew4WgCGTkF+Lo7EfXMqCrPl51n5ZcjCdzcp3XxtH5no4yf9dCjnW/L552od0jLTePubvX7JeM1nQKZu+E4m44mMqZ1R2Nj4pEK35uNgVKKGZEzuHn5zbwT9Q4zImc0dEhCiD+QKhNtpZSL1jq31LamWmsZeSWEncL67OY+rpxNzSavwFZ+j3b0GnDxhlZ9SxzfvZUPn2xzIadlGJHnD7GnsEb7xEZwcITW/cttt2MzLz7O74jNzQuHY2svKtE+lX6Kxzc8zoGkA0QGRTKu3TjaeLch1DuUNj5taO7RHAdVfoVZ56adqzx/vjWfjPwMDiUf4te4X/k2+lt+Of0LLhYXegb2JLJ5JP2b96dL0y5Y6mmAYFV+3G+UwEzo1Yq07HwWbInhmyhjIZZALxfGdgsiPbuAVfvPkZNvxdWp8jg3HE0gJ9/G6K5BxRvjoozXvEloncWttWbD6Q28vuN1YtJjGBs6lojA+itNAegT0gQPZwuboxMZ07WrsarlZTC1ZKemnZjUcRKfH/6ciR0n0rFJx4YOSQjxB1GtJdiVUjdorfMBlFLNgeVA73qNTIjLTJJZn90z2JcVe89xJjW7uEa7MNHW2uh1bjukzKC4yFBjvuUDzt3p6fAlx53MwVsxG6FlH3Apv+yiQzNPrFhI9OtD4IlfqozTarMSnRrNF0e+4MujX+Lm6Masa2ZxTfA1NbnsSjlZnGhqacqAFgMY0GIA03tOZ8uZLWyL28a2uG28vett3uZtvJy9GB0ymn9F/uuSJ9wr952jW0tvWjd1597B7YhPz6FrCx+GdgogrLk3Sik+++0kq/afIykrj5a+bpWe78f95/Bxc6JfqN382YUDIR2qM/68akdTjvLa9tfYGreVEO8Q5gybw+BWg6s+sJacLA70aO1L1KlUY3pC/w6XRaINMD1iOqtiVvHKr68wd9RcnBxkeXYhRP2rTqL9DfC5Umoi0Br4Dni8XqMS4jKUbNZn92zdhBV7zxGblFXco11YOpJwGNJPw5C/lzm+jZ8HIX7ufJnant4qn5CMXZATCGd3w6DHKmy3QzMvAA659yIwbh2kngLf1iX2ybXmsvH0RlacWMHWs1vJzM/E0cGR4S3HcXP7qfQLrr+6XntODk4MaT2EIa2HAJCYnchvcb/xy+lfWHZkGSHeIUzpOuWSxAJwKvkCu0+m8sToTgAE+bjy7u1l+xD8PI0FgpIzK0+086021hyIZ2RYEE4WM6m25kP8fuj3l1rHeyH/Am/seINlR5fh6eTJk32fZHLnyZc0aYxo7cvcDceN3v2AThCz+ZK1XRu+rr482vtRZm6ZyZ9//DOvDX6NZh7NGjosIcQVrspEW2s9TynljJFwhwD3aq231HdgQlxuCktHegYbA+BOJl8gPTsfB0Xx4jPRq42f7cuf53hIxwA+29qep12caX3+F4j1AW0rWqimPJ4ujrT0dWOztSuDAU5sgJ63k2/L59e4X1l5YiU/n/yZrPwsmro2ZUzoGHoF9iKyeSTTPznGf4+d59O/XJpEuzR/N3+ubXstY0PHklOQw6xdsxjUahBtfS5NPJ9tP4mDght7tjQ2JJ+Ar+8Fz2YQ0BkCO0NAF/xcm+JIATmndoFHW2jSptzz/Xo8mfScguLZRgASDoE1F1r0rHW8b+58ky+OfMGtnW/lvh734evqW/VBdaxncBMKbJp9Z9Lo498B9iw1BuxW8I1LY3JTh5twc3Rj5paZTPp+Eq8OfpUBLQY0dFhCiCtYhYm2UupR+7tAMBAF9FdK9ddav1nfwQlxOSmc2q9TkBfjnXbQcfe3HG/5IF6uTsWD4qLXQEAX8GlV7jmGdApg4dZYNtq6MyRuLZzwBYsztO5Xadsdm3nyS4qFf3oEEBW9nOW5J/gp5idSclPwcvJiZJuRjA0dS7+gfjg6FP/ax6fvL+55bUBKKZ6+6mlu+PYGnt70NIvGLqr3EpK8AhtLt59iWOdmtCjspd4xH07vgCYhxnSJ5tzLPZWFvS4W3H7Mg91d4X6jr+FYQiberk4EeBk93j/uP4ebk4XBHe2WPy8aCNmjVvFGnY/i88Ofc1uX2/hHv3/U6ly1EdHaSO53n0ylj79Z65x0tE4+SFwKY0PH0qlpJx5b/xjTVk/jvh738dfwvzbYGAEhxJWtsr+wXnY3T+ArINpuW6WUUh8ppc4rpfbZbeuhlNqqlNqrlPpeKeVt99g/lVLRSqnDSqnRdtvHmNuilVIN99dFiCokZ+Xh7OiAp4sjE11/pf/5pQQlbi1erCYvy1jBsYLebID+bf1wdnRgta03Lhfi4PdPoVU/cKq8LrhjMy+OJ15gWavO3HFhH99Gf0tk80jevuZt1k9ezwsDX2BAiwElkmwwSiFSzA8IDc3fzZ8Z/WawJ3EPCw8srPf2fjpwjsTMPG7vH2xssBbAns+h42h4cBfMiINpm2DCfPKveojF1uGc9BtoJJU2Gxk5+dz4zmae+novADab5qcD5xjSMaDkgMm4KHD2gqbtahxrvi2f57Y+R6B7IA/0fKA2l11rAV4utGriZtRp+7U3NiYfb9CYLlZbn7YsvnYx17W9jnd/f5f7f76f5BwZ3y+EqHsV9mhrrZ+r5bkXAHOARXbbPgQe11r/opS6G3gCeFopFQbcAnQFWgBr+g5pBAAAIABJREFUlFKFw8LfAUYCpzGWfv9Oa32glrEJUecSM/Pw83BGKUVzSxrkw4DYd/nBf5axQ8wmYy7lUtP62XN3diQytClrj/ZEOylUdkq1pk7r0MwLq8sRXsw7xYAL2bx1/SLcq+hhzC2wkpFbgEOekSQW9bo3oLGhY1kdu5p3dr/DkFZDaOdb8+S0Kou3naRVEzeGdDB7n0+sh8x46HGrcd/JFYK6Q1B3nLpN4D8bVtHKaxfBSZshI44lv+eQnlPApuhEcgusHDibTnx6LmO6BZVs6GwUNA+v1UDIhfsXEp0azaxrZuHhVPN50utKRGtfdsWmgHcvY0N6XMMGVAPuTu68dPVL9GrWi1d+fYXpP09n8bWLi1fyFEKIOlDl//xKqdVKKd//Z++8w6MqsD783smUzEwmPZNOGiGh9yaCHUFFxQau6IK9rG1dXeuurriufu66uq69rR0UC4gUlSYovQcCIY0kpPeZyfT7/XFn0ggkIQmThPs+zzxh7txyLpPM/O655/xOs+chgiCsam87URQ3AK1TBIOADZ5//whc7fn3FcAXoijaRFHMRcqcT/A8joiimCOKoh34wrOujEyvo8psI1QveUPHKuuxKPSMUOTw79FF0gpHfgKVrsUY9bY4P91IlRCEM2actOAk9dleAgIq0cZ9glEdzUuVdejWLAS3q514pUy2W2warONrBEHgiUlPoFPpeHLjkzjdzvY3OgXqrA5+y6nkqjFxTRcYe74A/2Apo91GXOF6NUfd0mAWe2Uu723MJVinwmJ3sT2vmpUZ0tCb89KbDW9xOaF0f5f8swvqCnhzz5tcOODCHnGGORVGDwjhWK2VUrs/KLVQ3/eENkjv6zWDruHRiY+yr2If20q2+TokGRmZfkZHUiwRoijWeJ+IolgNnOoYsAyahPK1SC4mALFAQbP1Cj3LTrT8OARBuF0QhO2CIGwvL++9I4Fl+i9VZnujO4XOVoFu3DwISyVlz78kwXXkJ0k0q/xPup8bJyXw7d1TUI2dB0HxEDfupOtXW6v59/5HQVQySvtnDDNekI61/sWTbudt3vTG3lsI14bzxMQn2F+5nw8zPuyRYxw4VgfAGE/jKtY6OPg9DL8GlJo2twkL0JDjDANg155dlNbZeOHqEaj9FKw7VMbqjFImp4QR1NwzveIQOK2nPBFSFEX+tvlvqBQqn9Zlt6axTrugFgKjoa7IxxF1jctTLifUP5QPMj7wdSgyMjL9jI4IbZcgCAO8TwRBSADEUzzezcDdgiDsQKrz7rZvd1EU3xZFcZwoiuMiIiLa30BGppupNEulI9jqwWGGwBi48GlJbP30V6mONfWidvej9HgVM3Y+PLj/hMIPpIEwD6x9gIqGcgYr7uO3wyLimN/DqBtg/QuQ9eMJt20urqstvUdoA1yceDEXJVzE67tfJ6s6q9v3v7+oFoBhsZ5x3JnLwdkAI+accJtQvZrDthBAIP/IQdKjDEwfEsn4pBDCtv2LMVUruHhIK7u4LjZCLslawubizdw/5v5eZUWXFiW16eRVmiEwtk+WjjRH46fhd+m/Y2PRRg5X9w1fcBkZmb5BR4T2E8BGQRA+FgThE6TSj8dO5WCiKGaKojhdFMWxwOdAtuelIpqy2wBxnmUnWi4j0+uoMtul0hFTmbTAEAXpl0pZ7N9ek5adpBHyVHhp+0vsLNvJs1Oe5cohZ1FQ1UBWuRkueQkih8GSW6E674TxNv27d5SOeBEEgScmPkGAKoBHf3mUBmdDt+5/f1Et0UH+hHvuQLB/CQQPOG5aZ3PCAtSUmkXEwFi05gLGJYYgCAJXxDVwJ1/yT/WbXHvkUTBXNG1UvFuanuhtGuwEBXUFvLjtRSZGT+S6tOs6vX1PEqBRolP7UV5vA0M01B/zdUhdZk7aHLRKLf/L6PlGXBkZmTOHdoW2KIorgTHAIqQa6bGiKLZbo90WgiAYPT8VwJPAm56XlgJzBUHQCIKQBKQCW4FtQKogCEkeL++5nnVlZHoVDXYXFrtLEtr10khvAiKl6XkXPwcIEJosPbqJ5TnL+SzzM24achMzk2ZyQbqU8fzxQCmodTDnI2kS5eKbwGE9bvsKk63x373FeaQ5Ydownjv7ObKqs1i4eSGieKo30o5nX1EtQ2M82WxzJeSshWFXS+/XCQgP0FBhsuEIjCfSXUpKhOQbfb64GYAl+jlo8n6G1yfBYc9HZGMjZOes4xxuB49vfByloGThlIUoBN9bMLbGaNBQVm+TSkfqS6TftT5MsH8wswfO5oecHygxl/g6HBkZmX5CRz+9zwLO9TwmdWQDQRA+B34D0gRBKBQE4RbgekEQDgOZwDHgAwBRFDOAxcABYCVwjyiKLlEUncAfgFXAQWCxZ10ZmV5FpWcqZHiAGkzNhDZIZQMX/x3Oe6LbjldqLuXZzc8yxjiGB8Y+AEhTDUfEBfHTwVJppdBkuOptKN4DKx4+bh9VZnujrlQe2waV2cet42umxk3lzpF3sjR7KU9uepJ1BeuwOCxd2qfZ5iSnwsywWI+76MHvwO2UhPZJCNWrsTndVKqiGSCUkewR2mEFq8nTpKOd8Qzcvk563z+7DpY9ACX7Ot0IKYoif9/yd3aX7+apyU8RpY9qfyMfEGHQUF5vBUOM5KZjqfR1SF3mxiE34sbNpwc/9XUoMjIy/YR2J0MKgvAPYDzg/eS5XxCEs0RRfPxk24mieP0JXnrlBOs/BzzXxvIfgB/ai1NGxpd4yzBC9Rqoa1Y64mXy3d16vBe3vYjT7WThlIUtxm9fODiSl386TFm9FaPBH9JmwNQ/wS8vSX7cY25sEXN4gIa6BgfnHXgCSoySUOxl9mZ3jLiDyoZKluUsY2n2UlQKFWMjxzI1dirT4qaRGJTYqf0dLK5DFGG4tz57/9cQPkgqtTkJYR5HmSP2MKYK1ThD/KCmAOHYThIvfJrE4dFANNy2BtYshF//A4idqs+utlaz6NAivjr8FTcPu5mZSTM7dW6nkwiDhkMl9VJGG6DuGOjDfRtUF4kzxDE9YTpfHv6S20fcjkHd7sgIGRkZmZPSkYz2JcBFoii+L4ri+8AM4LKeDUtGpm9R2Si0PaUjChVoQ3rkWBuLNrI6fzW3Db+N+MD4Fq+dn25EFGFzTjNnzfMeh6RzYMUj4GwqEfE2b4bplBjsZVI9ceH2Hom5K/gp/Hhq8lNsnLuRd6a/w+/Sf0e5pZz/2/5/zPp2Fs9veR6Hu+M15vuaN0KaKyV/86FXtXuB4a3n3lkvOW7EiOVSEyVA+qymFZUamP4szP8ehl3Tpl2glzJLGStzV7Jw80JmfzebaYum8d/d/+X8+PO5f8z9HT4nX2A0+EulI4YYaUEftfhrzfxh8zE7zHx5+EtfhyIjI9MPaDej7SGYJk/soB6KRUamz+K1ygvTq6WhJ9767G5CFEW2lWzji0NfsOboGhIDE1kwbMFx63nrhvMrzE0LFX4weBbkrgdrLQREeGKWfL+DxTqUdo9f9da3If7EDYG+RO2nZlL0JCZFT+JP4//EMdMxPjrwEZ8e/JTMqkyeO/s54gxtj7Zvzv6iOsIDNBgNGsjaAIgdGgoUFiBltH+t0nO/EhQ1+ZDxNRiHQHgbzY6JZ0uPVpSaS1mRu4LlucvJrMoEQKfUMdo4mkuTL2WMcQwjI0b2yrrs5kQYNNRbnVh1Rvyhz1v8eRkaNpRJ0ZP4X8b/mJs2F51K5+uQZGRk+jAdEdrPA7sEQVgLCMA0TtF1REamv7Iqo4QgrYqoIH8po23oHis2k93EspxlLMpcRHZtNkGaIG4achPzhsxD7ac+bn2t2g+jQcPRqlZ1zBrPLXBbXaPQrjLbGRYbhMFRL70WPAAyvoHpC7st/p4kJiCGRyc8yojwETzz2zNctfQq7hl1DzcMvuG4UfNeRFFkV0E1w2MDpQmARTtAUHSojto7jCjHGSF9cv76KhRsgZkn9yv3sq1kG2/ueZNtJdsQERkePpw/jv0jE6ImkBaadsKYeysRBinDX+4OJh6hz1v8NefuUXdz04qbWHxoMfOHzfd1ODIyMn2Ydj/ZRVH8XBCEdUh12gB/FkVRbsmWkfGQVVrPjwdKue+CVPxVfpK9X0hil/e7+NBi/rn9n1icFoaGDeXZKc8yI3EG/sqTD7wZEKoj/4RCu75xUaWnRttokUopOOdR+O5u2Pk/OOeRLsd/urgk+RJGG0ezcMtCXtr+Ej/k/sBfJ/+VIWFDjlt35f4ScsrN3DHN4/5StB0iBoMmoN3jhOk9wpJgnAoNyrxfpPrrcbecdLsaaw2v7X6NRYcWEa2P5q6Rd3FJ8iUkBCZ0/mR7EV6hXWZxEx8Q2S8s/ryMNo5mcvRkPsj4gOvSrpOz2jIyMqdMR5ohfxZF8QKa2eo1WyYjc8bzxvpstCo/FpyVKC0wlUD8hFPenyiKvL7ndd7c8yaToydz7+h7GR4xvMPbDwjT8Vt2KweIVkLb7nRTb3USqlcTrfAI7YSzYOCFsP19OPtB8FPRV4gOiOa1819jVd4qnt/6PHO+n8OI8BFMi5uGUWckTBtGkCqUv6/OYlBkMNeMjZfs6Ip2QHrHWk60aj/0aj/MdhcNulgM5jyqLl7IL7nL+fXYr1icFrRKbePD38+fOnsd3+d8j9Vp5cYhN3Lv6HvRKrU9/L9xeojw1KyXey3++lFGG+CuUXdx04qb+CzzM24dfquvw5GRkemjnFBoC4LgD+iAcEEQpHFoEoGcYAy6jMyZRmG1haW7j3HT5ERC9Gqp2dBS2dJxpJO8u+9d3tzzJlcOvJK/Tv5rp0sKBoTq+GZXEVaHS8qwA2g8VnYeoV3VrHnTKFQD4NAZUU24XbKmO7gMhl11yufgCwRBYEbSDCbHTOabrG9YlrOM13a/1nKlcKgBHlh3Lk+l34SxobrdEffNCQ1QY65qIHf49fxg28tXG/+IzWUjXBtOmH8YVpeVBkcDDa6GxiE7lyRdwoKhCxgY0vmhNb0ZY6BXaHss/qpzfRxR9zLaOJrz4s/j7b1vc1nyZb3WZlFGRqZ3c7Jv8DuAB4AYYAdNQrsOeO1EG8nInEm8+0suggC3Tk2SFpjLpZ8Bp1bjvLV4K6/tfo2ZSTP521l/k+qIO0lCmA5RhMLqBgYaPSURrTLaXt/vML2aMHcVtaIOu0NJxMCLpLKXrW/3OaHtJUgTxPxh85k/bD4Wh4VKayVHa0q5+4v1xIS5uHCEH19kfsGVxzZzW5CBq4xpHerwdrldBBjK0ah+ZkHZDlyii8tTLmdu+lwGhw5u870SRfGU3sO+QJheg0JoltHO3+TrkLqdR8Y/wpXfXclL21/ipXNe8nU4MjIyfZATCm1RFF8BXhEE4V5RFP9zGmOSkekTVJpsfLHtKFeOiiUm2FMO4B1WcwoZ7YqGCh7Z8AiJgYk8PfnpUxZoA0KletKCKkszoe3NaNcBTRntsAANQa4qSsUQsNilutvxt8HqJ6B4rzTVsA+jU+nQqXR8/IuJuqp0Pr9hKkNiArlm0DU89/18/hUawuvr7yMpKIkIXQR+gh+iKGJz2Y57VDRU0KBrQK1VMCtlNrcOv7Vdl5P+KrIB/BQCoXrPdMiIaLDWgKMBVP2jNAYkX+1bht3C63teJ1IXydz0ucQb4tvfUEZGRsZDR+5JlwiCYBBFsV4QhCeRxrEvFEVxZw/HJiPTq/lgUx42p5s7z01pWljvmcoYYOz0/l7Y+gL19nrenf5ul5qvBoTqAcivbGbx1yqj3bx0JMBeQbYYjNI7hn30DbD2OSmrfUXfv3lVUGXhw015XD0mjiEx0gVHQmACb1uUHFIY+XbwdPLr8im3lOMSXSgEBWo/NRo/DSGqEPz9/FH7qQnxDyFIkUyc/3BmDRvs47PqHRgNGimjneLx0q47BmEpJ9+oj7Fg2AJy63L59OCnfHzgY86KPYu5aXOZGjsVP4Wfr8OTkZHp5XREaD8liuKXgiCcDVwI/B/wBjCxRyOTkenF1Fsd/O+3PGYMjWr0rgYkD22AgM5ltDcVbWJl3kruHnV3l2t5wwPUaFV+HK1qaFqo1EhDdLylI818vzXWckpJROcV2toQGHEd7PkCLvob6EK7FI+veXHVIRQKeGj6oKaFDisU7yFtwm38ecKffRdcHyfCoKHcZIMgT2a/5mi/E9r+Sn9enPYiD419iCVZS1hyeAn3rrmXaH001w66ltmpswnX9u2JmDIyMj1HRyYiuDw/LwXeFkVxOXC8ga+MzBnEZ1uOUm91cte5rURFvad0pBMZbavTysLNC0kMTOSWYSe3iusIgiAwIFTH0Spz84VSVrtZjbafQiDIX4mqoYxyMYQqS9PUSCbcDk4r7Pq4y/H4kt0FNSzbc4zbpiYTHdSspKFgC7hskDTNd8H1AyIMGsrqbBDmuTisPOLbgHqQSH0kd4+6m5XXrORf5/6LAYYBvLrrVS766iKe+e0Z3KLb1yHKyMj0QjoitIsEQXgLmAP8IAiCpoPbycj0S6wOF+9uzOXsgeGMiAtu+WJlFgQndMoa78vDX1JoKuTxiY+3OYTmVBgQpmt7aE2z0pEQnQqFrQbBZadUDKba3ExoRw6FhLNh27vgdtEXEUWRvy8/SHiAmjvOaXVBlLMOFErJ0lDmlDEaNFSYbLj1UaAOgIosX4fU46gUKi5KuIh3L36XpVcu5YqUK/jq8Fcsy17m69BkZGR6IR0RzNcBq4CLRVGsAUKBh3s0KhmZXsySnYWU19u4u3U2G6AsEyLSO7yvBmcD7+17j4lRE5kcM7nbYpQy2hZEUWxaqAlsbIasMNmlASz1kvdxnTKMKrOj5U4m3i6VAmSv7ba4TgfL9xYz5R9rmPPWZrbmVfHAhYMI0LSqkstZB3Hjm2rXZU6JCIMGp1ukxuqUstqV/V9oNycpKIm/TP4LIyJG8PKOlzHZTb4OSUamX5JVWs8rP2Xxw76+59ffrtAWRdEiiuLXoihmeZ4Xi6K4uudDk5HpfThdbt5an8PI+GAmp4S1fNHllIRGRFqH97f40GIqrZXcPerubo0zIUyH1eGWGtW8NMtol9XbJB9kT6mLXRfJltxKrI5m2euBF0o/j/WtvudVGSXUNjioabAzISmUueNbuUQ0VEPxbkg+1xfh9Ssap0PWWyE89YzIaLdGISh4bMJjVFmreGvvW74OR0am3/GvHw9z0csbePmnwzz29b6W31N9ALkEREamE/ywv4SjVRbuOifleOu26jxw2cHYMUeK3Npc3t//PpOjJzMmcky3xhnvsfhrMYpdY2jMaJfXWSWR5BHaV08by4HiOu79fBdOl6fWVK2H4AFQdrBbY+tp9hXVMmVgGKsfPIfFd0xG6dfqYy5vI4huSDrHNwH2I4wGfwBPnXYq1BaA3dLOVv2PYeHDmJ06m08OfEJObY6vw5GR6VfsK6whKVzPK3NHUdvgYMX+vpXVloW2jMxJcLrcfL2zkMOl9YiiyBvrshloDGD6kDYG0pR7BGkHMtqr81Zz/fLrcYtuHhr3UDdHDQkeoX20srXQls6j3GSTRJLH9/vcscN5etZQfjxQylPf7W8qOYkYDOWZ3R5fT1Hb4CC3wnx87XxzctZJ9cSdmAgp0zZJ4ZKV5P5jtRDuaYisyvZhRL7jvtH3oVVqeXHriy1LtmRkZLpElcVBXIiWWSNiSAjT8fnWgpYrlGb06gt8WWjLyJyA3QU1XPrqRv64eA/Xvvkbb67P4WBxHXeek4JC0cYgEq8gDT+x0Ha4Hby47UUeWv8QKUEpfDnrS9JCO15q0lFiQ7QIQlsZ7XqqLQ4cLhGjQSP5fmuCQK3j92clcs95KXy+tYCXf/KUABjTpXIAl6PtA/UC9hTU8IfPdlJttpNRVAvAsNg2Zj2KIhz8HvZ/DQlTOtWwKtM2EQYNaZEGfj1SKWW04YwsHwEI04Zx96i72XRsE+sK1vk6HBmZfkONxU6oXo1CITBnfDxbc6vILvf0Q5TshzemwPb3fBvkSWhXaAuCcJUgCFmCINQKglAnCEK9IAh1pyM4GRlf8sfFu6ltcPD8VcPRqf14YWUmMUH+XDEqpu0Nyg9B0ADQBLT5cqm5lFtW3cLHBz7md+m/48MZHxKl7/wEyY6gUfoRE6SloA2hXVZvBfDUaBe3mGL5p+lpXDcujld/zuLjzflSRtvtgKrcHomzq+wrrGXee1v4fm8xS3YWss8jtIe3FtpVufDZHFh0Axii4cKnT3us/ZUpA8PZlleFNShJWtCPLf7aY076HFKCUnh+6/PU2eWvSRmZ7qDabCdEJzlyXTM2DqVCYNE2T1Z7zbOA2KvvvHYko/0icLkoikGiKAaKomgQRTGwpwOTkfElDXYXuRVm5k6I5/oJA/j01omkRRp4ZEY6qtY1v17KMk9YNrK9ZDvXfX8dmVWZvDjtRR6b+BiqHs6oxodqW02HDASnlfJqqSFSKh0pBUNTGYwgCPx99nAuHGzkL9/tZ1OdZxBH+UGcLndL4e5jKkw25r23hSCtilRjAN/uLmJvUS1xIVpC9R6bRKcN1r8Ir0+C/E1w8d/hjvUQOcS3wfcjpgwMw+Z0s/OYDYLiz9iMNkjWf89OeZZySzkLf1sol5DIyHQRp8tNndVJsE76vjQa/LlwcCRf7SjEnvsrHF4prdhLk0HQMaFdKopi3+qGkpHpItnlJkQRBkVK9m/JEQGsukbLlVGVbftKu11QcVgqtWhFvb2eB9c9SKA6kM8v/ZyZSTN7OnwAEkL1LadDeqzsqmuqATylI8XHTbFU+in4z/VjGB0fzF2rzIgIlOfsYc7bmzn3pXUU1TTQG9iRX01tg4N/XjuS300cwP6iOtYfKm/KZhfvhdcnS+Pk02bCH7bB5HvkkpFuZmJyGH4KgY1HKiSLv4rDvg7JpwyPGM7do+5mRd4K3tv/Hg3O3vH3IiPTF6lpkMoWG5MnwNwJ8VSZbdQv/wvoI2DobKjqvU3IHRnBvl0QhEXAt0CjV5goil/3WFQyMj4mq0zK+qYaPWUgxXvgvYsAUcoMx0+AAZOlR+xYqCuSJg224aH9wf4PqLHV8NZFb5ESfPrGUw8I01FhsmGxO9GplY1Cu7amEgCjQS3VaBuOL1/Rqv14f/54Hli0m6O5EezbsomdzrGIIpTUNhAbrD1um9PNkTKpRm9wTCDJEQEsXH4Qk83J8DiP0F77HFhrYN7XMPACH0bavwnQKBkVH8ym7EpISoXdn0n18K1dec4gbh52MzvLdvLKzld4f//7XJFyBdemXUtyULKvQ5OR6VN4B6kF65qE9tTUCGYbDhNWsQ1mvijZ1mZ8A3az5JbVy+hIRjsQsADTgVmex2U9GZSMjK/JKjWhVAgkhusl0bDqCdCGwJVvwLCrobZIqg378BL4Rzx8dp20YSuhXWou5eMDH3NJ0iUMCTu95QoDvM4j3nIPf6niy1RbTYBGic5VL10ctCG0Qfpg+3DBBEISRzDJUMZr10sWhDVmu+RF7WOyy0xEBmoI9FcRYdBw04BK/qf6B6OMKql5M28jDLlSFtmngSkDw9lXWENDUArYTZLN3xmMn8KP1y94nQ8u/oCzY8/mi0NfcMW3V3DzqptZmbcSVx+dtiojc7qptngy2s2Etp8Aj2oWUyiGczTpOgj19IdU5/kgwvZpN6MtiuKC0xGIjExv4nCpiaRwvVSPfWgl5P0CM/8PRv1OegBYqqBgC+T/Ckc3S42DxpZi+s29b+IUnfxh9B9O+zkMaGbxlx4V2JjRbjDVEGEIluqz4YRC20vggOFQuJ6hkVpUOEnbeB988ws8nA1qXY+ew8k4Um5ioLGp8fTWgF+J9dtLg2UjFCZJgi/lPJ/FdyYxLiEEtwiH/UcwEuDIzzDuzP7qEASBcVHjGBc1jsqGSr458g1fHf6Kh9c/zEUJF/HCtBdQKeQyJhmZk1HVmNFu9rdycCmRpoM87LyDiJ2lPDLCc6eoKhcih/ogypPTEdeROEEQvhEEoczzWCIIQtzpCE5GxldkldU31mez5lmp9rS1cNCFSrW/05+FW3+Eeza3EJ5FpiK+zfqWq1OvJt7QajrhaSAhrFVG2yO0baYaz7Aaj+l/QDvOJxHp4HYQte0F3lH9k7hjq8BhafTg9gWiKJJdZmJgRJPQjq3aDID24BJpbLyggMSpvgrxjCIqSBpcc9QvQXLe8TYoyQCS9d+tw29l+ezlPDT2IX7M/5GH1j2E3WX3dWgyMr2aGov0N9JYo+12wZqFEJ5GTepVfLmjEEdQovRaL63T7kjpyAfAUiDG81jmWSYj0+tpnHLYCawOF0erLFK21FwBpfthzE2dbqJ7Z+87CILArcNv7XQM3UGQVoXBX9lMaEulI46G2iYPbWg3o03CFAgbiGb7G0xT7OVwmGc0u7myhyJvn+JaK2a7qymjXZ0vfcgGREHOWqleL3YsaE8yuEam24gIkEaxl5vskDZDGgrUiwdI+Ao/hR/zh83n8YmPs7ZgLQtWLaDMUubrsGRkei1VHqHttfdjzxdSw/X5TzBnQhLl9TbW5NlAF9anhXaEKIofiKLo9Dw+BCJ6OC4ZmS6TW2Fm3HM/8eX2ztWLHilr5jhybLe0MKZzI9KLTEV8d+Q7rk69use8sttDEAQSwnTkV7bMaLsb6lpMhWxXaAfHw707EJ4oZprwLuvCr5eWWyp6KPL28TZCpniFds466efMf0jj1SuzIFkuGzldBGlVqPwEyk02GDQDnFbI3eDrsHot16dfz8vnvkxWdRZzvp/DL4W/nNJ+qq3V/Jj/Iy/veJl3973LsuxlbCvZRkF9gZwtl+kX1FgcaJQKtGo/ya513T8gehQMvpxz0yKIDNTwxdajEJLUa4V2R1xHKgVBmAd87nl+PeC7VJaMTAewO93c9/kuaiwONmRVcO24eFxukeX7irlwsFFy4TgBXhGXGhkAmTsBAaJHdur47+97H0EQuGX4LV05jS4fVGTxAAAgAElEQVQzIFRHZrHkoOIV2mqXmdBADdSXSFnujnZpq7QIulBKvF/g5vIeiLhjeN+jxox2zlppEM2QKyFymHQXQq7PPm0oFALhARrK622QeLY04v7wCim7LdMmFyZcSEJgAg+vf5i7f76bmUkzOTfuXFKCUzCoDeiUOnQqHSqFCqGZg0u5pZxPDn7CL0W/kFUteZYrBSVO0XncMYw6I+mh6YyKGMWlyZcSE3CCYVsyMr2UarO9qWxkx4dQexRm/RsEAaWfwHXj4nlt7REyYsMJL95J9pEKzhoY7tOYW9MRoX0z8B/gZUAEfgXO7C4XmV7PP388xL6iWmKDtewukBwyVmWUcN/nu5iaGs67vx+HRunX5raHS+slx5EwPRzbBeGpjY4dHaHGWsPS7KXMSpnls2y2lwGhen48UIrLLeKn0iEKCgxCg1Q6UloCAZHt76QZQVoVRTbPx4bZhxntchOB/kqpZMHthpz1MOhiyVJu4h2w6VWIG++z+M5EIgweoa3UQMr5cHjVGW/z1x6pIaksnrWYN/e8yccHPmZF7orj1lEKSrQqLWH+YUTpo9hVtgun28m4qHHcO/peJkRNYGj4UBwuB6WWUkrMJdLDUsLRuqNkVmWyoXAD/9n1H6bETuGOEXcwyjjKB2crI9N5qi32Jmu/A0sharj0+eLhunHxvL4umx9LdNynLCfbZTvBnnxHR1xH8oHLT0MsMjLdwsasCt5an8PvJg4gIVTH8ysyqTTZ2HikApWfwC9ZFdz/+W7+MmsIMcFa6q0OMo7Vsb+olr2FtWw8UkFiuB61UgFFOyH53E4d/6usr7C6rMwbPK9Hzq8zDAjV4XCJlNRZiQ3W4lIFEOBokEpH6kvaLxtpRbBWTbnNCSodWHx3Y+tImeQ4IggClOyFhqqmUpExN0kPmdNKRICG4lqr9GTQDDi4FIp3Q8xo3wbWy1H7qblvzH3cMux2Ck355Nbl0uBowOK0YHFYsDgtmB1mKhoqKKwvZGbSTG4bfhsDAge02I9KoSIpKImkoKTjjuEtZVt0aBE3rriR1JBUhoUNIzUklYTABBIDE4kJiEGp6EjuTUbm9FFtcRCq9/RH2eogMLbFxXt8qI4f7ptKVH4VihVfc1ZY7+sNafevShCEJOBeILH5+qIoyuJbptdRabLxx8W7GWgM4KlLh7C3sAaA3QU1/HqkgmmpEUxOCWPh8oOszCghJsifY15xAEQH+TM2IYTrxsVDXbFUx9wJoeBwOfj84OdMip5Eakhqt59fZ/E6j+RXmokN1mL300sZ7UCNdG6dzPoGaVUcq20AfbhPS0eyy0xcMNgoPfGO3o0a5rN4ZKSM9t6iWulJ6nRAkLLastBul9UZJdz/xW4W3TGJGYlp3b7/2IBY7h51N/OHzufrrK/ZeGwjawvW8s2RbxrXUQpK4gxxJAYlcmXKlZw34DwUQkfauGRkeo5qs53BMZ47ynazVJbWirQoAzg8fzdVOdJd6F5ERy5fvwXeQ3Ib6byFg4zMaUIURf68ZC81FgcfLpiAVu3H8LggghQNJC67Bn31HM6afCm3nJ3EhYMjWb6vmIPFdVwfaWBYXBDDY4MI97gnAJC5XPrZCaGwOn81ZQ1l/PWsv3bz2Z0aXi/tgioLpIBVoSeABowB6lPKaAfpVNQ1OMAY7rPSkWqznUqzvak+2+atQe94eY9M9xNh0FBpskllSgER0kXcoRVw7qO+Du20UlZvxeESOzU9dXdBDQ0OF/d/sZvv7z0bvaZnMss6lY55Q+Yxb8g8RFGk2lZNfl0+ebV55Nflc7T+KPsr9vNAwQOkhaTx9FlPMyxcvoCV8R3VFnvTsBq76cQ9RaHJUn+OKJ6+4DpIR/6araIovtrjkcjIdJGPN+fz08Ey/nLZEIZ4roB1aiWzQ/JJMe/ld34RjB0olRQkhuu5Z1qCZAsXktC2dd+xXSD4STVhHUAURT4+8DGJgYmcHXt2t51XV4gO8kepEBqdRyyClkChgSCFRXKGaM9DuxVBWhU1FgeiPhzBO/DmNHOkvFUjpK1ls6eMbzAaNLhFacBEhEEjNUL+/DfpzlBgtK/DO2385dsM9h+rZf3D5+Gn6Fh9el6lGYNGSV6lmWeWZfDiNZ1rvj4VBEEg1D+UUP9QRhubkglOt5MVuSt4dder3LjiRh4c8yA3DrmxRUOmjMzpwOUWqWlwEOIdVnOCjDYA+jC4a9PpC64TdOS+0CuCIPxVEITJgiCM8T56PDIZmU6QWVLHwuUHOTctggVTElu8Ni3gKAAXK3eQZvSMVN/7Jbw2Hl4bC8/HwTvnw/d/hJ0fQfFeaXz3oRVgHNzh6Ye7ynaRUZnBvMHzes0tV6WfgtgQbaOXdrXLn1ClDaGjHtqtCNaqcLpFnP5hPstoNzqORHiEtSy0ewURBo+Xdr2nGWmQx3HkDBteU1zbQGF1Az8f7PiFaE65mfFJodx6dhKLtxdSXNvQgxGeHKVCyayUWXw16yumxk7l/7b/H/euuZcaa43PYpI5M6lrcCCKEKJXS03vdnPHXbJ6ER1RA8OB24B/AP/0PF7qyaBkZDrL8z9kEuiv5KVrRx6XeRniPoxbFAinBqFwO2x9B76+VfqDveQlGH8rKLWwdzEsvRfemgofXiqZ4ndijPQnBz8hUB3IrJRZ3X16XWJAqE4qHQHK7GqC/awd99BuRZBWyixY1SGS0D7BbTpRFHn3lxz2FHT/l/ORMhMapXQBAUgNMiodKNp2kZE5PXiFdlm9p+fBOMQzJXKVD6M6/VRbHIB0h60juN0ieZVmksL1XDNWmiC7/pDv+h+8BGmCeOW8V3h0wqP8euxXrll2DZlVmb4OS+YMosWwGmcDIPZJod2R0pFrgWRRFGX3e5leS8axOi5Ij2xZYw3gdhNRl8Fy90QuVW5HsesjOPg9JJ0DN34LCkWLdanKkZwS/NSSD3MHs6Q5tTn8fPRnFgxdgE7VsQz46WJAqI7l+4ox2ZyU2dRM0lqaTYXs3C39YM8tPIsyBIPLJtXMtfF/9I8Vmby1IYcrRsXwytzubYY7UmYiOSKg6ba8rV7OZvcCIgKkMeyNGW1BkMpHdn4MjgZQdbxmuS9TbbHjr1LwS1YF2eUmUiJOcKvbQ2m9FavDTVK4nkHhGqYb8inbmQe6aOnvy1YPNpNkaRZ/ei0rBUHghsE3MNo4mvvW3MfvV/yeZ856himxUzCo5b85mZ7FO349WKeSstnQb4X2fiAYkOfEyvRKqs12Kkw2acBMa6py8LPVMvmiaxCOBsCuT0BQwIznW4pskJ6HD5QeHaSyoZL397/PokOL0PhpmJs+t4tn0/0MCNVRY3GwI7+aHDEavWMtbH1LerGTPtqBnox2nV8QkSBltVuJ3LfWZ/PWhhzUSgWHSuq74QxacqTMxJiEkKYFstDuFYQbpIalclMzH9tBM2Dr25LPeRvDa/YW1hAfopNuDfcDHC439VYnN05K4IttR/nj4j1cPjKGiUmhDI4ObLNmO7dcEhBJ4XqELW/wtuMvUAJ81XrFDbBgec+fRBsMCRvCp5d8yh/W/IGHNzwMSE4mqSGppIWkMShkEGmhacQFxOEn31mS6SaqzdLdoVC9GuxV0sIT1Wj3YjoitIOBTEEQtgGNn6CyvZ9Mb+G45rjmFG0HIDxtCuiUcOQnGDsfIod26Zi1tlr+l/E/Pjn4CTaXjVnJs7hz5J0+H1DTFl6Lv58OlPK5awYPJeXjX7hJ+sDSdO5DK1grCaJaIUhaYK6A0Cbf3sXbC3h+RSazRsYQE+TP+5tycbjcqPy6p2bdYndSVNMg2S96kYV2r0CnVhKgUTZltOGkUyJFUWTu25u5cXICj80cfJqj7RlqPGUjqZEBPHHJYN7dmMuz3x8AIECjZExCCJOSQ7l5ShL+KkmQ5lY2CW127aJBG83vau7kL9dMYHRKvPS7vex+yS/eh0TqI/l45sdsLdnKoapDHK4+zKHqQ2wo3IBblAzJtEot0xOm84fRf+iVn4UyfYsWpSP9PKPdO3zKZGROQFapd2R6G2KrcLv0RR+RBsHxUJ0HU+4/5WOZ7CY+OfgJH2V8hMlhYkbSDO4aeVebQyJ6C/Eei7+fDpaiUmlQz/0Y3rtAqmvuJEGe0pEq0WOlZ2lqiFyVUcKjS/YybVAE/7x2JD/sK8bhEskprSUtOrhbJgTmeLJ/LS6qZKHda2icDulFqZFKsNqYEllvc2Kxuzha2fsGTJwqTbe61Vw+Mob5U5Iorm1ga24V2/Kq2JZbzcsrMxBFuOc86c5ZbrkZf5WCqEB/KDuIKm4k++sGsaI0hNGemm2C4nrFpE1/pT/T4qYxLW5a4zKr00p2TTaHqw+zp3wPS7OXsipvFZcmX8rlKZcz2jhadiyROSW8f08hejWY+rHQFkVxPYAgCIEdWV9G5nSTVVaPXu1HTJD/8S8W7ZB8sBV+khi76JlTPs5nBz/jjT1vUGOr4fz487ln9D0MChnUhchPD14v7eJaKyPjglAEhMGtPzW5dXSCYE/pSLnbI2w9ziO/ZVdy7+e7GBEXzJvzxqBWKkiLMqDBTuKHY+Dip2Hs77t8Lo2OI62Ftr73XuicSUQEtBLaAINmwsFlULwHYppGf1ebpS/RohrfOWx0N95GyBCdCixVULCV6MosrqjI4orqI+A6Av6l/HfXH+E8KYeVW2EmMUyPwu2AyiMo0y5hYkMY6w6V8fglnky/IVpqBrPWgDbkRIf3Cf5Kf4aGD2Vo+FBmp87mthG38eaeN/kh9weWZC0hLiCOS5MvZXj4cJKDkokJiJHLS2Q6RJXZgcpPQK/2k/oV4KSlI8dMx4gJiDlN0XWcjkyGvB34G2BFGlgjACKQ3LOhych0jBbjuJtjroSSfTD5ni4fY1PRJp7f+jwToyfy4JgHGRretdKT04nBX0WoXk2V2c4gb9ZfHy49OolO7YdSIVDq8nzYmcvZX1TLbR9tZ0Cojg/mj0enlj5WUiICGOpXgMZeJQ3/6SahrRAgMbxZNl7OaPcaIgwaDpbUtVzYOCVyZUuh7RGlx/qR0K4yN7vV/cVcOPqr9II2VJpWN/AiKg79yuza/1FneojAgAByK82kRRqgKhvcTjAO5lxNBAuXH6Sw2kJciK7Jh7y+pNcJ7dbEBsTy7JRneWzCY/x09CeWZi/l7b1vIyI5FKkVahKCEkgKTGJw2GCmJ0w/bpy8jAxIGe0QnVr6bm+ndOT7nO95+teneXLSk1w58MrTGGX7dCRD/TAwTBRF35jmysi0Q1apiSkD2xCNaxeC6IaR13dp/w63gxe2vcAAwwBev+B11H59r3FrQKiOKrNdGlXbBQRBIFinosKuBJWO2soS5q/fSpBWxce3TGjR1KZWKjjHUCxdoh/9DVxO8OvaTbEjZSYSwvRolM0yYnZZaPcWIgwaNmS1ymgHREDcOKk/otmUSG9Gu8Jkx+pwNdYs92Va3OquyYf0y+Dy/4AutHGdik1LSf/xRjJ+fou0yx7kaKWFi4dGQVmGtIJxMOdGGVm4/CDrDpUzb1JCkztQ3THJ278PoFPpuDzlci5PuZxaWy25tbnk1uaSU5tDTm0OB6sOsjp/Na/sfIWBwQMZHj6cIWFDGBI2hMGhg1G1NURM5pQRRRGn20mNrYYDlQcoNBUSpY8iWh+NTqkjVBtKoLp3TdetMktCGzih0C6oL+CTA5/wWeZnjI0cy9TYqac5yvbpyLdeNtB/iuhk+hV1VgclddbjHUdK9sGOD2HC7WBM79IxPj/4Obm1ubx2/mt9UmSDJLR3F9R0WWiD5DxSa3Hg0obx275DuLmIj26ZQHTQ8fZtYzUFktC21UnNXLFdm3V1pLVdmijKGe1eRIRBQ73VebxwDkmCgi0t1q22NDnGFtU0nNAG78cDpfxz9SGW3Xt2p5tqnS43S3YWctWYuG5ryD0ZjaUjWiWYyyEspYXIBkiZeCk7VqczcP8bFE2cj9MtSo2QZZmSI1JYKilKDfGh2uOFdn1Jj59DTxCkCWKUcRSjjKNaLC8xl7AydyWbizezrmAd3xz5BoBwbTjzBs/j8pTLidBF+CLkPkeNtYYDVQfIqs7icPVhsqqzqLPXYXVasbqsWJ1WXKLrpPuI0ceQFJREmDaMMP8wwrRhhPqHNj4P14YTpg07TWckNRcHN58KCaAxUGwqZlXeKlbmrSSjUrpAvT79eh4e/zAqRe+7QOuI0H4M+FUQhC20dB25r8eikpHpIN6a3VRjK/G14s/gH9wig3YqFJuKeX3P60yJndKiAaivkehxHukOoR2sVVHb4KDIrkfvrObD28afUCSlunM47I5lkKJImrbZBaHtcLnJqzBz4eBmloROq3S7XRbavQKjZ2hNSa2VxPBmmSdNQFONpQdvmQVI5SMn+h3aXVBNZkk9dQ0Owlr75LfDr9mV/HnJPoJ1ailr3MNUW+xolAq0bjO47KA/XiSqlH5siLmFscUPs3Lp28AI6fPryAEITQGVPwJw7iAjX+0oxOZ0ofEMllr52y4KTZO5dapUuVlSayU8QI3yNFxE9ARR+ijmD5vP/GHzEUWREnMJ+yr28dXhr/j3zn/z753/JkYfw4iIEYyMGMnIiJGkh6bL2W7A6XZyqPoQP+b9yKZjmzhUdaixPMeoNZIaksrA4IH4K/2lh58/WqUWvUpPemg6AwIHUGIuodRSSoOzgVJzKZlVmRTUF5Bdm01lQyUOt+O44yYHJXNhwoUMCRtCYmAi8Yb4HktAVVvsTf04dhMr9To+XXc/uyskB54hYUN4aOxDTE+c3itrs710RGi/BawB9iHVaMvI+Jxfj1SwMqOkcUBNqrGZ0Mr4BvI3wWUvd6meURRF/vrrX3GLbp6c+GSf7py/YVICieF6jIY2GkY7SZBWRW6FmZwGLak6M7FxwW2v6HISbjnCUvcFxIf4o83bCFNO/fo8v9KC0y0e3wgJstDuJSRHSOI6p8LUUmirA5oyUh5aZLSrT1yn7c0SW+wuOptLy/NY5x0uqT89Qttzq1uwVEoL2hDaAJEjLyan6J8kFH7HXefOZlR8MJRntigLOS89go8357M1t4qpqRGI2hDKi/N4oSiT89ONlNbZmPfeFv4+exhzxvf9GmdBEIgOiCY6IJrpidM5VHWILcVb2FO+h93lu1mZtxIAfz9/Lky4kGsHXdtvHU1ya3PZU76HzKpMCusLG8Vwg6OBBlcDVqe1UQT7CX6MiRzDPaPuYaRxJINCBhHqH9rOESTCteEMY1ibr4miiMlhorKhkkprJZUNlRSbi1lfuJ539r7TKOoVgoIIbQQGtQGtUotOqUOr0qJVaonQRpAemk5qSCrxhnj0qs45hlRb7ATr1Nhddl4q3cDnxnCSHSbuG30fFyde3Gdq+zsitFWiKP6xxyOR6TeU1ll58tv9vHTtyMaR3d2J2y3yl6UZjdlsf1Wzcdx2C6x+CqKGw5iuNd8tyVrCb8W/8eTEJ4kzxHU1bJ8SGejPVWO65xyCdWryKsupUBk4S1FyYsuxisP4uWxkuBPJ0esYenR1l+q0T+g4AqDpXbWFZyrJ4dJ7k11m5vzmFVvqAOnuQ7P3v9riIEirwmY1M2PNTFA/CaOO76fw1nKbbM5Ox5PvsQ48XGZqZ83uodp7q9vsGaF+gobj6cOi+HnTdObUf8Skif7gtElTaYdd3bjO5ORw1EoF6w6VMzU1AqvGSKSpCodL5LGv95FTYcblFhstL/sbaaFppIWmNT4vNZeyp3wPW4q38EPuD3yf8z1jjJLAnBA9wYeRdhy36MbsOP79cotujpmOkVGZwTdHvmFvuZSx1Sl1xBviidRHolfp0SolAevvJ2Wpo/XRnBN3DsH+wRyttOCvUhDq3/VkCkgXPga1AYPaQGJQYuPy3w/9PSa7ify6fPLq8sivy6fIVESDswGLw4LFaaHWXIvZYabMUobN1dSzEeofSrwhnmBNMGo/NQpBgYCAIAiNP92imzpbHbW2Whoij7HaZOP7T6T/s5tMVh68cQlKRd8ywOtItCs8ziPLaFk6UtVjUcn0aX7JquDHA6UcLK5jUnL313OtP1zOkTITf5o+iD2FtQRrVU0T1za9AnWFcPU7kqXfKXKk+ggvbnuRidETuTbt2m6KvH/gvXiy6mJQmzfA65Nh3AIYcV3LOwieARt+MSN4Mz+D/6i6Vqed7RlMlBLRLCti8zhcyBntXkGIXk2YXt34XjXiHYxkr2/8Hak224kwaAhVlhJsLYRVj8Ggi4+rafaWmJi7ILSzSrt/QmlbVHtcEpqEdtsZ7fAADXNueRj+/RHsWQRpM6XG7YimqxOt2o9JyWGsPVTGU5cNodIvDKNQwu3Tknl7Qw4apYIgrYpjtdbTcWo+J1IfyXT9dKYnTuehcQ/xXfZ3vLv3XW5ZfQvjo8Zzz6h7GBs51tdhHofFYWFNwRrWFaxjS/EWamw1J10/MTCRh8c9zNmxZ5MYlIhC6FhZ0J2f7MDgr2TRHZO7I+yTEqAOaLR0PBlOt7OxAbagvqDxUWYpw+6y48aNKIqIiIiiiFt0oxAUBKoD0asCcTUoGRwey1lJAxhxZCNnV+yEPiayoWNC25tieKzZMtneT+aEHPXcrjVZO//F2BHe+SWHqEB/7jgnpWWDU81R2PRvGHoVJJx1yvs3O8w8uO5BdEodz5/9fIc/6M4UvELbPeVB0J8FOz6AFY/Aj3+FobMl0R03Hor3gtKfZ2+dzUP/C8F97DWKt31H7CkK7SNlJqIC/TH4N7tL4s1o98GxvP2VlIiA44W29/2xm5uEtsVOiE5FutICVUBDNaz9O1z6UotNvdMWzfaTN3IB2J1u7vt8FwumJDIxOYyjVdJnUXa5qVsnlJ6IaoudwVGB7QptAIIHQOJU2PkR5G+UlhmHtFjlvLQInll2gKOVFoqdQSQpMnn44jTK621cMNjIJ5vzKantP/aIHUWn0nF9+vVclXoVXx3+inf3vcv8lfM5N+5c7hp1F+mh6T793LY6rWws2siK3BVsKNyA1WXFqDUyLW4ag0IGIXD8HUCj3sig4EEkBSV1uhzG7RY54vkdL6m1EtXWTAkfoFQoSQ1JJTUktdPb5leaOWftOmZPGcnVo+Iga1ufHFYDHRtYI0+CkOkUeZ4s0qnc6j0RpXVW/rv2CCA1OD06M/34L83VTwECTH/2lI+zs3Qn/9rxL47WH+Xd6e/KHe9tkBZlIDxAzayxyaBPl/yxj+2WBPe+r2DPZ2AcKjW/RQ5D5+/Pszecx9YX00nLWgac2tAgr196C+Qa7V5HilHPqozSlgu9X5C2JgFebXaQEKYjWeFZljgVtr8nXahFNmXKvGOYO5LRXpNZysqMEkID1ExICuVolYXwADUVJjv5lWYGGnv296TRJcEzyAldO171o+fBN3dIZTUXPiNNsG3GeWlGnll2gHWHyxAaDIynBgVuXp4zCtwuan/7iLDy3+DtWrj8NYhqu962v6Lx03DD4Bu4KvUqPj34Ke/te485388hSBPEaONoxhrHMiZyDIPDBveoG0W1tZqs6iyyarLYW76XdQXrsDgthPqHcsXAK7gk6RJGGUf1mPgvqbNid0otdMv3FXPL2X1ftjV60uubuY70V6EtCIIKuAvwWi6sA94SRfH4dlQZGSC/ShLa9dbu+xVZtK2Aj37Lx1+lwGjQcP2EVk0Q2WvhwLdw7uPSuOJOsrN0J6/veZ0txVsI9Q9l4ZSFjI8a303R9y8uGR7NjKFRKBTNsi4xoyDmFZi+EPZ9Cds/kHyE0y4BpAEe37smMcn8AZQd7LQXsNstkl1u4rpx8S1fkIV2ryMlIoAqc4HUGOj1Vfe+P82cR6osdkbFBzPAJZX/uC57Bb/3LpAcg36/DAQBURQbvak7IrQXbSsAYF9hLWX1NqwON5ePNLJ4eyGHS009KrTdbrFxwAbmcvAPAmU7bgwj5kBwgjS9VnV8FjIxXE9imI5le44xyByAQuWW9i264Zs7uKH4F8rFIMRSK8KWN+CK//bQ2fVutEottw6/latTr2Z94Xp2lu5kZ9lO1hWsA6QGyhERIxgTOYbLki8jITChS8c7ZjrG11lfs7d8L1k1WVQ0NI0ZCfUPZUbSDGYkzmB81PjTUk/sbfpVKxUs23OsXwht752s4OY+2n30zmVHfgPeAFTA657nN3qW3dpTQcn0bbylI/U254kb5TrJxqwKhscGsezesxFFUbq1Joqw8WXY/j7UFkDQgE67WrQW2H8a9yeuS7sOrfJ4T2iZJlqI7OZoDDDuZhi7ACoOQ2AsAH4KgU2qybj5H4qMbzsttIvrrFjsLlJOmNGWmyF7C16bvpwKE2P1nnprdZNFF9AooEP0aiLNNdhEFdXKGKLOfxKWPwQHvoOhV2KyOXG4JHeD9oR2Sa2V9YfL0av9yCypa2yePT/dyDc78rBm/gjDbuyWz6O2qLM6cIueYTXHykBvbH8jQYCEk9fUnptm5MNf8whSePofKrNgyW1gq2fTsGe4YftADg5fjnb/NzDjhaZ6+DOQEP8Qrhx4ZeNkwIqGikbRvbN0J2/vfZt39r7DlQOvZG76XNJC0jpcppFdk83agrVsK9nG5uLNAKSFpDElZkpjecSgkEGE+YeddicUby/CdePi+GTzUQqqLMSH6trZqnfjzWiHNgptEwR04G+qF9IRoT1eFMWRzZ6vEQRhT08FJNO3qbM6Gu24wks2wj/Og/t2ndK4by8mm5OdR6u5bZrUFiAIArgc8P0DsOsTSDkfJt4JQ64AVccF8qLMRSzcslAW2D2BIBx3G9ytN3JEHMmgjG8kf/NOfBk1Oo609lqWmyF7HV6hnV1mZmyCV2i3LB3xCuhQvYowsZpygiitbSBq7ALpbsjqp2DQxVSbxcb9xhYshU83wQ2L2zzukp2FuEX4w/mpvLAyk1UZ0nCXtKhAFhi2cVXGf2BMnPR50QM0Dqvxlr2d5kkAACAASURBVI6crD67E5yXLgntEtEjtNc8B6YSWLASizkZtm+nKOlqBu7/TLpAGX1Dtxy3PxCuDWd6otRACZLwfm/feyw6tIglWUuIN8RzecrlzEqZRYgmBIWgkJwwBAEFCkwOE1nVWXyV9RU/5PyAiEhKUAo3D7uZ6wZdR3RAtI/PUCKv0ozaT8FtU5P5ZPNRlu8r5s5zUnwdVpfw2n+2mAzZX0tHAJcgCCmiKGYDCIKQDLTflSJzRnK0smmIaHjNXkkIFe2Q3AROkc3ZlTjdIlNTm4n1lY9KInvaI3De453OUtXaanl116tMjJrIfy74jyywTwPBOjW/OqcyqOJVqXwkckj7G3lo09oPpIy2QgXKzg0ykek5YkO0qJWKlg2RrUpHmt8WNjgqyRRDKKqxSsJ85gvw4aWw6VWqU+5o3EVUxRaoWA1uNyha1rqKosji7QVMTApl1sho3li5gwW7riNDcRuxwTOZoskGO7Dr0x4U2s2Egbn8uAvNU2ViUij+KgXKgGhoAAo2S+eQMJnooloAsjVDGRiWKn0mykL7hIRrw/nzhD9z+4jbWXN0DSvyVvDf3f/lv7tPXnLj7+fPzcNuZt6QeYRrTz1p1FPkV1iID9WSEKZnZHwwK3bnc+fB38PoG2HiHe3voBdSY3HgpxAw+Htkaj8X2g8DawVByAEEIAFY0KNRyfRZ8psJbX3DMekfxXu6JLQ3HqlAq/JjbIIno5P/G2x7FybeBec/cUr7fHPPm5gcJh6Z8Igssk8TIToV6+rGMh8ge02nhXaQVkV4QKuaV+/49X44tKKv4qcQSA7XtxTarUpHmt8W1lrLqCCE7XlVXD4yBhLPltxrNr6MObDpc0NjrwREsNUeN4hqS24V+ZUW7r8gldhgLRN0xSS5i5ir3YZaqWCw6zAAYub3CA01oD3BkKUu4PX7bvTRTjy7W/brr/Jj/llJBGoE+MUPRBec82eARneJkjqbJLB/ehoqjkD4wG45dn8lxD+EqwddzdWDrqagvoANhRuwuWyNVnNu0Y1bdKNVakkOSmZ4+HCC/bv/d6a7yKs0kxgmidBZI6JZt2IxqPfBqschdizEjfNxhJ2nymInWKtqKlPswzXa7bbAiqL4M5AK3AfcC6SJori2pwOT6Zt4mzIGhOoItBVLC4u7Vmm0IaucicmhaJR+0mCHZfdL9djnP3lqMdbm8UXmF8weOJtBIYO6FJtMxwnWqsi2BUpjpvN+6dS22R7Hkf9n77zD46iuPvzOdm3RqnerWLZkudu44UbvLfQOoQQCJJQvgUDKx5cGAVJIAgktAULv1YADptjGxr1bbpIlq/eyklZb7/fHnV1VW7ItWZI97/PsI+/szOxdrzRz7rm/8zs9tI+hQFtjWDE63kZB50Yq3aQjISeRaJsJXWsVETEpvLehDHfIwu806RyUvvbh8CmsXrV1g7uhx/u9ubYEh9nAWROTURSF2dFSuz9b2QaeFuLbClkSmIbib4et7wzkRw0Tko7EROjAXT9g0hGA+88ax+0n50pLwKyFkD5HvpfVhEmvo7zJDVOuBEUPG18ZsPc9FhjlGMXVeVdz48QbuWnSTdw86WZumXwLc2KuwFe/gHkp84d1kC2EoLiujQw10D5ncjJn6Nbg01nAkQJv3wjtTUM8yoMnVMMByHosb8uIzWj3GWgrinIHECGE2CyE2AxYFUW5vR/H/VtRlGpFUbZ22jZVUZTvFEXZqCjKWkVRZqnbFUVR/qYoyh5FUTYrijK90zHXK4qyW30cXqs/jUFnX52000qKtBDjkxpJKjYf8vnKG90U1rQyf4y6XLfpNajdCef86ZCLfv6y7i+Y9CZ+NO1HhzwujYMnymqSkoGshVC8QnYJ7CdFda2MjuvlIutxaYWQw5DseDv76tvw+NXA2WQDlE7SETWjbfJDexOZmdm42v0s2qJOzqNGwdwfk1b+GWlKDQkOMzZf74F2c7uPT7ZUcN7UFCJMsknVxAi5T7q/CHb/F4UgLwVOxR2dO2iBaOgzRaMW6B5GXcp+ueYduPTF8FOdTiHJaaGyqR0cSTD2NHmNPIi/LY2e1Ld6ufnFtfxuUT73vbOZQFD0fdAQUePy4PYFyIyTxY/JDjPnmDbwnW46XPIvaCqFj++RweoIor5V+uwDMsEmAkdvRhv4gRAi3MpICNEA/KAfx70AnNlt26PAr4UQU4H/VZ8DnIXMmo8FbkG6mqAoSgzwIDAbmAU8qChKNBrDluL6VpnNNivEBmrkH0bTPmg7tEaiy3dL26QFY9XsUO1uMFjkDeUQWFO5hi9LvuTmSTcPS63d0Uy01YSr3U8gY77U7lf2f6Wj0e0jprtsBLSM9jAlO95OICg6ajYURV4LvDLLXd8qs7+x6q1lVHoWo+NtvLqquOMkqvQiXakmOdKMI6Dehtq6BtofbSqn3RfsYv2Yqa8hINTVj+V/AWBTMJvKjAtkzYirm8/3AFDf6pWa0oA6vgHMaIeJze7ROTPJaaEi1B1y2jXgqpDSLI1DQgjBr97fSpPbyxUzR/H2ulJ++f7Wvg8cIkJ2uukhl5Hy9cQE63inbSo7jXmyhmnrO1K/P4JobPN1LYSEozrQ1iud1msVRdEDfZiDghBiKbLfV5fNQCj95ARUES8XAP8Rku+AKEVRkoEzgM+FEPVqgP85PYN3jWHEvro2MmNtpOobMRDoCIgPUT6ydLfMZuUkqn9gLVVgTzwkTW5QBHlszWMk2ZK4dvy1hzQejUMn1HigMXG23LC3f/KRdl8Arz9IpKWXhhOeZi3QHoaEnUe66LRtYTvGxjYvOgXsvjoAFEcyV81KZ/2+RnZUqk4yqjVktrmZJHM7BtQsbbeM9ptrS8lNdDAlzRneFh+oZIdhHAFTJFRuxhuZSQOR1NjVFuc1Owb6I1Pj8hBtNaKEmtUMRqDdC8mhjDbA2DNkk5yNIyuoGk58uKmcRVsquPvUHP5w8WRump/Fa6v3sbVseMovimplEBrSaLPjY4TOwNdiKm+vK4H598hVxE/vg5qdQzjSg0NmtDtZ+8HRKx0BPgPeUBTlFEVRTgFeU7cdCncDjymKUgL8kY627qlASaf9StVt+9veA0VRblHlKGtramoOcXgah0O7L0BFczvpsVbSFPU7GHeu/HkIgXYwKFhRUMf8sXEd2lxXJTgOzVLpo4KPyK/P567pd2ExDI8WtccSodbtDUoUxI/rt067WW18FGnppXZby2gPS0bHyxtiF522uXNG20uU1YSuRZWXORK5aHoaJr2O11btk9si5d95urGRRF1zx3k6Bdo7K11sKmnk0hlpXfT7hqYSJkychj5LZsV9yVKNWGVWG5XU7hqwzwoyC7qysI6po6I7ukIeoUA7JB0JBoVskDPlCtjxCbTWHZH3P5qobGrnV+9vZXp6FLeqdrJ3njKWSIuBx7/YPcSj653iujb0OoXUaLWoP/9jlMz5LJicw6ur9tHUHoQLn5HWt2/fCL72IR1vf5A++z6iOneFhKM60P4Z8CWyO+RtwBLgvkN8v9uAe4QQo4B7gH8d4nl6IIR4RggxQwgxIz5ea5s9FJQ2uBECMmKtJAk10E6eKgsXDyHQ3l7RTH2rl4VjO32frkpwJB70udp8bfxtw9+YGDuRs7POPujjNQ6fUHaioc0n220Xr5R+6H3gapeZzMiI3jLaLVqgPQyxmQ0kOy0UVHdzHlEzUw1tqv6yRZVw2JOIsZk4a1IS74aKIk02WhQ7owz7D7TfXFuCUa9w0fRO3WD9HimfiM6QmTxAUV0XaogBk2PAA+29ta2UNrg5ISdOOo7A4Gi0eyE50oI3EAwXmDL1agj6YEvvfuMavSOE4L53NuMLCP502VQMehkeORvzeXzMRrbnb2NzaWMfZznyFNW1khYdgVGvg5pdsqHRuHO57YRsWr0B/rOySE5av/dPqNoKn/9qqIfcJ63eAN5AsFOzmqNcOiKECAohnhJCXKI+nhZCHKqP9vXAu+q/30LqrgHKgM69ldPUbfvbrjEMqXbJmXJipIX4gLyBeu0pkDwZKg++IHLpbnnDmjem0w2rpeqQMtovbn+R6rZq7p15LzqlP/NLjYEmFGjLgsgF4GuFsvV9HtfslsG4Q8tojyiy4+09Lf5U15GGVlV/6aoEnQGssQBcOSu9S1FkjRJLInXEKp2W7dVA2+sP8t6GMk4bn0iMrZOasbEEELK1+bhzIHESxryzAHkDJz5nwJfQl+6S16oTchJkoK0zwBFyqkiOkpnMsHwkcTykTIf1L424Arih5JVV+1i6q4afnz2OrM6F1//9JSfveYgVljupevOeoRvgfthX39ahz97xkfw57hzGp0RyUm48z68okhPXnDOkJe7qZ4a9hCRkldkhHVELjI/ijPZAUg6coP77ZCC0FvMhcJ3qPjIHaBJCVACLgdMVRYlWiyBPV7dpDEPqWuQfR5zdTIyvkioRRUvAILPadXugvbmPM3Rl+e5axiU5iHeozUi8rVKTaz+4jHZNWw3Pb32e0zJOY3ri9L4P0BgUotQK8oY2L2SoHsNFS/s8LpzR7q7RDvjA79YC7WFKtmrxJ0LBnrlbRttm6qi5UBvQzM6K6VIUWSFiiBP1xKAG2iZ7ONBekl9FfauXS2eM6vrGDUXyZ3SGtMO7bTnGuNGYDTpaPH6Iyx3wjPY3u2rIirORHmuVgbY1rkdTncEixRkRHkOYaddA9Tao2HhExjDSKapt5feL8lkwNo5r5mR0vBAMQvkGyDuPHbGnclLT+1SW7Bm6gfZCl3br+R9L3+zIFABuP2kM9a1e3lijyrGmXiV/Vm8fgpH2jS8QZHeVK9zQKmzvdwxIRw4JRVFeA1YCuYqilCqKchPSreRPagv3h5AOIwCfAIXAHuBZ4HYAIUQ98Ftgjfr4jbpNYxgSakIRazMR5a2gVMTT0u6H5Clyh6r+V267vQHWFjWwMKebbASkjdVB8PTmp/EFfNw9/e6DOk5jYAldNBvbvGCLhcSJ/SqIDGm0Hd0DbbWwTgu0hyfZCXZaPH6qXR65QZWO7K1tZU91i7RrdFV0mTgritKlKLI0EEW0v4boYCN+oUNEZ4UD7Xc3lJEUaekqLQNoLJI/ozO7bHZYDLg8fpnRdlUMmLdwuy/AysI6Tghdq1wVYD9y8sUJKZGcmpfAY4t38vy3e+XGiRdLd6YR5jQxFASCgp++tQmDXuHRSyZ39eqv2yOTOzlnEnneQygI9i3++9ANthuudh8NbT6Z0W4qg/L1chVHZWZmDDMyonl22V58gSDEZMkX6vcOyXiFEPzPGxv5bGtFj9eKalu55J8rOO0vS3lueSFAh72fFmj3jhDiSiFEshDCKIRIE0L8SwixXAhxnBBiihBithBinbqvEELcIYTIFkJMEkKs7XSefwshxqiP5wdrvBqHT12LB50i/ZLt7nJKRTwuj09KR+CgdNqr9tbhDQQ7/LOhQ895EIF2iauEd3a9w4VjLyQ9Mr3fx2kMPDaTHoNOCTf2IHMBlKySmtoD0KHR7iYd0QLtYU3YeaS6k2OAp4XHFu/AZNBx04IsabPX7e85VBT57NK9lAejsfnqcfprqCcSvyUmHGhvLGlk3pg49LpuDkQNxaA3g73ree1mg5z4x6lNqmoHprhtTVE97b4gC3PipFSjbD0kTRmQc/cHnU7hH1cfxxkTEvn1R9t5dmmh7HyZdz5seatfdRDHMkt31bC2uIH/PXc8yc5uXYLLVWlbynRSMnPZaJ1LTuk7+Ntbe55oCCipdwMwKtoKOz+RG8ed12Wf20/KpqzRzQcby+W10pYA9YVHbIzPLSvkuWXy/dbva+TdDWU8+OE22n1SgSyE4K21JZz9t2XsrW1lYmqkHCudM9qha8hRqtHuDUVRbul7L41jjVrVjkdPEEtbBaUiTt7YHEkya3UQjWuW767FZNAxK6uTZ6xLnQXb+x9o/2PjP9Dr9Nw6+dZ+H6MxOCiK0tG0BqRO298OpWsPeFyHRrt7RluVIo3Qi+/RTg+LP7ODgKeFT7ZU8oMFo0lwWKClskegHSqK/GBjGRUiFgVBfOsuaoUTn8kJ7gZqWzzUuDzkJfcyyWoslg1vukk37BZDh3QEBkSn2u4L8NcvdhNh1DNndCzUFciukKNm9X3wAGIy6HjiqumcMymZ33+Sz5Nf7YFxZ8usfeWWIzqWkcaGkkZ0iuyo2IOydWC0Qbz8nQnMvIUoXOxa8mLPfYeAfZ09tHcskpPI+K7djk/KTWBckoOnvimQzjQxo49oRvvl74p5dPFOalwe3l1fikGnUNXs4aWVxTS5ffz4tQ3c+/ZmJqU6+ezuhfznxtmkqnUHPX20j62M9sGbGGsc9dS1eIi1m8BVgU74pXTEo3rfJk85qIz2st21zMqMwWLUd2x09T+jXdZSxp1f3snHhR9zdd7VJNoO3qlEY+CJthrDHfTImAsofdr8Nbf70CkyI96FUKDUTSKgMTxIjDRjM+k7LP5MNvT+NuJtBn6wcDS01EBbHURn9Tj2ylnp+IOCSiEn2k5XAbUiEq9RBtr5FXKSNT65l66gDcWyELIb4Yx2dCboTbLDbB94/IEOjXk3AkHBXa9vYG1xA49dOhmryQClq+WLo2b3ee6BxqjX8dcrpnLB1BQeW7yT54rU1cDSNUd8LIfDk1/t4c21JX3vOEBsKW1kbIJDfn/dKVsPKVNBJ6890xaexx4lHf3aZ1i7d+jtE0sbZKA9KiYCqrb1OsFTFIXbTsxmT3ULn+dXqYH2kclo+wJBShvceP1BnltWyMebKzh3cjILc+J58us9nP3XZXy6tZJ7z8jl1R/MISUqghibiRdumMnPzhzXUzpitB6RcQ80hxRoCyGeHuiBaIx86lq8xNrM0CgLL0pFfHjZn+QpskmEz93neaqb29lZ5WL+2G72WC2V8gYZsf/moJ6Ah6c2PcUF71/AdxXfcff0u7VW68OIaKtJFkOC/B6TJ/ep03a1+4mMMHbVToIsUjJYIHHCII1W43BQFIXshE7OI+rKw6lj7NjNho5l+dTjehwbKoqsUANtnfBTi5N2Q6QMtMulvjqv10C7SBZCdsNuNsqJv94AMdnSCu0AeP1B5j78Jf9ZWdzjNSEE//fhNhZvq+JX547n3Mmy+IySVWBxdshTjjAGvY4/XzaVi6en8btlzbhMCVCyekjGcii0ef38dclu3llX2uvrbm+Ahz/N75isHyZCCDaXNjGpU7OjMH6vdMtK7SigNxr02BbcQa7Yyx+fe5GPNpX3PO4IUlLfhsNiwGnwQWv1fpMO50xKJj3Gyj++LkDEZIGrHLxtgz6+8kY3/qDAatLzzLJCmtw+Lpyexr2n59LY5kOvU3j7h8dzx0ljukjAxsaauW1cG4oIyg3eVrmycIQKjAeaPketKMpDiqJEdXoerSjK7wZ3WBojkfpWr8xoN8uLT6WIkcVHIANtEYCqjmrnrWVNHV3gOrEs3Ha9W6DtqpSykf10hVxaupQLP7iQJzc+yQlpJ/Dh9z7kpkk3YdT14r+sMSQ4rcYO6QhInXbp6gNOwJrdvt6t/crWQdJk0Gvf73AlO94e1mj7DHLZd3QoNi5bB4quo1i6E4qicPXsDCpFx6S6VjhxG5wgAuwtqyQp0tKh4QzRUAztjRA7psc57WZ9xwpbfE6fGe3ShjbqWr18sLGno+w/vyngpe+K+cGCLG6a3ykjX7Ia0mYOaUCg1yk8dslkzpmczDJ3JsERFGgv312L1x+kxtV73cYnWyp4+ptCvsivHpD3K29qp67Vy+TeAu3qbRDwSqvETiTPvw5hieLH9iX84r0tYVvboWBffRujoq0ojeoKQFRmr/sZ9DpuWTiaTSWN7PKphbohd55BpKhOBvM/PnksQkCCw8y87FgmpTn55M4FfHrXAqal95I4+/ReeGo+PDYG3vmBlBeOUNkI9C+jfZYQIuzSrrZC1zp+aPSgtsVDnN0cLlqsFlFyqRY6bqaq3ZQQgltfWscv3+vpRLJ8Ty2xNhN5Sd2yVa6ees4QD696mDuW3IFe0fPMac/wpxP/RJLt4NxJNAaf6O6BdtZCeTM7QDDgavf3Yu3nl1KkVM2ucTgzOs5GeVM7bV4/DT75HWY41CxV2TqIz5O2f73w/bmZvHLHGeHl4loRSYtearLLK8p712dvfAVQZCFgN8IabZA67YaiA3bJK1b1rxtKGqlr6Qj83llXyqOf7eT8KSk8cFZexwHuRqjOHxLZSHd0OoWFY+NYFxyLrmlfh+xumLNEDaCrmnv/Xj7bJp2nCjv7sx8GW9QGNJPTevE8L9vPiovJinLc9cz1riTKX82vPxw6q7ySBrfUZ4ctLTP3u+8lx6UR7zDz8i41aXEE5CPFdVLycfH0VC45Lo07ThojGwG11TN+yfexLbodNr4aTs4BcoVz3Qsw4UIYezrs+QJKvgt77Y9EekkT9UCvKIpZCOEBUBQlAjAP7rA0Rhpef5Dmdj+xNtmEQujNtOrstHjUoMo5SjZwUBvXbCtvpqzRTbPbhxAiLAsQQrB8Ty3zx8ah6+4m0FIFcWN7vPfG6o28uuNVLsm5hJ/P+jlGLcM5bOkiHQFIPx4UvdRpjz6h12Oa23vJaNfsAF9br7IDjeFDdoIMogtrWhEeIwlAmjWounOsg3Hn7vdYvU5h0qgo6Qlct4da4aRFkedrrK9m3oTJXQ8IBmDDK5B9kiyG7IbdbOyY+MfngghCfcF+pUf71GycEPDVzhouOS6Npbtq+Nk7m5mbHctjl07ueo0qWwuII14IuT+cESY2BNXrZekayNv///VwIBgUfLmzGkWRjYVaPH4pMVJp9fjDjYH21nZ1/Sipb2NFQS2Xz+yfs5QvEMSo17G5tAmDTmFcUrdJm7sBVj4p71tRvZxz5s0oK/7OpxEPsnhHHtsWncuE+eeBM63nvoOEEIKS+jZOyo2XBcDQq2QqhMWo56b5Wfzj0zp+a+GIBNpFtW1EGPXEO8z8UfwZSoLQ+hd4+wbY9x2YI2HzG3LnuFwYfSLs/q+cMFzwDzBZ5d912Tq57wilPxntV4AliqLcpHphfw4Mj5JbjWFDyEM7xi6bUCj2ROyWTjc2RelSELlYzUy4PH4q6+rDFlTfFdZT4/JwUm5CzzdxVfRwHAmKII+sfoT4iHjunXGvFmQPc6KsJjz+oOxUBmCJlMVGB9Bp95rR7mS7pTF86ew8UuGWBWXJEX6ZgXM39G+ipDbfqMVJkyIDIodoYVx3fXbh19BcKpu19ILDYsAbCOLxBzo01AdwHimua8Ni1JEYaebLHVVsLWvitpfXMSbBzlPXHofZ0K04t2S1lMIMk8lflNXINpFJUGfsKNIcxmwpa6LG5Qn7otdWFHcUwQFf76zB4w8SZzdTWNM10H5hRRE/e2dLv7TbrnYfx/32c/64eCebS5sYl+zoWnQf8MNb35e1Rhc/17tUMSodrnwdy9iFnGzYwoQ198NfJsDfpsMn94Y7oA4mNS4PHn9QzWgXy5Uf24H928+fkkIzdtqNziOW0c6ItUqt9c5PIP9DeHwS7F0K5/0NfrobfrgcTv+dnByv/4+8Npz3VxlkgyxEHTULEsYN+ngHi/60YH8E+D2Qpz5+K4R4dLAHpjGyqFWXVmNtqnTEkYjdbOgohgQZaFdtg4CPz7ZWhrOU9lfOhf/+EoBXV+8j0mLgzIndZB8+t7Sq6iYdWVS4iK11W7lr+l1YR2hF8rFEl+6QITIXyIyFt3dvWqnR7hZol62TRWcxowdrqBoDQEasFZ0CBTWtlLbK202U3iO/P+hfUOqQgXadcNIkZOAeRQvju0tHNrwsC2z3kyUPZUdbPQF1ZUw5YIfIffWtpMdYOXlcIt/srOH7z68hymrixRtn9Zz4CQH5H0HqjGHj6+6MMOLBRFPUeCgZ/s4jS/Kr0Clw+cxRWPCQ+tqp8Ol94dc/21ZJrM3EBVNT2FvXSiDY4QazW60DKKjp/RpS3dwelg3lV7hobvfzxFd7WFFQy6TUbrKR//5CTtrOexzS5+x/wDlnoL/sBQq/v4GzvH/g09Q7ZSZ29TOUrX6P7z+/mlaPf//HHyYha7+0kHQkKmO/9UshUqIiyIqzUa4kQ8PgW/wV1bWSGWuD5jIpEZx+vbT6XfATmHqlrGVImgRzfwzXvAP3F8PdW2Rm+yiiXxUbQohPhRA/VR9aC3SNHoQy2nF2k9QD2hNxWIwdxZAgA+2Al9Jd69ld3cINczOJoB17Qz4ULaeuxcNnWyu4aHpa1wwD9NoVssXbwp/X/ZmJsRM5L7urSb/G8CRk19RVp70Agj65lNgL0nWkm3SkbD2kTBuxVejHChajnlExVgpqWihqkd+V4muT358hAhLy+jgDXTLaDUE5mY7TqzfwEG31sONjmHQZGHpXNoYC7ZZ2PxgjZFayj4x2eoyNU8YlMMW/iTh/FS/eOJPESEvPnSs2ybbWU67o+/McIUKT2hpH3ojw0v4iv5oZGTHkJjk4X78Co6cetn0AvnbafQG+zK/i9AmJjE2w4/UHKW/sKKAuCAfaPTPJDa1eznh8Kb/7WGqpd1bJRlfHj44lKOhaCLnuRVj1FMy5Y78rI92ZnhHLrNkLuL1wDuvmPw1GG/mrP+frnTVhG8rBoKShk4d2Y/EBZSOdOT47lu2eOMQgZ7QDQUFJvZvMOFtH9nzSJXDXRjjlf3s/yGDuVfY10umP68hFiqLsVhSlSVGUZkVRXIqiDN5vj8aIpK5VzWjbzdKGz56II+RbGyJ5KgC7Nn4LwBWz0plmrUVBQM0O3ltbiC8guHp2L5q4XrpCPr35aWrdtfx89s/RKVrANRKIUhsQdMloj5oDOkOvftqBoMDl8XfNaPvcMqgZJkv0Ggcm5DxS2Kxm2zwuqWdOntI/x5jcs2HiJbhNsdQFZHA9xuGXRVUhNr+pZsyu3e9pbGqg7QrVjcTn7jejLYRgX30bUlS0BgAAIABJREFUGbFWFsS5eNX0EJ9xO2M+uVJmzkNdSUNsek12o5x4Ud+f5wgRFaH+rSkx4HX12YF1KClvdLO9oplT8hJIsJu4Tv85Xr1VjnvPF3y7p5ZWb4AzJyYzulsjpFaPnzI16O4uKQF4/ItdNLT5WF1UD8DOymYcFgPP3zCT31wwgfOmqNaMxStg0U8g+xQ47TcHNf57zxxHUqSFB97fjit+KslNsui/rLFvO9tDJdQVMtVpkdKRfvYTmJcdR0EgAZpKB/V3oqLJjTcQJDPW2hFoH6MrkP2JTh4FzhdCOIUQkUIIhxBi5KrSNQaFuhYZOMVahNReOpK6VvkDxIwmYLBRvmMVs7NiSImKYK5DtWkK+lmz6ltmZkYzNrGXpddqtbJb1WgXNhby8vaXuWjsRUyKnzSYH01jAElwyGxjF0sss10Gzb3otEMTtcjOxZCVWyDo1/TZI4TseBuFta3sblCX+pvLpHTkQMvynRk1Ey75FxFmI3Xt0CrMjHF0WhERAja8JCfySfu/FoSkauHJf1yObMMeDPTYt1rVv2bEWjHXq8H4tGvl2D+4Ax4bK23HCr6UziVb3oLcsw7o8X+ksRh1mPQ6GlBdXdrqh3ZAB2DJDnkfOCUvEXvNBibqiliS+kPpNLHtXT5VpYbHj45ldLyNGJpJWvZzaG/uksXuntHeVeXi5VVSjlhY00qT28fOShe5iVKXfd3xmXKlo6EY3rhGBquX/Ft6rR8EdrOB331vIruqWnilPIVxyj4ctFHaMHiB9q4qF8lOCxZfk5yQ9NKkqTfmjI5hZzBN6qYHcaWjWC0mzohVM9p6c1gGdqzRn0C7SgiRP+gj0RjR1LZ4Mel1OPzqxdwuNdqdA+2tFS42+kYxRV/M36+aBsBkc2X49ejmfK7qLZtduQUW/1LeSOPHIYTg4dUPE2GM4K7pdw3q59IYWJKcctm9oqmbfdeoWdL6sVsXvuZ2GVBFRnTKfO7PdktjWJIdL5f6a7zqd7jtPTlRGnfOQZ3HZjKwam89jdhJs3T6/anYCFVb+1zqD0tHPJ2cRwKeDseGToSChPQYa4ff9hm/hx+vh5s+lxKR3YvhpQvhTzmyw+XUqw7q8ww2iqLgtBqpC6qBtnsYB9r5VWTGWsmOt6Gs/RctWPncdCrknY/Y+SnLtxdzal4iJoOOWJuJsyybGVf6Fmx7l91VMrjOSbTjqdoJOz4B5KrEbz/ejs2k57ffmwjAltImdlS6yO3sMlKzC16/Sv5OXvk6RPRi9dcPTslLlN7l3jHoFcGCiL2DltH2+AN8s7NGFo42FsmN/ZSOxNrN1MerFpSFXw/K+EDqswEy46yy5XtM1jEr9evPp16rKMobiqJcqcpILlIUZfisj2kMC+paPMTYTCgtaobanojd0lEMuavKxbX/WkWBIZsJ+mISbPKmmyVK2RVMpVWxMs24j7MmJnc9cXMFvHq5vPhd+TroDXyx7wu+q/iOH039ETGWmCP5MTUOE6vJgDPCSGX3QNvilDe6gK/L5nCg3TmjXbYOHMkQ2e13RWNYErL4C6IjoI+Auj1gS5CFgweBzWygrNFNk7ATb+jU1W7Dy7JD6KRLD3i83dIt0I7LlT9rdhEMCoKdiutC/r8ZsTYZiDmS5e+ooshJ4XmPw092waUvSOlTxjwpORhmREUYqfarWvZhmtFu8/pZUVDHKXmJKAC7P2dtxDxKW3Qw8WIUXxvHedaEC+QVRWGKVW1/vu199tS0YNQrnDQugYubX4HXr4S9y1iSX82y3bXcfWoOJ+ZIF6vF2ypxtfulnZ+3FV48H56cKVc2Lnke4no2OjoYfnP+BGbMOw2h6Flo2UNVfRNU7zisc/bGij11uDx+zpyUJLPx0G/pCMCEsaPJFxkECr4e8LGFKK5rw2zQkeiwyIz2MSobgf4F2pFAG3A6cJ76GN6GnBpHnHBXyHDRYiIOiwFXu4+9ta1c/dwqjHodJ590GjpfG9QVABDfvpddYhRbA+nMs5V3LYL0tsJrl0u3kavegMhk3H43j655lJzoHC7LvWwIPqnG4ZLstFDe2C3QNkTIn/6u211h6UinjHb5ei2bPYIIWfwBiFB3t9yzDjq7ZTPLa4PbEInZp5YJ+dyw+S3IO6/PTKSjR0Zbtfir3cmtL6/jun93WODtq29Dp0BqVITUcffi34/RIptqXP0m3PDJQcsNjgTOCCOVPllAunFXAf9ePvhOEwfLMrUb5CnjEmRA5q6nInIKVa52yJiLyxDLBcbvwrZ/AGP1akJn71IqysvIirORm+hgrCJbt4v3b+Mvi9aRHW/j2uMzcFqNZMXZeF/t8pmbFAl7lsDeb2DBT+GerTDm8CdKsXYz95xzHErSJGYHN3Fn+X3w1DzZzGgA+WxrJQ6zgbnZsR3NavopHQE4ISeeZYGJKCXfDUor9u3lzby7vozcJAc6hJrR1gLt/SKEuKGXx41HYnAaI4faVm9HISSAPQmH2YDHH+TqZ78jEBS8cvNs4saqzRwqN4PPjdm1j93BVLYFM0nxFHToJYMBqYGs3CI1c6r28vmtz1PZWskDsx7AoBt+NzaNvkl2Wqhs7rakGnKK6BZoN7tlRjtcDOlulBnRlGmDPUyNASLGZgq7zegs6pL9QcpGQEpHAPS2WOlxHAxA/sfgaZL66T6wd9doR0SDLYH64q18vr2K5Xtq2VLaBMhsXEpUBCa9agEYyn6PMKKsRsq8chK7YUchT31TMMQj6smy3TXYzQZmZsXIVttAc+wUqps9BNCxKDibE3UbiRAdAWGqKKdcxIAIkFq1hDEJdrJjI8hWyqmPn4VoKuO6pqf51bnjMapFs1PSnER5yjDjJTfRAcXfygn+CT8Dey99Gw6H9OPJ8uxgSmCbXKmrG7j/d38gyH+3V3JKXoL0cm8sllr2/XRY7Y3js2PZaJiCLuiTXRcHkFWFdVz+9EqMeoU/XTpFxgR+t5SOHKPsN9BWFOXviqL8bX+PIzlIjeFPXYuHOJsJWqoBBWzxYU2ky+PnPzfOkkWOcTmyKKJiI9TuRkFQbcnEHTsBnd8tgyiAz/8Xdi6CM/8AOWcAUN1WzQvbXuD0jNOZkXRwy84aw4ckZ0RP6YhRzWj7ugbg4Yx2yN6vfIP8qWW0RxTZ8XbiHWZ0ZjsYbZDVexfQAxF2Dck+VxYlbn4DNvxHZvIyF/R5fIRRj06ha4F2fC6N+7bisBiwmvS8sKIIkO3XM2Kt0u3I09zR4GaE4YwwUdau/m211VHT4sEXCA7toLpR1uAmI9YqA+LSNWCyo0/Mw+0LsHRXDW+5Z2ISXtj5qTxACGLaS1gcmEmLNY3Z7qWMSXCQbazGrPhYbjudf4nzudzwNSeyLvw+M5MUFpvu59fWt3BajVC0XMqADKaB/1DjzsGrt/NHnypnqh+4QHt1UT0Nbb6OXhON+w4qmw1g1OuIGrcQH/oBlY/8d1sl1/57NQmRZt6+ba685x/jjiNw4Iz2WmDdAR4aGmHqWjpJR2xxoDeQk+QgKdLCCzfMYmKq6lWqN8qWx8UroVrW2F5/wZlccs7Z8vX8j+Dbv8HKJ2DWrTD71vB7PLnxSXxBH3dPv/tIfzyNASTZaaG2xSs79IUwqN7E3eymQhrtcEY71OhEy2iPKK6Zk8FN87MgYz4c930puzhIQtKRhNmXycLozx+UHeamXdMvGYqiKNi6NdFqsmcR5y7iujnpXDw9jY82lfPqqn3klzdLyUvIZzt+ZAbaUVYj1W7AaEPX3oAQsqPgcKLa5Qm7EVG6BlKnE++UcpcXVhSxVZdLMDIVtr4j92mpxuBvwx+VxUvN05mrbGN8lB97k0zS/HuXmT/7LsYTOx4+/DG01gKwwLMUq+LhbJbLhFDVNsicPzgfKmsBX35vDc8EzkWgdCSQBoDPtlZiMeo4QdWd46oMe80fDKdMGc364Fhad3w5ION6Y80+fvjyOsYnR/LWD+dK2RVogTaw37V3IYTWZl2jX7R5/bh9ASkdKasKW/DNzY5j5QMno3TvVjX5cvjsZ/BFGegMjBs/VRYZmRzw5W/lPmNPhzMeAsAX9PFxwce8v+d9rs67mlGRR5+h/bFEyHmkutnDqBi1m2c40O6a0W52y6AoZM1G+QaIHXPIzgAaQ8P3pqWq//rDIZ8jPcZGalQEYxMj4dT/g5e+Bygw5cp+n8PRzQnp67poLlDauHGqjQZdNC99V8zP39vC1FFR/OjkMZC/Uu44YjPaRlq9AQJRMdjbpa69srmdlFAQNAyodnmYmOKUWuGqrTDvrnBToG921XDyuAR0yRfCqqeldayaHb709BO57+O9GLwfMtGzAdrKAdgVTOWq+WMwz3gWnjkRPr4HLvsPaUXv0SbMRAab1PuMkEWsg0RajA0vRtzWFKwDJB0JBgWLt1VyYk4CESa1nqm5/JA+x/yxcTyjTGZm/VvQVAbO1L4P6gUhBP/8poBHP9vJwpx4nrpmOlZTp9CyvhB0RohMO6TzHw1oIleNwybUoSsp0gI7Zfv1ED2CbJBZ6ro9sOZZqX0MLd3d+o1sCyuArAW0Bj28s+NVXsp/icrWSvJi8rh18q09z6cxokhWA+3yRndHoB3KcPq6F0P6sJr0YZ0lZev6JRPQOPq4deFobpiXiU6nQPZJstX6QXaSs1sM4bbYFU1u3i2xcYEBYtv2Ejs6nZvmZxEUgvvnR2G2CKnPNjmk68gIJNQd0m2IJBrZZKequ2xrCAkEBXUtHuIdZtldM+iHtJkdGW6QEonki+Qq545F4e1Rabncd+PxuJ99mJTaFeB302hOxmZ0cucpYyHCCCf/Ar74P/jyd+gq1uOe+wsiNj2Nsv4/UsI4iBK0UEa33jIK6wBJRzaUNFLV7OmQjfjc0N7YpZFbfzEb9DRkX4Cu8E2Cm15Ht/AnB3V8taudn729mQ0ljTS2+bhgagqPXTIFk6Hb6lJ9oXREGYbFwkeKY/eTawwYe6qlFdboeJtsv54w4cAHKAqc9QiIoGyDHCI2G2KzqXXX8urmp3l95+u4vC5mJM7gV3N+xYLUBb0H7hojimSnvAFVNne64e/HdaS53deRzW4uB1eFps8+RtHpFCy6Tq5EV7xy0Ofo7O3/r2V72R1Us3i1u2D0Cfzq3PHSIeGfszuCg7ix8po1AnGq/vONOIhWpISiy9/dEFPX4iEoICHSLGUjAKkzSFAn3nqdwml5iWBNk9/H1ndlR1GdAZzpjNEbIPdkKFgCligi0yex5OITOlyK5t4ptd3L/gg6A7HzboBALax+WuqzD0HC1F+irEasJj0V+hTS6r6QPQIO8/do8bZKjHqFk/M6yUbgkCeCo3MmsWrPOI7b8Aq6Bf9zUOP7ZHMFX+2s4dLj0pgzOpYLp6XKSXBn2pulvGv0iYc0vqMFLdDWOGwKa2XDgKzYCGit7l8Ft04P5/65x+Ztddu4afFNtPnaODXjVL4/4ftMjp880EPWGEJ6bVoTlo70tPcL3zTDjWq0jpAah4bdYqTZ7aOh1curq/dxxuQJUOjoaMUeDMB7P5T/rtstfx8PQpoy3AgF2tV+OzFIa7/hFGhXq3rxBIcZtq+TRX32eOzISdGUUU6ibeqK54QLZf1OwCv3C2VIx5wK298HVwW6nNO7WoHq9HDhU/DP+TLYs8fDlMtloD2IshGQq7mpUREUBJOY6WmWWnF7fN8H7gchBJ9urWDemLiOzxgOtA8+ow0wOs7G24GFzG54BkpWQ/rsfh+7oqCOUTERPHbplP3vtPJJKfeZd2w3lusz0FYUJQv4MZDZeX8hxPmDNyyNkURhTSsJDjOOQLNc+jvEP/qyljLu+OIOnCYnr57zKqOdx27xxNGM3WzAYTF0dR4JS0e6abQ7Z7TL18tM1gHabGtoHAi7WU95o5v/rCymzRvghyeOgeaxHUWPK/4u7c4ufEZK4F67akSvoERZZZBa5rGQrciW3fN2PQpKEpz58BCPTsoPAOIdFmlTF9vRMObhiyaRFWfr2HnixbD8L1C0TNbwhOjsfx2f1/NNYkZLWWKE2twsZTpc+iJkLRzIj9IrqdER5NfJ4DpQuwf9YQTa2yuaKal386OTOjXVcVXIn4dQDAmQFW9jUWAOD1lewrjxlX4H2oGg4LvCOs6edIBMemudDLTzzj/mi9f7k9F+H/gX8BEwvHyBNIYFhTUtskI/9EdvTzzwAb3Q5Gniti9uwxv08q8z/qUF2Uc5yU4LFU2dgur9uI40uX3E2lS9Ztk6SBjfYQWooXGQ2M0G6lo8vLBiL6fmJchW3PG5shV1wCcDuZwzYfJlchn93t1gtA71sA+ZKDWjvbfNwnn6NtKjTEyoWQr51uERaDd3ymi7KqUjlcp5U7oFj4kTIXasXGmIye7YHpkirwvV2yFhXO9v1LnhkKLAhO8N1Ec4IKlREazeGw06eOTVRTzwwJxDlj9+trUSnQKn5nW6v4buuYeY3EqKtCCMNvKdC5m8YxGc3z/n5m3lTTS3+zk+O1ZuqC+UkqumUmgqgcYS2SvD2wIn/eKQxnY00Z9Au10Ioflma/SKEIKCmlbOnZwMderya6esRH/wBrzc9dVdlLpKefq0p8mOyu77II0RTQ8v7V5cR4JBwd6aVmZkxEAwKB1HJlx0hEeqcTRhNxtpaJOWkbedqF5n4nJg02uw42NZWDb9+g6tqsm2nzONDELFkLVBG+ghL6KR2GAtNAGeloNqcjIYhKQj8Ta99Cw/kNZYUWDiRfDNI7KepzM5Z8imMMPMHWZ0vJ03vDH4LTqcbcUU17WRGdf1d8ofCPLz97awpqiBJrePB88bzwVTezqAfLq1ktlZsdLdK4SrQl47LYfmwqQoCllxNraLDCa3Laa1sZYmbCQ7LQecEHy7pw6QzmJsex/eur7TSfVy8uMcBWc/tv/JzzFEfwLtvyqK8iDwXyCcbhJCrB+0UWmMGOpbvTS5fYwOec4quoMOtH+98tesq1rHIwseYWbSzEEaqcZwIjnSQn5Fc8eGcMOajuC7qK6VVm+A8SmRMmPS3qTpszUOi1B3yFlZMRyXoUoJ4tWuj0v/BCY7ZJ88RKMbeEL+841CduSczo6OF2t3DrksptrVjjPCiMVTL4vj+yrqm3IFrHsB0ud03b7wXph02bCbGF01K53JaU4C72aQ2VDJlrKmHoH200sLeXNtKafmJbKjspl/fl3A+VNSugS6e6pd7Klu4do53RrTuCplNvswiiyz4m1sLo7jCuBvb33G0wXRJEaamZERw3EZ0czMjCEv2YFB3+EmsqKgltxEh3SLKVoum1Bd/ZZ0AHKkHNMOI73Rn/+NScC1wMl0SEeE+lzjGKewVjqOZMfbYNNOWRl+EJXcy8uW82HBh9w6+VbOHn32II1SY7iR5LRQ2+LB6w9KO6heiiG3lctAfHxyJJQvlhtHsF5WY+iJVAPtcDYbOtqrV22ROuBBdKI40uh1CpEWA/VeGWjnerd2vFgzDALtZrVZTVgC0UegHTMafrqr53aTDRLHD/wAD5MIk56ZmTEEE8YwumkX75c1dZHEbC1r4i+f7+Kcyck8ceU03lxbws/ekdntWVkx4f0+2yqLHs+Y0E0i4qo8bOvJ0XE2Fm+NARPUl2xndtZ5JERaWFdUz6It8nuxmvT8/cppnJKXiMcfYE1RPVfMVB3DytdDylTIHNzi0pFMfwLtS4HRQgjvYA9GY+RRWCMdR8Jd1OL7v0zkCXh4aNVDZEZmcsvkWwZriBrDkJQoC0LIjFZatLXXQHt7RTNGvUJOogM2r5Na2VBQpKFxCJw/JQWb2cCJOZ2K0qIzQW+SbhbjLxiysQ0WUVYTDR4pEUlt3ohX6DEYDOjUzrxDSU2LR1r7HabWeLijSxjHmD1fUV+0GZAFm+2+APe8sZEYm4nff28iiqJw/pRUfr8on5e+K+4aaG+rZFp6VNixKUxzubQ7PAxGx9soCsYTREdasIIzFozm1PFSB17e6GZtcQOPfLqDf3+7l1PyElmzt4F2X5D5Y+LA74XKrTDrB4c1hqOdvvvWwlZAa8Om0SsFNa2YDDpSIo2yCc1BaOSe3/o8Ja4SHpj9ACa9aRBHqTHcSAp5aYd02jqdDHY6uY5sK29mbIJDZrzL1su229qSpMZhkBBp4cpZ6V31p3qDLK4zWmHMaUM3uEHCGWGkQZWO2FuKKBQptDmyOpxWhhCZ0bYctnvGsGfOHXgMdm6t/g3CI5NTj362k93VLTx26ZSwO0yESc/tE7zckn8D9TuXA1BS38bWsmbOmthtEiLEgGS0s+LseDFSpcSRpVQyJ1TgCKRERXD+lBTOmZzM6r31tHj8LN5WSYRRz/yxcbIANeDRJH190J9AOwrYoSjKYkVRPgw9BntgGiODwpoWsmJt6BuLIOjrd0a71FXKc1ue4/SM05mbMndwB6kx7Ejen5e26joihGB7eRMTUiJle+CydZBx/FAMVeNYYMaNUudrGrkOI/sjymqkgY6ixz0ihXprFtTsOMBRg48QghqXp8NxRNGD7dDt74Y1kcmsmf4oo0UZre/eybe7a/j3t3u5/vgMTui8utJUxs3F9zJJt5f6r54A4Msd1QCcPr5boO1xga/1sFcBQhaKu/2JjDfXYDf3TGaclJuALyBYubWAxVsrODE3HotRL2UjIC0TNfZLf9JDDw76KDRGLIU1rYxLdnRctOP7t7T/yOpH0Ck67p157yCOTmO4EloC7eE8orqOVLs81LZ4ZaC9/kVZKDX9uqEYqsaxwOyjV7rmjDDixozQW1AC7ewRqcQaEkhv/BS8rUNWQNjk9uENBGVBXV2FtIXt3PnzKCN+ypk8/u3F/M/Ot/muIJrR8edx/1mdfL+DAXj1cgzeFjboJzGu6mvwuVm6q4aMWGuPIsrD7QoZwhlhJM5uoqg9idliZa8dLGeMsvFzy1uc/NEHzPfewsIJd8oXytZLf/LozMMaw9FOnxltIcQ3wA7AoT7y1W0axziudh/F9W2MCemzoU/piBCCRYWL+Lr0a26bchtJtqNTk6dxYBxmAzaTnvLOXtpGS9h1ZLtaCDkhMUK6DIw9XbuYa2gcAlFWI0a9DqxS81tpzKRAGSVfrO2lsPAIEe4KGalKR45SfXaInEQHT3MRX4rjuNP3PM8u9BBh6jSxKFktC3LPfpQtWTcTIdy4t3/GysI6FoyN63nCAdS1Z8XZKBJJmAMt0FbX9cXGEowvnMUtvEdAKJyi38hJ49Tuz+UbZTOaw2wtf7TTZ6CtKMplwGpkUeRlwCpFUS4Z7IFpDH+W7qolEBQsyImXgbZz1H59WX0BH4sKF3HVoqu4f9n95ETncE3eNUd4xBrDBUVRSHJaesloy+fbypsAmOhaKv11tWIbDY1D4rrjM3nskikoaqDd7BjNNp8anFUfnHxkc2kjjy3eQavHf9jj6tGs5jAzs8Mdk0FHbrKTuzy30WJNJfur22WDlxC7PgWdEcadQ/pxp1MrIile+jJt3gALx/YiqemvU0s/GJcUSZ05TT6pK+h4oXglPHsS1O1h5YzH+SQ4m3nGXTgtBvC2SY32Md71sT/0R6P9C2CmEOJ6IcR1wCzgV4M7LI2RwJL8KqKtRqanR0vpSC/Z7Mb2Rp7d/CxnvnMm9y+7nxZfC7+c/UteOusljHrjEIxaY7iQEhXRi0ZbPt9c2kRmrJWILa/ITHb2Kb2fREND44DkJDr43rRUmdFWdJgSxvJtnVMGdQep0/738r08+VUB5z+xnN1VrsMaV6j9ugy0yyHy6A60QbrezM7LwnH9m/Ja98a1Hb0Ddn4KmfPB4mR2diKLxWzSa5dh13k6OjB2ZgAz2j89I5f7rzlXPqlXA+21z8OL54HFCTcvIfekq9mkm0hUsF72NajYCCKgFUL2g/4E2johRHWn53X9PE7jKMYfCPLlzmpOGpeAHgG1u3sUQi4vW85pb5/G3zb8jTHRY/jHKf/gg+99wOXjLsc6gtsaawwMSZHdMtrGCPC5cXsDLNtdy9wxcVCdD5kLpCuJhobGoROVAYkTmJCewL4mL76EibL1fCeEEKwrrmdlQR376tp6nGJLWRM5iXaa3D4uePJbPtxUfkhD8QeCrCtuACDBCrgbjnrpCMDNC0bz3PUzMCTlwYVPy2LCRT+B2j1SxpMre0lEmPQUJZ6OVfFwXUJhuPFQFxr3gTlyQLp7OiOMJGfkyoLUmh3w8f/Ax3fD6BPg5iUQn0OMzcQDt90kDyhaDhtfkU49GZp/dl/0pxjyM0VRFgOvqc8vBz4dvCFpjATWFTfQ2ObjtLxEObP2u7u0xW3xtvDgigdJc6Tx2MLHGBN9cN0iNY5+kp0Wql3t+ANB2XXMYAa/hy93VOP2BThvQgxsqoKo9KEeqobGyOfMh8HvYUq1nLTuTT6bnA2/h6ptkDgBgGeXFfLQJx1Z7g/umMeUUdLdt9Xjp7C2lbtOGcuVs9K545X13PnaBtYV1fOLc8ZLG84+8AWCvLe+jCe+2sO++jZOyInH7q2VLx7l0pEe5J0LC++DpY9Cjeppnntm+OWkCSfQ9pWZ0627ex5b9C2sf0m2nh8o9EaIzoAVf5fF5/PuglMe7FKgakrMlc4wOz6GvUtlp84Izf25L/pTDHkv8DQwWX08I4S4b7AHpjG8+SK/CpNeJ/XZLVVyY6cL5ePrH6emrYbfzP2NFmRr9EqSM4KgkE0rADBEgN/Noi3lxNnNzIpWCyWdaUM3SA2NowWzA2xxTEyNRKfAF8YTpXxkwysALNpcwUOf7ODsSUk8eZWUA+yobA4fvr2iGSFgUqqTxEgLr90yh5vnZ/HiymKe+ev/Ub/x4/2+tS8Q5I01+zj5T19z3zubcUYYee66Gbxww0xoHjit8YjjxAdkoXfZOkic2CWpcMaUUeQb88jzbOp6TEMRvHmtDIoveGJgx5M4QfYzuOhZOO03PV1gFAUy5sLu/0rpy0ytdqY/9JnRVhS4BPwTAAAgAElEQVQlC/hECPGu+jxCUZRMIUTRYA9OY3gihODz7VUcnx0rPTdba+QLdtlNakX5Ct7c+SZX513NpPhJQzhSjeFMyEu7vLGdZGcEGC0EvW6+3FHNZTNGoXephULOUUM4Sg2NowuryUBOooNVlXB77lmw+XXW59zJPW9u5LiMaP582VQMOgWDTmFffYd8ZEupWqCc6gTAqNfxy3PHc3yCjwWLrsX9kRMmniZXpjpR1+Lh4n+uoKiujclpTn59/gROyk3oaBo0gEV9Iw6dTga1L18EU67s8lJatJW0hefBl7+F1lqwxUnv7NeuhKAfrnwDIqIHdjznPi57GThT979PxjzY/gGkHw9JEwf2/Y9S+iN8fAsIdnoeULdpHKMU1LRSVNcWbtMazmjb4yloLOCnX/+UMdFj+PG0Hw/dIDWGPT28tA0W3O422n1Bzp2cAo0lcnuUFmhraAwkU9Ki2FTaiJh2DbTV8crLz5HitPDsdTOwGPUY9DpSoyOoryqFZX+CYICtZU3EO8wkRnZtA35K6yJMSgBnoB42v9njvT7fXkVRXRtPXDWND+6Yx8njErt25gx3hTwGA22Q0osffNm7s1LWQvmzaLn02X7nZunwdemLEDcIK8W2uAMH2QDZJ0st9/F3DPz7H6X0J9A2CCG8oSfqv7V+2ccwX+TLwPrUPNVLUw20a3V67lhyB2aDmSdPflIreNQ4IClqG/aKkJe2wULA20aMzcSMjGjV+koBx1HalllDY4iYMiqKxjYfm83HUatEc37wS56/YRYxto5be3p0BBeWPgJLfgMVm9ha3sQkNZsdxu+Btf8m33E8O8mS+t5gsMsu3xbUkRhp5pxJyV0D7BCuCuk4ZNG0vj1ImQZGGxQtgyW/hl2fwVmPQPZJQzemuLFwXyHknTd0Yxhh9CfQrlEU5fzQE0VRLgBqB29IGsOdL7ZXMTE1Ui73A7RU025xctey+6hz1/HEyU+QbD9GsxMa/SYywkCEUd+R0TZGYAh4SImyoNMp0FQil5MN2rxeQ2MgmTJKBszXv7iedwMLWKhsJMvc0mWfs/WrmOVdDYCnrpg91S1h2UiYre9Caw3b06/mn76zoHan1O+qCCFYWVDL3Oy43oNsb5uUISSM15qe9IbeCBnHw6bX4du/wowbYebNQz0qrQDyIOlPoP1D4OeKouxTFGUf8DPg1sEdlsZwpa7Fw7p9DZyalxjeFnBV8Yu4aLbUbuEPC/7AhLgJQzhCjZGCoigkOy1UNIekI2YMwkuMTdV4Nu7TCiE1NAaBnEQHZoOOxjYfY07/IYoIwObXO3Zob+KCir+yOyhlBNWlewgKmJgS2bGPELDqnxCXiz9jIR8H5hA0R8nGKyq7q1uobfH27gMNsPzP8u/8tN8Mxsc8OshcAN4W+fOsR7UJyQikP64jBUKIOcB4YLwQYq4QYs/gD01jOPLljmqEIBxoB0WQB9t28l9jkJ/M+AmnZGiNRTT6T5fukIYITPiIs6o12k2lmj5bQ2MQMOp13HZiNr+/cCInz58Ho2bDhpdl8Ayw4xOs3jru991MwGijuaIQgElpnTLa+76Dik0w+1aSoqz4MdBuTQZXVXiXb/fIxe+5vQXatbtllnbSZZC1YNA+64hn8uUyi33Zf2SGW2PE0R8fbQCEEOF1JUVRpgsh1g/OkI4NCpsKWV2xGqvRSrItmWkJ0zDo+v11HDFKXaV8UfwFJa4SXF4Xa4uaiE73807xWj4oMVDaUspyXRu3GZK5fsL1Qz1cjRFGktPCdwV18olRFlnFW5E6z+YyGH/+/g/W0NA4ZO4+tVMn36lXw0d3QulaGDUTCr/Cb4llfftY2izJeOqKSY+xdsgFAVY9JbsGTrmClAapy24xxmJtqeKttSVkxtlYUVBHRqyVtOhu9TrFK+HN62STqtN/dwQ+7QgmMhnO+dNQj0LjMDjUyO42QDNQPAiEEBQ3F7OhegNL9i3hm9JvurweZY7iuMTjiLXEEm2JJtoSTYwlhmhLNJmRmSRaOyq1fUEfla2VpNpT0SmD1zFvdcVq7vn6Hpq9zTjNTpwmJ9U+FxF2ha9KCvALP0ER5PZmNz/MnjZo49A4ekl2WqhyeQgEBUHFhBGItwhorYaAV7P209A4Eky4ED67Hza8BGkzoPBrRNZCxAYddYYEzM3lzJ8a17F/UynkfwTH3w4mG0lOHwANumhiXXu59+3NAOh1CpfN6CT/EgJWPwuLH5CdKq/4EByJaGgczRxSoC2E0ILsPvAH/eyo38H6qvVsqN7A+ur11LfXAxBjieG2KbdxwZgLCAQD7GrYxefFn5Nfn8/6qvU0ehoRiC7ni7HEEGOJQa/oKWouwhPwEGuJ5fiU44kyR2HWm+XDIH8aFAO+oLz4mfQmttdt56uSrwiKIMm2ZBJticRHxBNvjSchIoF4azwxlhh0io5ady1fl3zNe7vfIyMyg1fPeZWMyAy+2lnNDc+v4YkbZnJiruo44m2Dh5JhasIR/f/VODpIckYQCApqWzyYgkaigXhLsJO1n9YVUkNj0LFEwvgLZHHj9OuhpQrj2JOJ2WViS0sk89jMwrGdAu01zwEi3LDEYTHiMBuoFlGMba0GBOdOTmH5nlrOmaS6Bvnc8PE9sOk1yDlTtiDXiuo0jgH6FWgripIKZHTeXwixdLAGNZKpbqvm4VUP8235t7j90rYs1Z7KvJR5TE+czvSE6WQ6M7tkotMj0zk149Tw80AwQJO3iYb2Burb69ndsJsd9Tto9jbjDXiZnTybUY5RrKtax+qK1bT522gPtOMP+vc7LpvRxsLUhThMDspayyhvKWdT9SYaPA3/396dx0dVnQ0c/z1ZSQJJ2Hdkk0VwQXCrG2jdKu6ttVZta9/aWrWLXay+Vd9qtZt2U2vVbnbTWve6tMVqXVur4FIEBAREdpAlCSSBJM/7x3OG3IQJmZCZzGTm+X4++SRz79zhHO6de5577rnPifv+koISThp1Et845BuUF9kDME/NW0tZUX7LB1u2rrPfPb1XwnXckJBLe/WWOvo2FNAb6FOslnEE/GFI57rKlPMsCH7iq/Z69AyG91nO/FUVnFJYw2HDw7CR7dtg9m9g/IdsdsJgUEUPVjX0Iq9pB5XUcMPp+1JRGsYUb14OfzrPxnRPv9KmHs9L3d1Y5zJJIjNDfg/4KDAPm6wGQAEPtFt5bsVzfPOFb1LXWMepY05l2sBpTBkwhYFlHQtC8/Pyd/Zgj2EMBw06KO77zplwTovXjU2N1DfWU99YT6M2UphnJ7m6hjp69+hNUf6uadJ2NO5gQ+0G1tWuY1PdJlSVksISpgyYQnF+8wxfqspT89dy1Lj+FBdEpmWt8UDb7bnmSWtqKWyw46pPcWPIoY0PHXGuq+x1OPQeCavmQN+xUDmcvfpsYMVK68mu2L4WqIT//hlqN8GhF7fYfHBlCcs39QJgUq/a5iB707tw1wxo3GGzGY4/sQsr5Vz6JdKjfTowXlXrU12Y7mx743Zu+PcNDCgdwPeP/j6jK0Z3eRny8/IpzSvdZaKYiuKKNraAwvxCBvcc3G7e67krq1hbVd8irR/QPCtkWf89KrPLbYN3TlpTR/kOC7QrC8PQkeIKu6XtnEs9EXso8pkbYPR0AEb0KeVfGoaMbH4P+o2zhyAHTrbAPGJweQ8WrSwDYEqfSLjwz+/C9q3w2eeh/zicyzWJBNpLgELAA+3dKMov4o7j7mBwz8EteoKzxaz5a8kTmDGh1VjsndOve4+267jepYUUFeSxeksdA0OgXVEYerR92IhzXeuAj8Psu2HyWQCM7FfGA7FAe8tym6Fw3Tw49dZd8jkPqujBK7VlUAQTe4WUnesXWn7uQz/vQbbLWYkE2tuA10XkH0SCbVX9QspK1U2NrBiZ7iKkzJx3NzFpSEWLKXoBqFkPCJT1i7udc7uzc9KaLXWMKLAxm2V5O6B6FZT71OvOdamKoXD5WztfztxvMCUFx6CPFCBbVsA7z0BJH9j3w7tsOqSyB+ua7O7p6B4hG/A/vwMFJXDEl7uk+M5lokQC7UfDj8thqzbXMnFInNv4NWuhtK8n0nd7bFB5D9ZsqeX9Mgu0paHOJr0YtF+aS+ZcbutRmM/J+w+DZ4ZYju13X4RDPmf5r1sZVFFCDSVs02IG52+BLSvhrQctyPaOGJfD2g20VfVuESkCYvd93lbVHaktlsskqsrKzbUcOzFOCr+addDTU/u5PTeksoRXlm1kQ37IQrB9q2Wz6bX75wacc12kYjgsDXM/TP1U3LdYBiFhA5UMa9wEK2fbigkzu6aMzmWoRLKOTAfuBpYBAgwXkU94er/csWnbDuobmhhSuWsvBjVrPdB2nTKoogdrq+pYF3uGd/Ny0CboNSit5XLOBbHsPyOPhH5j474llkFoa2Ef8mrWWCo/yYeBk7qqlM5lpESGjtwMHK+qbwOIyDjgHmBqKgvmMseqzZYPvMX0uzFb10HfMV1cIpdNBlf0YEej8vaGBruU37TUVnig7VxmqAyB9rT4vdlgk9b061mM9hwINath9eswYGLcYSbO5ZJEMsYXxoJsAFVdiGUh2S0R+ZWIrBORuZFlfxKR18PPMhF5PbLuShFZLCJvi8gJkeUnhmWLReQbiVfNJcvKEGgPbd2j3dRoQ0c8tZ/rhEHl1hP2fn04HW161357oO1cZhj/Idj37HaHgfz5c4cxdvQYqFkDq16Hwft3UQGdy1yJ9Gi/KiK/AH4fXn8ceDWB7X4D3Ar8NrZAVT8a+1tEbga2hL/3Ac4BJgFDgKdCzznAbcBxwArgFRF5VFXnJfDvuyRZHevRruzRcsXS56ChDobFn1DHuUTE7pTUx67fNy2z3z5G27nMMPRAOOuudt82ql8ZVA6Gui22YPABKS6Yc5kvkUD7YuASIJbO73ks+N0tVX1OREbGWyciApwNHBMWnQbcGybFWSoii4GDw7rFqrokbHdveK8H2l1o1ZY6igry6Ns6td/c+6GoF4w7If6GziUgNrZzOwUoYmnEECjzsf/OdTvRORW8R9u5hALts4G7VPWHsQUiMhN4rBP/7pHAWlVdFF4PBf4dWb8iLAN4r9XyQ+J9oIhcBFwEMGLEiE4UzbW2cnMtQytLkOgEBQ31MO8vMOFkH4PnOqVvWRFF+Xlsb2yiMb8HBY211ljnJ3J6cs5llFigLXkwaN/0lsW5DJDIGO1bgOdFZGJk2XWd/Hc/hj1QmTSqeqeqTlPVaf375/aY4Zr6hp0PMCbD6s21DK5oNWxk0Syo3wL7fiRp/47LTXl5wsAKm01VY7Oq+kyjznVPse9uv/FQVLr79zqXAxIJtJcCFwL3i0gsqpLdvH+3RKQAOBP4U2TxSmB45PWwsKyt5W43vnLf6xx787PMX12VlM9btblu19R+c++3iWpGH52Uf8PltsHldnxJYbig8/HZznVPsUDbh404ByQWaKuqzgGOBi4SkZuA/E78mx8EFqjqisiyR4FzRKRYREYBewP/AV4B9haRUWHSnHPwWSp3a0NNPf+Yv47aHY1c9LtX2bR1e6c+b0djE+uq68JkBEF9Nbz9JOxzus8I6ZIiNk5bYsOQPOOIc91TWX8YciBM9IlqnIPEAu3VAKq6ATgBUGByexuJyD3Av4DxIrJCRD4dVp1Dq2EjqvoWcB/2kONfgUtUtVFVG4BLgb8B84H7wntdGx59fRUNTcoPPrwfh1bN4qm7r+/U562tqqNJadmjveAJyzbiw0ZckozoU0pxQR55RbFA23u0neuW8gvgomdg4inpLolzGSGRKdhPjvzdBHwt/LS33cfaWP7JNpbfANwQZ/kTwBPt/XvOPDBnBfsNq+Aj04Zz0FPPMHjdYtj6JSjr26HPeeK/q/nVC0u5ZIbNAtYi0J57P5QPg+Fxn0t1rsM+c+RojttnIPJkbOiIj9F2zjnX/bXboy0i/UXkJhF5QkSejv10ReFcxyxYU8Vbq6o468BhAPRtep9idtA457ftbLmrp+at5dV3N3H1Izbf0JBYDu2t78M7T8PkMyEvkRsizrWvorSQ/YdXNmew8R5t55xzWSCRSOkP2LCNUcC3gGXY2GmXYR6YvYLCfOGU/YdAYwNl2zcAoK/8ymZx7ICF66rJE1ixqdX06/MehqYGHzbiUqMgZB3xMdrOOeeyQCKBdl9V/SWwQ1WfVdULaZ5oxmWIhsYmHnptFTPGD6BPWRHUrCGPJp5vnExB1XJY/FTCn9XYpCxaW8PHDh7ByL6l9C4tpKw4jDKa+wD0G+f5UV1qFHiPtnPOueyRyIwQO8Lv1SJyMrAK6JO6Irk98fyiDWyoqeesqTZshKpVANzdeALTSlZT8uafEp7BcfnGbdQ3NLH/sEo+c+RoVsZycm9ZAe++BNOvBNnjDI/Ota2wh010UZbbufCdc85lh0QC7W+LSAXwFWzymnLgyyktleuw++esoHdpITPGh2mrt1j2xJUykLUlYxi56d2EP2vh2moAxg3qxch+ZYzsV2Yr5j4IKOz74WQW3blmpX2hcgTkdSaDqHPOOZcZEsk6EptqfQswI7XFcXtiy7YdzJq3lnMPHkFRQRgNFHq0tdcQ1mhfRla9kfDnLVxjgfbeA3q2XDH3fhgyBfqOSUq5ndvF9Cvh0IvTXQrnnHMuKdoNtMMEMpcBI6PvV9VTU1cs1xGP/XcV2xuadmYbASzQLiyjd+9+LN9SwaG1a6GxwXKctuPttdUM611i47K3b4Nt71ve7NVvwPG7ZGB0LnlK+9iPc845lwUSGTryMPBL4C9AU2qL4/bEA7NXMG5gTyYPLW9eWLUCKoYyvG8pi9dWgDbC1nVQPqTdz1u0tobxA3vZi4cvtkwjZf0BsbR+zjnnnHOuXYkE2nWq+tOUl8TtkSXra5izfDNXnjQBiT6gWLUKyocwvHcpr9X1giKganW7gfb2hibeWV/DMRMHwNq3LMgee5wF6WOOTShQd84555xziQXaPxGRa4G/A/Wxhao6J2Wlcgl7cM5K8gTOmDK05YqqVTB6OsP7lPJXDbfiq1YCU3f7ecve30pDkzJuYE947moo6gln3um3851zzjnnOiiRQHtf4Hwsd3Zs6IjiubTTrqlJeei1lRy5d38GlPdoXtHYANWroXwow/uUsDoWaFevbvczX1hkk9xMLloDbz0ER3zZg2znnHPOuT2QSKD9EWC0qm5PdWFcx7z67iZWbq7lipMmtFxRsxa0aefQkY30olEKya9a2eZnqSq3Pr2Ym2ct5LDhPRjzwlehqAwOuyTFtXDOOeecy06JzAw5F6hMdUFcxy1eVwPAQSN7t1wRUvtRPpT+vYopLsinqrC/jdFuw7ML13PzrIWcsf9Aft/7F+SteQPO+gWU9UtV8Z1zzjnnsloiPdqVwAIReYWWY7Q9vV+arauuA6Bfz+KWK6psshoqhiIiDO1dwvs7+tI7FoDH8fp7mxGB705YQv4jT8CJ34XxJ6Wq6M4555xzWS+RQPvalJfC7ZH11fX0KSuiML/VjYmdPdqWIaRfWTFrt/RhbPV7bX7W/NVVjOpbRvG2d2zBlPNSUWTnnHPOuZyRyMyQz0Zfi8gRwMeAZ+Nv4brK+up6+rfuzYYwWU0p9LARPxWlhaze1BuqXgZViKYBDBasqWbSkHKorwYECstSXHrnnHPOueyWyBhtRGSKiPxARJYB1wPzU1oql5D1NfX07xUn0F79hk2THgLqypJCVjT0ttkdazft8vaa+gbefX8bEweVw/YaS+mXl9Ch4Zxzzjnn2tBmNCUi40TkWhFZANwCLAdEVWeo6q1dVkLXpvXVcQLtuipY/i+bXCaoLC1k2fYKexFnnPbba6oBmDi4HOqroLhXysrsnHPOOZcrdtdtuQDLlT1TVY9Q1VuAxq4plmuPqrKuup4BrQPtpc9CUwPsfdzORZWlRSxvCIlj4uTSnr+6CoAJg3tBfQ0U90xZuZ1zzjnncsXuAu0zgdXAMyJyl4gcC+w6uNelRVVdA9sbmnbt0V40C4rLYfghOxdVlBSypsXskC0tWFNFrx4FDK0ssTHa3qPtnHPOOddpbQbaqvqwqp4DTACeAb4EDBCR20Xk+K4qoItvfbVlWmwRaKvC4qdg9NGQX7hzcWVpIeuoRJG4ubTnr65m4qByRKR5jLZzzjnnnOuUdp94U9WtqvpHVT0FGAa8BlyR8pK53doZaEezjqybbz3We7e8DqosKaKBAhp69Nll6EhTk7JgdRUTB4debO/Rds4555xLig6lllDVTap6p6oe2/67XSrFJqtp0aO96O/2e+wHW7y3stR6t+sLK6Fuc4t1KzbVsnV7oz0ICWGMtgfazjnnnHOd5TncuqlYj/aAXj2aFy5+CgZO3jlRTUxFiQXadQW9dknvN2/ng5Ah0N5e7UNHnHPOOeeSwAPtbmp9TT1F+XmUl4Q5h2Jp/Vr1ZkNzj/bWvPJdAu0Fa6oQgfEDe9kYbx864pxzzjmXFB5od1OxHNoSm+UxTlq/mJ7FBeTnCdV5PaF2S4t1sanXS4ryoaHePsPT+znnnHPOdZoH2t3U+up6+rUYn71rWr8YEaGypJAt2nOXHu35q6sj47Nt4hqKy1NVbOecc865nOGBdje1PjpZjaoF2qOnt0jrF1VRWshGLbMx2I07AJt6ffnGbUwYFIaKbA+Bto/Rds4555zrNA+0u6kW06+vmwfVq+IOG4mpLClkY2Opvai1zCNvr7EHIXft0fYx2s4555xzneWBdje0o7GJjdu2N+fQXjTLfsd5EDKmsrSIdQ0l9iIMH5m/2gLriUMiqf3Ax2g755xzziVBQboL4BJXt6ORW55exNDKUlQjObTbSOsXVVlSyJrtIdAOubTnr66ivEcBQypCisBYj3aR92g755xzznWWB9rdyC1PL+K2Z97Z+bp/r+LmtH6HXbrbbStKC1lQXwJCpEe7igmDy5szl2yP9Wh7oO2cc84511k+dCSZ7pwBj12eko+et6qKO55dwhlThnLH+VO54LC9+MCYvrDkn22m9YuqLCli1fbQc127iaYm5e011UwcFAmq623Mtg8dcc4555zrPO/RTiZthM3Lk/6x9Q2NXPHAm1SUFHLNzH3oXVbECZMG2crFbaf1i6osLWSLltmL2k28t2lby6nXITJG23u0nXPOOec6y3u0k6nXEKhaldSPbGpSLr/vDf67cgs3nDGZ3mVFzStVYdFTu03rF1NZWkgVzYH2zgcho4F2bOhIYVnyKuCcc845l6O8RzuZyofAe//u9MfUNzTy7vvbWLyuhlnz1vL4m6u58qQJnDh5sL3hvVfg92dB+eB20/rFVJQU0kQeDUXlFNRuZv7qKvIExg2MDh2ptgch8/z6yznnnHOuszzQTqbywfag4Y5aKCzp0KYvLt7Ar19cyjvrt7J84zYam3Tnus8eNZqLjhptLxrq4dFL7fN7DYa8Ahh3UrufX1lqPeE7CisoqN3E/A1VjOwXpl6Pqa/28dnOOeecc0nigXYy9Qrp9apXQ5/RHdr0R7MWsmhdDR8Y05eZ+w1m7ICejOlvPy2C4Rd+DOsXwLn3wbgTEv78yhIbWlJXWE5J7SYWrKlm36EVLd9UX+3js51zzjnnksQD7WQqD0M7qnYfaG9vaKKooHl4Ru32Rt5YsZkLjxjFlSdN3HWDbRvhj2fD2nmwYytMPqtDQTbYGG2ArXnllG/byPKN2zh72rBWBavx6dedc84555LEB+MmU/lQ+72bByL//Op7TL1+Fm+t2rJz2Zzlm9jRqBw6uu+uG6jCo5fBqtdh6ifguOtg5o86XLRePQoRgZq8nuyoeR9o9SAkeI+2c84551wSeaCdTL1Cj3Z1/EB7Q0091z82j+r6Br7zxAJUbRz2v5e8T36eMG2v3rtuNOduWPAYHHsNnPgdOPyL0KNi1/e1Iz9PqCwpZN2OEqi1IH/CLoF2jQfazjnnnHNJ4oF2EjUV9UKLymzoSBw3Pj6f2h2NnH/oXixdPJ93Hv0+NDXy8pKNTB5aQa8erVL0bXoX/nqlpe9rZ+bHRHx46jDefD+Pwh1bqOiR1zz1ekx9tQ8dcc4555xLEg+0k+jom55hvfSN26P90jsbePC1lXz2qDFcPXMfPt3r34x97UZqH7uC19/bzKGj+rTcQBUevxwQOPXWpKTc+8Kxe7OjqIJ8mjhgYGHz1Osx233oiHPOOedcsnignUQj+5axqrFylx7t+oZGvvnwXIb3KeHSY8ZSVJDHicMbACiZcxfn8sSu47PnPgCLn4Jjr4bK4UkpX68ehRy+794ATOmnLVeqeno/55xzzrkk8kA7ifYdWsGS+gq0amWL5Xc9t4Ql67dy3amT6VFoqfqGyPtU957EM3ogVxbcw7TBkQQw2zbCk1fAkAPh4IuSWsZpE0YBcNqEVnm+G+qhqcF7tJ1zzjnnksQD7STab1glq7U3VK+FpiYAlr+/jVueXsyH9h3EjAkDmt+8ZSW9Bo5i7OlXUSw76LXi2eZ1f7/aJr459aeQl08y5ZXaEJVRpTtarqi3Kdkp8kDbOeeccy4ZPNBOov2HV7BG+yDaAFvXo6pc/chcCvKEa2ZOan6jKlSthIphDN9vBpT2hQWP27olz8Lrv4fDvwCD9k1+IUtCZpPaTS2Xbw+BtvdoO+ecc84lhU9Yk0SDynuwrXgANAHVq3hyWRPPLlzP1TP3YVA0w0fdFpscpnwo5Icp1Of/Beqq4LEvQe9RcPQVqSlkW4F2fY399jHazjnnnHNJ4YF2EokIFQP3gtVQu3EF3/rL++wzuJxPHLZXyzfGxnBXhAluJpxsvdj3nAMbl8AFj0BhqzHUyVLSGyQPZl0Dbz0EQ6bA0Kk2Phu8R9s555xzLkk80E6ywcPHwGr464tzWFc9jZ+fN5WC/FYjdLaEQLs8TIE+ejoUlMC7L8L+59rrVCkohnPusYwmq+bAyz+Hxu3N6z3QdvtsMEUAACAASURBVM4555xLCg+0k2zsyJFsfzmfohUvcO5BZzBlRJzZHqtW2O9Yj3ZRKYw7AZa9ACfckPpCjj/RfsCyjax9C1bOhpp1MGi/1P/7zjnnnHM5wAPtJNtvRB9+1ngaXyp4kGNL7gfiBK5bVtrwjZ6DmpedegvsqIXSPru+P5UKimHogfbjnHPOOeeSxgPtJOvbs5jqQ77Kyi3FDH35J1DezzKIRFWthF6D7UHImB7l9uOcc84557KCB9opcPUpk6DpNnigDmZdbb3UU85rfsOWFZZxxDnnnHPOZa2U5dEWkV+JyDoRmdtq+WUiskBE3hKR70eWXykii0XkbRE5IbL8xLBssYh8I1XlTbq8fDjjThhzDDx6Gcx/rHld1crm8dnOOeeccy4rpXLCmt8AJ0YXiMgM4DRgf1WdBNwUlu8DnANMCtv8TETyRSQfuA04CdgH+Fh4b/dQUARn/86mUr//Qlj6fJisZpX3aDvnnHPOZbmUBdqq+hywsdXii4Hvqmp9eM+6sPw04F5VrVfVpcBi4ODws1hVl6jqduDe8N7uo7gnfPzP0Hsk3PMxeOcf0FAHFcPSXTLnnHPOOZdCXT0F+zjgSBF5WUSeFZGDwvKhwHuR960Iy9pavgsRuUhEXhWRV9evX5+CondCaR84/yEoqYR7zrVl3qPtnHPOOZfVujrQLgD6AIcCXwPuExFJxger6p2qOk1Vp/Xv3z8ZH5lcFUPh/IebJ4TxMdrOOeecc1mtq7OOrAAeVFUF/iMiTUA/YCUwPPK+YWEZu1ne/fQbC+c/CP+5EwZMSndpnHPOOedcCnV1j/bDwAwAERkHFAEbgEeBc0SkWERGAXsD/wFeAfYWkVEiUoQ9MPloF5c5uQbvD6fdBoU90l0S55xzzjmXQinr0RaRe4DpQD8RWQFcC/wK+FVI+bcd+ETo3X5LRO4D5gENwCWq2hg+51Lgb0A+8CtVfStVZXbOOeeccy5ZxOLc7DJt2jR99dVX010M55xzzjmX5URktqpOi7euq4eOOOecc845lxM80HbOOeeccy4FPNB2zjnnnHMuBTzQds4555xzLgU80HbOOeeccy4FPNB2zjnnnHMuBTzQds4555xzLgU80HbOOeeccy4FPNB2zjnnnHMuBbJyZkgRWQ+8G2dVP2BDFxcn1bKxTm3JhbrmQh1jcqGuuVDHGK9r9vF6ZpdcqSd0fV33UtX+8VZkZaDdFhF5ta0pMrurbKxTW3KhrrlQx5hcqGsu1DHG65p9vJ7ZJVfqCZlVVx864pxzzjnnXAp4oO2cc84551wK5FqgfWe6C5AC2VintuRCXXOhjjG5UNdcqGOM1zX7eD2zS67UEzKorjk1Rts555xzzrmukms92s4555xzznUJD7Sdc84555xLAQ+0nXOuE0RkhIgMTHc5nHPOZZ6sC7RFJD/dZUg2CdJdjq4gIll3TLYl2/dpLuxLESkFvgBcl+6ydIVc2KeQne1IayJSIiJ9012OrpIL59tsr2NUd6prVpw0RaSHiAwDUNVGESmIrOs2OyMeERENRGQ/Edk73WVKlVDXpvD3iNiy9JYqOVoHKCJyJnBBvHXZQETyIvuyON3lSbbIcVkL/BkYICJHprFIKRULPCP7tGD3W3RPsU4NVW0Mr4fF9nU2fU9DnU4AjhSRkSJyRrbu05jQho4TkYMge9oWaD7fhjqOEJG4MxRmi1DfbpPJI1tOHNcDV4lIkYhcDvxdRL4pIgO6086IJ3xxikTki8BdwMR0lylVQl33EpHfAj+LLUtzsZIiFqBE9AI+0ca6bk9Vm0SkTERuAe4QkUPTXaZkihyXg1T1ZeBfwGfSWKSUigSeB4vINcDxaS5SSkQ6NYaJyFPAvcB9IjI8G76nsV7PcPxuBL4DPAV8QFUb0lu6LvFB4NuQPW0L7DzflojIHcCvydI4IXZxFOrbU0S+JyJnicigsD4jY9qMLFQiQsdD7PbeLcA44GrgAOAqYBTwizQVb4/F6fnsAVwIfBG4RFUfTUvBUqD17VkRGQfcA2xU1ZnpKVXyxOoXGrdKEfm+iOwfVj8DLMzWsb0icjTwW2AtMBf4kYhk1clfRPYF/isiZcAfgR4icl6ai5USIjJcRP4OXAt8EusJzYpes+j3NPz+ElbPR1T1COwYvjV9JUyO2B3DcCFxIFANLMcC7f9Nb+mSJ7IfY7/PjKyeC8wWkcp0lC1Z4sQJAnwN2A6coKrPpaVgKRa7OBKRw7E82UOBo7FOyIzttOqWgbaI5IeOh0YRKVTV5cADwBnAU6r6b1X9NDBKRGaGbTK+riJSELk1e5SIjAbqgb8Bi4HpYV23vuUVuSqN9ZLtJyK9gCXA28DksLxbjpOM3GZvFJESIF9VNwNbgUtE5PNAIzBGVdemsahJJyJDRaQQ+BgwTlW/rao3Aa8DZ4pIRXpL2HEicqqInBD+LghBp6jqf4G/Ater6grgUeDDIlKezvKmyMeBN1X1ZKwjozdwbHqL1Dmtz0NAWfjdBBwFLAzrLwX2FpGTott1F7G2LzKs4GGsJ3sr8FmgADhdRHqmsZidFjrfdg5ZiwRd14U73IOA97He+81pK2gnxS6Ywt99I3co9gFeVNUGESlKbymTI7ZPWy2bCfwKeFtVzwO+CgwUkY+H9RkX62VcgdoSGrj+sDOAKRSRG4EfiMgHVfV2YBFQFjlh/IJwOzdTr3REZLSIfAogfEH2EpEHgRuxnqNbVHUp8AdgrIiMCSfMbrPvoGXjFLkqPUhEXgV+BPwdGIn1HG0RkePCfu429Yz1VkcuIL4IvIKd6C9S1W8BPwY+hd15GR2uzLNC6OF9HWu4fwksE5EPhdV3AgcDB3anQCX0Vh8NfCAE0JcBP8ACTbC7aKeLyATsYn8N1rPU7bTeL2Ljdi8KL0uw/Qo2Jv09YIaIjOyyAiZJ2KfR89CHROSfwPUicqmq/hSYB/QPHQBgdyxmRLfLZKF9/KyITAUGhGUF2PH7L1U9QVUXquoy4E3gcGw4G93tYji6P8OQgjEicreI/K+IHAIcCRRj7cxioE5ETk5jkfdI5MJQRWSUiDwJ/AS4WuzO6BJARaREVbeHbbr1XafIPh0VuzOhqo8BzwO9InX9DuG8m4mxXrcIYkTkfGABcGJ43Q/4B7AN+Atws4jMAO4ATiGcEIH+WACXyR4GfiIix4XXxwMPhVuWZcBHQ7DyALAZOBsy82Bqi4jsBYyOvC4KFxfXAz9Q1WOBf2MBaAHwJN1o/LLY0JBngcdEJNYbfzkwBev1ew/4hohMUdV5wFeA/bHjs1s1atBuD+/fgW+p6ivAc8DxItJTVV/DGoKZQGnaCt8BoU5bse9ob6zBvjP2t9jdtKXAE8A1qlqLnY+KpZs8ANrGBXCso6IB+IKIDMbOv1tEZFK4kHwdOATr+e0WQgD2IPC5WDAZvq+fwwLQfwBXiMh+2DjXTwIfE7uzeBw23CvjhfZyPnAM8HngURE5AGvvD8OeJ4hlzAH4HVAIfE9EVgAf6PJC7yEROQLryBgdXh8APAS8BazGOqhGqurVwHpsaOJm7MIx44Xz60HheC0My4ZigeXtwMXAFVg7sxbbv+eH910PfKW7nItgZw/2KSKyT3hdICLfBh4BPiQiN4klvrgNa1/3BlDVh4CtInJtusq+OxkbaIf/8OEishALsM9T1d+F1aOwxu92bOzyUuAdVf0r8C72xfsN1hOVcYG22HCCmN9hV2cXhS/E3cC/ROR5bP9cBVynqjXYCXKyiIzt6jLvKREZAjwG/F7sQaq8cAXahPW0xE4C38d6tHtiQ2X6hGA844WLgVew25KfC4vvAS7F9t9HgH8CN4X3P6eqN2IN976Qmbe74kmgh/eb2PCJsdjJsQiIjVu+BgtIt3ZtqTsm2nMUfj8PLMOGbhUCv8HqNChssgg4W0SOVtXHVfXrqlrfxcXusDgXwIUiciEWiBaq6l+w3s5PA3OAfKzXd1/go9i5dlLXl7zjROSz2EXQHOxuS2z/HIydf6dhKRpvVtU3w7MwC7H9fA0wS1Wf7PKCd1AIwj4OnKmqHw1DKJ8G/gf73j5Oc3CyLWy2Dfh6WHd6N6lnbGiEAoI95AgwDHhcVb+vqr/Czrm/BFDVLwAvYJ1xGX+xLyKfBN4ArsQuHm4JqxQ7NoeE5fcCf8LioaeBk0XkJWA48J3ucC6KqMDON4eHffwBoEZV98O+p2cDF4eOm5eBCyJ3YD6K3THOPKqa0T/ADmBK+Hs0cCowFhtf9h/g7Mh7+2LjlB4B9kt32VvVQ4C9sJ6gH0SWXwV8A/gu8LWw7EzgxvD3gdgV+FXh9cB012UP6v4SdsFzI3BlWFYZXn8dGBCW3QpcG/6eCpSlu+xt7Md8rDf+vLAsH7ttdQV2ofSRsHwm8Lvw9wSsx+HcyGedjjXsaa9XonUPv48EfgqcjN11+RtwGlAY1t8Wqfdl2Bi6QiAvLMtLd13i1O0C4INxlheE35Oxk/inw+u7gZuxu2i/BE5rtV3G1bFV+YYA/8Uu3g+O7JvPYrfYp4fXI7ELif2xRvAGrAf/I8ChwB/SXZcE6lqIXfgeEGfdkUBd2I9lYVlfYAT2gP0zwGHdaL8eC9wb/i4NvwcB3wvfxUuAn2N3D8uxsa7fTne5E6ybhOPxpVg7EZafjwWhY4APY0NjwO6OFmAB2v6RY2FAuuvSTh2HY4H074GpYflkLHa4FrtQeh6783twZNt9wu9KYEi667IHdY+dgz6MPdx4YHhdgl1E/A3ryPoD1unRH+sImBrvczLpJ2N70aQ5p+cXgD+KyNeB+7GT3yrgQeAJVb0vvP8G4JOqOk9VT1PVN9NR7raoeRfrjb9IRD4exjf+A+uxfxI4SuyBjWHY4P5DsCEUN2MHFNqNHp6T5ocZ/4Rdmf8ROC+MtarB6jwVS814QPj7VQBVna2qW6O3tjOB2jd5IPaU/k0icgwWaC/Drr7vBc4NV+PjsduXYL1J/yT0JoVbndcS9msma6OHdylt9/C+jd1yPxy4Q1VvUtUduutDSmknIhNF5DWsR+wyEfmyiEwK6wo0pDxT1bnYsXmAiIwHvoz1qABcraqPhG12pp/q4qp0iKquwrJOVGMXfFeEVQ9gnRgHi6VHXYYF2j9R1S2q+r9YR0A1Fpy+lGnf0TjysWEwR4nIZBH5oohcISIXYCnubgfWh/PNUVg7M11VF2JZKj4tYax2pu9XbJz1JLAe6zD8aQ32ndwPC6yfwDqs/gG8p6rfTFdhOyK0ocuwelwrIl8TG2t9H9aenKmq9wO9ReTC8N2diGVWmR8+Y4eqrktPDdoX6vgeFifcoqqzRaRHOP98EhsqshW7M/MisE5ESkXkz9jwxAJV3Ry+391C63Nm2Ie1wLFiEyoNAEarPVfwc+wu8GfDe85Q1dnRz8vE72jGBNrSnGIp9p8ea+BuBzYBF6jqgaHR3ob1AF8gIj8Re6BuFJZOLCNFLhz+Bzvxb8OGSzQAs7Be63nYbZO7sEDmdmCrql6v9gBAxms15jP2NH8DsCqcLH6O9WTfEAK2l7He3muwxvzx6OfFgrtMIZbxZhV2J6IEu0vxPaznazmwBdgAnIPdWRkkIv/FMuJ8We2BSLBhJmeo6t1dXIWEiMgFIvJBaLkPIsfxLCzIPktV78GO5y+J5XHdPyx/UZsfysmYc00rRwP/UNULsOB5LHC+iBSpPZz8ARG5WSz15N+xAPNkoE5V71PVz6rqKolkdkhXRRLVzgXwZiyTymjgLLHxyiuB5dL8YOCRWI/o/6jqbZlY51bBfwNW1/OwYWzjsTqcCFyOfX9niMh92DCoX6pqrC35P6zXvrqLip6Q1u1lxF+AzSJydngdGyLxLFbnErVhMecBx6hqRo5pjSdy7rkQO05fxO6snYg9hNxTRKaE9WeLyD1Yr/Ds2Hko00XqeBnWgYGq1oUA+nWsJzuWfjIPu3v4AjBXVS/QbpILXUQ+JeFB+Tbal/uwC6oDgBXAoSLyERH5MvAO8GtVrVHVd7q46Hsm1V3m7f1gg/fvwm4v94oszweKw99HAOsi64rC7xHYyeOQdNcjTr3yw2+Js+414CIs+JoTXvfExgk+BxwR3lea7nokWNf2brufHup5FfZA3JXYLesfYgHpd7C7EbHtMu7WD83DJiSybBXWM3QNdlvrHqxH6SQsEB0e3jc1+jmZWL9I+SaG4/G32IXCl4FJ0f0Zee952C3b8UAfbPzcHURuW8Y7/tNcv1KgMvL6XOwuRGzYy8+xYOwjoV5vtzo2zwh1HJHJx2ucesc7D12CXfyBNewLgO+F18eH/T8XODHd5U+wjruch1p9X0eF82zf8PpQLADvgT0rMqrVtvnprlOcOu6uvYzdev8k8Fqr7c4Fbkp3+TtY1921oXPDd3QfLOh8O3x3v4N1APTAZr4clO56dKKObwJfCH/HhgFdjGVTi203AuiT7np0oL6DsQdV78VinWuAyWFd6/blaqwzsjzsywfD9zWj92nceqf5P/1oYDaWc/eH4UtyfKv39Ay//4Tdht5lh2TSTzsnwtiFw3RgTeTvn2HDRUrDCXHvdNcjwbomFJRhPb9zsR7BgWHZSOyJ+ELsgdZbsdtDaa9XpNxtXUDE9uMlwCvh769jPSzDsAcDvwsc12q7jGu449Ttc7EGGevVvC3UJXZx+wFsKNM47JbejVivYGmrz8m44BN7UHMpcFlk2UHYmL/bwvH4ZDj5fxULvgpbfUYJ1quU8Sf73Ry/u7sAfgkLWAYB5a22y8jjt53zUGHkfdJqu69hvdetPy9T65lIe1mCPYD8O+zhxquwTDlzgVPSXYcE65loG7qe5gvkq7ExzNsJHVWZ/JNgHY/G7nz2iKy/DfhEusvfiXqfCNwZ/h4bzjk3tWpfvoW1oaPDd/rDYV1Z5HMyrn3Z3U+6b+dOxRKs34NNizoQG9s5EEBErgP+EJ6Ovwz4jIiM0wy9PSI2G96t2JO/Q7Cxx8eDDaNQ1XqxVGf/BJ4XkVvD399Q1RWquk1V/6iqi9JVhw5K5Lb798L7ngW+pKprw/plqvozVd2BjYn8gaouSVtNIhIYt1sPoKq3AUUi8jlV/T72UM5q7LbmN1V1VvRztXkoTcYI4/uis6RVAcNC1okl2Il/MnBaGJv8a+C/ajl412HZVsYD/SKfuXPSiEwhlgVlbywQGygih4VVr2KN9DJsbOunsN6xA1S1XlV3SMuJk74IrANqMnVscqLjzrG7MEVY0HKYqn4HC+LmAlWqWhW22TkBU9fWJGG7Ow/tCOehH2A53AeLyOki8jes1/621h+WwfVsr728HrurNgy7Y3oz1pGxCkso8Je0lLoDOtiGPo11UoFddJyM3X16oetLnrgO1PFZbNbO68J2d2Ip7f6dnpJ3nIj0FpFDRSSWlWoL9vxHsaouxp5bKsKG+hyEPUOwVFU3hfbnFSytX76GbFWZ2L60p0sD7fAfPi6y6G2gUkSGqOpG7IGGImwCiHHYCfNyVX03NOqfAKoztYGjYxcOlwCfDxcOVWkrcQfsQVD2G2C+WtrFQ7G8rmhkvFz40qxUe1A0UyRyAfEjsdSFnwd+HPs/CCdKDe/L1OMUABH5JnYb7/zI4kXYrJU/FpvBci8su89eWDA6WVV/E3n/X7Hbtzv3aaacBMUmORgEEE7qX8LG4xZi6aN6hn21BOvFv0TtwbFt2DhAwraNkX15k6qepTY+MOPGJgeduQB+V1Vv1ebUbxkXeO7hxeFbag9NFWC9Zvep6nGqOqery5+oPWgvxwBfCeehWlV9WlW/par/Fzo0uoOOdr59WkTGq2pDaEf+mLaSJy7ROo4gZG0SkcXYBf7Rqvp2msrdISLyDWx4yBeBv4glAJiNtScfDW97M/yMxcbZ79Oqfbkbe4Yr9nxIxrQvHdElgbaIVIrI49i41bOleUKEhdhJ8jci8gCW1uZ17FbKQlU9V1XfiQ2QV9XfqerqTGngcuDCYac9DMomRb40H8duSbeQCV+aPWy431DVVar6ItYjf1Drz82U4zSebO3hFVMgIrHZRr8vItcAhF6S1djwiOFEJltRVRXL238Xdlv++ejnxvalZuDdtBRdAKd9X8aThIvDFWp5zn8ZPi96LGeEJLSX6b5TnbAktaFVmXq8QqfquDzU8SzgJFX9ZqZfMIXzb56InIH1vs9U1Y9h38erwznmJWzCr6Ghl3ozFiu8pzYLZPRB36uw474uLRVKkq76QsZy7V4W/j4KQG2IxOXYbZ8/q+oZ2El0emzD0OOZUY1btl44tCUZQZmqLgi9aRnVCHSm4Y6d3FX1PFV9qUsLvgdyoYc3lGE0FlhOxW67ThObXSxmFpbW7ZBWDfQQLKvIFFV9qouK3CkpvABO+75sLUnnIQ2fFfvuZlRvfdDZ9jLtnRftyYU2NIl1fEi7wXBSERmFPYPVhPVcX6XNd6qfxIaNgAXaGwhDYrBsXTsn8ot9J8M+vUFVP6mq3TrQllQdn2I5St/Fnn6uEpEeWGD/NSzzwp0aJ9djaDg2q+qtKSlYEojNvnUW9mUZDzyvqk+EdUXA4dgBd69YCpvPq+rMsL67nAhHAbUh0EJsjFUPLDhbD/xcbbbK2FTVsQbsFGCadoO0UaHhvhpLH1mDzSj2r9AIj8L28UhscpqjsYeJzgvb5kcb6ej/QSYJdcnH0pbNxLK9LFbV6yLvOQ3r1fxb7DgOy4djDwZOx2bjytjgU0SmYw9nvoANZTldVS8N68ZiY/32CT3aiI1ZPhe7JXkgcGroXYp9Xov9m4mSfPxm5HkpF85DkN3tZTw50obmQh3jtS8LVfXbYX1+6Jj5KrCvqn4iLK/A8rmvxNqeS1T1T+moQ1dIau9iuG0wWESewW7pfBy4XUT6qWqd2ri/p7AnSo9pte0RIjIbS9eXcTmjxfIKHy0i5aq6EnuS+z7slsbBYuN1UdXtqvqMqt4bNj0QG8dKWJ+xX56w/5J+2z2TJLNXN/q5mRhkQ/b38IrIILF8uTdjT7TfhfUCnigifWDnfv49NuNhzDYsDdoxWBCzMVb3ELBlZJCdwuM3Y85LuXAeguxuL+PJkTY06+sY1Ub7crDYBIJgQTjhPQ9GttuCBebXASOzOciGJAba4cpFsR6ilap6LJbzcSN2sAGgNqZ1GTBBRCpEpCysWoKN4TlBbfantMu1E2G2BmW50nBHich0ETk7nNhHAG+ralUIzi4HLhGRwWAzyGHjzAuAn4jICyLSR1VfVtXLVbVGMnAsa3A4lipzqqpeiN2SVOBhLN91zPeAPqGXCSx/++9VdbKGyUliF0uZdtGUa8dvtp6HorKxvYwnF9rQXKhjawm0L58XkcHa/NxHKfCqiBwnIg+JPT+ySVXnZnj7khza+byI+Vgu3dhT7KcAd0fW52FPkx4dWdYT+DE2bnAtMKyz5Uj2D80J4cdhDXKsrrcAD7Z675exp4crCLkesRP+h9JdjwTrOh2bbGQIlhLs1si6sdit6cGRZZOAG7BZuV6gVcJ8MjAPbdiPs7Dk92OBR4FvR9aXYhMffIuWk1wcggUpPdNdhwTrOQhL8TUbS5X0OHAasDi6n8JxfG/k9SjsNt5cbBZWYv8P0f+PTPvBGq/oBDQXYinbirG0ZjPC8hFYb3cs7250H2fc8Rqnnll//ObIeSgr28u26hp+Z20bmgt1bFWHDrcvWOrXLdg47aeBs9Ndj67+6VSPtlg+yNlYY7cYGwu4A5vO9mDYeQvk/8JPzMlYWrQ3sHE7KzpTjmQSkXwRuRG4MdRvPPZgEWq3W78IfCCsi7kLOxnOApaIyDC1jBRPkMGy/bZ7DvXqRmV9D2+UWq/I5siig4B31HKdfwO4WERuxibwKIpst/OhuEw5XlvLleM3289DMdnYXsaTC21oLtSxDXvSvgzHnj/4q6oeo6r3dXWh066TVzdHAudHXv8Mu/31SWB2WJaHXQXdh43FAbsCOirdVxlx6nM09vTv7cBnsByQJ2JPxR4ced/ngGcirz+K5RG+CxiQ7np0oL5nAT+KvL4bm1L8Juyp9tjyYdgt66Hh9ZWEqZoz8Ycc69VtVfec6OGNU+/YzGL3EnoDsaBzPNaTdG66y9iBuuTU8Zut56E49cyq9rKNOmZ9G5oLddxN3TvSvvwi/F1Cq9kv012Prv7p7Bjt2cB9kZ6SF4ERaqmj8kXkMrUr9GFAo4axZKr6iKo+18l/OxWagJtV9WJVvQtrsEZhmRduB3saGLt6Wy8iI8N2ddhUx59Ry3vZXTyN3WqOeRY4Afhf7MGqGWF5HnZFGqvbd1X1CsjMPLTkWK9ulGZxD+/uaPNYQAFWisiVwC+A9ar6Iw0TWWTo8dparh2/2Xoeai3b2st4cqENzYU6xtXB9qVQLLtKvapWi+XX7pbtS2d1KtBWmzK8PvIfdxyWcgksl+lEEXkM652ZA5k7EUKQCyfCnbI4KMuVhrtN4QQH1gMxO/z9Rywd3ArgDlX9hLaaACHDA7LdEpFp2LTaf8RS/F2tIWVf7LyTocdrazl1/GbxeaiFLGwv48mFNjQX6rhbHWhftof/C1S1qTu3L51RkIwPCQecYlOJPhoWV2Oz+kzG5q5fCZndkGtk2uHgOGx6ULAT4WfCiXA84cnwcJLP2DolQmzq5e3s+qV5GfgQdltzl6ltM7Xeqrqp1aKDgEWqWi82LezFIjITmIY90R/brls13LvTRg/veGzGsZ3jXKUb5IvugBrs+3qVWraGnfloM/VYjSdXj99sOw+1JVvay3hyoQ3NhTq2J0fblz2WlEAbu5VShN3i3E9Efgy8D1ymqi8k6d/oMtl8IownW780udJwtyXSwzsKmynvqmgPr5pusz8TsFBVdz58JN1k0oe25Nrxm63noTiyqr2MJxfa0Fyo4+7kYPuyx5ISaKuqisgULH/kKODXqvrLZHx2mmT9ibC1bPzS5FDD3ZasYYJ7cwAAAsdJREFU6OFNVCyoju3P7hxkQ24ev9l4HmotC9vLeHKhDc2FOu5OTrUvnZG0KdhFZBhwPvBDtbF13ZqIHIpNAvES2XkibEFEJmAPWu3ypUlvyTonNNyzgEU0N9zvhXVZdTuvtdb7Lxv2Z67JteM3W89DrWVbexlPLrShuVDHtnj7krikBdrZJhdOhFHZ+qXJlYZ7d7KpxzPX5Nrxm63noVyUC21oLtSxPd6+tM8DbddCtn1pvOF23VmuHr/Zdh5yzuUuD7RdTvCG23Vnfvw651z35IG2c84555xzKdDZmSGdc84555xzcXig7ZxzzjnnXAp4oO2cc84551wKeKDtnHNZTEQaReR1EXlLRN4Qka+IyG7P/SIyUkTO7aoyOudctvJA2znnslutqh6gqpOA44CTgGvb2WYk4IG2c851kmcdcc65LCYiNaraM/J6NPAK0A/YC/gdUBZWX6qqL4nIv4GJwFLgbuCnwHeB6UAxcJuq3tFllXDOuW7KA23nnMtirQPtsGwzMB6oBppUtU5E9gbuUdVpIjId+KqqzgzvvwgYoKrfFpFi4EXgI6q6tEsr45xz3UxBugvgnHMubQqBW0XkAKARGNfG+44H9hORD4fXFcDeWI+3c865Nnig7ZxzOSQMHWkE1mFjtdcC+2PP7NS1tRlwmar+rUsK6ZxzWcIfhnTOuRwhIv2BnwO3qo0brABWq2oTcD6QH95aDfSKbPo34GIRKQyfM05EynDOObdb3qPtnHPZrUREXseGiTRgDz/+MKz7GfCAiFwA/BXYGpa/CTSKyBvAb4CfYJlI5oiIAOuB07uqAs451135w5DOOeecc86lgA8dcc4555xzLgU80HbOOeeccy4FPNB2zjnnnHMuBTzQds4555xzLgU80HbOOeeccy4FPNB2zjnnnHMuBTzQds4555xzLgU80HbOOeeccy4F/h877zzjtTT1IQAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "25b8960e-c432-4215-bafb-b8809e758f2a"
      },
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "d4f969c0-4a8f-4c67-d9c9-bc4862896dfa"
      },
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "d_mse = mean_squared_error(y_true, y_dummy)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "d_rmse = mean_squared_error(y_true, y_dummy, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "d_mae = mean_absolute_error(y_true, y_dummy)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)\n",
        "print('Dummy MSE: ', d_mse)\n",
        "print('Dummy RMSE: ', d_rmse)\n",
        "print('Dummy MAE: ', d_mae)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MSE:  0.01253563981945913\n",
            "RMSE:  0.11196267154484628\n",
            "MAE:  0.09671216573218537\n",
            "Dummy MSE:  0.03412892153519778\n",
            "Dummy RMSE:  0.18474014597590255\n",
            "Dummy MAE:  0.1546333417475681\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8903ecff-e4f7-4c51-f79a-00bd69a2b50a"
      },
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE: '+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n'+\n",
        "                 'Dummy MSE: '+str(d_mse)+'\\n'+'Dummy RMSE: '+str(d_rmse)+'\\n'+'Dummy MAE: '+str(d_mae))\n",
        "error_file.close()"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive/\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:absl:Found untraced functions such as gru_cell_layer_call_and_return_conditional_losses, gru_cell_layer_call_fn, gru_cell_1_layer_call_and_return_conditional_losses, gru_cell_1_layer_call_fn, gru_cell_2_layer_call_and_return_conditional_losses while saving (showing 5 of 20). These functions will not be directly callable after loading.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_AE_Amazon/assets\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_AE_Amazon/assets\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}