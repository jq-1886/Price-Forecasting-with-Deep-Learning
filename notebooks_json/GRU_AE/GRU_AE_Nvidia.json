{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "GRU_AE_Nvidia.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOBCZ8JqXN0gT0sxUw7n+j8",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "77de63134a38426f82547007e7c0b1ec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1eab3de45a334d9e98fa139a4533f3a6",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_af38b0f313f24321b224c4700fd28a3d",
              "IPY_MODEL_e49e2905981147aabe6aac71f493b82b"
            ]
          }
        },
        "1eab3de45a334d9e98fa139a4533f3a6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "af38b0f313f24321b224c4700fd28a3d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1e059979647a44d8b2e29f21f046d9c3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.49MB of 2.49MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_520ba7f311614927845bd4826895460c"
          }
        },
        "e49e2905981147aabe6aac71f493b82b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8b3593b8c27248bbbd166feba0371e87",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7986c38004f94f3984a1a5d95f1f8555"
          }
        },
        "1e059979647a44d8b2e29f21f046d9c3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "520ba7f311614927845bd4826895460c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8b3593b8c27248bbbd166feba0371e87": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7986c38004f94f3984a1a5d95f1f8555": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "36a85ccd056a443c89da392b4551912e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c267f736aa0f408996ec8c36aabefa59",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_158242c76dc44eeca4ed19cb3bd5af5f",
              "IPY_MODEL_7431524eb5dc4f8bb69920080186248c"
            ]
          }
        },
        "c267f736aa0f408996ec8c36aabefa59": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "158242c76dc44eeca4ed19cb3bd5af5f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_fdd41cd0530f4f88a41c02e73f91e2ef",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.51MB of 2.51MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_760878b89da74946b43505ba5725ff45"
          }
        },
        "7431524eb5dc4f8bb69920080186248c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_46d1193e5b2849328de6815f4a36e575",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f8da73ec456a4b80b27b8e1a267fe7c0"
          }
        },
        "fdd41cd0530f4f88a41c02e73f91e2ef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "760878b89da74946b43505ba5725ff45": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "46d1193e5b2849328de6815f4a36e575": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f8da73ec456a4b80b27b8e1a267fe7c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "708f81fb1abe4b0884416b6da026dd84": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_34529e3a7e6d4c49ae3c8e9f0b89eb7a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a0bfb97130734457898e5e08daf052f3",
              "IPY_MODEL_6dadf52b3a6c45aba02ba3a4d3f17c54"
            ]
          }
        },
        "34529e3a7e6d4c49ae3c8e9f0b89eb7a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a0bfb97130734457898e5e08daf052f3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_cb1aaa901fde44fda065af6dbfb9a3b2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.53MB of 2.53MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d64e54448e844202b1eda667f3223709"
          }
        },
        "6dadf52b3a6c45aba02ba3a4d3f17c54": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4117057481e4407a992776afe187f2a7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_65414e9df0834a7baf6d505e202ef0b2"
          }
        },
        "cb1aaa901fde44fda065af6dbfb9a3b2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d64e54448e844202b1eda667f3223709": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4117057481e4407a992776afe187f2a7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "65414e9df0834a7baf6d505e202ef0b2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "962f4b8165054675ad52a552fcf157c9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_617ad1204e494373ad848d60351187cf",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_51f568290bd84bcc97369a6deb788dff",
              "IPY_MODEL_51d8f1f83cf8416b8f5d9284708caeda"
            ]
          }
        },
        "617ad1204e494373ad848d60351187cf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "51f568290bd84bcc97369a6deb788dff": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_fd62ae68c23b4b4daf7084d8c5d85113",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.57MB of 2.57MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2eefe761d6444620b453339075cb4c11"
          }
        },
        "51d8f1f83cf8416b8f5d9284708caeda": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_93ea7218a80347c286dc9c4b882ad90c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d1b0eb7d549340259e0f3695f4dacbd8"
          }
        },
        "fd62ae68c23b4b4daf7084d8c5d85113": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2eefe761d6444620b453339075cb4c11": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "93ea7218a80347c286dc9c4b882ad90c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d1b0eb7d549340259e0f3695f4dacbd8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7605fb6f84894d60858e7014a8c94dbb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2165353f973d453c8965a8bfd927caf5",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_08aada94252d4544b26de314b69fb78f",
              "IPY_MODEL_29b4e66bacd14b05af59a877143d4b3b"
            ]
          }
        },
        "2165353f973d453c8965a8bfd927caf5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "08aada94252d4544b26de314b69fb78f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_bf56e0ad9aa04f2f950602054ac91218",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.87MB of 1.87MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ec621943202246c0aada49b37155c002"
          }
        },
        "29b4e66bacd14b05af59a877143d4b3b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_49acddf8eb5e4b0bb8b93f5db3c3b1db",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c1beb2fd9b8349fc9027520ea1c6b984"
          }
        },
        "bf56e0ad9aa04f2f950602054ac91218": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ec621943202246c0aada49b37155c002": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "49acddf8eb5e4b0bb8b93f5db3c3b1db": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c1beb2fd9b8349fc9027520ea1c6b984": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2570c4bc05d2451ca4efb406a5284095": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7874a5da66cf4951b07b217e811458f2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b60878de956a4b259588822b1fc68dd9",
              "IPY_MODEL_8900cbea0e6442de8ed6c9a038714695"
            ]
          }
        },
        "7874a5da66cf4951b07b217e811458f2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b60878de956a4b259588822b1fc68dd9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b5a2623e381542b8a0f6dee9625deb81",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.89MB of 1.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2b81269b3cb3437aa1fcb8da7606c018"
          }
        },
        "8900cbea0e6442de8ed6c9a038714695": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_46e7728169a34ed6bfe0d512fd2fcb54",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_eb79ed8046e14177b2c730cf0e57bc34"
          }
        },
        "b5a2623e381542b8a0f6dee9625deb81": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2b81269b3cb3437aa1fcb8da7606c018": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "46e7728169a34ed6bfe0d512fd2fcb54": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "eb79ed8046e14177b2c730cf0e57bc34": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2dcaaeb557954f94b60a13880fb8729a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ab8855d0b77c4671a1b98b94f78a1c71",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_38b5d8ba68ce485582783aa7c1991c49",
              "IPY_MODEL_74671985e7214f48b16f05e41280bebf"
            ]
          }
        },
        "ab8855d0b77c4671a1b98b94f78a1c71": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "38b5d8ba68ce485582783aa7c1991c49": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_085f8be15f344486be62a115667eed06",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.64MB of 2.64MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e4e8662aac8840fe8e79a61e7b629b70"
          }
        },
        "74671985e7214f48b16f05e41280bebf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_44be376e728042a9bbdebd199d55ab34",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0490f9be1c214cacbac03c2ab0b971df"
          }
        },
        "085f8be15f344486be62a115667eed06": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e4e8662aac8840fe8e79a61e7b629b70": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "44be376e728042a9bbdebd199d55ab34": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0490f9be1c214cacbac03c2ab0b971df": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ee82f3bd90a74850b59ccc4764c43f23": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_cb50d20d5e9a43579a8e7ad2fddcf0e3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_11c37cafc325484d9645a23d1aa44669",
              "IPY_MODEL_26a246e5dd6e4f4c97b762a732732fef"
            ]
          }
        },
        "cb50d20d5e9a43579a8e7ad2fddcf0e3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "11c37cafc325484d9645a23d1aa44669": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_23d8998cead8474eac473f6058f32d2a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.65MB of 2.65MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2cc3d16766074d7dbbaea2b0b223f7d0"
          }
        },
        "26a246e5dd6e4f4c97b762a732732fef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a6d8e8ffa6724b9d96cbb498798e349c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d2f52fc68aa74f63934f86193b02830a"
          }
        },
        "23d8998cead8474eac473f6058f32d2a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2cc3d16766074d7dbbaea2b0b223f7d0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a6d8e8ffa6724b9d96cbb498798e349c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d2f52fc68aa74f63934f86193b02830a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4d508017d9cd40d3be9a434042df9f9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e605965989b340ee9f10d8ec49a6649b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_585265dce70f4da38bf956850ce972c2",
              "IPY_MODEL_bce1d630d29b4cd99fbac15c798f2fe0"
            ]
          }
        },
        "e605965989b340ee9f10d8ec49a6649b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "585265dce70f4da38bf956850ce972c2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_770ae5801d7448da9eb6db75bd566207",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.67MB of 2.67MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6263992103fb45aabf5aca5b0983d31e"
          }
        },
        "bce1d630d29b4cd99fbac15c798f2fe0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a9dd7bb4e31f4c2ea5d653678b141a78",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_95fcf193bae54b65923786dd2e368619"
          }
        },
        "770ae5801d7448da9eb6db75bd566207": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6263992103fb45aabf5aca5b0983d31e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a9dd7bb4e31f4c2ea5d653678b141a78": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "95fcf193bae54b65923786dd2e368619": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "13b2548acde84e69be1c59432f69dc24": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_34a673feed7f4e14bfe31b063176379d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e5abb9b915524e4b98043ffa0d99f196",
              "IPY_MODEL_10cfb1de091b484c954825ea1d05be86"
            ]
          }
        },
        "34a673feed7f4e14bfe31b063176379d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e5abb9b915524e4b98043ffa0d99f196": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f0c41d330a0545318b0ce0df9dd19b6b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.97MB of 1.97MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_433f69daccbd443db7999b62d0e061e6"
          }
        },
        "10cfb1de091b484c954825ea1d05be86": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_1232835fc04a4210b44ce8a8b84145cd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_13a70ee8d0d3454d8df9722591f6f7be"
          }
        },
        "f0c41d330a0545318b0ce0df9dd19b6b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "433f69daccbd443db7999b62d0e061e6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1232835fc04a4210b44ce8a8b84145cd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "13a70ee8d0d3454d8df9722591f6f7be": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ce91ded3b0334cdba340379d2d38c3fd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_42851bcf0ef543289e6659975c410a63",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9de35a57179e454a90ebf566dbfd8097",
              "IPY_MODEL_c90999a8b4b84e2d947eb173779b4a5a"
            ]
          }
        },
        "42851bcf0ef543289e6659975c410a63": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9de35a57179e454a90ebf566dbfd8097": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e0b9c54294e14f078158d436b16f9f81",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.71MB of 2.71MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_311af422140a46f3bf416c7bae94d2c3"
          }
        },
        "c90999a8b4b84e2d947eb173779b4a5a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f1ebbabcfb4b4f168f47b8c618c4a294",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_cb2b46f24941419f9427497fffd8cc56"
          }
        },
        "e0b9c54294e14f078158d436b16f9f81": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "311af422140a46f3bf416c7bae94d2c3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f1ebbabcfb4b4f168f47b8c618c4a294": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "cb2b46f24941419f9427497fffd8cc56": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9a82b51408ea4f35b00f610f20a0d27c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_90475d7fadaf4c61a193268d7ae6acd5",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_313c8dd6211e4853ac2a6563d0d33891",
              "IPY_MODEL_d9fad5f472474396bd12fc82fad6de78"
            ]
          }
        },
        "90475d7fadaf4c61a193268d7ae6acd5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "313c8dd6211e4853ac2a6563d0d33891": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f5ee642a74904668b0c0baca6feec111",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.74MB of 2.74MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2f76d131056642cfbdc1b9a4849868ff"
          }
        },
        "d9fad5f472474396bd12fc82fad6de78": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_294d929ae15f4174b0eabcd9849ecac9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9dbad65e93a6442c9e942c95bcdd7ef2"
          }
        },
        "f5ee642a74904668b0c0baca6feec111": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2f76d131056642cfbdc1b9a4849868ff": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "294d929ae15f4174b0eabcd9849ecac9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9dbad65e93a6442c9e942c95bcdd7ef2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3db751589da94672bd5bb2d4241afea0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b902b8fc6deb4fcfbd3faa55713583c1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3b2f7932664a465582dc4a5bba9e6538",
              "IPY_MODEL_98e17ef9ff724bc1bf98be513eebb320"
            ]
          }
        },
        "b902b8fc6deb4fcfbd3faa55713583c1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3b2f7932664a465582dc4a5bba9e6538": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_bdccfaa32a144e08a9ed59c918c745a4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.76MB of 2.76MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2fc534e42f2c4cef8fceca18e0d96410"
          }
        },
        "98e17ef9ff724bc1bf98be513eebb320": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4fa5db9918934cf4a60ff4edbb56d036",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d18ec97d2ec64c2c8964f4d86b19abc3"
          }
        },
        "bdccfaa32a144e08a9ed59c918c745a4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2fc534e42f2c4cef8fceca18e0d96410": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4fa5db9918934cf4a60ff4edbb56d036": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d18ec97d2ec64c2c8964f4d86b19abc3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d7e1c0108d3b4acc9ec861d7d47b8436": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7230cc4dea644e09a54a73a4353f7d45",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7e695a8a6f394ede9de2cd35cff1998b",
              "IPY_MODEL_066e5f1e96454ee98db1c1898f654db7"
            ]
          }
        },
        "7230cc4dea644e09a54a73a4353f7d45": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7e695a8a6f394ede9de2cd35cff1998b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_3d996ff1224c4256aaa8a76d9054c17b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.79MB of 2.79MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4acd95333f9148b0a1ddd805a00a5063"
          }
        },
        "066e5f1e96454ee98db1c1898f654db7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_54a7af43579c46f680684294561506a6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9e15f837fd5f490abf1e35f95b92dcea"
          }
        },
        "3d996ff1224c4256aaa8a76d9054c17b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4acd95333f9148b0a1ddd805a00a5063": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "54a7af43579c46f680684294561506a6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9e15f837fd5f490abf1e35f95b92dcea": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "96980041bb1b493e85ccf3584511efaf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a8ddc872281940cf9af16db18e813dd4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4c3ea84bd6ef4dc1b9b09b4cc19256d3",
              "IPY_MODEL_60aed260e3514da491b0f447696c7180"
            ]
          }
        },
        "a8ddc872281940cf9af16db18e813dd4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4c3ea84bd6ef4dc1b9b09b4cc19256d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_521ff61415244710af43e3842a11b1f1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.08MB of 2.08MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_40afda4171064fa2b703ca3ff9a418f9"
          }
        },
        "60aed260e3514da491b0f447696c7180": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_65efbaa804be430d8ab3928b52f7b8fb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_61ac01fb1a3c49b1af79065ff0a9c43f"
          }
        },
        "521ff61415244710af43e3842a11b1f1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "40afda4171064fa2b703ca3ff9a418f9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "65efbaa804be430d8ab3928b52f7b8fb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "61ac01fb1a3c49b1af79065ff0a9c43f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dbfb74bed1224c3f98130d68ffa808d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d6fef9a09f904d0abd6f5916ebebb8f4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4161e6879d3e4d8297da483eb6ee4628",
              "IPY_MODEL_f48faaf94ea549488c0339a8844e0914"
            ]
          }
        },
        "d6fef9a09f904d0abd6f5916ebebb8f4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4161e6879d3e4d8297da483eb6ee4628": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e56031e311c545168f770ff7b09f6b6c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.81MB of 2.81MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b50c70f3aa99400ebcbb04d5f22cb940"
          }
        },
        "f48faaf94ea549488c0339a8844e0914": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f866ad5984124361a6db05e80904abdf",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_bcf3ed80165846c6b570ef1bbddfe533"
          }
        },
        "e56031e311c545168f770ff7b09f6b6c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b50c70f3aa99400ebcbb04d5f22cb940": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f866ad5984124361a6db05e80904abdf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "bcf3ed80165846c6b570ef1bbddfe533": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b3611eea879e4be6b16921da63b449c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f678e967cce747a9bb1bf2a6093d50e9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_531c13ee440b4ea19790eef15bd3e98b",
              "IPY_MODEL_9f5b536641754bc38b03aeaa496410fe"
            ]
          }
        },
        "f678e967cce747a9bb1bf2a6093d50e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "531c13ee440b4ea19790eef15bd3e98b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_330419535d9f4056b5b0605905ecf5e5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.85MB of 2.85MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0439ab77dd4b4548b204cbcf42ae87c0"
          }
        },
        "9f5b536641754bc38b03aeaa496410fe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ed565148a0e34af1b7e3ab373d3b1be1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_78eb2579ff724440aed91bfe431504d0"
          }
        },
        "330419535d9f4056b5b0605905ecf5e5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0439ab77dd4b4548b204cbcf42ae87c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ed565148a0e34af1b7e3ab373d3b1be1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "78eb2579ff724440aed91bfe431504d0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0638f3743c9b46db96ed0995fbcf4f93": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_66fe8128a7214ee5b4b0507850dbaa42",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_dcbc45acb80f4d69b0a1f4ededbe63f6",
              "IPY_MODEL_fc275cf2b5374211a5c113fbd49c8bfc"
            ]
          }
        },
        "66fe8128a7214ee5b4b0507850dbaa42": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dcbc45acb80f4d69b0a1f4ededbe63f6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6f35ef2abbbf4adc9d87c331cab4128a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.86MB of 2.86MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_45452f96e4534d4292c1c81615c973b3"
          }
        },
        "fc275cf2b5374211a5c113fbd49c8bfc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_caee1b10beed4bc3a3cfee3ae231ff87",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ef8e8744801b46c38494b0568293715c"
          }
        },
        "6f35ef2abbbf4adc9d87c331cab4128a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "45452f96e4534d4292c1c81615c973b3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "caee1b10beed4bc3a3cfee3ae231ff87": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ef8e8744801b46c38494b0568293715c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "326d9c56000b447e8ce7d9aad31cc6fc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1cab9a1c4a574e1aa36a588003b0b1f4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_8fcf4952b6fd4b8eb93ade39c7be5bcb",
              "IPY_MODEL_8b5f49b182784504b7b401cb1f1c6619"
            ]
          }
        },
        "1cab9a1c4a574e1aa36a588003b0b1f4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8fcf4952b6fd4b8eb93ade39c7be5bcb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_cd947f084d4448419940cd16631c2e80",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.16MB of 2.16MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_513bb80ddc0b4551a56ac6aec52f6985"
          }
        },
        "8b5f49b182784504b7b401cb1f1c6619": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c476d3c7caf8434d82ddcee6e30a2135",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_eff9015a07954d6187308babeea2b2d1"
          }
        },
        "cd947f084d4448419940cd16631c2e80": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "513bb80ddc0b4551a56ac6aec52f6985": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c476d3c7caf8434d82ddcee6e30a2135": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "eff9015a07954d6187308babeea2b2d1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8ef403df63ae48df86624c84c80d8edd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_945cc9647a0d449d8b0b5d99666f4732",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_1545a7efd97b40d79534c2c134141dc8",
              "IPY_MODEL_39b250438b3c479682e0cdba4a3a6390"
            ]
          }
        },
        "945cc9647a0d449d8b0b5d99666f4732": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1545a7efd97b40d79534c2c134141dc8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_40f51bdb90404c72a2db2c9142b9191d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.17MB of 2.17MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e24a39b411d842b5b921542c88feb30e"
          }
        },
        "39b250438b3c479682e0cdba4a3a6390": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_04323c6f951c4334aacad11008bc84cf",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_bb57079a2ed74c35bbd10478b6287eec"
          }
        },
        "40f51bdb90404c72a2db2c9142b9191d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e24a39b411d842b5b921542c88feb30e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "04323c6f951c4334aacad11008bc84cf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "bb57079a2ed74c35bbd10478b6287eec": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5c42ab4396d64b88b07f8c1d128ed982": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_50d28dfdf9da4d2f8e7983fd02d522ad",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_45f27ae57bd74eaf9bb67f8c957a710f",
              "IPY_MODEL_c44681bba676458d9e65c1bc95e54249"
            ]
          }
        },
        "50d28dfdf9da4d2f8e7983fd02d522ad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "45f27ae57bd74eaf9bb67f8c957a710f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_326f5dd030934705af16ce1db50bdf50",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.91MB of 2.91MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_52e5f8361d934269960cce7338955a85"
          }
        },
        "c44681bba676458d9e65c1bc95e54249": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_95d2a1cf31ee41b89b1262900224d940",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9e5535a6db5340ca83b24da40fb85e61"
          }
        },
        "326f5dd030934705af16ce1db50bdf50": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "52e5f8361d934269960cce7338955a85": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "95d2a1cf31ee41b89b1262900224d940": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9e5535a6db5340ca83b24da40fb85e61": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3f7d759fbeb14287a275ddda82c69480": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a453753d95354e64b50b159785bcc94f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7a8bd7031f4743d394a3735a232275de",
              "IPY_MODEL_c030c25f50a24f3cbbd2560313088b86"
            ]
          }
        },
        "a453753d95354e64b50b159785bcc94f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7a8bd7031f4743d394a3735a232275de": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_7e6cfbc867bd43f09f9bf61ca9d42cfc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.93MB of 2.93MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dcd43744a9674d7da47765ebecfefd45"
          }
        },
        "c030c25f50a24f3cbbd2560313088b86": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6cc860b3ed5c4f02ab05369a43f05c8f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_11c623b056e34339a25ce88eed357a54"
          }
        },
        "7e6cfbc867bd43f09f9bf61ca9d42cfc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dcd43744a9674d7da47765ebecfefd45": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6cc860b3ed5c4f02ab05369a43f05c8f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "11c623b056e34339a25ce88eed357a54": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3653e2890f6249d797074e24351f3a27": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2786c638489244b089b5edaccc0948e7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9924c154ca31413f8dc518aa2cdd197f",
              "IPY_MODEL_41fcb490d856466cbe10a4aa4f1b39f8"
            ]
          }
        },
        "2786c638489244b089b5edaccc0948e7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9924c154ca31413f8dc518aa2cdd197f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1cde4e49e9f64c5c88b85ec1254a40ef",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.94MB of 2.94MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_676c3eae38344fe9b41927b36de5fbd7"
          }
        },
        "41fcb490d856466cbe10a4aa4f1b39f8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4945ec23a9d143f0aea32a43c1d80263",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_87efa2377c6a40ef96878d59751b6933"
          }
        },
        "1cde4e49e9f64c5c88b85ec1254a40ef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "676c3eae38344fe9b41927b36de5fbd7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4945ec23a9d143f0aea32a43c1d80263": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "87efa2377c6a40ef96878d59751b6933": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "564004b112bf4a72a75e28baf0a01633": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a540ff691d3c4f789a370145c0cd98b7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ddc2c7745e064be98c3cb679357d4441",
              "IPY_MODEL_80de29f9f01745c98657d0d435a8a2ec"
            ]
          }
        },
        "a540ff691d3c4f789a370145c0cd98b7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ddc2c7745e064be98c3cb679357d4441": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8b11ed8a1ac74db88ba4f75dd51516fa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.97MB of 2.97MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1d96bc24b07a4b6daf10af576ed3b43d"
          }
        },
        "80de29f9f01745c98657d0d435a8a2ec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_212d76abca6a4b149f85240fdefdb858",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_db581e86d29d473ca5ad778a2a144e7b"
          }
        },
        "8b11ed8a1ac74db88ba4f75dd51516fa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1d96bc24b07a4b6daf10af576ed3b43d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "212d76abca6a4b149f85240fdefdb858": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "db581e86d29d473ca5ad778a2a144e7b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4ddadca343454df6ba2f275dd784ff6a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b134f947522f43ff93345be9d0214172",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6d201add41da4425b180c1228933256f",
              "IPY_MODEL_0282224d5e1d4d54a8c7586ea3e4e15b"
            ]
          }
        },
        "b134f947522f43ff93345be9d0214172": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6d201add41da4425b180c1228933256f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_78858d165a5f4f26a8c3988a432f32e4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.98MB of 2.98MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6cfcd5ffdaa943b2ab99a246db60c569"
          }
        },
        "0282224d5e1d4d54a8c7586ea3e4e15b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ddf0fb30ca5946a49b4b1b0e891ec0b0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b5f44b2cfb4741de9f53202aa773c0db"
          }
        },
        "78858d165a5f4f26a8c3988a432f32e4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6cfcd5ffdaa943b2ab99a246db60c569": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ddf0fb30ca5946a49b4b1b0e891ec0b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b5f44b2cfb4741de9f53202aa773c0db": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e0a0e8ee55ff4be28c343333093318a5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_4458b8feb75a47fa8595f7dc0824a949",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_407e84cc8087413ba95e6382e8b96b00",
              "IPY_MODEL_c9cd1d3001d44b1ba70f01b4ca0b2a9b"
            ]
          }
        },
        "4458b8feb75a47fa8595f7dc0824a949": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "407e84cc8087413ba95e6382e8b96b00": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_246c6e22d7a84ab68c0b338e369be946",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.00MB of 3.00MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_18b68039bf6343f0977cd991c9a411b1"
          }
        },
        "c9cd1d3001d44b1ba70f01b4ca0b2a9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3c17f89e76f44cf9aa99e9c4bc930217",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1e2d9aba78e84fcf846a4038257d8264"
          }
        },
        "246c6e22d7a84ab68c0b338e369be946": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "18b68039bf6343f0977cd991c9a411b1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3c17f89e76f44cf9aa99e9c4bc930217": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1e2d9aba78e84fcf846a4038257d8264": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e7fe84d26e624f05aa361ecdf05c7c3b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e85abbc2fb2741278c2e5d69d98bec69",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_387e904b1d23459caef693138c3b6699",
              "IPY_MODEL_b8ee8449627040efad71724d203cd514"
            ]
          }
        },
        "e85abbc2fb2741278c2e5d69d98bec69": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "387e904b1d23459caef693138c3b6699": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_85bd548b408d47b5abb45b3f8eefe930",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.02MB of 3.02MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_82dc0144cbea48b2a1947afbe7f24522"
          }
        },
        "b8ee8449627040efad71724d203cd514": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9a7e29d64b3b492d9237101324c6cf79",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_23889e8d0cdb49bcb387f50dbe063d9a"
          }
        },
        "85bd548b408d47b5abb45b3f8eefe930": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "82dc0144cbea48b2a1947afbe7f24522": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9a7e29d64b3b492d9237101324c6cf79": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "23889e8d0cdb49bcb387f50dbe063d9a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0b775115630646859bf500e1f041b0f0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_fdb19dfd72c7436caaef64a925eae857",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5d483c33023f4c10a2bedde89975402a",
              "IPY_MODEL_e423edce396f48679b5fb8de6d4db334"
            ]
          }
        },
        "fdb19dfd72c7436caaef64a925eae857": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5d483c33023f4c10a2bedde89975402a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_5b779937195341e2bb4005c240af1892",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.04MB of 3.04MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_34511723e1d547d3ba1378e76b0d1959"
          }
        },
        "e423edce396f48679b5fb8de6d4db334": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d6b355f25f4b44a59aa3cfa818f34b56",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_df3fdbfc3cbe4ad3a171c77931e1e4a1"
          }
        },
        "5b779937195341e2bb4005c240af1892": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "34511723e1d547d3ba1378e76b0d1959": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d6b355f25f4b44a59aa3cfa818f34b56": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "df3fdbfc3cbe4ad3a171c77931e1e4a1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c9cc554695764f7da013711efe44cedb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f46a54560b5f41f8abd9f3499d885eda",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_eafec7c4afca4b75922c45ecf0d993d2",
              "IPY_MODEL_a22453be872d4699a3e43d07680f5476"
            ]
          }
        },
        "f46a54560b5f41f8abd9f3499d885eda": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "eafec7c4afca4b75922c45ecf0d993d2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_980ce924af584f438ace951174cdb57e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.05MB of 3.05MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_629d97fef6fc4c5d80b147f3bde258e9"
          }
        },
        "a22453be872d4699a3e43d07680f5476": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c4857bd020f04c2ea847cddc4d4d167e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c1ec44ac93994b1ebdb48ca533f39e60"
          }
        },
        "980ce924af584f438ace951174cdb57e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "629d97fef6fc4c5d80b147f3bde258e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c4857bd020f04c2ea847cddc4d4d167e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c1ec44ac93994b1ebdb48ca533f39e60": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "200fce0dacee4ee5966f7522a5ef29ce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0f9627c110f44f0fb2e688857aa7372f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_72b15a8ea6ab4cefb2f42ae2af5273ef",
              "IPY_MODEL_d01459f01925467986f9d1e26cc66070"
            ]
          }
        },
        "0f9627c110f44f0fb2e688857aa7372f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "72b15a8ea6ab4cefb2f42ae2af5273ef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_5f49a17510da4c669b4349eb0e9cf775",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.36MB of 2.36MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8260de7b58934980bf7b807569f6660f"
          }
        },
        "d01459f01925467986f9d1e26cc66070": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_bf414cdacc9c420385a44d36e0843ba9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ef2f6372e0f9463889ca123d9717771a"
          }
        },
        "5f49a17510da4c669b4349eb0e9cf775": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8260de7b58934980bf7b807569f6660f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bf414cdacc9c420385a44d36e0843ba9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ef2f6372e0f9463889ca123d9717771a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b55f5085da27451bad610f714eaa5937": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e062b69e5d7949b8a0d3023fad99d572",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_fbc6f99dce0347399ba21c1aa490d563",
              "IPY_MODEL_ff2650ccbca249f189459d2952f9852d"
            ]
          }
        },
        "e062b69e5d7949b8a0d3023fad99d572": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fbc6f99dce0347399ba21c1aa490d563": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2a76964e8c3244a288b8f9a0e95796e8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.10MB of 3.10MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_71d37d9c16104a269b696d3c669566bd"
          }
        },
        "ff2650ccbca249f189459d2952f9852d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4778596b2e3343e89327493418f346b2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4015efb2c6e44fdeb7bc363e6e4f37ee"
          }
        },
        "2a76964e8c3244a288b8f9a0e95796e8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "71d37d9c16104a269b696d3c669566bd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4778596b2e3343e89327493418f346b2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4015efb2c6e44fdeb7bc363e6e4f37ee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/GRU_AE/GRU_AE_Nvidia.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5F7GfFTgUo3"
      },
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "87c29da9-fa5c-4562-d7bd-6b7c56e73fbd"
      },
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 147, done.\u001b[K\n",
            "remote: Counting objects: 100% (147/147), done.\u001b[K\n",
            "remote: Compressing objects: 100% (142/142), done.\u001b[K\n",
            "remote: Total 147 (delta 71), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (147/147), 120.19 KiB | 6.33 MiB/s, done.\n",
            "Resolving deltas: 100% (71/71), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f90a5445-0bef-4f44-e1f9-876a242508dc"
      },
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/feeder_repo\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "300d0bf6-63ad-49eb-ca49-4e4dea35a804"
      },
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRqkwo6kZUz_"
      },
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzVhwND1HAlw"
      },
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "eb213299-3124-4f29-ccbc-9b3741ef96c7"
      },
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Tue Jul 20 13:51:35 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   42C    P0    28W / 250W |      0MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WB9wD4Aahs8_"
      },
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vBlKerL-c4-3"
      },
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'Nvidia'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'GRU_AE'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfQJbuBk0vW0"
      },
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X53Fp1Gwh88_"
      },
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "a80d01cc-8954-471c-b1a9-3e5da45c8dd3"
      },
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8 MB 9.2 MB/s \n",
            "\u001b[K     |████████████████████████████████| 97 kB 5.7 MB/s \n",
            "\u001b[K     |████████████████████████████████| 133 kB 50.9 MB/s \n",
            "\u001b[K     |████████████████████████████████| 138 kB 51.1 MB/s \n",
            "\u001b[K     |████████████████████████████████| 170 kB 52.9 MB/s \n",
            "\u001b[K     |████████████████████████████████| 63 kB 1.8 MB/s \n",
            "\u001b[K     |████████████████████████████████| 62 kB 748 kB/s \n",
            "\u001b[?25h  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.26.0 which is incompatible.\n",
            "datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\u001b[0m\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pbgZaoQDiIKX"
      },
      "source": [
        "!pip install wandb -qq"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "0d7f41d0-ee27-4356-c133-5348f5739fe6"
      },
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j91IBGuSid5w"
      },
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.1, 0.2, 0.3]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'rmsprop']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0Sr9HsorH4E"
      },
      "source": [
        "# wandb calls this training function to run through the hyperparameter search\n",
        "def train():\n",
        "    # default values for searching\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "\n",
        "    # setting keras model to sequential mode\n",
        "    model = Sequential()\n",
        "\n",
        "     # layer 1\n",
        "    model.add(GRU(units=128, return_sequences=True, input_shape=(window_len, 1), activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 2\n",
        "    model.add(GRU(units=64, return_sequences=False, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 3\n",
        "    model.add(RepeatVector(window_len))\n",
        "    # layer 4\n",
        "    model.add(GRU(units=64, return_sequences=True, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 5\n",
        "    model.add(GRU(units=128, return_sequences=False, activation=config.activation))\n",
        "    model.add(Dropout(0.1))\n",
        "    # layer 6\n",
        "    model.add((Dense(1)))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "6f3ca4aa-4c7f-47cd-da47-b0d336bde86d"
      },
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Create sweep with ID: 144fmybl\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "77de63134a38426f82547007e7c0b1ec",
            "1eab3de45a334d9e98fa139a4533f3a6",
            "af38b0f313f24321b224c4700fd28a3d",
            "e49e2905981147aabe6aac71f493b82b",
            "1e059979647a44d8b2e29f21f046d9c3",
            "520ba7f311614927845bd4826895460c",
            "8b3593b8c27248bbbd166feba0371e87",
            "7986c38004f94f3984a1a5d95f1f8555",
            "36a85ccd056a443c89da392b4551912e",
            "c267f736aa0f408996ec8c36aabefa59",
            "158242c76dc44eeca4ed19cb3bd5af5f",
            "7431524eb5dc4f8bb69920080186248c",
            "fdd41cd0530f4f88a41c02e73f91e2ef",
            "760878b89da74946b43505ba5725ff45",
            "46d1193e5b2849328de6815f4a36e575",
            "f8da73ec456a4b80b27b8e1a267fe7c0",
            "708f81fb1abe4b0884416b6da026dd84",
            "34529e3a7e6d4c49ae3c8e9f0b89eb7a",
            "a0bfb97130734457898e5e08daf052f3",
            "6dadf52b3a6c45aba02ba3a4d3f17c54",
            "cb1aaa901fde44fda065af6dbfb9a3b2",
            "d64e54448e844202b1eda667f3223709",
            "4117057481e4407a992776afe187f2a7",
            "65414e9df0834a7baf6d505e202ef0b2",
            "962f4b8165054675ad52a552fcf157c9",
            "617ad1204e494373ad848d60351187cf",
            "51f568290bd84bcc97369a6deb788dff",
            "51d8f1f83cf8416b8f5d9284708caeda",
            "fd62ae68c23b4b4daf7084d8c5d85113",
            "2eefe761d6444620b453339075cb4c11",
            "93ea7218a80347c286dc9c4b882ad90c",
            "d1b0eb7d549340259e0f3695f4dacbd8",
            "7605fb6f84894d60858e7014a8c94dbb",
            "2165353f973d453c8965a8bfd927caf5",
            "08aada94252d4544b26de314b69fb78f",
            "29b4e66bacd14b05af59a877143d4b3b",
            "bf56e0ad9aa04f2f950602054ac91218",
            "ec621943202246c0aada49b37155c002",
            "49acddf8eb5e4b0bb8b93f5db3c3b1db",
            "c1beb2fd9b8349fc9027520ea1c6b984",
            "2570c4bc05d2451ca4efb406a5284095",
            "7874a5da66cf4951b07b217e811458f2",
            "b60878de956a4b259588822b1fc68dd9",
            "8900cbea0e6442de8ed6c9a038714695",
            "b5a2623e381542b8a0f6dee9625deb81",
            "2b81269b3cb3437aa1fcb8da7606c018",
            "46e7728169a34ed6bfe0d512fd2fcb54",
            "eb79ed8046e14177b2c730cf0e57bc34",
            "2dcaaeb557954f94b60a13880fb8729a",
            "ab8855d0b77c4671a1b98b94f78a1c71",
            "38b5d8ba68ce485582783aa7c1991c49",
            "74671985e7214f48b16f05e41280bebf",
            "085f8be15f344486be62a115667eed06",
            "e4e8662aac8840fe8e79a61e7b629b70",
            "44be376e728042a9bbdebd199d55ab34",
            "0490f9be1c214cacbac03c2ab0b971df",
            "ee82f3bd90a74850b59ccc4764c43f23",
            "cb50d20d5e9a43579a8e7ad2fddcf0e3",
            "11c37cafc325484d9645a23d1aa44669",
            "26a246e5dd6e4f4c97b762a732732fef",
            "23d8998cead8474eac473f6058f32d2a",
            "2cc3d16766074d7dbbaea2b0b223f7d0",
            "a6d8e8ffa6724b9d96cbb498798e349c",
            "d2f52fc68aa74f63934f86193b02830a",
            "4d508017d9cd40d3be9a434042df9f9b",
            "e605965989b340ee9f10d8ec49a6649b",
            "585265dce70f4da38bf956850ce972c2",
            "bce1d630d29b4cd99fbac15c798f2fe0",
            "770ae5801d7448da9eb6db75bd566207",
            "6263992103fb45aabf5aca5b0983d31e",
            "a9dd7bb4e31f4c2ea5d653678b141a78",
            "95fcf193bae54b65923786dd2e368619",
            "13b2548acde84e69be1c59432f69dc24",
            "34a673feed7f4e14bfe31b063176379d",
            "e5abb9b915524e4b98043ffa0d99f196",
            "10cfb1de091b484c954825ea1d05be86",
            "f0c41d330a0545318b0ce0df9dd19b6b",
            "433f69daccbd443db7999b62d0e061e6",
            "1232835fc04a4210b44ce8a8b84145cd",
            "13a70ee8d0d3454d8df9722591f6f7be",
            "ce91ded3b0334cdba340379d2d38c3fd",
            "42851bcf0ef543289e6659975c410a63",
            "9de35a57179e454a90ebf566dbfd8097",
            "c90999a8b4b84e2d947eb173779b4a5a",
            "e0b9c54294e14f078158d436b16f9f81",
            "311af422140a46f3bf416c7bae94d2c3",
            "f1ebbabcfb4b4f168f47b8c618c4a294",
            "cb2b46f24941419f9427497fffd8cc56",
            "9a82b51408ea4f35b00f610f20a0d27c",
            "90475d7fadaf4c61a193268d7ae6acd5",
            "313c8dd6211e4853ac2a6563d0d33891",
            "d9fad5f472474396bd12fc82fad6de78",
            "f5ee642a74904668b0c0baca6feec111",
            "2f76d131056642cfbdc1b9a4849868ff",
            "294d929ae15f4174b0eabcd9849ecac9",
            "9dbad65e93a6442c9e942c95bcdd7ef2",
            "3db751589da94672bd5bb2d4241afea0",
            "b902b8fc6deb4fcfbd3faa55713583c1",
            "3b2f7932664a465582dc4a5bba9e6538",
            "98e17ef9ff724bc1bf98be513eebb320",
            "bdccfaa32a144e08a9ed59c918c745a4",
            "2fc534e42f2c4cef8fceca18e0d96410",
            "4fa5db9918934cf4a60ff4edbb56d036",
            "d18ec97d2ec64c2c8964f4d86b19abc3",
            "d7e1c0108d3b4acc9ec861d7d47b8436",
            "7230cc4dea644e09a54a73a4353f7d45",
            "7e695a8a6f394ede9de2cd35cff1998b",
            "066e5f1e96454ee98db1c1898f654db7",
            "3d996ff1224c4256aaa8a76d9054c17b",
            "4acd95333f9148b0a1ddd805a00a5063",
            "54a7af43579c46f680684294561506a6",
            "9e15f837fd5f490abf1e35f95b92dcea",
            "96980041bb1b493e85ccf3584511efaf",
            "a8ddc872281940cf9af16db18e813dd4",
            "4c3ea84bd6ef4dc1b9b09b4cc19256d3",
            "60aed260e3514da491b0f447696c7180",
            "521ff61415244710af43e3842a11b1f1",
            "40afda4171064fa2b703ca3ff9a418f9",
            "65efbaa804be430d8ab3928b52f7b8fb",
            "61ac01fb1a3c49b1af79065ff0a9c43f",
            "dbfb74bed1224c3f98130d68ffa808d6",
            "d6fef9a09f904d0abd6f5916ebebb8f4",
            "4161e6879d3e4d8297da483eb6ee4628",
            "f48faaf94ea549488c0339a8844e0914",
            "e56031e311c545168f770ff7b09f6b6c",
            "b50c70f3aa99400ebcbb04d5f22cb940",
            "f866ad5984124361a6db05e80904abdf",
            "bcf3ed80165846c6b570ef1bbddfe533",
            "b3611eea879e4be6b16921da63b449c1",
            "f678e967cce747a9bb1bf2a6093d50e9",
            "531c13ee440b4ea19790eef15bd3e98b",
            "9f5b536641754bc38b03aeaa496410fe",
            "330419535d9f4056b5b0605905ecf5e5",
            "0439ab77dd4b4548b204cbcf42ae87c0",
            "ed565148a0e34af1b7e3ab373d3b1be1",
            "78eb2579ff724440aed91bfe431504d0",
            "0638f3743c9b46db96ed0995fbcf4f93",
            "66fe8128a7214ee5b4b0507850dbaa42",
            "dcbc45acb80f4d69b0a1f4ededbe63f6",
            "fc275cf2b5374211a5c113fbd49c8bfc",
            "6f35ef2abbbf4adc9d87c331cab4128a",
            "45452f96e4534d4292c1c81615c973b3",
            "caee1b10beed4bc3a3cfee3ae231ff87",
            "ef8e8744801b46c38494b0568293715c",
            "326d9c56000b447e8ce7d9aad31cc6fc",
            "1cab9a1c4a574e1aa36a588003b0b1f4",
            "8fcf4952b6fd4b8eb93ade39c7be5bcb",
            "8b5f49b182784504b7b401cb1f1c6619",
            "cd947f084d4448419940cd16631c2e80",
            "513bb80ddc0b4551a56ac6aec52f6985",
            "c476d3c7caf8434d82ddcee6e30a2135",
            "eff9015a07954d6187308babeea2b2d1",
            "8ef403df63ae48df86624c84c80d8edd",
            "945cc9647a0d449d8b0b5d99666f4732",
            "1545a7efd97b40d79534c2c134141dc8",
            "39b250438b3c479682e0cdba4a3a6390",
            "40f51bdb90404c72a2db2c9142b9191d",
            "e24a39b411d842b5b921542c88feb30e",
            "04323c6f951c4334aacad11008bc84cf",
            "bb57079a2ed74c35bbd10478b6287eec",
            "5c42ab4396d64b88b07f8c1d128ed982",
            "50d28dfdf9da4d2f8e7983fd02d522ad",
            "45f27ae57bd74eaf9bb67f8c957a710f",
            "c44681bba676458d9e65c1bc95e54249",
            "326f5dd030934705af16ce1db50bdf50",
            "52e5f8361d934269960cce7338955a85",
            "95d2a1cf31ee41b89b1262900224d940",
            "9e5535a6db5340ca83b24da40fb85e61",
            "3f7d759fbeb14287a275ddda82c69480",
            "a453753d95354e64b50b159785bcc94f",
            "7a8bd7031f4743d394a3735a232275de",
            "c030c25f50a24f3cbbd2560313088b86",
            "7e6cfbc867bd43f09f9bf61ca9d42cfc",
            "dcd43744a9674d7da47765ebecfefd45",
            "6cc860b3ed5c4f02ab05369a43f05c8f",
            "11c623b056e34339a25ce88eed357a54",
            "3653e2890f6249d797074e24351f3a27",
            "2786c638489244b089b5edaccc0948e7",
            "9924c154ca31413f8dc518aa2cdd197f",
            "41fcb490d856466cbe10a4aa4f1b39f8",
            "1cde4e49e9f64c5c88b85ec1254a40ef",
            "676c3eae38344fe9b41927b36de5fbd7",
            "4945ec23a9d143f0aea32a43c1d80263",
            "87efa2377c6a40ef96878d59751b6933",
            "564004b112bf4a72a75e28baf0a01633",
            "a540ff691d3c4f789a370145c0cd98b7",
            "ddc2c7745e064be98c3cb679357d4441",
            "80de29f9f01745c98657d0d435a8a2ec",
            "8b11ed8a1ac74db88ba4f75dd51516fa",
            "1d96bc24b07a4b6daf10af576ed3b43d",
            "212d76abca6a4b149f85240fdefdb858",
            "db581e86d29d473ca5ad778a2a144e7b",
            "4ddadca343454df6ba2f275dd784ff6a",
            "b134f947522f43ff93345be9d0214172",
            "6d201add41da4425b180c1228933256f",
            "0282224d5e1d4d54a8c7586ea3e4e15b",
            "78858d165a5f4f26a8c3988a432f32e4",
            "6cfcd5ffdaa943b2ab99a246db60c569",
            "ddf0fb30ca5946a49b4b1b0e891ec0b0",
            "b5f44b2cfb4741de9f53202aa773c0db",
            "e0a0e8ee55ff4be28c343333093318a5",
            "4458b8feb75a47fa8595f7dc0824a949",
            "407e84cc8087413ba95e6382e8b96b00",
            "c9cd1d3001d44b1ba70f01b4ca0b2a9b",
            "246c6e22d7a84ab68c0b338e369be946",
            "18b68039bf6343f0977cd991c9a411b1",
            "3c17f89e76f44cf9aa99e9c4bc930217",
            "1e2d9aba78e84fcf846a4038257d8264",
            "e7fe84d26e624f05aa361ecdf05c7c3b",
            "e85abbc2fb2741278c2e5d69d98bec69",
            "387e904b1d23459caef693138c3b6699",
            "b8ee8449627040efad71724d203cd514",
            "85bd548b408d47b5abb45b3f8eefe930",
            "82dc0144cbea48b2a1947afbe7f24522",
            "9a7e29d64b3b492d9237101324c6cf79",
            "23889e8d0cdb49bcb387f50dbe063d9a",
            "0b775115630646859bf500e1f041b0f0",
            "fdb19dfd72c7436caaef64a925eae857",
            "5d483c33023f4c10a2bedde89975402a",
            "e423edce396f48679b5fb8de6d4db334",
            "5b779937195341e2bb4005c240af1892",
            "34511723e1d547d3ba1378e76b0d1959",
            "d6b355f25f4b44a59aa3cfa818f34b56",
            "df3fdbfc3cbe4ad3a171c77931e1e4a1",
            "c9cc554695764f7da013711efe44cedb",
            "f46a54560b5f41f8abd9f3499d885eda",
            "eafec7c4afca4b75922c45ecf0d993d2",
            "a22453be872d4699a3e43d07680f5476",
            "980ce924af584f438ace951174cdb57e",
            "629d97fef6fc4c5d80b147f3bde258e9",
            "c4857bd020f04c2ea847cddc4d4d167e",
            "c1ec44ac93994b1ebdb48ca533f39e60",
            "200fce0dacee4ee5966f7522a5ef29ce",
            "0f9627c110f44f0fb2e688857aa7372f",
            "72b15a8ea6ab4cefb2f42ae2af5273ef",
            "d01459f01925467986f9d1e26cc66070",
            "5f49a17510da4c669b4349eb0e9cf775",
            "8260de7b58934980bf7b807569f6660f",
            "bf414cdacc9c420385a44d36e0843ba9",
            "ef2f6372e0f9463889ca123d9717771a",
            "b55f5085da27451bad610f714eaa5937",
            "e062b69e5d7949b8a0d3023fad99d572",
            "fbc6f99dce0347399ba21c1aa490d563",
            "ff2650ccbca249f189459d2952f9852d",
            "2a76964e8c3244a288b8f9a0e95796e8",
            "71d37d9c16104a269b696d3c669566bd",
            "4778596b2e3343e89327493418f346b2",
            "4015efb2c6e44fdeb7bc363e6e4f37ee"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "92b675d1-5f07-4322-dd96-6a34e747af0a"
      },
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: pgfvtnl8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">exalted-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pgfvtnl8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pgfvtnl8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_135310-pgfvtnl8</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 31s 90ms/step - loss: 0.0453 - mean_squared_error: 0.0453 - mean_absolute_error: 0.1343 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0619\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0360 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0471\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0294 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0471\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0301 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0241 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0615\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0248 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0660\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0213 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0581\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0268 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0624\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0264 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0571\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0247 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0493\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0227 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0440\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0232 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0539\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0238 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0461\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0215 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0453\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0218 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0494\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0226 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0545\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0230 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0515\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0214 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0489\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0232 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0812\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0255 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0417\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0232 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0418\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0220 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0435\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0208 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0625\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0238 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0524\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 8.6652e-04 - mean_squared_error: 8.6652e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0404\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0227 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0424\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0222 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0401\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0220 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0420\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0206 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0784\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 1s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0233 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0392\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.6650e-04 - mean_squared_error: 9.6650e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0701\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0258 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0405\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0219 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0394\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.7602e-04 - mean_squared_error: 9.7602e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0446\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0221 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0392\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 9.3355e-04 - mean_squared_error: 9.3355e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0384\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 9.1229e-04 - mean_squared_error: 9.1229e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0399\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 8.9010e-04 - mean_squared_error: 8.9010e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0389\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.5828e-04 - mean_squared_error: 9.5828e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0456\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 8.8059e-04 - mean_squared_error: 8.8059e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0402\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 7.6638e-04 - mean_squared_error: 7.6638e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0385\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0226 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0396\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0223 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0378\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 8.6050e-04 - mean_squared_error: 8.6050e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0378\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 8.7072e-04 - mean_squared_error: 8.7072e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0378\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 9.6832e-04 - mean_squared_error: 9.6832e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0384\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 9.6490e-04 - mean_squared_error: 9.6490e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0376\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.9027e-04 - mean_squared_error: 9.9027e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0381\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 9.2932e-04 - mean_squared_error: 9.2932e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0372\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 8.9524e-04 - mean_squared_error: 8.9524e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0393\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 175<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "77de63134a38426f82547007e7c0b1ec",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.27MB of 2.27MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_135310-pgfvtnl8/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_135310-pgfvtnl8/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00108</td></tr><tr><td>mean_squared_error</td><td>0.00108</td></tr><tr><td>mean_absolute_error</td><td>0.02165</td></tr><tr><td>val_loss</td><td>0.00282</td></tr><tr><td>val_mean_squared_error</td><td>0.00282</td></tr><tr><td>val_mean_absolute_error</td><td>0.03934</td></tr><tr><td>_runtime</td><td>68</td></tr><tr><td>_timestamp</td><td>1626789258</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00279</td></tr><tr><td>best_epoch</td><td>47</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▁▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄▂▂▃▅▃▅▄▂▄▂▂▄▃▂█▂▂▄▃▂▁▂▇▅▁▁▂▁▂▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▄▂▂▃▅▃▅▄▂▄▂▂▄▃▂█▂▂▄▃▂▁▂▇▅▁▁▂▁▂▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅▃▃▃▆▄▅▄▂▄▂▂▄▃▃█▂▂▅▃▂▁▂█▆▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">exalted-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pgfvtnl8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pgfvtnl8</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: v9s8gybt with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">solar-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/v9s8gybt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/v9s8gybt</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_135431-v9s8gybt</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 30s 469ms/step - loss: 0.0827 - mean_squared_error: 0.0827 - mean_absolute_error: 0.1765 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1089\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 13s 403ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0311 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0531\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 11s 367ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0266 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0908\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 13s 409ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0247 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0474\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0255 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0627\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 12s 387ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0225 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0663\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 13s 402ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0225 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0597\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 12s 404ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0223 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0453\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 12s 403ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0239 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0704\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0216 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0484\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0202 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 13s 422ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0228 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0582\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 13s 404ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0213 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0451\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0206 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0496\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 12s 404ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0209 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0754\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 12s 401ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0203 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0701\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 12s 399ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0198 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0508\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 12s 403ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0211 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0803\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 12s 395ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0194 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0483\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 13s 409ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0206 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0483\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0213 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0474\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 12s 403ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0194 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1196\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0220 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0733\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 12s 386ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0232 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0466\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 12s 402ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0205 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0548\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 12s 390ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0220 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0565\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 12s 393ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0200 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0512\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 12s 395ms/step - loss: 8.7924e-04 - mean_squared_error: 8.7924e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0435\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 9.7875e-04 - mean_squared_error: 9.7875e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 13s 404ms/step - loss: 7.1272e-04 - mean_squared_error: 7.1272e-04 - mean_absolute_error: 0.0162 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0419\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 12s 397ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0195 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0571\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 13s 405ms/step - loss: 8.7680e-04 - mean_squared_error: 8.7680e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 9.8438e-04 - mean_squared_error: 9.8438e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0479\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 7.8084e-04 - mean_squared_error: 7.8084e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0445\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 12s 391ms/step - loss: 8.5250e-04 - mean_squared_error: 8.5250e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0569\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 7.8861e-04 - mean_squared_error: 7.8861e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0498\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 13s 411ms/step - loss: 8.8179e-04 - mean_squared_error: 8.8179e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0932\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 12s 395ms/step - loss: 8.0444e-04 - mean_squared_error: 8.0444e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0423\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 13s 411ms/step - loss: 8.1185e-04 - mean_squared_error: 8.1185e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0493\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 13s 408ms/step - loss: 7.2887e-04 - mean_squared_error: 7.2887e-04 - mean_absolute_error: 0.0155 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0478\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 13s 410ms/step - loss: 8.3061e-04 - mean_squared_error: 8.3061e-04 - mean_absolute_error: 0.0164 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0496\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 13s 413ms/step - loss: 7.7271e-04 - mean_squared_error: 7.7271e-04 - mean_absolute_error: 0.0169 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0555\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 13s 403ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0194 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0587\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 13s 405ms/step - loss: 7.4052e-04 - mean_squared_error: 7.4052e-04 - mean_absolute_error: 0.0159 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0547\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 7.3777e-04 - mean_squared_error: 7.3777e-04 - mean_absolute_error: 0.0163 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0401\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 7.2633e-04 - mean_squared_error: 7.2633e-04 - mean_absolute_error: 0.0168 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0413\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 12s 396ms/step - loss: 6.8379e-04 - mean_squared_error: 6.8379e-04 - mean_absolute_error: 0.0154 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0466\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 12s 396ms/step - loss: 6.9882e-04 - mean_squared_error: 6.9882e-04 - mean_absolute_error: 0.0152 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0518\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 13s 416ms/step - loss: 7.8270e-04 - mean_squared_error: 7.8270e-04 - mean_absolute_error: 0.0163 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0395\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 13s 404ms/step - loss: 8.2185e-04 - mean_squared_error: 8.2185e-04 - mean_absolute_error: 0.0166 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0579\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 405<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "36a85ccd056a443c89da392b4551912e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.48MB of 2.48MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_135431-v9s8gybt/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_135431-v9s8gybt/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00068</td></tr><tr><td>mean_squared_error</td><td>0.00068</td></tr><tr><td>mean_absolute_error</td><td>0.01549</td></tr><tr><td>val_loss</td><td>0.00491</td></tr><tr><td>val_mean_squared_error</td><td>0.00491</td></tr><tr><td>val_mean_absolute_error</td><td>0.05788</td></tr><tr><td>_runtime</td><td>645</td></tr><tr><td>_timestamp</td><td>1626789916</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00316</td></tr><tr><td>best_epoch</td><td>44</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▂▅▂▃▂▁▃▁▂▁▁▃▂▄▁▁█▃▁▂▂▁▁▂▁▁▁▁▅▁▁▁▂▂▂▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▇▂▅▂▃▂▁▃▁▂▁▁▃▂▄▁▁█▃▁▂▂▁▁▂▁▁▁▁▅▁▁▁▂▂▂▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▇▂▅▂▃▃▁▄▂▃▁▂▄▂▄▂▂█▄▁▂▂▁▂▂▁▂▁▂▆▁▂▂▂▃▂▁▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">solar-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/v9s8gybt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/v9s8gybt</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: kx5e1sou with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">proud-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kx5e1sou\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kx5e1sou</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_140619-kx5e1sou</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 24s 458ms/step - loss: 0.0938 - mean_squared_error: 0.0938 - mean_absolute_error: 0.1915 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0711\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0361 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0638\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 12s 392ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0315 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0508\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0290 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0737\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 12s 387ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0294 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1209\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 12s 392ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0287 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0877\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 12s 391ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0258 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0886\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 12s 404ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0261 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0471\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 13s 415ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0282 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0539\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 12s 390ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0242 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0474\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 12s 401ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0301 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0446\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0243 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0537\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 12s 395ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0271 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0740\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 13s 411ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0232 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0699\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0231 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0629\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 12s 399ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0229 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0486\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 13s 403ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0224 - val_loss: 0.0314 - val_mean_squared_error: 0.0314 - val_mean_absolute_error: 0.1613\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 12s 392ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0300 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0799\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 12s 392ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0203 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0791\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 12s 397ms/step - loss: 8.5207e-04 - mean_squared_error: 8.5207e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0936\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 12s 386ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0214 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0479\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 13s 418ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0229 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0807\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 12s 393ms/step - loss: 9.0788e-04 - mean_squared_error: 9.0788e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0829\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0206 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0520\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0247 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0707\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 12s 386ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0197 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0855\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 612<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "708f81fb1abe4b0884416b6da026dd84",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.50MB of 2.50MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_140619-kx5e1sou/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_140619-kx5e1sou/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>25</td></tr><tr><td>loss</td><td>0.00093</td></tr><tr><td>mean_squared_error</td><td>0.00093</td></tr><tr><td>mean_absolute_error</td><td>0.01879</td></tr><tr><td>val_loss</td><td>0.00989</td></tr><tr><td>val_mean_squared_error</td><td>0.00989</td></tr><tr><td>val_mean_absolute_error</td><td>0.08552</td></tr><tr><td>_runtime</td><td>336</td></tr><tr><td>_timestamp</td><td>1626790315</td></tr><tr><td>_step</td><td>25</td></tr><tr><td>best_val_loss</td><td>0.00426</td></tr><tr><td>best_epoch</td><td>15</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂▁▁▂▅▃▃▁▁▁▁▁▂▂▁▁█▂▂▃▁▂▂▁▂▂</td></tr><tr><td>val_mean_squared_error</td><td>▂▁▁▂▅▃▃▁▁▁▁▁▂▂▁▁█▂▂▃▁▂▂▁▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>▃▂▁▃▆▄▄▁▂▁▁▂▃▃▂▁█▃▃▄▁▃▃▁▃▃</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">proud-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kx5e1sou\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/kx5e1sou</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: t3sckc0i with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">youthful-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/t3sckc0i\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/t3sckc0i</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_141302-t3sckc0i</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 13s 94ms/step - loss: 0.0683 - mean_squared_error: 0.0683 - mean_absolute_error: 0.1534 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0749\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0245 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0623\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0316 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0603\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0257 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0509\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0224 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0524\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0238 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0482\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0239 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0649\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0266 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0454\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0300 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0531\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0227 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0522\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0236 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0457\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0225 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0475\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0226 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0823\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0237 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0892\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0224 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0582\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0243 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0445\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0270 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0808\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0252 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0544\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0214 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0610\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0260 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0412\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0267 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0531\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0219 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0433\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0230 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0419\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0239 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0224 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0432\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.5896e-04 - mean_squared_error: 9.5896e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0414\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0229 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0395\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0221 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.1073\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0253 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0570\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0419\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0214 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0615\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0227 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0411\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0231 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0454\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0222 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0565\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0219 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0386\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.8751e-04 - mean_squared_error: 8.8751e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0402\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0224 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0384\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0216 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0389\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0219 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0399\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.6793e-04 - mean_squared_error: 9.6793e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0459\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.5950e-04 - mean_squared_error: 9.5950e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0408\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0236 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0400\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0231 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0372\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.7571e-04 - mean_squared_error: 9.7571e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0389\n",
            "Epoch 45/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0371\n",
            "Epoch 46/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.5947e-04 - mean_squared_error: 9.5947e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0410\n",
            "Epoch 47/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0230 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0486\n",
            "Epoch 48/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0241 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0488\n",
            "Epoch 49/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.4095e-04 - mean_squared_error: 9.4095e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0609\n",
            "Epoch 50/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.6788e-04 - mean_squared_error: 8.6788e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0418\n",
            "Epoch 51/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0218 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0401\n",
            "Epoch 52/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0225 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0538\n",
            "Epoch 53/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0215 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0986\n",
            "Epoch 54/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0265 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0365\n",
            "Epoch 55/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0219 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0400\n",
            "Epoch 56/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.1449e-04 - mean_squared_error: 9.1449e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0520\n",
            "Epoch 57/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.8667e-04 - mean_squared_error: 9.8667e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0400\n",
            "Epoch 58/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0219 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0477\n",
            "Epoch 59/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0232 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0438\n",
            "Epoch 60/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.2650e-04 - mean_squared_error: 9.2650e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0371\n",
            "Epoch 61/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.4968e-04 - mean_squared_error: 9.4968e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0353\n",
            "Epoch 62/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0212 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0364\n",
            "Epoch 63/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0218 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0374\n",
            "Epoch 64/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.8446e-04 - mean_squared_error: 9.8446e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0395\n",
            "Epoch 65/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.0751e-04 - mean_squared_error: 9.0751e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0671\n",
            "Epoch 66/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.6531e-04 - mean_squared_error: 9.6531e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0386\n",
            "Epoch 67/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 7.5969e-04 - mean_squared_error: 7.5969e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 68/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.1851e-04 - mean_squared_error: 8.1851e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0581\n",
            "Epoch 69/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.5922e-04 - mean_squared_error: 8.5922e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0349\n",
            "Epoch 70/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0208 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0593\n",
            "Epoch 71/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.4678e-04 - mean_squared_error: 8.4678e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0743\n",
            "Epoch 72/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.1973e-04 - mean_squared_error: 9.1973e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0370\n",
            "Epoch 73/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.5443e-04 - mean_squared_error: 8.5443e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0352\n",
            "Epoch 74/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.9367e-04 - mean_squared_error: 8.9367e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0354\n",
            "Epoch 75/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.4638e-04 - mean_squared_error: 7.4638e-04 - mean_absolute_error: 0.0177 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0404\n",
            "Epoch 76/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.2847e-04 - mean_squared_error: 9.2847e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0739\n",
            "Epoch 77/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.3427e-04 - mean_squared_error: 8.3427e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0348\n",
            "Epoch 78/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.3541e-04 - mean_squared_error: 8.3541e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0428\n",
            "Epoch 79/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.6209e-04 - mean_squared_error: 8.6209e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0335\n",
            "Epoch 80/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.9502e-04 - mean_squared_error: 8.9502e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0338\n",
            "Epoch 81/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.3234e-04 - mean_squared_error: 8.3234e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0417\n",
            "Epoch 82/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 7.8500e-04 - mean_squared_error: 7.8500e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0352\n",
            "Epoch 83/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0209 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0342\n",
            "Epoch 84/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.6692e-04 - mean_squared_error: 7.6692e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0363\n",
            "Epoch 85/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.0520e-04 - mean_squared_error: 9.0520e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0431\n",
            "Epoch 86/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 7.7350e-04 - mean_squared_error: 7.7350e-04 - mean_absolute_error: 0.0182 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0453\n",
            "Epoch 87/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.9526e-04 - mean_squared_error: 8.9526e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0363\n",
            "Epoch 88/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 6.9604e-04 - mean_squared_error: 6.9604e-04 - mean_absolute_error: 0.0180 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0381\n",
            "Epoch 89/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.2861e-04 - mean_squared_error: 7.2861e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0380\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 745<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "962f4b8165054675ad52a552fcf157c9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.74MB of 1.74MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141302-t3sckc0i/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141302-t3sckc0i/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>88</td></tr><tr><td>loss</td><td>0.00073</td></tr><tr><td>mean_squared_error</td><td>0.00073</td></tr><tr><td>mean_absolute_error</td><td>0.01853</td></tr><tr><td>val_loss</td><td>0.00248</td></tr><tr><td>val_mean_squared_error</td><td>0.00248</td></tr><tr><td>val_mean_absolute_error</td><td>0.03796</td></tr><tr><td>_runtime</td><td>81</td></tr><tr><td>_timestamp</td><td>1626790463</td></tr><tr><td>_step</td><td>88</td></tr><tr><td>best_val_loss</td><td>0.0023</td></tr><tr><td>best_epoch</td><td>78</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▁▂▁▁▂▂▁▁▂▁▁▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▃▃▄▂▂▆▂▃▃▂▂█▂▁▂▁▁▁▁▂▂▁▂▁▁▁▁▁▁▃▂▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▅▃▃▄▂▂▆▂▃▃▂▂█▂▁▂▁▁▁▁▂▂▁▂▁▁▁▁▁▁▃▂▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅▄▃▄▃▂▆▂▄▃▂▂█▂▂▃▁▂▂▁▂▂▂▃▂▂▂▁▂▁▃▃▁▂▁▁▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">youthful-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/t3sckc0i\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/t3sckc0i</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: sieztohc with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">comfy-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sieztohc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sieztohc</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_141431-sieztohc</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 24s 487ms/step - loss: 0.0881 - mean_squared_error: 0.0881 - mean_absolute_error: 0.2009 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0801\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 12s 396ms/step - loss: 0.0147 - mean_squared_error: 0.0147 - mean_absolute_error: 0.0764 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1100\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 12s 398ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0695 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0922\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0611 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0810\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 12s 398ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0496 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0805\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0432 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0593\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0520 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0988\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 12s 404ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0563 - val_loss: 0.1264 - val_mean_squared_error: 0.1264 - val_mean_absolute_error: 0.3404\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 12s 391ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0517 - val_loss: 0.0340 - val_mean_squared_error: 0.0340 - val_mean_absolute_error: 0.1706\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 12s 395ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0567 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0807\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 12s 402ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0367 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0571\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0364 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0852\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 12s 401ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0421 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0397\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 12s 394ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0452 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0449\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 12s 377ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0342 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0501\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 13s 415ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0422 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0695\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 12s 399ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0368 - val_loss: 0.0414 - val_mean_squared_error: 0.0414 - val_mean_absolute_error: 0.1932\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 12s 396ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0403 - val_loss: 0.0381 - val_mean_squared_error: 0.0381 - val_mean_absolute_error: 0.1811\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 12s 399ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0361 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0356\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 13s 405ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0314 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0712\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 12s 404ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0334 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0380\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 13s 410ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0298 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0382\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 13s 405ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0323 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0402\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 13s 405ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0270 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0411\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 13s 406ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0320 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0379\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 12s 402ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0396 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1231\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 12s 398ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0326 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0400\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 12s 403ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0262 - val_loss: 0.0273 - val_mean_squared_error: 0.0273 - val_mean_absolute_error: 0.1541\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 12s 395ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0342 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0978\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 13s 418ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0309 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0383\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 12s 387ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0305 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0434\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0315 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0496\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 12s 397ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0346 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0607\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 12s 389ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0256 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0382\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 13s 415ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0303 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0582\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 13s 406ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0266 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0355\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 13s 413ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0287 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0510\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 12s 393ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0287 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0978\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 12s 387ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0270 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0381\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 13s 404ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0268 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0408\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 12s 401ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0267 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0367\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 12s 388ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0252 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0903\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 12s 396ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0270 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0522\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 12s 401ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0278 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0366\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 12s 393ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0262 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0388\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 13s 411ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0305 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0374\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1067<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "7605fb6f84894d60858e7014a8c94dbb",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.84MB of 1.84MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141431-sieztohc/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_141431-sieztohc/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>45</td></tr><tr><td>loss</td><td>0.00169</td></tr><tr><td>mean_squared_error</td><td>0.00169</td></tr><tr><td>mean_absolute_error</td><td>0.02727</td></tr><tr><td>val_loss</td><td>0.00266</td></tr><tr><td>val_mean_squared_error</td><td>0.00266</td></tr><tr><td>val_mean_absolute_error</td><td>0.03741</td></tr><tr><td>_runtime</td><td>592</td></tr><tr><td>_timestamp</td><td>1626791063</td></tr><tr><td>_step</td><td>45</td></tr><tr><td>best_val_loss</td><td>0.00225</td></tr><tr><td>best_epoch</td><td>35</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>loss</td><td>█▃▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂▃▃▂▂▂▃▇▂▂▂▁▁▁█▇▁▂▁▁▁▁▄▁▅▃▁▁▂▁▂▁▁▁▁▁▃▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▂▃▃▂▂▂▃▇▂▂▂▁▁▁█▇▁▂▁▁▁▁▄▁▅▃▁▁▂▁▂▁▁▁▁▁▃▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▃▄▄▃▃▂▄▇▃▂▃▁▁▂█▇▁▃▁▁▁▁▅▁▆▄▁▂▂▁▂▁▂▁▁▁▃▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">comfy-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sieztohc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sieztohc</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: hkfyfajh with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">spring-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hkfyfajh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hkfyfajh</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_142430-hkfyfajh</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 17s 546ms/step - loss: 0.2119 - mean_squared_error: 0.2119 - mean_absolute_error: 0.3008 - val_loss: 0.2987 - val_mean_squared_error: 0.2987 - val_mean_absolute_error: 0.5092\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0365 - mean_squared_error: 0.0365 - mean_absolute_error: 0.1179 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.1045\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 7s 422ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0749 - val_loss: 0.2478 - val_mean_squared_error: 0.2478 - val_mean_absolute_error: 0.4627\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0256 - mean_squared_error: 0.0256 - mean_absolute_error: 0.1005 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.1087\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 6s 398ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0668 - val_loss: 0.0423 - val_mean_squared_error: 0.0423 - val_mean_absolute_error: 0.1875\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 0.0245 - mean_squared_error: 0.0245 - mean_absolute_error: 0.0934 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0914\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0530 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0991\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0656 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.1043\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0612 - val_loss: 0.0259 - val_mean_squared_error: 0.0259 - val_mean_absolute_error: 0.1449\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 7s 413ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0751 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0859\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 7s 416ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0514 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0644\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 7s 417ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0480 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0560\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 6s 391ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0391 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0539\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0480 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0710\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 7s 421ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0450 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0506\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0425 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0660\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0416 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0494\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0383 - val_loss: 0.0683 - val_mean_squared_error: 0.0683 - val_mean_absolute_error: 0.2478\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0618 - val_loss: 0.0440 - val_mean_squared_error: 0.0440 - val_mean_absolute_error: 0.1893\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 6s 398ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0582 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0919\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0414 - val_loss: 0.0424 - val_mean_squared_error: 0.0424 - val_mean_absolute_error: 0.1895\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0574 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0490\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 6s 385ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0479 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0491\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0323 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0482\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0384 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 6s 399ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0356 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0624\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 6s 388ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0329 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0772\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0384 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.1093\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 6s 406ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0426 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1066\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 7s 411ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0452 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0896\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 7s 417ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0389 - val_loss: 0.0359 - val_mean_squared_error: 0.0359 - val_mean_absolute_error: 0.1716\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 6s 402ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0445 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0482\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0413 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1352\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1260<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2570c4bc05d2451ca4efb406a5284095",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.86MB of 1.86MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142430-hkfyfajh/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142430-hkfyfajh/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>32</td></tr><tr><td>loss</td><td>0.00287</td></tr><tr><td>mean_squared_error</td><td>0.00287</td></tr><tr><td>mean_absolute_error</td><td>0.0361</td></tr><tr><td>val_loss</td><td>0.02214</td></tr><tr><td>val_mean_squared_error</td><td>0.02214</td></tr><tr><td>val_mean_absolute_error</td><td>0.13523</td></tr><tr><td>_runtime</td><td>229</td></tr><tr><td>_timestamp</td><td>1626791299</td></tr><tr><td>_step</td><td>32</td></tr><tr><td>best_val_loss</td><td>0.00424</td></tr><tr><td>best_epoch</td><td>22</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▃▂▃▂▂▂▂▂▂▁▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▇▁▂▁▁▁▂▁▁▁▁▁▁▁▁▃▂▁▂▁▁▁▁▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▇▁▂▁▁▁▂▁▁▁▁▁▁▁▁▃▂▁▂▁▁▁▁▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▇▂▃▂▂▂▂▂▁▁▁▁▁▁▁▄▃▂▃▁▁▁▁▁▁▂▂▂▃▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">spring-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hkfyfajh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hkfyfajh</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0i2xcko5 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dazzling-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0i2xcko5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0i2xcko5</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_142827-0i2xcko5</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 13s 90ms/step - loss: 0.0245 - mean_squared_error: 0.0245 - mean_absolute_error: 0.0885 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1518\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0342 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0679\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0312 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0484\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0308 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0770\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0394 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0656\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0253 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0409\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0262 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0435\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0296 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0409\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0410\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0243 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0575\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0302 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0561\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0238 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0422\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0293 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0717\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0263 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0560\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0394\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0296 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0522\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0339 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0670\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0379\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0261 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0384\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0223 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0619\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0253 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0699\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0297 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0744\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0484\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0471\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0363\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1163\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0272 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0419\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0249 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0421\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0238 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0797\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0338\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.2741e-04 - mean_squared_error: 9.2741e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0390\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0255 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0553\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0379\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0278 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.6977e-04 - mean_squared_error: 9.6977e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0972\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0332\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0223 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0341\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.8823e-04 - mean_squared_error: 9.8823e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0573\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0226 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0226 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0385\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.2771e-04 - mean_squared_error: 9.2771e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0325\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.8915e-04 - mean_squared_error: 8.8915e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0461\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.7086e-04 - mean_squared_error: 8.7086e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0445\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0225 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0400\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0218 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0841\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0233 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0454\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0219 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0345\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 7.9309e-04 - mean_squared_error: 7.9309e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0362\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.3146e-04 - mean_squared_error: 8.3146e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0505\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.9483e-04 - mean_squared_error: 8.9483e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0336\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0227 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0381\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0229 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1205\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0277 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0355\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.9639e-04 - mean_squared_error: 7.9639e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0353\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.7155e-04 - mean_squared_error: 9.7155e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0392\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 7.9573e-04 - mean_squared_error: 7.9573e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0328\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.4342e-04 - mean_squared_error: 8.4342e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0493\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0218 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0492\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.6375e-04 - mean_squared_error: 8.6375e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0370\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.5125e-04 - mean_squared_error: 9.5125e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0353\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 6.8011e-04 - mean_squared_error: 6.8011e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0348\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 9.1265e-04 - mean_squared_error: 9.1265e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0338\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 8.6546e-04 - mean_squared_error: 8.6546e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0327\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.7618e-04 - mean_squared_error: 9.7618e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0330\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.2913e-04 - mean_squared_error: 8.2913e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0703\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0222 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0361\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.9989e-04 - mean_squared_error: 7.9989e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0318\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 6.5984e-04 - mean_squared_error: 6.5984e-04 - mean_absolute_error: 0.0176 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0819\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0235 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0440\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.8229e-04 - mean_squared_error: 8.8229e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0563\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0232 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0316\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0215 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0406\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.3537e-04 - mean_squared_error: 8.3537e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0350\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.1581e-04 - mean_squared_error: 8.1581e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0466\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0227 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0336\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0225 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0330\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.3744e-04 - mean_squared_error: 7.3744e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.1090\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1414<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2dcaaeb557954f94b60a13880fb8729a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.61MB of 2.61MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142827-0i2xcko5/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142827-0i2xcko5/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>77</td></tr><tr><td>loss</td><td>0.00085</td></tr><tr><td>mean_squared_error</td><td>0.00085</td></tr><tr><td>mean_absolute_error</td><td>0.02006</td></tr><tr><td>val_loss</td><td>0.01459</td></tr><tr><td>val_mean_squared_error</td><td>0.01459</td></tr><tr><td>val_mean_absolute_error</td><td>0.10898</td></tr><tr><td>_runtime</td><td>74</td></tr><tr><td>_timestamp</td><td>1626791382</td></tr><tr><td>_step</td><td>77</td></tr><tr><td>best_val_loss</td><td>0.002</td></tr><tr><td>best_epoch</td><td>67</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▂▁▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▁▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▂▃▃▃▃▃▂▂▂▂▂▁▂▂▂▂▁▁▂▂▁▂▂▂▁▁▁▂▁▁▁▂▂▂▁</td></tr><tr><td>val_loss</td><td>█▂▃▁▁▁▂▃▁▂▁▂▁▁▁▃▁▁▄▁▁▁▁▃▁▂▁▁▁▁▁▁▁▂▁▁▁▁▁▄</td></tr><tr><td>val_mean_squared_error</td><td>█▂▃▁▁▁▂▃▁▂▁▂▁▁▁▃▁▁▄▁▁▁▁▃▁▂▁▁▁▁▁▁▁▂▁▁▁▁▁▄</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▄▂▂▂▂▃▁▃▁▃▂▁▂▄▁▁▅▁▂▁▂▄▁▂▁▁▁▂▁▁▁▃▁▂▁▁▁▆</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dazzling-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0i2xcko5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/0i2xcko5</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 782lj2b7 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">valiant-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/782lj2b7\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/782lj2b7</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_142951-782lj2b7</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 12s 278ms/step - loss: 0.1050 - mean_squared_error: 0.1050 - mean_absolute_error: 0.2131 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0473\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0241 - mean_squared_error: 0.0241 - mean_absolute_error: 0.0860 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.1011\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0707 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0479\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 33ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0417 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0447\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0496 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0689\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0587 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0763\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0456 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0461\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0467 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0783\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0566 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0466\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0488 - val_loss: 0.0559 - val_mean_squared_error: 0.0559 - val_mean_absolute_error: 0.2200\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0704 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0919\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0574 - val_loss: 0.0237 - val_mean_squared_error: 0.0237 - val_mean_absolute_error: 0.1396\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0536 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0575\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0396 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0613\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0462 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0865\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0357 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0450\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0519 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0493\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0550 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1244\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0407 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1307\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1703<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ee82f3bd90a74850b59ccc4764c43f23",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.63MB of 2.63MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142951-782lj2b7/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_142951-782lj2b7/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>18</td></tr><tr><td>loss</td><td>0.00484</td></tr><tr><td>mean_squared_error</td><td>0.00484</td></tr><tr><td>mean_absolute_error</td><td>0.04516</td></tr><tr><td>val_loss</td><td>0.02107</td></tr><tr><td>val_mean_squared_error</td><td>0.02107</td></tr><tr><td>val_mean_absolute_error</td><td>0.13074</td></tr><tr><td>_runtime</td><td>21</td></tr><tr><td>_timestamp</td><td>1626791412</td></tr><tr><td>_step</td><td>18</td></tr><tr><td>best_val_loss</td><td>0.00358</td></tr><tr><td>best_epoch</td><td>8</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>loss</td><td>█▄▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▃▁▂▃▂▂▂▂▃▂▂▁▂▁▂▂▂</td></tr><tr><td>val_loss</td><td>▁▂▁▁▁▂▁▂▁█▂▄▁▁▂▁▁▃▃</td></tr><tr><td>val_mean_squared_error</td><td>▁▂▁▁▁▂▁▂▁█▂▄▁▁▂▁▁▃▃</td></tr><tr><td>val_mean_absolute_error</td><td>▁▃▁▁▂▂▁▂▁█▃▅▂▂▃▁▁▄▄</td></tr><tr><td>_runtime</td><td>▁▁▁▁▃▃▃▃▅▅▅▅▆▆▆▆███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▃▃▃▃▅▅▅▅▆▆▆▆███</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">valiant-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/782lj2b7\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/782lj2b7</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: x9fvglj4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dulcet-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x9fvglj4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x9fvglj4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143021-x9fvglj4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "16/16 [==============================] - 11s 144ms/step - loss: 0.0769 - mean_squared_error: 0.0769 - mean_absolute_error: 0.1799 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1233\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0548 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0604\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0356 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0478\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0269 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0491\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0237 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0467\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0244 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0525\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0240 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0463\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0206 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0474\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0230 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0246 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0483\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0227 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0460\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0223 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0497\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0198 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0448\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0204 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0446\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0222 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0449\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0208 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0443\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0223 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0447\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0234 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0722\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0274 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0542\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0295 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0556\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0246 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0452\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0211 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0530\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0224 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0505\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0242 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0473\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0219 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0433\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0216 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0528\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0222 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0433\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1815<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4d508017d9cd40d3be9a434042df9f9b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.64MB of 2.64MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143021-x9fvglj4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143021-x9fvglj4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>26</td></tr><tr><td>loss</td><td>0.00123</td></tr><tr><td>mean_squared_error</td><td>0.00123</td></tr><tr><td>mean_absolute_error</td><td>0.0213</td></tr><tr><td>val_loss</td><td>0.00384</td></tr><tr><td>val_mean_squared_error</td><td>0.00384</td></tr><tr><td>val_mean_absolute_error</td><td>0.04329</td></tr><tr><td>_runtime</td><td>25</td></tr><tr><td>_timestamp</td><td>1626791446</td></tr><tr><td>_step</td><td>26</td></tr><tr><td>best_val_loss</td><td>0.00382</td></tr><tr><td>best_epoch</td><td>16</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▁▂▁▂▁▁▁▁▁▂▁▁▁▁▁▄▂▂▁▂▂▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▆▆▆▆▆▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▆▆▆▆▆▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dulcet-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x9fvglj4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x9fvglj4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 31l4n743 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">legendary-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/31l4n743\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/31l4n743</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143054-31l4n743</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 15s 798ms/step - loss: 0.0774 - mean_squared_error: 0.0774 - mean_absolute_error: 0.1853 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0588\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 3s 398ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0673 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1480\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 3s 422ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0474 - val_loss: 0.0327 - val_mean_squared_error: 0.0327 - val_mean_absolute_error: 0.1641\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 3s 411ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0526 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0587\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 3s 412ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0525 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.1122\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 3s 415ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0417 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1431\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 3s 413ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0516 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0601\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 3s 412ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0358 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0694\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 3s 402ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0388 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0620\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 3s 424ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0418 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0699\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 3s 424ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0439 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0516\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 3s 402ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0388 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0534\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 3s 439ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0333 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0835\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 3s 428ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0383 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1320\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 3s 430ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0416 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0907\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 3s 417ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0409 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0572\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 3s 432ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0416 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0871\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 3s 411ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0403 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0793\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 3s 399ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0445 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0763\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 3s 422ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0276 - val_loss: 0.0395 - val_mean_squared_error: 0.0395 - val_mean_absolute_error: 0.1859\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 3s 413ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0620 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0489\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 3s 426ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0323 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1127\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 3s 408ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0458 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0547\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 3s 400ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0290 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0482\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 3s 402ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0248 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1228\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 3s 381ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0471 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0486\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 3s 412ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0308 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0520\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 3s 432ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0284 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0645\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 3s 418ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0406 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0508\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 3s 396ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0356 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0746\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 3s 434ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0261 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0505\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 3s 424ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0446 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0528\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 3s 418ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0277 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0492\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 3s 425ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0324 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0608\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 3s 418ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0355 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0545\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 3s 438ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0363 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0509\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1951<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "13b2548acde84e69be1c59432f69dc24",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.95MB of 1.95MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143054-31l4n743/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143054-31l4n743/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>35</td></tr><tr><td>loss</td><td>0.00337</td></tr><tr><td>mean_squared_error</td><td>0.00337</td></tr><tr><td>mean_absolute_error</td><td>0.03804</td></tr><tr><td>val_loss</td><td>0.00461</td></tr><tr><td>val_mean_squared_error</td><td>0.00461</td></tr><tr><td>val_mean_absolute_error</td><td>0.05086</td></tr><tr><td>_runtime</td><td>135</td></tr><tr><td>_timestamp</td><td>1626791590</td></tr><tr><td>_step</td><td>35</td></tr><tr><td>best_val_loss</td><td>0.00448</td></tr><tr><td>best_epoch</td><td>25</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▂▁▂▁▁▂▁▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▂▁▂▁▁▂▁▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▃▂▃▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▂▂▁▂▂▁▂▂▁▂▁▁▂▂</td></tr><tr><td>val_loss</td><td>▁▆▇▁▃▅▁▂▂▂▁▁▂▄▂▁▂▂▂█▁▃▁▁▄▁▁▂▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▁▆▇▁▃▅▁▂▂▂▁▁▂▄▂▁▂▂▂█▁▃▁▁▄▁▁▂▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▂▆▇▂▄▆▂▂▂▂▁▁▃▅▃▁▃▃▂█▁▄▁▁▅▁▁▂▁▂▁▁▁▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">legendary-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/31l4n743\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/31l4n743</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: l4bfqetp with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">daily-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l4bfqetp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l4bfqetp</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143338-l4bfqetp</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "16/16 [==============================] - 17s 531ms/step - loss: 0.0884 - mean_squared_error: 0.0884 - mean_absolute_error: 0.1953 - val_loss: 0.0295 - val_mean_squared_error: 0.0295 - val_mean_absolute_error: 0.1577\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 7s 417ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0788 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0744\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 7s 416ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0512 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0855\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0395 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0571\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 6s 405ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0284 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0597\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 7s 408ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0277 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0615\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 7s 405ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0286 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0808\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0238 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0767\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0254 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0650\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 7s 418ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0286 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.1007\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 6s 399ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0260 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0938\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0289 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0526\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 6s 385ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0277 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0924\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 6s 391ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0254 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0675\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 6s 399ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0256 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0920\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 6s 390ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0258 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0921\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 6s 384ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0254 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0622\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0220 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0818\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 7s 412ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0228 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0893\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0236 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.1012\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0219 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1173\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 7s 413ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0215 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0992\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2114<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ce91ded3b0334cdba340379d2d38c3fd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.68MB of 2.68MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143338-l4bfqetp/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143338-l4bfqetp/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>21</td></tr><tr><td>loss</td><td>0.00146</td></tr><tr><td>mean_squared_error</td><td>0.00146</td></tr><tr><td>mean_absolute_error</td><td>0.02198</td></tr><tr><td>val_loss</td><td>0.01277</td></tr><tr><td>val_mean_squared_error</td><td>0.01277</td></tr><tr><td>val_mean_absolute_error</td><td>0.09921</td></tr><tr><td>_runtime</td><td>158</td></tr><tr><td>_timestamp</td><td>1626791776</td></tr><tr><td>_step</td><td>21</td></tr><tr><td>best_val_loss</td><td>0.00481</td></tr><tr><td>best_epoch</td><td>11</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▁▁▁▂▂▁▃▃▁▃▂▃▃▁▂▃▃▅▃</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▁▁▁▂▂▁▃▃▁▃▂▃▃▁▂▃▃▅▃</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▃▁▁▂▃▃▂▄▄▁▄▂▄▄▂▃▃▄▅▄</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">daily-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l4bfqetp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l4bfqetp</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Sweep Agent: Waiting for job.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Job received.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: x0yejyb1 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">ethereal-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x0yejyb1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x0yejyb1</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143730-x0yejyb1</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 11s 84ms/step - loss: 0.0511 - mean_squared_error: 0.0511 - mean_absolute_error: 0.1404 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0473\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0313 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0502\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0216 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0480\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0197 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0550\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0198 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0758\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0213 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0514\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0204 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0456\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.0018e-04 - mean_squared_error: 9.0018e-04 - mean_absolute_error: 0.0167 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0455\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.9179e-04 - mean_squared_error: 9.9179e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0496\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0194 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0437\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 6.9964e-04 - mean_squared_error: 6.9964e-04 - mean_absolute_error: 0.0152 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0460\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0199 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0487\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0204 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0208 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0450\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 7.6766e-04 - mean_squared_error: 7.6766e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0197 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0775\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0233 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0460\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.3307e-04 - mean_squared_error: 8.3307e-04 - mean_absolute_error: 0.0170 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0469\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.5449e-04 - mean_squared_error: 8.5449e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0414\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 7.1963e-04 - mean_squared_error: 7.1963e-04 - mean_absolute_error: 0.0161 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0493\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 8.8418e-04 - mean_squared_error: 8.8418e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0409\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.2015e-04 - mean_squared_error: 8.2015e-04 - mean_absolute_error: 0.0178 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0473\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.7641e-04 - mean_squared_error: 8.7641e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0415\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.2680e-04 - mean_squared_error: 8.2680e-04 - mean_absolute_error: 0.0177 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0417\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.5348e-04 - mean_squared_error: 8.5348e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0447\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.2460e-04 - mean_squared_error: 7.2460e-04 - mean_absolute_error: 0.0170 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0515\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 7.5699e-04 - mean_squared_error: 7.5699e-04 - mean_absolute_error: 0.0174 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0425\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 9.0616e-04 - mean_squared_error: 9.0616e-04 - mean_absolute_error: 0.0174 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0464\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0242 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0423\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 8.5297e-04 - mean_squared_error: 8.5297e-04 - mean_absolute_error: 0.0182 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0384\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 6.6742e-04 - mean_squared_error: 6.6742e-04 - mean_absolute_error: 0.0168 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0383\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 5.6316e-04 - mean_squared_error: 5.6316e-04 - mean_absolute_error: 0.0157 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0499\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 6.9961e-04 - mean_squared_error: 6.9961e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0474\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 7.3962e-04 - mean_squared_error: 7.3962e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0384\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 6.5520e-04 - mean_squared_error: 6.5520e-04 - mean_absolute_error: 0.0167 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0478\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 5.9449e-04 - mean_squared_error: 5.9449e-04 - mean_absolute_error: 0.0157 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0391\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.9348e-04 - mean_squared_error: 8.9348e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0422\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 6.0925e-04 - mean_squared_error: 6.0925e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0378\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 6.4587e-04 - mean_squared_error: 6.4587e-04 - mean_absolute_error: 0.0167 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0382\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 5.2129e-04 - mean_squared_error: 5.2129e-04 - mean_absolute_error: 0.0153 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0437\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 6.2674e-04 - mean_squared_error: 6.2674e-04 - mean_absolute_error: 0.0167 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0388\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 6.7741e-04 - mean_squared_error: 6.7741e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0391\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 7.5359e-04 - mean_squared_error: 7.5359e-04 - mean_absolute_error: 0.0179 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0370\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 8.3198e-04 - mean_squared_error: 8.3198e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 5.9015e-04 - mean_squared_error: 5.9015e-04 - mean_absolute_error: 0.0163 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 5.1839e-04 - mean_squared_error: 5.1839e-04 - mean_absolute_error: 0.0148 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0367\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 6.8399e-04 - mean_squared_error: 6.8399e-04 - mean_absolute_error: 0.0170 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0770\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 9.2811e-04 - mean_squared_error: 9.2811e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.2883e-04 - mean_squared_error: 8.2883e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0365\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 6.5518e-04 - mean_squared_error: 6.5518e-04 - mean_absolute_error: 0.0170 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0362\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2235<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9a82b51408ea4f35b00f610f20a0d27c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.71MB of 2.71MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143730-x0yejyb1/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143730-x0yejyb1/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00069</td></tr><tr><td>mean_squared_error</td><td>0.00069</td></tr><tr><td>mean_absolute_error</td><td>0.0171</td></tr><tr><td>val_loss</td><td>0.00247</td></tr><tr><td>val_mean_squared_error</td><td>0.00247</td></tr><tr><td>val_mean_absolute_error</td><td>0.03616</td></tr><tr><td>_runtime</td><td>47</td></tr><tr><td>_timestamp</td><td>1626791897</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00247</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▄▃▅▃▃▃▄▃▄▃▃█▃▃▂▂▃▂▂▄▂▂▂▂▃▂▁▂▂▂▂▂▁▁▁▁█▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▃▄▃▅▃▃▃▄▃▄▃▃█▃▃▂▂▃▂▂▄▂▂▂▂▃▂▁▂▂▂▂▂▁▁▁▁█▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▃▃▃▄▄▃▃▃▃▃▃▃█▃▃▂▂▃▂▂▄▂▃▂▁▃▃▁▁▂▁▁▁▁▁▂▁█▃▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">ethereal-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x0yejyb1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/x0yejyb1</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: l3my5akn with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">glamorous-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l3my5akn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l3my5akn</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_143826-l3my5akn</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 18s 552ms/step - loss: 0.0818 - mean_squared_error: 0.0818 - mean_absolute_error: 0.2021 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1106\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0640 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0584\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 6s 394ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0368 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0712\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 7s 419ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0299 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0512\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 7s 423ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0243 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0513\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0237 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0449\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0214 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0506\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 7s 418ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0248 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0225 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0459\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 6s 407ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0201 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0443\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0207 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0472\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 6s 399ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0227 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0422\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 6s 405ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0217 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0455\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 7s 419ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0224 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0631\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 7s 413ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0248 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0452\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 7s 408ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0241 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0412\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0203 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0509\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 6s 381ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0203 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0423\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 7s 431ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0219 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0475\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 6s 408ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0206 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0739\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 6s 384ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0256 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0451\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 6s 397ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0322 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0463\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 6s 402ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0229 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0467\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 7s 423ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0210 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0455\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 7s 429ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0227 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0706\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 7s 423ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0239 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0412\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0230 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0796\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 6s 386ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0274 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0443\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 7s 423ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0209 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0593\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 7s 424ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0206 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0608\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 6s 394ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0202 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0494\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 7s 407ms/step - loss: 7.7281e-04 - mean_squared_error: 7.7281e-04 - mean_absolute_error: 0.0183 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0504\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0215 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0517\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 9.2877e-04 - mean_squared_error: 9.2877e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0402\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 7s 407ms/step - loss: 6.7972e-04 - mean_squared_error: 6.7972e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0393\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 6s 409ms/step - loss: 9.4289e-04 - mean_squared_error: 9.4289e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0379\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 7s 411ms/step - loss: 9.8190e-04 - mean_squared_error: 9.8190e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0492\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 9.1420e-04 - mean_squared_error: 9.1420e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0370\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 7s 431ms/step - loss: 9.2673e-04 - mean_squared_error: 9.2673e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0362\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 7s 422ms/step - loss: 8.4194e-04 - mean_squared_error: 8.4194e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0351\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 6.4263e-04 - mean_squared_error: 6.4263e-04 - mean_absolute_error: 0.0164 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 8.1786e-04 - mean_squared_error: 8.1786e-04 - mean_absolute_error: 0.0180 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0386\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 6s 405ms/step - loss: 7.4560e-04 - mean_squared_error: 7.4560e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0396\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 7s 426ms/step - loss: 9.6720e-04 - mean_squared_error: 9.6720e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0378\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 8.5017e-04 - mean_squared_error: 8.5017e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0383\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 6s 405ms/step - loss: 6.3606e-04 - mean_squared_error: 6.3606e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0504\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 7.7430e-04 - mean_squared_error: 7.7430e-04 - mean_absolute_error: 0.0182 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 7.8824e-04 - mean_squared_error: 7.8824e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0366\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 7s 421ms/step - loss: 6.8091e-04 - mean_squared_error: 6.8091e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 7s 412ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0208 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0419\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2440<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3db751589da94672bd5bb2d4241afea0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.73MB of 2.73MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143826-l3my5akn/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_143826-l3my5akn/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00094</td></tr><tr><td>mean_squared_error</td><td>0.00094</td></tr><tr><td>mean_absolute_error</td><td>0.01934</td></tr><tr><td>val_loss</td><td>0.00347</td></tr><tr><td>val_mean_squared_error</td><td>0.00347</td></tr><tr><td>val_mean_absolute_error</td><td>0.04187</td></tr><tr><td>_runtime</td><td>344</td></tr><tr><td>_timestamp</td><td>1626792250</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00255</td></tr><tr><td>best_epoch</td><td>39</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▃▂▂▂▂▂▂▁▂▃▁▂▂▂▂▂▂▂▁▄▁▃▂▂▂▁▁▂▁▁▁▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▃▂▂▂▂▂▂▁▂▃▁▂▂▂▂▂▂▂▁▄▁▃▂▂▂▁▁▂▁▁▁▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▄▂▂▂▂▂▂▂▂▄▁▂▂▂▂▂▂▂▁▅▂▃▂▂▂▁▁▂▁▁▂▁▁▁▂▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">glamorous-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l3my5akn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/l3my5akn</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: z2nbg0dt with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">confused-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z2nbg0dt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z2nbg0dt</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_144508-z2nbg0dt</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 18s 549ms/step - loss: 0.1099 - mean_squared_error: 0.1099 - mean_absolute_error: 0.2057 - val_loss: 0.1202 - val_mean_squared_error: 0.1202 - val_mean_absolute_error: 0.3241\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 7s 407ms/step - loss: 0.0488 - mean_squared_error: 0.0488 - mean_absolute_error: 0.1979 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1241\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 6s 398ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0615 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0560\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 6s 390ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0430 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0514\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0300 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0547\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 6s 409ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0248 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0586\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 7s 413ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0226 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0509\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 7s 417ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0222 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0570\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 7s 426ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0255 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0536\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 6s 385ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0223 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0500\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0238 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0534\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 6s 406ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0192 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0565\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0229 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0517\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0203 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0487\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 7s 411ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0229 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0545\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0208 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0487\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 7s 416ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0196 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0486\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 7s 424ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0198 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0560\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 6s 406ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0214 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0514\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 6s 395ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0192 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0579\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 6s 407ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0206 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0520\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 7s 419ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0185 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0739\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 7s 426ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0226 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0477\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 7s 416ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0207 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0518\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0188 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0547\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 7s 406ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0190 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0576\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 7s 405ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0205 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0587\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 9.5296e-04 - mean_squared_error: 9.5296e-04 - mean_absolute_error: 0.0176 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0472\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0225 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0610\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0191 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0544\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0189 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0587\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 7s 411ms/step - loss: 9.2238e-04 - mean_squared_error: 9.2238e-04 - mean_absolute_error: 0.0183 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0525\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 7s 412ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0191 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0455\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0213 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0651\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 7s 406ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0185 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0454\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 7s 419ms/step - loss: 9.8557e-04 - mean_squared_error: 9.8557e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0513\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 7s 411ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0193 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0557\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 7s 423ms/step - loss: 9.4415e-04 - mean_squared_error: 9.4415e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0551\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 6s 392ms/step - loss: 7.6467e-04 - mean_squared_error: 7.6467e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0487\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 9.1344e-04 - mean_squared_error: 9.1344e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0581\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 6s 390ms/step - loss: 7.9767e-04 - mean_squared_error: 7.9767e-04 - mean_absolute_error: 0.0176 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0573\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0193 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0703\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 8.6294e-04 - mean_squared_error: 8.6294e-04 - mean_absolute_error: 0.0177 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0467\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 7s 416ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0200 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0645\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 8.6982e-04 - mean_squared_error: 8.6982e-04 - mean_absolute_error: 0.0165 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0614\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 6s 399ms/step - loss: 9.4370e-04 - mean_squared_error: 9.4370e-04 - mean_absolute_error: 0.0180 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0474\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0219 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0579\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 7.9575e-04 - mean_squared_error: 7.9575e-04 - mean_absolute_error: 0.0177 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0439\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0213 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0808\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 6s 398ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0212 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0457\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2645<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d7e1c0108d3b4acc9ec861d7d47b8436",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.76MB of 2.76MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144508-z2nbg0dt/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_144508-z2nbg0dt/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00121</td></tr><tr><td>mean_squared_error</td><td>0.00121</td></tr><tr><td>mean_absolute_error</td><td>0.02063</td></tr><tr><td>val_loss</td><td>0.00435</td></tr><tr><td>val_mean_squared_error</td><td>0.00435</td></tr><tr><td>val_mean_absolute_error</td><td>0.0457</td></tr><tr><td>_runtime</td><td>343</td></tr><tr><td>_timestamp</td><td>1626792651</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00404</td></tr><tr><td>best_epoch</td><td>47</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▇▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▂▁▂▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">confused-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z2nbg0dt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z2nbg0dt</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 8b1kue7l with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dandy-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8b1kue7l\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8b1kue7l</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145101-8b1kue7l</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 15s 724ms/step - loss: 0.9966 - mean_squared_error: 0.9966 - mean_absolute_error: 0.4289 - val_loss: 0.2503 - val_mean_squared_error: 0.2503 - val_mean_absolute_error: 0.4637\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 3s 399ms/step - loss: 0.0522 - mean_squared_error: 0.0522 - mean_absolute_error: 0.1652 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0719\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 3s 396ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0538 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0701\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 3s 393ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0497 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1237\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 3s 412ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0574 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0896\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 3s 446ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0502 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0806\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 3s 408ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0395 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0697\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 4s 445ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0556 - val_loss: 0.0212 - val_mean_squared_error: 0.0212 - val_mean_absolute_error: 0.1201\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 3s 430ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0676 - val_loss: 0.0299 - val_mean_squared_error: 0.0299 - val_mean_absolute_error: 0.1506\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 4s 442ms/step - loss: 0.0128 - mean_squared_error: 0.0128 - mean_absolute_error: 0.0785 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0900\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 3s 411ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0670 - val_loss: 0.0291 - val_mean_squared_error: 0.0291 - val_mean_absolute_error: 0.1530\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 3s 400ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0697 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1087\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2850<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "96980041bb1b493e85ccf3584511efaf",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.05MB of 2.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145101-8b1kue7l/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145101-8b1kue7l/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>11</td></tr><tr><td>loss</td><td>0.01005</td></tr><tr><td>mean_squared_error</td><td>0.01005</td></tr><tr><td>mean_absolute_error</td><td>0.06962</td></tr><tr><td>val_loss</td><td>0.01581</td></tr><tr><td>val_mean_squared_error</td><td>0.01581</td></tr><tr><td>val_mean_absolute_error</td><td>0.10869</td></tr><tr><td>_runtime</td><td>57</td></tr><tr><td>_timestamp</td><td>1626792718</td></tr><tr><td>_step</td><td>11</td></tr><tr><td>best_val_loss</td><td>0.00839</td></tr><tr><td>best_epoch</td><td>1</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▂▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▂▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▁▂▁▁▁▂▂▁▂▂</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▅▅▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▅▅▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dandy-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8b1kue7l\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/8b1kue7l</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: qlb4kv2w with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">classic-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qlb4kv2w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qlb4kv2w</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145208-qlb4kv2w</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 23s 474ms/step - loss: 0.0835 - mean_squared_error: 0.0835 - mean_absolute_error: 0.1909 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0998\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 13s 404ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0502 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0708\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 13s 420ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0397 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0662\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 13s 405ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0305 - val_loss: 0.0250 - val_mean_squared_error: 0.0250 - val_mean_absolute_error: 0.1427\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 13s 418ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0357 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1332\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 13s 406ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0315 - val_loss: 0.0272 - val_mean_squared_error: 0.0272 - val_mean_absolute_error: 0.1489\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 13s 408ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0329 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.1045\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 13s 421ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0314 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0893\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 12s 397ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0262 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1151\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 13s 415ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0242 - val_loss: 0.0222 - val_mean_squared_error: 0.0222 - val_mean_absolute_error: 0.1338\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 12s 404ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0255 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.1013\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 13s 409ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0262 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1272\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 13s 416ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0288 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.1028\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2941<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "dbfb74bed1224c3f98130d68ffa808d6",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.79MB of 2.79MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145208-qlb4kv2w/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145208-qlb4kv2w/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>12</td></tr><tr><td>loss</td><td>0.00238</td></tr><tr><td>mean_squared_error</td><td>0.00238</td></tr><tr><td>mean_absolute_error</td><td>0.02968</td></tr><tr><td>val_loss</td><td>0.01373</td></tr><tr><td>val_mean_squared_error</td><td>0.01373</td></tr><tr><td>val_mean_absolute_error</td><td>0.10281</td></tr><tr><td>_runtime</td><td>181</td></tr><tr><td>_timestamp</td><td>1626792909</td></tr><tr><td>_step</td><td>12</td></tr><tr><td>best_val_loss</td><td>0.00655</td></tr><tr><td>best_epoch</td><td>2</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▁▁▇▆█▄▂▄▆▃▆▃</td></tr><tr><td>val_mean_squared_error</td><td>▃▁▁▇▆█▄▂▄▆▃▆▃</td></tr><tr><td>val_mean_absolute_error</td><td>▄▁▁▇▇█▄▃▅▇▄▆▄</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">classic-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qlb4kv2w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/qlb4kv2w</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 2pmec9g3 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">super-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2pmec9g3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2pmec9g3</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145551-2pmec9g3</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 12s 86ms/step - loss: 0.0330 - mean_squared_error: 0.0330 - mean_absolute_error: 0.1128 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0571\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0357 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0558\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0259 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0463\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0245 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0520\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0250 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0526\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0267 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0431\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0281 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0425\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0244 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0433\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0253 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0230 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0434\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0511\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0233 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0458\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0227 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0411\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0265 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0568\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0230 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0397\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0229 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0949\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0275 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0404\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0220 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0419\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0232 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0386\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0222 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0464\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0232 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0393\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.6174e-04 - mean_squared_error: 9.6174e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0405\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0227 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0389\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0256 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0533\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 9.9030e-04 - mean_squared_error: 9.9030e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0403\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0218 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0568\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0535\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.6404e-04 - mean_squared_error: 9.6404e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0358\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0237 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0367\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.2376e-04 - mean_squared_error: 8.2376e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0390\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.3975e-04 - mean_squared_error: 9.3975e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0397\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0364\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.8430e-04 - mean_squared_error: 9.8430e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0360\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.8730e-04 - mean_squared_error: 8.8730e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0352\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.5869e-04 - mean_squared_error: 8.5869e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0414\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0238 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0596\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0244 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0412\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0222 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0568\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0215 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0473\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.7984e-04 - mean_squared_error: 8.7984e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0350\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.5363e-04 - mean_squared_error: 8.5363e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0368\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.8813e-04 - mean_squared_error: 8.8813e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0420\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0216 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0488\n",
            "Epoch 45/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 9.9157e-04 - mean_squared_error: 9.9157e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0371\n",
            "Epoch 46/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 9.3621e-04 - mean_squared_error: 9.3621e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0369\n",
            "Epoch 47/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.6937e-04 - mean_squared_error: 7.6937e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0366\n",
            "Epoch 48/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 7.3914e-04 - mean_squared_error: 7.3914e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0344\n",
            "Epoch 49/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.5175e-04 - mean_squared_error: 9.5175e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 50/100\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 8.2926e-04 - mean_squared_error: 8.2926e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0497\n",
            "Epoch 51/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 7.6319e-04 - mean_squared_error: 7.6319e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0343\n",
            "Epoch 52/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0327\n",
            "Epoch 53/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.3213e-04 - mean_squared_error: 8.3213e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0325\n",
            "Epoch 54/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 7.2066e-04 - mean_squared_error: 7.2066e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0355\n",
            "Epoch 55/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.9912e-04 - mean_squared_error: 7.9912e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0425\n",
            "Epoch 56/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.7259e-04 - mean_squared_error: 9.7259e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0354\n",
            "Epoch 57/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.5620e-04 - mean_squared_error: 8.5620e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0634\n",
            "Epoch 58/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0360\n",
            "Epoch 59/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.5869e-04 - mean_squared_error: 9.5869e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0338\n",
            "Epoch 60/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.2527e-04 - mean_squared_error: 8.2527e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0323\n",
            "Epoch 61/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.1870e-04 - mean_squared_error: 7.1870e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0373\n",
            "Epoch 62/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.2527e-04 - mean_squared_error: 9.2527e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0337\n",
            "Epoch 63/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.8156e-04 - mean_squared_error: 7.8156e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0456\n",
            "Epoch 64/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.3866e-04 - mean_squared_error: 8.3866e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0342\n",
            "Epoch 65/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 8.4804e-04 - mean_squared_error: 8.4804e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0391\n",
            "Epoch 66/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.2930e-04 - mean_squared_error: 7.2930e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0319\n",
            "Epoch 67/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.1589e-04 - mean_squared_error: 7.1589e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0372\n",
            "Epoch 68/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.9455e-04 - mean_squared_error: 8.9455e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0322\n",
            "Epoch 69/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 9.6581e-04 - mean_squared_error: 9.6581e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0350\n",
            "Epoch 70/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.7373e-04 - mean_squared_error: 8.7373e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0384\n",
            "Epoch 71/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 9.3422e-04 - mean_squared_error: 9.3422e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0341\n",
            "Epoch 72/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 6.4372e-04 - mean_squared_error: 6.4372e-04 - mean_absolute_error: 0.0169 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0329\n",
            "Epoch 73/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0355\n",
            "Epoch 74/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 9.6643e-04 - mean_squared_error: 9.6643e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0333\n",
            "Epoch 75/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 6.7770e-04 - mean_squared_error: 6.7770e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0404\n",
            "Epoch 76/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 8.4016e-04 - mean_squared_error: 8.4016e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0313\n",
            "Epoch 77/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 6.0785e-04 - mean_squared_error: 6.0785e-04 - mean_absolute_error: 0.0169 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0354\n",
            "Epoch 78/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 7.4728e-04 - mean_squared_error: 7.4728e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0322\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3035<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b3611eea879e4be6b16921da63b449c1",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.82MB of 2.82MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145551-2pmec9g3/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145551-2pmec9g3/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>77</td></tr><tr><td>loss</td><td>0.00078</td></tr><tr><td>mean_squared_error</td><td>0.00078</td></tr><tr><td>mean_absolute_error</td><td>0.01871</td></tr><tr><td>val_loss</td><td>0.00213</td></tr><tr><td>val_mean_squared_error</td><td>0.00213</td></tr><tr><td>val_mean_absolute_error</td><td>0.03216</td></tr><tr><td>_runtime</td><td>67</td></tr><tr><td>_timestamp</td><td>1626793018</td></tr><tr><td>_step</td><td>77</td></tr><tr><td>best_val_loss</td><td>0.00204</td></tr><tr><td>best_epoch</td><td>67</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▁▁▂▁▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄▃▃▂▂▂▂▃█▂▂▂▂▃▁▂▁▁▃▃▂▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▄▃▃▂▂▂▂▃█▂▂▂▂▃▁▂▁▁▃▃▂▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▄▄▃▂▂▂▃▄█▂▃▂▃▄▂▂▂▁▄▄▃▂▃▂▁▃▁▁▁▂▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">super-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2pmec9g3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/2pmec9g3</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: eabzte4b with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">skilled-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/eabzte4b\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/eabzte4b</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145735-eabzte4b</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 15s 722ms/step - loss: 0.1269 - mean_squared_error: 0.1269 - mean_absolute_error: 0.2200 - val_loss: 0.3312 - val_mean_squared_error: 0.3312 - val_mean_absolute_error: 0.5344\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 3s 426ms/step - loss: 0.0822 - mean_squared_error: 0.0822 - mean_absolute_error: 0.1896 - val_loss: 0.1036 - val_mean_squared_error: 0.1036 - val_mean_absolute_error: 0.3006\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 3s 416ms/step - loss: 0.0419 - mean_squared_error: 0.0419 - mean_absolute_error: 0.1849 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1241\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 3s 427ms/step - loss: 0.0233 - mean_squared_error: 0.0233 - mean_absolute_error: 0.1368 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1358\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 3s 406ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0705 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0674\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 3s 397ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0470 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0680\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 3s 404ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0431 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0502\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 3s 415ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0433 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0524\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 3s 422ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0364 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0608\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 3s 410ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0294 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0521\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 3s 407ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0293 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0526\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 3s 422ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0260 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0589\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 3s 409ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0270 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0590\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 3s 420ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0274 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0772\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 3s 430ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0255 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0613\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 3s 397ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0242 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0672\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 3s 396ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0269 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0792\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3324<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "0638f3743c9b46db96ed0995fbcf4f93",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.83MB of 2.83MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145735-eabzte4b/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145735-eabzte4b/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>16</td></tr><tr><td>loss</td><td>0.0021</td></tr><tr><td>mean_squared_error</td><td>0.0021</td></tr><tr><td>mean_absolute_error</td><td>0.02617</td></tr><tr><td>val_loss</td><td>0.00865</td></tr><tr><td>val_mean_squared_error</td><td>0.00865</td></tr><tr><td>val_mean_absolute_error</td><td>0.07922</td></tr><tr><td>_runtime</td><td>74</td></tr><tr><td>_timestamp</td><td>1626793129</td></tr><tr><td>_step</td><td>16</td></tr><tr><td>best_val_loss</td><td>0.00456</td></tr><tr><td>best_epoch</td><td>6</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▅▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▇▇▅▂▂▂▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">skilled-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/eabzte4b\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/eabzte4b</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: sn2mgti4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">avid-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sn2mgti4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sn2mgti4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_145858-sn2mgti4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 18s 541ms/step - loss: 0.3613 - mean_squared_error: 0.3613 - mean_absolute_error: 0.2849 - val_loss: 0.0639 - val_mean_squared_error: 0.0639 - val_mean_absolute_error: 0.2321\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 7s 428ms/step - loss: 0.0400 - mean_squared_error: 0.0400 - mean_absolute_error: 0.1226 - val_loss: 0.0245 - val_mean_squared_error: 0.0245 - val_mean_absolute_error: 0.1393\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0563 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0648\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 6s 399ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0568 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0732\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 6s 407ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0676 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0841\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 6s 391ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0652 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1193\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 7s 423ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0667 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0975\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 6s 406ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0723 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0952\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0750 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0670\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0567 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1034\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0538 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.1118\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 7s 413ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0639 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0934\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 6s 399ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0553 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0663\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0631 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1016\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 6s 397ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0625 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1078\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0477 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 7s 406ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0504 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0542\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 7s 421ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0416 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0714\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0454 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0487\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 6s 398ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0356 - val_loss: 0.0465 - val_mean_squared_error: 0.0465 - val_mean_absolute_error: 0.2006\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 6s 398ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0407 - val_loss: 0.0237 - val_mean_squared_error: 0.0237 - val_mean_absolute_error: 0.1361\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 7s 419ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0455 - val_loss: 0.0557 - val_mean_squared_error: 0.0557 - val_mean_absolute_error: 0.2188\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 6s 394ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0513 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0582\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 6s 388ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0421 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0692\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 6s 394ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0432 - val_loss: 0.0449 - val_mean_squared_error: 0.0449 - val_mean_absolute_error: 0.1970\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0475 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.1057\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 7s 419ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0417 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0619\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 7s 408ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0328 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0529\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 7s 418ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0339 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0582\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3432<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "326d9c56000b447e8ce7d9aad31cc6fc",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.13MB of 2.13MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145858-sn2mgti4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_145858-sn2mgti4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>28</td></tr><tr><td>loss</td><td>0.0028</td></tr><tr><td>mean_squared_error</td><td>0.0028</td></tr><tr><td>mean_absolute_error</td><td>0.03591</td></tr><tr><td>val_loss</td><td>0.00608</td></tr><tr><td>val_mean_squared_error</td><td>0.00608</td></tr><tr><td>val_mean_absolute_error</td><td>0.05818</td></tr><tr><td>_runtime</td><td>205</td></tr><tr><td>_timestamp</td><td>1626793343</td></tr><tr><td>_step</td><td>28</td></tr><tr><td>best_val_loss</td><td>0.00439</td></tr><tr><td>best_epoch</td><td>18</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▁▂▂▃▂▂▁▂▂▂▁▂▂▁▁▁▁▆▃▇▁▁▆▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▁▂▂▃▂▂▁▂▂▂▁▂▂▁▁▁▁▆▃▇▁▁▆▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▂▂▂▄▃▃▂▃▃▃▂▃▃▁▁▂▁▇▄▇▁▂▇▃▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">avid-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sn2mgti4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/sn2mgti4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: onp2de9s with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dainty-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/onp2de9s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/onp2de9s</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150242-onp2de9s</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 17s 547ms/step - loss: 0.0629 - mean_squared_error: 0.0629 - mean_absolute_error: 0.1550 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0583\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 7s 429ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0389 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.1037\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0523 - val_loss: 0.0493 - val_mean_squared_error: 0.0493 - val_mean_absolute_error: 0.2100\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 7s 426ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0568 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0508\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 6s 382ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0428 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1313\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0445 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.1059\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 6s 373ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0474 - val_loss: 0.0668 - val_mean_squared_error: 0.0668 - val_mean_absolute_error: 0.2387\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 6s 395ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0472 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0745\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0387 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0442\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0406 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0452\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 6s 395ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0393 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0625\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0309 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1270\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 7s 425ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0437 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0494\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 7s 413ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0273 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.1087\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 7s 427ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0323 - val_loss: 0.0366 - val_mean_squared_error: 0.0366 - val_mean_absolute_error: 0.1764\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 7s 413ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0376 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0825\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0297 - val_loss: 0.0465 - val_mean_squared_error: 0.0465 - val_mean_absolute_error: 0.2035\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 6s 403ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0431 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0532\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0334 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0898\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3574<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "8ef403df63ae48df86624c84c80d8edd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.15MB of 2.15MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150242-onp2de9s/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150242-onp2de9s/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>18</td></tr><tr><td>loss</td><td>0.00273</td></tr><tr><td>mean_squared_error</td><td>0.00273</td></tr><tr><td>mean_absolute_error</td><td>0.03322</td></tr><tr><td>val_loss</td><td>0.01054</td></tr><tr><td>val_mean_squared_error</td><td>0.01054</td></tr><tr><td>val_mean_absolute_error</td><td>0.0898</td></tr><tr><td>_runtime</td><td>140</td></tr><tr><td>_timestamp</td><td>1626793502</td></tr><tr><td>_step</td><td>18</td></tr><tr><td>best_val_loss</td><td>0.00389</td></tr><tr><td>best_epoch</td><td>8</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>loss</td><td>█▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▁▂▁▁▁▂▁▂▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▁▂▆▁▃▂█▁▁▁▁▃▁▂▅▂▆▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▁▂▆▁▃▂█▁▁▁▁▃▁▂▅▂▆▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▂▃▇▁▄▃█▂▁▁▂▄▁▃▆▂▇▁▃</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dainty-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/onp2de9s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/onp2de9s</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ir0uu5pt with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fiery-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ir0uu5pt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ir0uu5pt</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150527-ir0uu5pt</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "16/16 [==============================] - 18s 543ms/step - loss: 0.0922 - mean_squared_error: 0.0922 - mean_absolute_error: 0.1968 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1262\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 6s 402ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0949 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1168\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 6s 404ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0506 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0513\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 7s 432ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0380 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0526\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 6s 398ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0306 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0707\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 7s 409ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0291 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0510\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 6s 385ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0304 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0590\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0285 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0701\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 6s 394ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0287 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0522\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 6s 381ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0240 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0725\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 6s 378ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0255 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0971\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 6s 375ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0281 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0542\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 7s 412ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0224 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0800\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 7s 408ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0258 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0521\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 7s 430ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0244 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0625\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0228 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0765\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 6s 405ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0231 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0932\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0229 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0783\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 7s 416ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0210 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0527\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3686<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "5c42ab4396d64b88b07f8c1d128ed982",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.89MB of 2.89MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150527-ir0uu5pt/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150527-ir0uu5pt/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>18</td></tr><tr><td>loss</td><td>0.00141</td></tr><tr><td>mean_squared_error</td><td>0.00141</td></tr><tr><td>mean_absolute_error</td><td>0.02169</td></tr><tr><td>val_loss</td><td>0.0048</td></tr><tr><td>val_mean_squared_error</td><td>0.0048</td></tr><tr><td>val_mean_absolute_error</td><td>0.05274</td></tr><tr><td>_runtime</td><td>140</td></tr><tr><td>_timestamp</td><td>1626793667</td></tr><tr><td>_step</td><td>18</td></tr><tr><td>best_val_loss</td><td>0.00477</td></tr><tr><td>best_epoch</td><td>8</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▁▁▂▁▁▂▁▂▅▁▃▁▂▃▄▃▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▁▁▂▁▁▂▁▂▅▁▃▁▂▃▄▃▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▁▁▃▁▂▃▁▃▅▁▄▁▂▃▅▄▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">fiery-sweep-21</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ir0uu5pt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ir0uu5pt</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: tvabkomk with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">azure-sweep-22</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/tvabkomk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/tvabkomk</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_150814-tvabkomk</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 18s 549ms/step - loss: 0.0573 - mean_squared_error: 0.0573 - mean_absolute_error: 0.1669 - val_loss: 0.0663 - val_mean_squared_error: 0.0663 - val_mean_absolute_error: 0.2383\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 6s 401ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0602 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0516\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 7s 439ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0388 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0819\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 7s 422ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0394 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0745\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0350 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0498\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0305 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0640\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0292 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0875\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 7s 419ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0356 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0498\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0308 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0481\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 6s 396ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0275 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0494\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 7s 422ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0254 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0492\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 7s 405ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0255 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0719\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 7s 428ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0304 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0583\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 7s 420ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0494\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 6s 381ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0228 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0508\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 6s 391ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0233 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0562\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 6s 400ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0212 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0532\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 7s 410ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0234 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0479\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 7s 414ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0224 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0625\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3798<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3f7d759fbeb14287a275ddda82c69480",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.90MB of 2.90MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150814-tvabkomk/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_150814-tvabkomk/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>18</td></tr><tr><td>loss</td><td>0.00132</td></tr><tr><td>mean_squared_error</td><td>0.00132</td></tr><tr><td>mean_absolute_error</td><td>0.02282</td></tr><tr><td>val_loss</td><td>0.00584</td></tr><tr><td>val_mean_squared_error</td><td>0.00584</td></tr><tr><td>val_mean_absolute_error</td><td>0.06252</td></tr><tr><td>_runtime</td><td>142</td></tr><tr><td>_timestamp</td><td>1626793836</td></tr><tr><td>_step</td><td>18</td></tr><tr><td>best_val_loss</td><td>0.00444</td></tr><tr><td>best_epoch</td><td>8</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▂▂▁▂▂▁▁▁▁▂▁▁▁▁▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">azure-sweep-22</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/tvabkomk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/tvabkomk</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: j2hyll5z with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">smart-sweep-23</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/j2hyll5z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/j2hyll5z</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_151100-j2hyll5z</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 24s 485ms/step - loss: 0.0624 - mean_squared_error: 0.0624 - mean_absolute_error: 0.1651 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1251\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 13s 418ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0516 - val_loss: 0.0423 - val_mean_squared_error: 0.0423 - val_mean_absolute_error: 0.1876\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 12s 388ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0491 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.1028\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 13s 421ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0434 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0512\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 13s 419ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0436 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0439\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 13s 410ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0401 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0468\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 12s 402ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0361 - val_loss: 0.0271 - val_mean_squared_error: 0.0271 - val_mean_absolute_error: 0.1501\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 13s 419ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0316 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0410\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0264 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0811\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 12s 383ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0320 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0662\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0628\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 13s 413ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0312 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0889\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 12s 401ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0253 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0543\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 13s 414ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0300 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0576\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0251 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0415\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 8.5228e-04 - mean_squared_error: 8.5228e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0268 - val_mean_squared_error: 0.0268 - val_mean_absolute_error: 0.1511\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 12s 403ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0343 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0582\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 13s 411ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0229 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0415\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3910<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3653e2890f6249d797074e24351f3a27",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.92MB of 2.92MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_151100-j2hyll5z/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_151100-j2hyll5z/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>17</td></tr><tr><td>loss</td><td>0.00158</td></tr><tr><td>mean_squared_error</td><td>0.00158</td></tr><tr><td>mean_absolute_error</td><td>0.02646</td></tr><tr><td>val_loss</td><td>0.00355</td></tr><tr><td>val_mean_squared_error</td><td>0.00355</td></tr><tr><td>val_mean_absolute_error</td><td>0.04148</td></tr><tr><td>_runtime</td><td>246</td></tr><tr><td>_timestamp</td><td>1626794106</td></tr><tr><td>_step</td><td>17</td></tr><tr><td>best_val_loss</td><td>0.00347</td></tr><tr><td>best_epoch</td><td>7</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▃▄▄▅▅▆▆▆▇▇██</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▃▃▂▂▂▂▁▂▁▁▁▁▂▁</td></tr><tr><td>val_loss</td><td>▄█▃▁▁▁▅▁▂▁▂▂▁▁▁▅▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▄█▃▁▁▁▅▁▂▁▂▂▁▁▁▅▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅█▄▁▁▁▆▁▃▂▂▃▂▂▁▆▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▅▅▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▅▅▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▃▄▄▅▅▆▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">smart-sweep-23</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/j2hyll5z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/j2hyll5z</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: z6dgszo0 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">vibrant-sweep-24</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z6dgszo0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z6dgszo0</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_151516-z6dgszo0</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 12s 85ms/step - loss: 0.0422 - mean_squared_error: 0.0422 - mean_absolute_error: 0.1133 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0515\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0290 - val_loss: 0.0238 - val_mean_squared_error: 0.0238 - val_mean_absolute_error: 0.1385\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0255 - val_loss: 0.0533 - val_mean_squared_error: 0.0533 - val_mean_absolute_error: 0.2163\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0368 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0447\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0231 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1211\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0266 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0572\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0213 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0440\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0225 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0684\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0203 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0600\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0226 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0684\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0219 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0459\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.1224e-04 - mean_squared_error: 8.1224e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0389\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0252 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0410\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0209 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0797\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0210 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0657\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0262 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0477\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.6190e-04 - mean_squared_error: 9.6190e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0378\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0208 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0458\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 8.2875e-04 - mean_squared_error: 8.2875e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0442\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.2941e-04 - mean_squared_error: 9.2941e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0423\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0399\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 7.4915e-04 - mean_squared_error: 7.4915e-04 - mean_absolute_error: 0.0182 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0403\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0221 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0397\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 8.2177e-04 - mean_squared_error: 8.2177e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0666\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0422\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0243 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0457\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 8.9058e-04 - mean_squared_error: 8.9058e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0502\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.5296e-04 - mean_squared_error: 9.5296e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0824\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0354\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.0643e-04 - mean_squared_error: 9.0643e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.7077e-04 - mean_squared_error: 9.7077e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 5.6626e-04 - mean_squared_error: 5.6626e-04 - mean_absolute_error: 0.0172 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0402\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 8.3367e-04 - mean_squared_error: 8.3367e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0354\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 7.5900e-04 - mean_squared_error: 7.5900e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0327\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 8.3291e-04 - mean_squared_error: 8.3291e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0758\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 7.5277e-04 - mean_squared_error: 7.5277e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0323\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 9.6220e-04 - mean_squared_error: 9.6220e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0323\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 8.3565e-04 - mean_squared_error: 8.3565e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0339\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 8.4791e-04 - mean_squared_error: 8.4791e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0568\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0339\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 7.1141e-04 - mean_squared_error: 7.1141e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0353\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 6.3123e-04 - mean_squared_error: 6.3123e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0359\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 8.7225e-04 - mean_squared_error: 8.7225e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0440\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 7.4059e-04 - mean_squared_error: 7.4059e-04 - mean_absolute_error: 0.0180 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0462\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 7.1922e-04 - mean_squared_error: 7.1922e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.1113\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 1s 22ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0201 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0465\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4021<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "564004b112bf4a72a75e28baf0a01633",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.94MB of 2.94MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_151516-z6dgszo0/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_151516-z6dgszo0/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>45</td></tr><tr><td>loss</td><td>0.00111</td></tr><tr><td>mean_squared_error</td><td>0.00111</td></tr><tr><td>mean_absolute_error</td><td>0.02053</td></tr><tr><td>val_loss</td><td>0.00316</td></tr><tr><td>val_mean_squared_error</td><td>0.00316</td></tr><tr><td>val_mean_absolute_error</td><td>0.04651</td></tr><tr><td>_runtime</td><td>54</td></tr><tr><td>_timestamp</td><td>1626794170</td></tr><tr><td>_step</td><td>45</td></tr><tr><td>best_val_loss</td><td>0.00216</td></tr><tr><td>best_epoch</td><td>35</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>loss</td><td>█▂▁▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▃▂▂▁▁▂▂▁▂▂▁▁▂▂▂▂▁▁▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▁▄█▁▃▁▁▁▂▁▁▁▂▂▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▃</td></tr><tr><td>val_mean_squared_error</td><td>▁▄█▁▃▁▁▁▂▁▁▁▂▂▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▃</td></tr><tr><td>val_mean_absolute_error</td><td>▂▅█▁▄▂▁▂▂▂▁▁▃▂▁▂▁▁▁▁▂▁▂▂▃▁▁▁▁▁▃▁▁▂▁▁▁▁▂▄</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">vibrant-sweep-24</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z6dgszo0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/z6dgszo0</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: lave260u with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">earthy-sweep-25</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/lave260u\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/lave260u</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_151626-lave260u</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 24s 457ms/step - loss: 0.1007 - mean_squared_error: 0.1007 - mean_absolute_error: 0.2035 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0815\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 12s 399ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0452 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0675\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 12s 395ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0387 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1163\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 12s 400ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0310 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0714\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 12s 384ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0312 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0929\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 12s 397ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0300 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0505\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 13s 431ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0281 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0739\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 13s 433ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0287 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0736\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 12s 398ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0281 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0648\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 12s 402ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0292 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0976\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 13s 408ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0249 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.1072\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 13s 416ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0290 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0750\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 12s 386ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0245 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0860\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0258 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0621\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 13s 418ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0279 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0729\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 13s 426ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0266 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0729\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4214<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4ddadca343454df6ba2f275dd784ff6a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.96MB of 2.96MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_151626-lave260u/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_151626-lave260u/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>15</td></tr><tr><td>loss</td><td>0.00186</td></tr><tr><td>mean_squared_error</td><td>0.00186</td></tr><tr><td>mean_absolute_error</td><td>0.02693</td></tr><tr><td>val_loss</td><td>0.00768</td></tr><tr><td>val_mean_squared_error</td><td>0.00768</td></tr><tr><td>val_mean_absolute_error</td><td>0.07291</td></tr><tr><td>_runtime</td><td>219</td></tr><tr><td>_timestamp</td><td>1626794405</td></tr><tr><td>_step</td><td>15</td></tr><tr><td>best_val_loss</td><td>0.00532</td></tr><tr><td>best_epoch</td><td>5</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▂█▂▅▁▂▂▂▅▇▃▄▁▂▂</td></tr><tr><td>val_mean_squared_error</td><td>▃▂█▂▅▁▂▂▂▅▇▃▄▁▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▃█▃▆▁▃▃▃▆▇▄▅▂▃▃</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">earthy-sweep-25</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/lave260u\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/lave260u</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ncrly0c4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">copper-sweep-26</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ncrly0c4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ncrly0c4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_152111-ncrly0c4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 24s 483ms/step - loss: 0.0680 - mean_squared_error: 0.0680 - mean_absolute_error: 0.1728 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1514\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 13s 413ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0504 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0751\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 13s 416ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0343 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1300\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 13s 414ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0378 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0980\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 13s 409ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0295 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0607\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 13s 412ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0315 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0772\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 13s 418ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0304 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0992\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 13s 428ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0293 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0784\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0285 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1125\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 13s 413ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0301 - val_loss: 0.0281 - val_mean_squared_error: 0.0281 - val_mean_absolute_error: 0.1513\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0269 - val_loss: 0.0281 - val_mean_squared_error: 0.0281 - val_mean_absolute_error: 0.1514\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 12s 391ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0279 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.1057\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 13s 408ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0284 - val_loss: 0.0253 - val_mean_squared_error: 0.0253 - val_mean_absolute_error: 0.1425\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 13s 423ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0289 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1175\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 12s 402ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0231 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1396\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4319<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e0a0e8ee55ff4be28c343333093318a5",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.97MB of 2.97MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152111-ncrly0c4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152111-ncrly0c4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>14</td></tr><tr><td>loss</td><td>0.00134</td></tr><tr><td>mean_squared_error</td><td>0.00134</td></tr><tr><td>mean_absolute_error</td><td>0.02263</td></tr><tr><td>val_loss</td><td>0.02422</td></tr><tr><td>val_mean_squared_error</td><td>0.02422</td></tr><tr><td>val_mean_absolute_error</td><td>0.13964</td></tr><tr><td>_runtime</td><td>209</td></tr><tr><td>_timestamp</td><td>1626794680</td></tr><tr><td>_step</td><td>14</td></tr><tr><td>best_val_loss</td><td>0.0058</td></tr><tr><td>best_epoch</td><td>4</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▁▁▂▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▆▃▁▂▃▂▄██▄▇▅▇</td></tr><tr><td>val_mean_squared_error</td><td>█▂▆▃▁▂▃▂▄██▄▇▅▇</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▆▄▁▂▄▂▅██▄▇▅▇</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▄▅▅▆▆▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▄▅▅▆▆▆▇▇█</td></tr><tr><td>_step</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">copper-sweep-26</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ncrly0c4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ncrly0c4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ay0eglye with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">likely-sweep-27</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ay0eglye\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ay0eglye</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_152458-ay0eglye</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 12s 112ms/step - loss: 0.0373 - mean_squared_error: 0.0373 - mean_absolute_error: 0.1061 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0874\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 26ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0283 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0970\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0342 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0783\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0381 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0555\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0280 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0504\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0313 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0501\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0259 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0800\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0239 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0430\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0249 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0691\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 26ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0284 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0426\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0282 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0444\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0460\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0532\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0436\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0239 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0447\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0308 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0412\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0272 - val_loss: 0.0272 - val_mean_squared_error: 0.0272 - val_mean_absolute_error: 0.1511\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 26ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0319 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0467\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0252 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0386\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0381\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0282 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0377\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0252 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0494\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0265 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0696\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0311 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0372\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0288 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0579\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0769\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0256 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0939\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0270 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0438\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0266 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0371\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0366\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0264 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0361\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 9.6149e-04 - mean_squared_error: 9.6149e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0359\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0282 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0353\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 26ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0224 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0576\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0252 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0476\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 9.7368e-04 - mean_squared_error: 9.7368e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0655\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0250 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 1s 26ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0473\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 1s 26ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0319 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 1s 24ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0257 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0351\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0242 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 1s 25ms/step - loss: 9.8070e-04 - mean_squared_error: 9.8070e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0348\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 1s 27ms/step - loss: 9.6505e-04 - mean_squared_error: 9.6505e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0382\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4455<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e7fe84d26e624f05aa361ecdf05c7c3b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.00MB of 3.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152458-ay0eglye/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152458-ay0eglye/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>43</td></tr><tr><td>loss</td><td>0.00101</td></tr><tr><td>mean_squared_error</td><td>0.00101</td></tr><tr><td>mean_absolute_error</td><td>0.0217</td></tr><tr><td>val_loss</td><td>0.00293</td></tr><tr><td>val_mean_squared_error</td><td>0.00293</td></tr><tr><td>val_mean_absolute_error</td><td>0.03818</td></tr><tr><td>_runtime</td><td>54</td></tr><tr><td>_timestamp</td><td>1626794752</td></tr><tr><td>_step</td><td>43</td></tr><tr><td>best_val_loss</td><td>0.00244</td></tr><tr><td>best_epoch</td><td>33</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▃▂▃▂▂▂▂▁▂▂▂▂▂▂▂▂▂▁▁▂▂▂▂▂▂▁▂▂▁▁▁▁▁▂▂▁▁</td></tr><tr><td>val_loss</td><td>▃▄▃▂▂▂▃▁▂▁▁▂▁▁▁█▁▁▁▁▁▂▁▂▂▃▁▁▁▁▁▂▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▃▄▃▂▂▂▃▁▂▁▁▂▁▁▁█▁▁▁▁▁▂▁▂▂▃▁▁▁▁▁▂▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▄▅▄▂▂▂▄▁▃▁▂▂▂▂▁█▂▁▁▁▂▃▁▂▄▅▂▁▁▁▁▂▂▃▂▂▂▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">likely-sweep-27</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ay0eglye\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/ay0eglye</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 40c3z6rh with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">jumping-sweep-28</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/40c3z6rh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/40c3z6rh</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_152606-40c3z6rh</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 10s 301ms/step - loss: 0.0717 - mean_squared_error: 0.0717 - mean_absolute_error: 0.1755 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0486\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0602 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0994\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0475 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0813\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0455 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0614\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0391 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0475\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0353 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0433\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0345 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0398\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0396\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0308 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0568\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0329 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0560\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0331 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0391\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0291 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0390\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0307 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0386\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0527\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0285 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0419\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0301 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0786\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0517\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0283 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0383\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0262 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0432\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0264 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0602\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0279 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0389\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4656<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "0b775115630646859bf500e1f041b0f0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.01MB of 3.01MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152606-40c3z6rh/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152606-40c3z6rh/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>20</td></tr><tr><td>loss</td><td>0.00166</td></tr><tr><td>mean_squared_error</td><td>0.00166</td></tr><tr><td>mean_absolute_error</td><td>0.02708</td></tr><tr><td>val_loss</td><td>0.0031</td></tr><tr><td>val_mean_squared_error</td><td>0.0031</td></tr><tr><td>val_mean_absolute_error</td><td>0.03886</td></tr><tr><td>_runtime</td><td>21</td></tr><tr><td>_timestamp</td><td>1626794787</td></tr><tr><td>_step</td><td>20</td></tr><tr><td>best_val_loss</td><td>0.00297</td></tr><tr><td>best_epoch</td><td>10</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂█▅▃▂▂▁▁▂▂▁▁▁▂▁▅▂▁▁▃▁</td></tr><tr><td>val_mean_squared_error</td><td>▂█▅▃▂▂▁▁▂▂▁▁▁▂▁▅▂▁▁▃▁</td></tr><tr><td>val_mean_absolute_error</td><td>▂█▆▄▂▂▁▁▃▃▁▁▁▃▁▆▃▁▂▄▁</td></tr><tr><td>_runtime</td><td>▁▁▁▃▃▃▃▅▅▅▅▆▆▆▆▆█████</td></tr><tr><td>_timestamp</td><td>▁▁▁▃▃▃▃▅▅▅▅▆▆▆▆▆█████</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">jumping-sweep-28</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/40c3z6rh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/40c3z6rh</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: hulmkdbt with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fresh-sweep-29</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hulmkdbt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hulmkdbt</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_152640-hulmkdbt</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 24s 473ms/step - loss: 0.0487 - mean_squared_error: 0.0487 - mean_absolute_error: 0.1396 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0835\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 12s 399ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0591 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0902\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 13s 424ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0468 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0468\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 13s 417ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0459 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0718\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 13s 425ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0374 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0470\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 13s 421ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0353 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0457\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 12s 397ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0340 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0417\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 13s 408ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0261 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0484\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 13s 411ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0350 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0769\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 13s 413ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0293 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0500\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 13s 423ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0251 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0479\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 13s 406ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0300 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0435\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0357 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0503\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 13s 407ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0250 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0537\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 13s 418ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0237 - val_loss: 0.0815 - val_mean_squared_error: 0.0815 - val_mean_absolute_error: 0.2669\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 13s 432ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0400 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0620\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 13s 426ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0293 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0486\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4780<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c9cc554695764f7da013711efe44cedb",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.03MB of 3.03MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152640-hulmkdbt/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_152640-hulmkdbt/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>16</td></tr><tr><td>loss</td><td>0.00175</td></tr><tr><td>mean_squared_error</td><td>0.00175</td></tr><tr><td>mean_absolute_error</td><td>0.02747</td></tr><tr><td>val_loss</td><td>0.0038</td></tr><tr><td>val_mean_squared_error</td><td>0.0038</td></tr><tr><td>val_mean_absolute_error</td><td>0.04864</td></tr><tr><td>_runtime</td><td>237</td></tr><tr><td>_timestamp</td><td>1626795037</td></tr><tr><td>_step</td><td>16</td></tr><tr><td>best_val_loss</td><td>0.00364</td></tr><tr><td>best_epoch</td><td>6</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▃▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▃▃▂▂▂▁▂▂▁▂▂▁▁▂▁</td></tr><tr><td>val_loss</td><td>▂▂▁▁▁▁▁▁▁▁▁▁▁▁█▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▂▂▁▁▁▁▁▁▁▁▁▁▁▁█▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▂▃▁▂▁▁▁▁▂▁▁▁▁▁█▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▄▄▄▅▅▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▄▄▄▅▅▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">fresh-sweep-29</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hulmkdbt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/hulmkdbt</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Sweep Agent: Waiting for job.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Job received.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: pyv2pcim with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">desert-sweep-30</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pyv2pcim\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pyv2pcim</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_153145-pyv2pcim</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 11s 86ms/step - loss: 0.0386 - mean_squared_error: 0.0386 - mean_absolute_error: 0.1108 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0822\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 1s 21ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0514 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0477\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0514 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0554\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0398 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.1032\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0448 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0875\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0400 - val_loss: 0.0490 - val_mean_squared_error: 0.0490 - val_mean_absolute_error: 0.2037\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0425 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0730\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0385 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1172\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0345 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.1122\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0372 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0544\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0422 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0739\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0336 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0407\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0336 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0943\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0403 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0814\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0401 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0518\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0366 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0482\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0337 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0787\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0362 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1320\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0349 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0993\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0360 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1287\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0371 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0727\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0437 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0379\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0345 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0480\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0325 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0664\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0328 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0707\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0331 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0544\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0364 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0708\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0323 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0374\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0500\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0331 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0758\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0320 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0861\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0311 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0418\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0330 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0552\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 1s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.1017\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0297 - val_loss: 0.0425 - val_mean_squared_error: 0.0425 - val_mean_absolute_error: 0.1917\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0326 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0388\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0306 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0606\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4946<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "200fce0dacee4ee5966f7522a5ef29ce",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.33MB of 2.33MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_153145-pyv2pcim/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_153145-pyv2pcim/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>37</td></tr><tr><td>loss</td><td>0.00193</td></tr><tr><td>mean_squared_error</td><td>0.00193</td></tr><tr><td>mean_absolute_error</td><td>0.03053</td></tr><tr><td>val_loss</td><td>0.00496</td></tr><tr><td>val_mean_squared_error</td><td>0.00496</td></tr><tr><td>val_mean_absolute_error</td><td>0.06058</td></tr><tr><td>_runtime</td><td>41</td></tr><tr><td>_timestamp</td><td>1626795146</td></tr><tr><td>_step</td><td>37</td></tr><tr><td>best_val_loss</td><td>0.00248</td></tr><tr><td>best_epoch</td><td>27</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▄▃▃▃▂▃▃▃▂▃▃▃▃▃▂▂▂▃▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂▁▁▃▂█▂▃▃▁▂▁▂▂▁▁▂▄▃▄▂▁▁▂▂▁▂▁▁▂▂▁▁▁▃▇▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▂▁▁▃▂█▂▃▃▁▂▁▂▂▁▁▂▄▃▄▂▁▁▂▂▁▂▁▁▂▂▁▁▁▃▇▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▃▁▂▄▃█▂▄▄▂▃▁▃▃▂▁▃▅▄▅▂▁▁▂▂▂▂▁▂▃▃▁▁▂▄▇▁▂</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">desert-sweep-30</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pyv2pcim\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/pyv2pcim</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: nl0lntx9 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">rich-sweep-31</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/sweeps/144fmybl</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nl0lntx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nl0lntx9</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210720_153250-nl0lntx9</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 12s 320ms/step - loss: 0.0567 - mean_squared_error: 0.0567 - mean_absolute_error: 0.1585 - val_loss: 0.0338 - val_mean_squared_error: 0.0338 - val_mean_absolute_error: 0.1674\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 32ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0634 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1209\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0432 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0500\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0392 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0448\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0313 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0544\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0293 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0584\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0266 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0445\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0256 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0456\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0275 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0444\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0274 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0536\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0305 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0618\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0273 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0532\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0299 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0476\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0275 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0504\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0252 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0438\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0244 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0431\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0243 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0460\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0259 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0438\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0242 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0485\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0248 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0451\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0266 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0441\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0240 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0480\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0257 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0432\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0230 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0445\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0432\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0244 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0429\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0249 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0476\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0457\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0239 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0420\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0249 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0590\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0266 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0501\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0264 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0428\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0262 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0431\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0238 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0411\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0238 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0412\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0230 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0410\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0245 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0523\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0262 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0439\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0242 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0406\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0235 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0485\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0244 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0436\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0234 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0401\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0256 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0406\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0237 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0465\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0240 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0425\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0247 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0519\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0233 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0547\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0430\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0240 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0418\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0570\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0258 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0257 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0502\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0447\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5123<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b55f5085da27451bad610f714eaa5937",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.07MB of 3.07MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_153250-nl0lntx9/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210720_153250-nl0lntx9/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>52</td></tr><tr><td>loss</td><td>0.00149</td></tr><tr><td>mean_squared_error</td><td>0.00149</td></tr><tr><td>mean_absolute_error</td><td>0.02647</td></tr><tr><td>val_loss</td><td>0.00343</td></tr><tr><td>val_mean_squared_error</td><td>0.00343</td></tr><tr><td>val_mean_absolute_error</td><td>0.04473</td></tr><tr><td>_runtime</td><td>31</td></tr><tr><td>_timestamp</td><td>1626795201</td></tr><tr><td>_step</td><td>52</td></tr><tr><td>best_val_loss</td><td>0.00328</td></tr><tr><td>best_epoch</td><td>42</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▂▂▂▁▁▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▂▂▁▁▁▂▁▁▁▁▁▁▂▂▁▂▁▁</td></tr><tr><td>_runtime</td><td>▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">rich-sweep-31</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nl0lntx9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_AE/runs/nl0lntx9</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ydwwc4np with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gFTu29dbi18i"
      },
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwsO8cDJPMdj"
      },
      "source": [
        "# picking the best values\n",
        "best_config = {\n",
        "    'epochs': 100,\n",
        "    'batch_size': 32,\n",
        "    'learning_rate': 0.001,\n",
        "    'dropout': 0.2,\n",
        "    'optimizer': 'adam',\n",
        "    'activation': 'tanh'\n",
        "}"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "3baac8ee-1cc4-4457-afc8-997196777d2d"
      },
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# layer 1\n",
        "model.add(GRU(units=128, return_sequences=True, input_shape=(window_len, 1), activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 2\n",
        "model.add(GRU(units=64, return_sequences=False, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 3\n",
        "model.add(RepeatVector(window_len))\n",
        "# layer 4\n",
        "model.add(GRU(units=64, return_sequences=True, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 5\n",
        "model.add(GRU(units=128, return_sequences=False, activation=best_config['activation']))\n",
        "model.add(Dropout(0.1))\n",
        "# layer 6\n",
        "model.add((Dense(1)))\n",
        "\n",
        "# defining the optimiser\n",
        "if best_config['optimizer'] == 'sgd':\n",
        "  optimizer = SGD(learning_rate=best_config['learning_rate'], decay=1e-5, momentum=0.9, nesterov=True)\n",
        "elif best_config['optimizer'] == 'rmsprop':\n",
        "  optimizer = RMSprop(learning_rate=best_config['learning_rate'], decay=1e-5)\n",
        "elif best_config['optimizer'] == 'adam':\n",
        "  optimizer = Adam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "elif best_config['optimizer'] == 'nadam':\n",
        "  optimizer = Nadam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total number of trainable parameters:  187137\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5UG8j_4r7kSu",
        "outputId": "c0a278ac-037b-448e-fbcf-75f2db9070e0"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "gru (GRU)                    (None, 30, 128)           50304     \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 30, 128)           0         \n",
            "_________________________________________________________________\n",
            "gru_1 (GRU)                  (None, 64)                37248     \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "repeat_vector (RepeatVector) (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "gru_2 (GRU)                  (None, 30, 64)            24960     \n",
            "_________________________________________________________________\n",
            "dropout_2 (Dropout)          (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "gru_3 (GRU)                  (None, 128)               74496     \n",
            "_________________________________________________________________\n",
            "dropout_3 (Dropout)          (None, 128)               0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 1)                 129       \n",
            "=================================================================\n",
            "Total params: 187,137\n",
            "Trainable params: 187,137\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "d168ddd5-e39a-4fa7-fb0e-9cece35de0d9"
      },
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=best_config['epochs'], batch_size=best_config['batch_size'])"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "39/39 [==============================] - 8s 13ms/step - loss: 0.0384\n",
            "Epoch 2/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0024\n",
            "Epoch 3/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0022\n",
            "Epoch 4/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0026\n",
            "Epoch 5/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0019\n",
            "Epoch 6/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0025\n",
            "Epoch 7/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 8/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0015\n",
            "Epoch 9/100\n",
            "39/39 [==============================] - 1s 13ms/step - loss: 0.0017\n",
            "Epoch 10/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0016\n",
            "Epoch 11/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0018\n",
            "Epoch 12/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0016\n",
            "Epoch 13/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0018\n",
            "Epoch 14/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0016\n",
            "Epoch 15/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0014\n",
            "Epoch 16/100\n",
            "39/39 [==============================] - 1s 14ms/step - loss: 0.0013\n",
            "Epoch 17/100\n",
            "39/39 [==============================] - 1s 13ms/step - loss: 0.0022\n",
            "Epoch 18/100\n",
            "39/39 [==============================] - 1s 13ms/step - loss: 0.0016\n",
            "Epoch 19/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0015\n",
            "Epoch 20/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 21/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0014\n",
            "Epoch 22/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0015\n",
            "Epoch 23/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0013\n",
            "Epoch 24/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0013\n",
            "Epoch 25/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0015\n",
            "Epoch 26/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0016\n",
            "Epoch 27/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 28/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0015\n",
            "Epoch 29/100\n",
            "39/39 [==============================] - 1s 13ms/step - loss: 0.0012\n",
            "Epoch 30/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0014\n",
            "Epoch 31/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0014\n",
            "Epoch 32/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 33/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 34/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 35/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0012\n",
            "Epoch 36/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0019\n",
            "Epoch 37/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 38/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0012\n",
            "Epoch 39/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0016\n",
            "Epoch 40/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 41/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0014\n",
            "Epoch 42/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 43/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0014\n",
            "Epoch 44/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0013\n",
            "Epoch 45/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0012\n",
            "Epoch 46/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 47/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0010\n",
            "Epoch 48/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.5292e-04\n",
            "Epoch 49/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 50/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0010\n",
            "Epoch 51/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 9.6591e-04\n",
            "Epoch 52/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 9.9619e-04\n",
            "Epoch 53/100\n",
            "39/39 [==============================] - 1s 13ms/step - loss: 8.5725e-04\n",
            "Epoch 54/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0012\n",
            "Epoch 55/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0014\n",
            "Epoch 56/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0012\n",
            "Epoch 57/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.9160e-04\n",
            "Epoch 58/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.0755e-04\n",
            "Epoch 59/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0012\n",
            "Epoch 60/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.6250e-04\n",
            "Epoch 61/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0010\n",
            "Epoch 62/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0011\n",
            "Epoch 63/100\n",
            "39/39 [==============================] - 1s 13ms/step - loss: 0.0010\n",
            "Epoch 64/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.7053e-04\n",
            "Epoch 65/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 8.4388e-04\n",
            "Epoch 66/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.9684e-04\n",
            "Epoch 67/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.1054e-04\n",
            "Epoch 68/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.3826e-04\n",
            "Epoch 69/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 7.8802e-04\n",
            "Epoch 70/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.1737e-04\n",
            "Epoch 71/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.9905e-04\n",
            "Epoch 72/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.3388e-04\n",
            "Epoch 73/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 9.4138e-04\n",
            "Epoch 74/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 8.5544e-04\n",
            "Epoch 75/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.1570e-04\n",
            "Epoch 76/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0010\n",
            "Epoch 77/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0012\n",
            "Epoch 78/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.7459e-04\n",
            "Epoch 79/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.3230e-04\n",
            "Epoch 80/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0012\n",
            "Epoch 81/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.6870e-04\n",
            "Epoch 82/100\n",
            "39/39 [==============================] - 1s 13ms/step - loss: 0.0011\n",
            "Epoch 83/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.9623e-04\n",
            "Epoch 84/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 9.7884e-04\n",
            "Epoch 85/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 9.0237e-04\n",
            "Epoch 86/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.3730e-04\n",
            "Epoch 87/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 9.2626e-04\n",
            "Epoch 88/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0011\n",
            "Epoch 89/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 7.9232e-04\n",
            "Epoch 90/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 0.0013\n",
            "Epoch 91/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 8.6149e-04\n",
            "Epoch 92/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.5092e-04\n",
            "Epoch 93/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.8397e-04\n",
            "Epoch 94/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 8.2437e-04\n",
            "Epoch 95/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 96/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 8.1737e-04\n",
            "Epoch 97/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 7.6983e-04\n",
            "Epoch 98/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 8.4428e-04\n",
            "Epoch 99/100\n",
            "39/39 [==============================] - 0s 13ms/step - loss: 9.6508e-04\n",
            "Epoch 100/100\n",
            "39/39 [==============================] - 0s 12ms/step - loss: 7.6005e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7fca2e91c810>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rTXJN51l9Y-F"
      },
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H-D-XHyRjFMp"
      },
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "811095a5-c2db-404e-8a13-ad1fb68217a1"
      },
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str, model_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "1bb84923-89e8-45d6-a2f4-1b0bc224921f"
      },
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "8c092bb2-9eba-4bf5-d2fe-156aa361a652"
      },
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "d_mse = mean_squared_error(y_true, y_dummy)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "d_rmse = mean_squared_error(y_true, y_dummy, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "d_mae = mean_absolute_error(y_true, y_dummy)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)\n",
        "print('Dummy MSE: ', d_mse)\n",
        "print('Dummy RMSE: ', d_rmse)\n",
        "print('Dummy MAE: ', d_mae)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MSE:  0.0018939809312916171\n",
            "RMSE:  0.043519891214151916\n",
            "MAE:  0.03418236423365827\n",
            "Dummy MSE:  0.01623808785220405\n",
            "Dummy RMSE:  0.12742875598625314\n",
            "Dummy MAE:  0.10320580289003882\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f107f566-8955-4404-a141-d197b846bc36"
      },
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE: '+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n'+\n",
        "                 'Dummy MSE: '+str(d_mse)+'\\n'+'Dummy RMSE: '+str(d_rmse)+'\\n'+'Dummy MAE: '+str(d_mae))\n",
        "error_file.close()"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive/\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:absl:Found untraced functions such as gru_cell_layer_call_fn, gru_cell_layer_call_and_return_conditional_losses, gru_cell_1_layer_call_fn, gru_cell_1_layer_call_and_return_conditional_losses, gru_cell_2_layer_call_fn while saving (showing 5 of 20). These functions will not be directly callable after loading.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_AE_Nvidia/assets\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_AE_Nvidia/assets\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}