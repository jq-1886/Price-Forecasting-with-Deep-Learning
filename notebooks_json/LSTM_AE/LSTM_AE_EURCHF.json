{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "LSTM_AE_EURCHF.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPfS0z9NPi2LRsSUt6+5isi",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "0751bea827284df8a4b6126c072f4a8e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0a6985436498452ca54e043fb84b2657",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f8e818c53a5f4201971e477b26159210",
              "IPY_MODEL_56a0d2cd5fef4a8b951519ff635bfda5"
            ]
          }
        },
        "0a6985436498452ca54e043fb84b2657": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f8e818c53a5f4201971e477b26159210": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_efc58fd28cab45f5b0bb7eae43c33610",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.24MB of 2.24MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e78eca3682c44d6a9b054186bda6d22f"
          }
        },
        "56a0d2cd5fef4a8b951519ff635bfda5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f7039e12a9a24573bb87fd2bb52a0891",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8f6ba982e1f243c48a7d30ad89972ad3"
          }
        },
        "efc58fd28cab45f5b0bb7eae43c33610": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e78eca3682c44d6a9b054186bda6d22f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f7039e12a9a24573bb87fd2bb52a0891": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8f6ba982e1f243c48a7d30ad89972ad3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "01316e05ee5e4889ac55183d60087cfd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_43314c7193c048ba9544d119e5f919f7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2b5ffa66218e421c9e795ddc4958af8f",
              "IPY_MODEL_6b0a113819bf4c1d86506754ec850c65"
            ]
          }
        },
        "43314c7193c048ba9544d119e5f919f7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2b5ffa66218e421c9e795ddc4958af8f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_896afa465a0f4328b3dcb44e79e2ace4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.29MB of 2.29MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5154a8fcc3d24ec4aacf036990ceb137"
          }
        },
        "6b0a113819bf4c1d86506754ec850c65": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9ddc6d5cc57e4840867ca33b5e7a74d1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7ed0e6eb2cc2422c8502b63821940524"
          }
        },
        "896afa465a0f4328b3dcb44e79e2ace4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5154a8fcc3d24ec4aacf036990ceb137": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9ddc6d5cc57e4840867ca33b5e7a74d1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7ed0e6eb2cc2422c8502b63821940524": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "21ca2f7a6877404eb3a3d9c54f236cfd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0e93ee8393eb4f0fa4500515613f9cc3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_acdf6f5b07f74bd096a10441898e9d34",
              "IPY_MODEL_7fab8e7bb7ff41a7aab79ed6a7537c45"
            ]
          }
        },
        "0e93ee8393eb4f0fa4500515613f9cc3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "acdf6f5b07f74bd096a10441898e9d34": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b7599d260a01420181db466ebb6277ae",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.27MB of 3.27MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a2078ddba01b47d58bb6700d6440069d"
          }
        },
        "7fab8e7bb7ff41a7aab79ed6a7537c45": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8038cf3882eb4e24b0dee95261b45df8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a7c667463e6a47119bc91c9d7e67edc5"
          }
        },
        "b7599d260a01420181db466ebb6277ae": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a2078ddba01b47d58bb6700d6440069d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8038cf3882eb4e24b0dee95261b45df8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a7c667463e6a47119bc91c9d7e67edc5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "341681ee65994a888161b8913f320f69": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_187d8f6d0c9e4726b6571188992995e6",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_cbb642e3bbe74a919a12cceefd27e9f1",
              "IPY_MODEL_38467344acb34488889ea512dd2f0b6b"
            ]
          }
        },
        "187d8f6d0c9e4726b6571188992995e6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cbb642e3bbe74a919a12cceefd27e9f1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_7d8c3ef229264931a928d9b79ec4ad11",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.29MB of 3.29MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_bf298309e3fe43af94961a7310f2e25a"
          }
        },
        "38467344acb34488889ea512dd2f0b6b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_00d661eb2580487bbf4834c7f903e996",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f492ad03777741beb1a5ffdcf774defb"
          }
        },
        "7d8c3ef229264931a928d9b79ec4ad11": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "bf298309e3fe43af94961a7310f2e25a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "00d661eb2580487bbf4834c7f903e996": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f492ad03777741beb1a5ffdcf774defb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1f3eef1ea34947828dbebd74da1d53bf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2c82ac9003bf4f1eac74a68c335eb410",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_64608a142dae496790810c2fdbd3ae46",
              "IPY_MODEL_41794d71600e4e24bc8eb78490b4e28b"
            ]
          }
        },
        "2c82ac9003bf4f1eac74a68c335eb410": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "64608a142dae496790810c2fdbd3ae46": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_c535992fe0e14a2c812a64fbc96922da",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.36MB of 2.36MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_896f964a87094f07960ddf45a475dbcb"
          }
        },
        "41794d71600e4e24bc8eb78490b4e28b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b3602d27e7be47598e977857df5f7c4d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6073594fa294479c8cd8e0c249c6ae48"
          }
        },
        "c535992fe0e14a2c812a64fbc96922da": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "896f964a87094f07960ddf45a475dbcb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b3602d27e7be47598e977857df5f7c4d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6073594fa294479c8cd8e0c249c6ae48": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cfb76553eb7644e59e441dfe59dafc05": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_8541d1fdb87a4c5a878819bf04ff9dc4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_8c07d70a0e244975ac8585a19f030b00",
              "IPY_MODEL_02c80688b9b64c45ae87f02136653194"
            ]
          }
        },
        "8541d1fdb87a4c5a878819bf04ff9dc4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8c07d70a0e244975ac8585a19f030b00": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_71a8a70cf9034b7ca1b7e1e15d645e24",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.34MB of 3.34MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_773c7f951d414cfa94ba3780150f47a1"
          }
        },
        "02c80688b9b64c45ae87f02136653194": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_61b22077965c443a95d03ae6d328b831",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_bab1c58360744cd18c7781bf9bafd690"
          }
        },
        "71a8a70cf9034b7ca1b7e1e15d645e24": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "773c7f951d414cfa94ba3780150f47a1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "61b22077965c443a95d03ae6d328b831": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "bab1c58360744cd18c7781bf9bafd690": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "908beceeed19423399da315d4da2c43b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1c03105c601a429ab77ce0a3187eb760",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_67f7e67b01d14aa5a5ec57a75733add6",
              "IPY_MODEL_f6e3cb70502f4bb5aff6ed1b722ee34d"
            ]
          }
        },
        "1c03105c601a429ab77ce0a3187eb760": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "67f7e67b01d14aa5a5ec57a75733add6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_56deda923c204b0aa36bd2aae303ded2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.40MB of 3.40MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2d5ef7b65b4e48b98e74107d75341b66"
          }
        },
        "f6e3cb70502f4bb5aff6ed1b722ee34d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_eb57da243e0347ec9951721e9afe0359",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f9e690b520654a43ae0f2468a27fd750"
          }
        },
        "56deda923c204b0aa36bd2aae303ded2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2d5ef7b65b4e48b98e74107d75341b66": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "eb57da243e0347ec9951721e9afe0359": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f9e690b520654a43ae0f2468a27fd750": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ce99c1ab1e9846e4a843d112aebaeb0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7f0ebffce8464e4c8110d6fdc616a615",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4c249e8141bb454d81991cb46b511364",
              "IPY_MODEL_7b965dfb028f43baa3a1118cf04e55e9"
            ]
          }
        },
        "7f0ebffce8464e4c8110d6fdc616a615": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4c249e8141bb454d81991cb46b511364": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_53436361865a46558c11110a5ca16872",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.41MB of 3.41MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2d30ccb37ba440bea81c527e70b2dc74"
          }
        },
        "7b965dfb028f43baa3a1118cf04e55e9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_738e6b3e53ce4dd08576fc04e6b0cdb1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8965a6886f6c43929e25d84d855b1a00"
          }
        },
        "53436361865a46558c11110a5ca16872": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2d30ccb37ba440bea81c527e70b2dc74": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "738e6b3e53ce4dd08576fc04e6b0cdb1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8965a6886f6c43929e25d84d855b1a00": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "878228b4413941788acec67cb562a630": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2e44d54ae63443d6920d08c1d126106e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_be43d6e1370e4225b1942827a45eeaa0",
              "IPY_MODEL_bd85ebefc72c4c85b5aed25b67abad04"
            ]
          }
        },
        "2e44d54ae63443d6920d08c1d126106e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "be43d6e1370e4225b1942827a45eeaa0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e0a43c04ba1546e991c0b1d5e40c79f3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.47MB of 2.47MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9dd8682a4ac94dacbb713fe41d77eb7e"
          }
        },
        "bd85ebefc72c4c85b5aed25b67abad04": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_758818e353ca48259f87c6e3418ccf8f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_06273cb51ac64a41a99eb05a63c77710"
          }
        },
        "e0a43c04ba1546e991c0b1d5e40c79f3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9dd8682a4ac94dacbb713fe41d77eb7e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "758818e353ca48259f87c6e3418ccf8f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "06273cb51ac64a41a99eb05a63c77710": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e74791ff483c46a1bf8a7bc9277694d8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a9e75911e90c45fe8f630ab03e542ebc",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_afe1a777488b4cf485c567f585937f48",
              "IPY_MODEL_fa86ada9ad964c55bbfebe48d48149c9"
            ]
          }
        },
        "a9e75911e90c45fe8f630ab03e542ebc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "afe1a777488b4cf485c567f585937f48": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_7414ae0ffb96407b808beff7de025281",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.45MB of 3.45MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d1a31634dfbb4346aac24ae1f6774f34"
          }
        },
        "fa86ada9ad964c55bbfebe48d48149c9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_665aecb8b4f642fbbc44ba7a8112ea7b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_59e5c648c95c45158d3bcc33b1c3c208"
          }
        },
        "7414ae0ffb96407b808beff7de025281": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d1a31634dfbb4346aac24ae1f6774f34": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "665aecb8b4f642fbbc44ba7a8112ea7b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "59e5c648c95c45158d3bcc33b1c3c208": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6055395455b24fdb901d86738ace5a78": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b9841995383d46c392f3ed53e7373381",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_419e45b534214bd7b1738e277c144268",
              "IPY_MODEL_5822451485ed4995a4183dc908ceb7c6"
            ]
          }
        },
        "b9841995383d46c392f3ed53e7373381": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "419e45b534214bd7b1738e277c144268": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_273e9719475e4112a5911b9f23b772f1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.47MB of 3.47MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_29de243f13e94e14b4a1772bf7e2a3a8"
          }
        },
        "5822451485ed4995a4183dc908ceb7c6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_55f8717e8cee479c9328006439681341",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_774128a5b9454f21b5de7179bff07332"
          }
        },
        "273e9719475e4112a5911b9f23b772f1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "29de243f13e94e14b4a1772bf7e2a3a8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "55f8717e8cee479c9328006439681341": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "774128a5b9454f21b5de7179bff07332": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e30b59a49505490eb1827548ba7ff9d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_9a68abf120024ed8a575cabb5a63f4b9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_141a689dd27247bdaeb1ea0895c6c342",
              "IPY_MODEL_0d19965c8c55435890c60d46d599483e"
            ]
          }
        },
        "9a68abf120024ed8a575cabb5a63f4b9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "141a689dd27247bdaeb1ea0895c6c342": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_5e1e2a0d08054b5a84d011db46ceb27e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.55MB of 2.55MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_118bb7dfaa9e41b68a096e2ce2490d30"
          }
        },
        "0d19965c8c55435890c60d46d599483e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9e4b81a5f950450582d0535c824175c4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2a1dff8725504314a021297af8c661f9"
          }
        },
        "5e1e2a0d08054b5a84d011db46ceb27e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "118bb7dfaa9e41b68a096e2ce2490d30": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9e4b81a5f950450582d0535c824175c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2a1dff8725504314a021297af8c661f9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c4b162c116af47f086ce630268924810": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d380c45b374346e7bb6e68ee0ec3d0fe",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_82bc59ae5b0c44fcbdcb7677fdf20e54",
              "IPY_MODEL_bac70f18847e49a6b9d331bd55e28b68"
            ]
          }
        },
        "d380c45b374346e7bb6e68ee0ec3d0fe": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "82bc59ae5b0c44fcbdcb7677fdf20e54": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9cf53e7c645241968b56b4080a7b3390",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.59MB of 2.59MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_288dc277698c4e37a44a80b453fc7af4"
          }
        },
        "bac70f18847e49a6b9d331bd55e28b68": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a2ac5d91d0f14f1e8cca9c3049a9bac9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c7ad4451a618459d81c22182858a1085"
          }
        },
        "9cf53e7c645241968b56b4080a7b3390": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "288dc277698c4e37a44a80b453fc7af4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a2ac5d91d0f14f1e8cca9c3049a9bac9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c7ad4451a618459d81c22182858a1085": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "511a8f90ab9a4ea98ff5d05245e55176": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_dab5e32405054f008f672782b3c8d9c1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_88a92cca9ad34c1099766932cfb63343",
              "IPY_MODEL_26eed2f301c64b0c8683bb453b545fdb"
            ]
          }
        },
        "dab5e32405054f008f672782b3c8d9c1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "88a92cca9ad34c1099766932cfb63343": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9e465d5441184c38b84701b78cf49a9d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.55MB of 3.55MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_fd6ef2b978da4047b90d7922d25f3eef"
          }
        },
        "26eed2f301c64b0c8683bb453b545fdb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0cb9a94d525c4d298fdb8a712d5599c1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dd625dd5db19474395f5db219218ade6"
          }
        },
        "9e465d5441184c38b84701b78cf49a9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "fd6ef2b978da4047b90d7922d25f3eef": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0cb9a94d525c4d298fdb8a712d5599c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dd625dd5db19474395f5db219218ade6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ff6733934c6945cdb5e1d861e933bac9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_bc4c38609649404aab3b7aa9a7ac0c9f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7eeb529b58b5460b93f5e0758afcbda0",
              "IPY_MODEL_c86cf881066845c9a1fa91fa85de88c1"
            ]
          }
        },
        "bc4c38609649404aab3b7aa9a7ac0c9f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7eeb529b58b5460b93f5e0758afcbda0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_acc43076887b400cae93d493af18bf88",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.56MB of 3.56MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_71c6782334f745a58694552a86d9a330"
          }
        },
        "c86cf881066845c9a1fa91fa85de88c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f47650ed2c64478188ba6a4da8c2b4f4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_fd77718351f24276b97ad446df09aae5"
          }
        },
        "acc43076887b400cae93d493af18bf88": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "71c6782334f745a58694552a86d9a330": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f47650ed2c64478188ba6a4da8c2b4f4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "fd77718351f24276b97ad446df09aae5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9eee99d0ec1143a791e97b90a27a9596": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_211b3a8812164be28875800907b06d3e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6d592e749fe44d24a90447027217d8f0",
              "IPY_MODEL_07b0bbaabd5f4c6abfe2206d9e7f934a"
            ]
          }
        },
        "211b3a8812164be28875800907b06d3e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6d592e749fe44d24a90447027217d8f0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1f43cab32ae84c8b9db3739523eb8faf",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.65MB of 2.65MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3fdf49b8d5854016ada2980c5cee8424"
          }
        },
        "07b0bbaabd5f4c6abfe2206d9e7f934a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b758c9428b214ce1b14906669d6fdbdd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_82e269365dfd4997bd4f43dac91cc75b"
          }
        },
        "1f43cab32ae84c8b9db3739523eb8faf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3fdf49b8d5854016ada2980c5cee8424": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b758c9428b214ce1b14906669d6fdbdd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "82e269365dfd4997bd4f43dac91cc75b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "da525a5ddb094e3aa675aabed3711431": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_afa5c9a39f9e47be9c0fc61da49174ba",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_115d91b4193e4998ba6e8a75bb4c66e3",
              "IPY_MODEL_1cbbdce387714e76859492f728536159"
            ]
          }
        },
        "afa5c9a39f9e47be9c0fc61da49174ba": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "115d91b4193e4998ba6e8a75bb4c66e3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e46b1e71402c4ce3be88d7c5003488e7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.66MB of 2.66MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a963f33f772d4be5b82bd77d7c703247"
          }
        },
        "1cbbdce387714e76859492f728536159": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5818264dd894411b9af8ba8746448680",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0ac9d1c0e5f1478aaeaf363912f6e848"
          }
        },
        "e46b1e71402c4ce3be88d7c5003488e7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a963f33f772d4be5b82bd77d7c703247": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5818264dd894411b9af8ba8746448680": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0ac9d1c0e5f1478aaeaf363912f6e848": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2d3dbdac1b8b4703a9fbd77e7e3d153b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ef8a3860c3494a97805d074d2ecdd4bd",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2dac4a4c20724eb0a52780dab77514ca",
              "IPY_MODEL_95466550a7904858ad0140de2a62d6ee"
            ]
          }
        },
        "ef8a3860c3494a97805d074d2ecdd4bd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2dac4a4c20724eb0a52780dab77514ca": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_3dcfb484abea481ca10bea6b8a81054c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.68MB of 2.68MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f991b778259d4a398dc913f632aba3e8"
          }
        },
        "95466550a7904858ad0140de2a62d6ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3403c699137a46f08a231183402af707",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0b95abf297f24f29ba8e1db06b218d49"
          }
        },
        "3dcfb484abea481ca10bea6b8a81054c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f991b778259d4a398dc913f632aba3e8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3403c699137a46f08a231183402af707": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0b95abf297f24f29ba8e1db06b218d49": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e86ff260afa14f07ba16933f47048fdd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_92a80403aa9a45e39cf4f9ecf50aef61",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_fa46b608558a4aabb8ea5560bc69635b",
              "IPY_MODEL_68e098af5f0a44ebb07b5dba827288ac"
            ]
          }
        },
        "92a80403aa9a45e39cf4f9ecf50aef61": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fa46b608558a4aabb8ea5560bc69635b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d3bf33851405472396baa6cd48cd9ac2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.70MB of 2.70MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_35f05fe6eebe4fc2842ea23d6f3d93e5"
          }
        },
        "68e098af5f0a44ebb07b5dba827288ac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_1c9cdc26a3eb46da9940c3b2ce6cad7c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_29724949053546819cd9ea74862fce37"
          }
        },
        "d3bf33851405472396baa6cd48cd9ac2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "35f05fe6eebe4fc2842ea23d6f3d93e5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1c9cdc26a3eb46da9940c3b2ce6cad7c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "29724949053546819cd9ea74862fce37": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e3043784fe504c65983a6ecd1ebb84d9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_33c6cb2339934901a619e336ac210eca",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e6c65ad590fc4d91be66348c9e118536",
              "IPY_MODEL_716b25edad6a4ada8a75ce6a3e16192c"
            ]
          }
        },
        "33c6cb2339934901a619e336ac210eca": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e6c65ad590fc4d91be66348c9e118536": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_4550ffb9d7cc44f192d0a9ef7217cdb6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.68MB of 3.68MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_351427bd412e4eb9bf0483743b172c27"
          }
        },
        "716b25edad6a4ada8a75ce6a3e16192c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e1fe00028d2a4396975e58cd66c974a2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_385a20262263494ebf0d9077817ed4aa"
          }
        },
        "4550ffb9d7cc44f192d0a9ef7217cdb6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "351427bd412e4eb9bf0483743b172c27": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e1fe00028d2a4396975e58cd66c974a2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "385a20262263494ebf0d9077817ed4aa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9cfc7bcdbb8f4defae1f91a77565c9b8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b3b410e65b664e149fe8ea67efe0a31d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2b8e865170924384adaf1217f3f18d3c",
              "IPY_MODEL_5bc573ad2a854438a1bed7939dd403b4"
            ]
          }
        },
        "b3b410e65b664e149fe8ea67efe0a31d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2b8e865170924384adaf1217f3f18d3c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_4b2c7a4757d049bdb5e82940b2b4e6b9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.71MB of 3.71MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9f64978620ad447490352af7f76282cb"
          }
        },
        "5bc573ad2a854438a1bed7939dd403b4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8e7f848666b74a97b497e6213657c8ae",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d77e8b0fada343bdadd57acdc4370945"
          }
        },
        "4b2c7a4757d049bdb5e82940b2b4e6b9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9f64978620ad447490352af7f76282cb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8e7f848666b74a97b497e6213657c8ae": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d77e8b0fada343bdadd57acdc4370945": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7757622981bf4aa899bd99510af179d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3eff9a2b485843a0b308edbbf3782db8",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_c9e517c3faaa44af9e16e3d1c04cc9cc",
              "IPY_MODEL_fab420455e534d76a8c5be60e9c0fc96"
            ]
          }
        },
        "3eff9a2b485843a0b308edbbf3782db8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c9e517c3faaa44af9e16e3d1c04cc9cc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d0bb8bb520194ccf81c5d6c25f381193",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.77MB of 2.77MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4a41b91058b84f94bb634c831b7b8dc2"
          }
        },
        "fab420455e534d76a8c5be60e9c0fc96": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_79b3f5408ecc44229bb5a523d9a3c71c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e90a60582d9c4a858689a00bf6824650"
          }
        },
        "d0bb8bb520194ccf81c5d6c25f381193": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4a41b91058b84f94bb634c831b7b8dc2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "79b3f5408ecc44229bb5a523d9a3c71c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e90a60582d9c4a858689a00bf6824650": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "40e8ff472c4447239785b04c17610ed8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3e8651b5fb1c463caef4d8a855b4446d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_336df8a93a884ab693c5b2213571ee8a",
              "IPY_MODEL_d649226c3bc047f4bba085d37ebc3379"
            ]
          }
        },
        "3e8651b5fb1c463caef4d8a855b4446d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "336df8a93a884ab693c5b2213571ee8a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_5ff249fdc91a4ac1bbf600ef0c2f080e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.74MB of 3.74MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_915b87302dd249059eed9978defedc16"
          }
        },
        "d649226c3bc047f4bba085d37ebc3379": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_787c63b0f14b48bcbe32e2059c728e9e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6fede1592f6c4a6fa549cd85369389cb"
          }
        },
        "5ff249fdc91a4ac1bbf600ef0c2f080e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "915b87302dd249059eed9978defedc16": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "787c63b0f14b48bcbe32e2059c728e9e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6fede1592f6c4a6fa549cd85369389cb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "423123d1de8c4eb89e838bf3ab4cce1c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f1abc470c7d142fa8d569e0ff241d2b0",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a740bd6b0d7a4ee5b24d9611d9821b5d",
              "IPY_MODEL_d11f68a82bf5414aa7550c4d59340bb5"
            ]
          }
        },
        "f1abc470c7d142fa8d569e0ff241d2b0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a740bd6b0d7a4ee5b24d9611d9821b5d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_aee4cd7e5b174711ba8ee248ea74dfd5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.89MB of 2.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_69563bd184c349ef817af0fba72fce26"
          }
        },
        "d11f68a82bf5414aa7550c4d59340bb5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_12a48a7dc43646298563571ad9613464",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f413b93114934484a723817103023541"
          }
        },
        "aee4cd7e5b174711ba8ee248ea74dfd5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "69563bd184c349ef817af0fba72fce26": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "12a48a7dc43646298563571ad9613464": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f413b93114934484a723817103023541": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d1470ec4fa284e47a0a02d84ee307691": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f5938454513e4dd298fde103338ec9fb",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4ca1c928044447ef8a45d4fee11ad486",
              "IPY_MODEL_13e90f16e0524ba99473ebffaa65a015"
            ]
          }
        },
        "f5938454513e4dd298fde103338ec9fb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4ca1c928044447ef8a45d4fee11ad486": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_a4d59ca4f2c8460d988928c8f8133b85",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.81MB of 3.81MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d07f8762afe945498d3f1e927f01cc5a"
          }
        },
        "13e90f16e0524ba99473ebffaa65a015": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8ad471510dbb44fd977fca9944b5b37d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f92eeb68e2b843e183be847cb2c0221a"
          }
        },
        "a4d59ca4f2c8460d988928c8f8133b85": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d07f8762afe945498d3f1e927f01cc5a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8ad471510dbb44fd977fca9944b5b37d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f92eeb68e2b843e183be847cb2c0221a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "53f185c92c054d8cbfcff4e62b7deabd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b650fb1a2cfc43009f9577a58fe77548",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_90007917ae0c4c4a83cdb9746d022387",
              "IPY_MODEL_e511c090879f41c589ba2a82fe535c1f"
            ]
          }
        },
        "b650fb1a2cfc43009f9577a58fe77548": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "90007917ae0c4c4a83cdb9746d022387": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_a8f204c931ae4ddfa1c734687144e9a5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.84MB of 3.84MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5c1db25827634fbaa9154eb554d4becf"
          }
        },
        "e511c090879f41c589ba2a82fe535c1f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9c857e635619495386a16503332f075c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_22db6e66ff174cdd8d1c78f9fbc4419f"
          }
        },
        "a8f204c931ae4ddfa1c734687144e9a5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5c1db25827634fbaa9154eb554d4becf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9c857e635619495386a16503332f075c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "22db6e66ff174cdd8d1c78f9fbc4419f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "915e69d0a12a4dedb2e8232464635f6c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_dfa2da55ab3d4947a997be1e2e8e1c5a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_acfdaac60bdb470a9c5fe9ae59ef65d8",
              "IPY_MODEL_3695500b4e214b17811d12b8de089483"
            ]
          }
        },
        "dfa2da55ab3d4947a997be1e2e8e1c5a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "acfdaac60bdb470a9c5fe9ae59ef65d8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d772dac195ff4b81bb31307fb3400151",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.85MB of 3.85MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3e70f2ac84e3494e95ad8ee82bc323f9"
          }
        },
        "3695500b4e214b17811d12b8de089483": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_782746b83b1e485d8e46d48a65290ba2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8edbb73dc14746929caa7a57c75be0fb"
          }
        },
        "d772dac195ff4b81bb31307fb3400151": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3e70f2ac84e3494e95ad8ee82bc323f9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "782746b83b1e485d8e46d48a65290ba2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8edbb73dc14746929caa7a57c75be0fb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc1a9b68f74e4e51a83d7c5aadb08a10": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7b679fa6a2b94c4490b20a39e0bc9cd5",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_664de9d12c354577a3dee590e4959fb4",
              "IPY_MODEL_8805c237f87d46828e464dc28dad90cd"
            ]
          }
        },
        "7b679fa6a2b94c4490b20a39e0bc9cd5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "664de9d12c354577a3dee590e4959fb4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e2d2bc0886dc4717853b1b3c62a904eb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.87MB of 3.87MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3351f140ae3f4279a8ba3b1f4bcbbe34"
          }
        },
        "8805c237f87d46828e464dc28dad90cd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_55786de932124f35bd7bb0cb2bfcaf58",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5974699d20384c56af2c9d6cd82389a1"
          }
        },
        "e2d2bc0886dc4717853b1b3c62a904eb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3351f140ae3f4279a8ba3b1f4bcbbe34": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "55786de932124f35bd7bb0cb2bfcaf58": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5974699d20384c56af2c9d6cd82389a1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ce008f3d07ad408aa38ba5a8ba469d91": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0595252890d9407c9f23d323fc0cd946",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_41b1188188654859bfdde9bc8c432cdf",
              "IPY_MODEL_2ef27bc66efd48e088858c6872ea1d6e"
            ]
          }
        },
        "0595252890d9407c9f23d323fc0cd946": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "41b1188188654859bfdde9bc8c432cdf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_a80a844122ba4875928899ebdaa760d1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 3.89MB of 3.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_58fc13234ac64d0a8ee7a2d41e8149d7"
          }
        },
        "2ef27bc66efd48e088858c6872ea1d6e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_55cb84651be44484a5ef82b7cc1ae544",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d203714bebd24abf970a08b0a979c0c0"
          }
        },
        "a80a844122ba4875928899ebdaa760d1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "58fc13234ac64d0a8ee7a2d41e8149d7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "55cb84651be44484a5ef82b7cc1ae544": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d203714bebd24abf970a08b0a979c0c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "25047b56c55947e1a712bb1b89146b96": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_637dfebb811a4753b3bb258919af0e8a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_14b32fe93fab454db2181505b51fd1ec",
              "IPY_MODEL_778c01cdfbbc41b5ab1680d5e56447f9"
            ]
          }
        },
        "637dfebb811a4753b3bb258919af0e8a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "14b32fe93fab454db2181505b51fd1ec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_edd82efe6ef14c26bb046beb4feb71af",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.97MB of 2.97MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5f28f7eabcd8447b918f3adb2fec4130"
          }
        },
        "778c01cdfbbc41b5ab1680d5e56447f9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ea4c92d7e4b84a889d5de9922653716d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9c807b54666d4d76bd77e0e4932964b7"
          }
        },
        "edd82efe6ef14c26bb046beb4feb71af": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5f28f7eabcd8447b918f3adb2fec4130": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ea4c92d7e4b84a889d5de9922653716d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9c807b54666d4d76bd77e0e4932964b7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/LSTM_AE/LSTM_AE_EURCHF.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5F7GfFTgUo3"
      },
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "666d0076-5cd2-4465-987d-2388b48ba7a0"
      },
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 147, done.\u001b[K\n",
            "remote: Counting objects: 100% (147/147), done.\u001b[K\n",
            "remote: Compressing objects: 100% (142/142), done.\u001b[K\n",
            "remote: Total 147 (delta 71), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (147/147), 120.19 KiB | 6.68 MiB/s, done.\n",
            "Resolving deltas: 100% (71/71), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c77bde8e-91d1-4d42-9cd8-a1b8b81c1ae3"
      },
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/feeder_repo\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fa29c562-a2e5-4abc-bb34-43ca99f87458"
      },
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRqkwo6kZUz_"
      },
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzVhwND1HAlw"
      },
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "7242fb27-9002-4150-a578-696144e1bb1d"
      },
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Thu Jul 15 13:32:04 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla V100-SXM2...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   38C    P0    25W / 300W |      0MiB / 16160MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WB9wD4Aahs8_"
      },
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vBlKerL-c4-3"
      },
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'EURCHF'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'LSTM_AE'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfQJbuBk0vW0"
      },
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X53Fp1Gwh88_"
      },
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "251b5d58-b7f8-42e2-d7bc-d0d8ce299570"
      },
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8MB 13.4MB/s \n",
            "\u001b[K     |████████████████████████████████| 174kB 40.9MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 49.6MB/s \n",
            "\u001b[K     |████████████████████████████████| 102kB 14.2MB/s \n",
            "\u001b[K     |████████████████████████████████| 71kB 11.5MB/s \n",
            "\u001b[?25h  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pbgZaoQDiIKX"
      },
      "source": [
        "!pip install wandb -qq"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "e0fa2c9c-5cd2-4788-f2b0-1a6827a09813"
      },
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j91IBGuSid5w"
      },
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.1, 0.2, 0.3]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'rmsprop']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0Sr9HsorH4E"
      },
      "source": [
        "# wandb calls this training function to run through the hyperparameter search\n",
        "def train():\n",
        "    # default values for searching\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.2,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "\n",
        "    # setting keras model to sequential mode\n",
        "    model = Sequential()\n",
        "\n",
        "    # layer 1\n",
        "    model.add(LSTM(units=128, return_sequences=True, input_shape=(window_len, 1), activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 2\n",
        "    model.add(LSTM(units=64, return_sequences=False, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 3\n",
        "    model.add(RepeatVector(window_len))\n",
        "    # layer 4\n",
        "    model.add(LSTM(units=64, return_sequences=True, activation=config.activation))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 5\n",
        "    model.add(LSTM(units=128, return_sequences=False, activation=config.activation))\n",
        "    model.add(Dropout(0.1))\n",
        "    # layer 6\n",
        "    model.add((Dense(1)))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "d4779e1a-eed5-4065-e55a-2139ae4ebf4a"
      },
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Create sweep with ID: 4oebpufv\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "0751bea827284df8a4b6126c072f4a8e",
            "0a6985436498452ca54e043fb84b2657",
            "f8e818c53a5f4201971e477b26159210",
            "56a0d2cd5fef4a8b951519ff635bfda5",
            "efc58fd28cab45f5b0bb7eae43c33610",
            "e78eca3682c44d6a9b054186bda6d22f",
            "f7039e12a9a24573bb87fd2bb52a0891",
            "8f6ba982e1f243c48a7d30ad89972ad3",
            "01316e05ee5e4889ac55183d60087cfd",
            "43314c7193c048ba9544d119e5f919f7",
            "2b5ffa66218e421c9e795ddc4958af8f",
            "6b0a113819bf4c1d86506754ec850c65",
            "896afa465a0f4328b3dcb44e79e2ace4",
            "5154a8fcc3d24ec4aacf036990ceb137",
            "9ddc6d5cc57e4840867ca33b5e7a74d1",
            "7ed0e6eb2cc2422c8502b63821940524",
            "21ca2f7a6877404eb3a3d9c54f236cfd",
            "0e93ee8393eb4f0fa4500515613f9cc3",
            "acdf6f5b07f74bd096a10441898e9d34",
            "7fab8e7bb7ff41a7aab79ed6a7537c45",
            "b7599d260a01420181db466ebb6277ae",
            "a2078ddba01b47d58bb6700d6440069d",
            "8038cf3882eb4e24b0dee95261b45df8",
            "a7c667463e6a47119bc91c9d7e67edc5",
            "341681ee65994a888161b8913f320f69",
            "187d8f6d0c9e4726b6571188992995e6",
            "cbb642e3bbe74a919a12cceefd27e9f1",
            "38467344acb34488889ea512dd2f0b6b",
            "7d8c3ef229264931a928d9b79ec4ad11",
            "bf298309e3fe43af94961a7310f2e25a",
            "00d661eb2580487bbf4834c7f903e996",
            "f492ad03777741beb1a5ffdcf774defb",
            "1f3eef1ea34947828dbebd74da1d53bf",
            "2c82ac9003bf4f1eac74a68c335eb410",
            "64608a142dae496790810c2fdbd3ae46",
            "41794d71600e4e24bc8eb78490b4e28b",
            "c535992fe0e14a2c812a64fbc96922da",
            "896f964a87094f07960ddf45a475dbcb",
            "b3602d27e7be47598e977857df5f7c4d",
            "6073594fa294479c8cd8e0c249c6ae48",
            "cfb76553eb7644e59e441dfe59dafc05",
            "8541d1fdb87a4c5a878819bf04ff9dc4",
            "8c07d70a0e244975ac8585a19f030b00",
            "02c80688b9b64c45ae87f02136653194",
            "71a8a70cf9034b7ca1b7e1e15d645e24",
            "773c7f951d414cfa94ba3780150f47a1",
            "61b22077965c443a95d03ae6d328b831",
            "bab1c58360744cd18c7781bf9bafd690",
            "908beceeed19423399da315d4da2c43b",
            "1c03105c601a429ab77ce0a3187eb760",
            "67f7e67b01d14aa5a5ec57a75733add6",
            "f6e3cb70502f4bb5aff6ed1b722ee34d",
            "56deda923c204b0aa36bd2aae303ded2",
            "2d5ef7b65b4e48b98e74107d75341b66",
            "eb57da243e0347ec9951721e9afe0359",
            "f9e690b520654a43ae0f2468a27fd750",
            "ce99c1ab1e9846e4a843d112aebaeb0c",
            "7f0ebffce8464e4c8110d6fdc616a615",
            "4c249e8141bb454d81991cb46b511364",
            "7b965dfb028f43baa3a1118cf04e55e9",
            "53436361865a46558c11110a5ca16872",
            "2d30ccb37ba440bea81c527e70b2dc74",
            "738e6b3e53ce4dd08576fc04e6b0cdb1",
            "8965a6886f6c43929e25d84d855b1a00",
            "878228b4413941788acec67cb562a630",
            "2e44d54ae63443d6920d08c1d126106e",
            "be43d6e1370e4225b1942827a45eeaa0",
            "bd85ebefc72c4c85b5aed25b67abad04",
            "e0a43c04ba1546e991c0b1d5e40c79f3",
            "9dd8682a4ac94dacbb713fe41d77eb7e",
            "758818e353ca48259f87c6e3418ccf8f",
            "06273cb51ac64a41a99eb05a63c77710",
            "e74791ff483c46a1bf8a7bc9277694d8",
            "a9e75911e90c45fe8f630ab03e542ebc",
            "afe1a777488b4cf485c567f585937f48",
            "fa86ada9ad964c55bbfebe48d48149c9",
            "7414ae0ffb96407b808beff7de025281",
            "d1a31634dfbb4346aac24ae1f6774f34",
            "665aecb8b4f642fbbc44ba7a8112ea7b",
            "59e5c648c95c45158d3bcc33b1c3c208",
            "6055395455b24fdb901d86738ace5a78",
            "b9841995383d46c392f3ed53e7373381",
            "419e45b534214bd7b1738e277c144268",
            "5822451485ed4995a4183dc908ceb7c6",
            "273e9719475e4112a5911b9f23b772f1",
            "29de243f13e94e14b4a1772bf7e2a3a8",
            "55f8717e8cee479c9328006439681341",
            "774128a5b9454f21b5de7179bff07332",
            "e30b59a49505490eb1827548ba7ff9d3",
            "9a68abf120024ed8a575cabb5a63f4b9",
            "141a689dd27247bdaeb1ea0895c6c342",
            "0d19965c8c55435890c60d46d599483e",
            "5e1e2a0d08054b5a84d011db46ceb27e",
            "118bb7dfaa9e41b68a096e2ce2490d30",
            "9e4b81a5f950450582d0535c824175c4",
            "2a1dff8725504314a021297af8c661f9",
            "c4b162c116af47f086ce630268924810",
            "d380c45b374346e7bb6e68ee0ec3d0fe",
            "82bc59ae5b0c44fcbdcb7677fdf20e54",
            "bac70f18847e49a6b9d331bd55e28b68",
            "9cf53e7c645241968b56b4080a7b3390",
            "288dc277698c4e37a44a80b453fc7af4",
            "a2ac5d91d0f14f1e8cca9c3049a9bac9",
            "c7ad4451a618459d81c22182858a1085",
            "511a8f90ab9a4ea98ff5d05245e55176",
            "dab5e32405054f008f672782b3c8d9c1",
            "88a92cca9ad34c1099766932cfb63343",
            "26eed2f301c64b0c8683bb453b545fdb",
            "9e465d5441184c38b84701b78cf49a9d",
            "fd6ef2b978da4047b90d7922d25f3eef",
            "0cb9a94d525c4d298fdb8a712d5599c1",
            "dd625dd5db19474395f5db219218ade6",
            "ff6733934c6945cdb5e1d861e933bac9",
            "bc4c38609649404aab3b7aa9a7ac0c9f",
            "7eeb529b58b5460b93f5e0758afcbda0",
            "c86cf881066845c9a1fa91fa85de88c1",
            "acc43076887b400cae93d493af18bf88",
            "71c6782334f745a58694552a86d9a330",
            "f47650ed2c64478188ba6a4da8c2b4f4",
            "fd77718351f24276b97ad446df09aae5",
            "9eee99d0ec1143a791e97b90a27a9596",
            "211b3a8812164be28875800907b06d3e",
            "6d592e749fe44d24a90447027217d8f0",
            "07b0bbaabd5f4c6abfe2206d9e7f934a",
            "1f43cab32ae84c8b9db3739523eb8faf",
            "3fdf49b8d5854016ada2980c5cee8424",
            "b758c9428b214ce1b14906669d6fdbdd",
            "82e269365dfd4997bd4f43dac91cc75b",
            "da525a5ddb094e3aa675aabed3711431",
            "afa5c9a39f9e47be9c0fc61da49174ba",
            "115d91b4193e4998ba6e8a75bb4c66e3",
            "1cbbdce387714e76859492f728536159",
            "e46b1e71402c4ce3be88d7c5003488e7",
            "a963f33f772d4be5b82bd77d7c703247",
            "5818264dd894411b9af8ba8746448680",
            "0ac9d1c0e5f1478aaeaf363912f6e848",
            "2d3dbdac1b8b4703a9fbd77e7e3d153b",
            "ef8a3860c3494a97805d074d2ecdd4bd",
            "2dac4a4c20724eb0a52780dab77514ca",
            "95466550a7904858ad0140de2a62d6ee",
            "3dcfb484abea481ca10bea6b8a81054c",
            "f991b778259d4a398dc913f632aba3e8",
            "3403c699137a46f08a231183402af707",
            "0b95abf297f24f29ba8e1db06b218d49",
            "e86ff260afa14f07ba16933f47048fdd",
            "92a80403aa9a45e39cf4f9ecf50aef61",
            "fa46b608558a4aabb8ea5560bc69635b",
            "68e098af5f0a44ebb07b5dba827288ac",
            "d3bf33851405472396baa6cd48cd9ac2",
            "35f05fe6eebe4fc2842ea23d6f3d93e5",
            "1c9cdc26a3eb46da9940c3b2ce6cad7c",
            "29724949053546819cd9ea74862fce37",
            "e3043784fe504c65983a6ecd1ebb84d9",
            "33c6cb2339934901a619e336ac210eca",
            "e6c65ad590fc4d91be66348c9e118536",
            "716b25edad6a4ada8a75ce6a3e16192c",
            "4550ffb9d7cc44f192d0a9ef7217cdb6",
            "351427bd412e4eb9bf0483743b172c27",
            "e1fe00028d2a4396975e58cd66c974a2",
            "385a20262263494ebf0d9077817ed4aa",
            "9cfc7bcdbb8f4defae1f91a77565c9b8",
            "b3b410e65b664e149fe8ea67efe0a31d",
            "2b8e865170924384adaf1217f3f18d3c",
            "5bc573ad2a854438a1bed7939dd403b4",
            "4b2c7a4757d049bdb5e82940b2b4e6b9",
            "9f64978620ad447490352af7f76282cb",
            "8e7f848666b74a97b497e6213657c8ae",
            "d77e8b0fada343bdadd57acdc4370945",
            "7757622981bf4aa899bd99510af179d6",
            "3eff9a2b485843a0b308edbbf3782db8",
            "c9e517c3faaa44af9e16e3d1c04cc9cc",
            "fab420455e534d76a8c5be60e9c0fc96",
            "d0bb8bb520194ccf81c5d6c25f381193",
            "4a41b91058b84f94bb634c831b7b8dc2",
            "79b3f5408ecc44229bb5a523d9a3c71c",
            "e90a60582d9c4a858689a00bf6824650",
            "40e8ff472c4447239785b04c17610ed8",
            "3e8651b5fb1c463caef4d8a855b4446d",
            "336df8a93a884ab693c5b2213571ee8a",
            "d649226c3bc047f4bba085d37ebc3379",
            "5ff249fdc91a4ac1bbf600ef0c2f080e",
            "915b87302dd249059eed9978defedc16",
            "787c63b0f14b48bcbe32e2059c728e9e",
            "6fede1592f6c4a6fa549cd85369389cb",
            "423123d1de8c4eb89e838bf3ab4cce1c",
            "f1abc470c7d142fa8d569e0ff241d2b0",
            "a740bd6b0d7a4ee5b24d9611d9821b5d",
            "d11f68a82bf5414aa7550c4d59340bb5",
            "aee4cd7e5b174711ba8ee248ea74dfd5",
            "69563bd184c349ef817af0fba72fce26",
            "12a48a7dc43646298563571ad9613464",
            "f413b93114934484a723817103023541",
            "d1470ec4fa284e47a0a02d84ee307691",
            "f5938454513e4dd298fde103338ec9fb",
            "4ca1c928044447ef8a45d4fee11ad486",
            "13e90f16e0524ba99473ebffaa65a015",
            "a4d59ca4f2c8460d988928c8f8133b85",
            "d07f8762afe945498d3f1e927f01cc5a",
            "8ad471510dbb44fd977fca9944b5b37d",
            "f92eeb68e2b843e183be847cb2c0221a",
            "53f185c92c054d8cbfcff4e62b7deabd",
            "b650fb1a2cfc43009f9577a58fe77548",
            "90007917ae0c4c4a83cdb9746d022387",
            "e511c090879f41c589ba2a82fe535c1f",
            "a8f204c931ae4ddfa1c734687144e9a5",
            "5c1db25827634fbaa9154eb554d4becf",
            "9c857e635619495386a16503332f075c",
            "22db6e66ff174cdd8d1c78f9fbc4419f",
            "915e69d0a12a4dedb2e8232464635f6c",
            "dfa2da55ab3d4947a997be1e2e8e1c5a",
            "acfdaac60bdb470a9c5fe9ae59ef65d8",
            "3695500b4e214b17811d12b8de089483",
            "d772dac195ff4b81bb31307fb3400151",
            "3e70f2ac84e3494e95ad8ee82bc323f9",
            "782746b83b1e485d8e46d48a65290ba2",
            "8edbb73dc14746929caa7a57c75be0fb",
            "dc1a9b68f74e4e51a83d7c5aadb08a10",
            "7b679fa6a2b94c4490b20a39e0bc9cd5",
            "664de9d12c354577a3dee590e4959fb4",
            "8805c237f87d46828e464dc28dad90cd",
            "e2d2bc0886dc4717853b1b3c62a904eb",
            "3351f140ae3f4279a8ba3b1f4bcbbe34",
            "55786de932124f35bd7bb0cb2bfcaf58",
            "5974699d20384c56af2c9d6cd82389a1",
            "ce008f3d07ad408aa38ba5a8ba469d91",
            "0595252890d9407c9f23d323fc0cd946",
            "41b1188188654859bfdde9bc8c432cdf",
            "2ef27bc66efd48e088858c6872ea1d6e",
            "a80a844122ba4875928899ebdaa760d1",
            "58fc13234ac64d0a8ee7a2d41e8149d7",
            "55cb84651be44484a5ef82b7cc1ae544",
            "d203714bebd24abf970a08b0a979c0c0",
            "25047b56c55947e1a712bb1b89146b96",
            "637dfebb811a4753b3bb258919af0e8a",
            "14b32fe93fab454db2181505b51fd1ec",
            "778c01cdfbbc41b5ab1680d5e56447f9",
            "edd82efe6ef14c26bb046beb4feb71af",
            "5f28f7eabcd8447b918f3adb2fec4130",
            "ea4c92d7e4b84a889d5de9922653716d",
            "9c807b54666d4d76bd77e0e4932964b7"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "858612c8-8c77-42d5-b11f-af8d4d138cc4"
      },
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: jb7d82n8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">charmed-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/jb7d82n8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/jb7d82n8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_133248-jb7d82n8</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 24s 259ms/step - loss: 0.9462 - mean_squared_error: 0.9462 - mean_absolute_error: 0.6820 - val_loss: 0.0222 - val_mean_squared_error: 0.0222 - val_mean_absolute_error: 0.1255\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0196 - mean_squared_error: 0.0196 - mean_absolute_error: 0.1040 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1280\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0288 - mean_squared_error: 0.0288 - mean_absolute_error: 0.1325 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1380\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0341 - mean_squared_error: 0.0341 - mean_absolute_error: 0.1511 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1190\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0233 - mean_squared_error: 0.0233 - mean_absolute_error: 0.1150 - val_loss: 0.0535 - val_mean_squared_error: 0.0535 - val_mean_absolute_error: 0.2085\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0495 - mean_squared_error: 0.0495 - mean_absolute_error: 0.1794 - val_loss: 0.0725 - val_mean_squared_error: 0.0725 - val_mean_absolute_error: 0.2164\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0477 - mean_squared_error: 0.0477 - mean_absolute_error: 0.1718 - val_loss: 0.0404 - val_mean_squared_error: 0.0404 - val_mean_absolute_error: 0.1791\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0471 - mean_squared_error: 0.0471 - mean_absolute_error: 0.1797 - val_loss: 0.0332 - val_mean_squared_error: 0.0332 - val_mean_absolute_error: 0.1566\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0435 - mean_squared_error: 0.0435 - mean_absolute_error: 0.1740 - val_loss: 0.0301 - val_mean_squared_error: 0.0301 - val_mean_absolute_error: 0.1326\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0313 - mean_squared_error: 0.0313 - mean_absolute_error: 0.1382 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0829\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0299 - mean_squared_error: 0.0299 - mean_absolute_error: 0.1343 - val_loss: 0.0283 - val_mean_squared_error: 0.0283 - val_mean_absolute_error: 0.1305\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.3520 - mean_squared_error: 0.3520 - mean_absolute_error: 0.4233 - val_loss: 0.0352 - val_mean_squared_error: 0.0352 - val_mean_absolute_error: 0.1561\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0624 - val_loss: 0.0363 - val_mean_squared_error: 0.0363 - val_mean_absolute_error: 0.1482\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0821 - val_loss: 0.0246 - val_mean_squared_error: 0.0246 - val_mean_absolute_error: 0.1178\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0739 - val_loss: 0.0263 - val_mean_squared_error: 0.0263 - val_mean_absolute_error: 0.1222\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.0942 - val_loss: 0.0236 - val_mean_squared_error: 0.0236 - val_mean_absolute_error: 0.1215\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0665 - val_loss: 0.0491 - val_mean_squared_error: 0.0491 - val_mean_absolute_error: 0.1897\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0913 - val_loss: 0.0377 - val_mean_squared_error: 0.0377 - val_mean_absolute_error: 0.1631\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0675 - val_loss: 0.0395 - val_mean_squared_error: 0.0395 - val_mean_absolute_error: 0.1466\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0437 - mean_squared_error: 0.0437 - mean_absolute_error: 0.1700 - val_loss: 0.0496 - val_mean_squared_error: 0.0496 - val_mean_absolute_error: 0.1921\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 179<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "0751bea827284df8a4b6126c072f4a8e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.22MB of 2.22MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133248-jb7d82n8/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133248-jb7d82n8/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>19</td></tr><tr><td>loss</td><td>0.04899</td></tr><tr><td>mean_squared_error</td><td>0.04899</td></tr><tr><td>mean_absolute_error</td><td>0.17939</td></tr><tr><td>val_loss</td><td>0.04963</td></tr><tr><td>val_mean_squared_error</td><td>0.04963</td></tr><tr><td>val_mean_absolute_error</td><td>0.19211</td></tr><tr><td>_runtime</td><td>36</td></tr><tr><td>_timestamp</td><td>1626356004</td></tr><tr><td>_step</td><td>19</td></tr><tr><td>best_val_loss</td><td>0.01158</td></tr><tr><td>best_epoch</td><td>9</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▄▄▄▅▅▅▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▃▃▂▂▃▃▃▂▃▇▁▁▁▁▁▂▁▃</td></tr><tr><td>val_loss</td><td>▂▂▃▂▆█▄▃▃▁▃▄▄▂▃▂▅▄▄▅</td></tr><tr><td>val_mean_squared_error</td><td>▂▂▃▂▆█▄▃▃▁▃▄▄▂▃▂▅▄▄▅</td></tr><tr><td>val_mean_absolute_error</td><td>▃▃▄▃██▆▅▄▁▃▅▄▃▃▃▇▅▄▇</td></tr><tr><td>_runtime</td><td>▁▁▁▁▁▃▃▃▃▃▃▃▆▆▆▆▆███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▁▃▃▃▃▃▃▃▆▆▆▆▆███</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▄▄▄▅▅▅▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">charmed-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/jb7d82n8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/jb7d82n8</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 5fdu4jt6 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">hearty-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5fdu4jt6\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5fdu4jt6</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_133334-5fdu4jt6</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 8s 124ms/step - loss: 0.1715 - mean_squared_error: 0.1715 - mean_absolute_error: 0.3165 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1143\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0594 - val_loss: 0.0275 - val_mean_squared_error: 0.0275 - val_mean_absolute_error: 0.1279\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.0965 - val_loss: 0.0359 - val_mean_squared_error: 0.0359 - val_mean_absolute_error: 0.1455\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - mean_absolute_error: 0.0842 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0996\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0754 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1000\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0836 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0924\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0768 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1090\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0759 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0929\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0619 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0823\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0558 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0769\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0747 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0776\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0490 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0761\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0721 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0857\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0700 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1096\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0834 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0774\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0680 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0717\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0744 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0640\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0509 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0709\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0586 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0707\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0536 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0608\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0571 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0576\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0488 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0571\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0513 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0633\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0546 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0657\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0598 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1045\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0604 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0574\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0478 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0529\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0455 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0567\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0454 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0669\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0558 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0752\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0581 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0546\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0591 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0608\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0536 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0421 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0604\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0551 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0667\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0425 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0537\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0480 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0512\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0384 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0468\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0419 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0488\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0432 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0508\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0410 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0691\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0544 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0533\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0436 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0452\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0298 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0526\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0429 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0462\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0383 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0420 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0336 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0576\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0456 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0517\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0487 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0579\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0429 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0445\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0287 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0442\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0324 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0571\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0488 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0451\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0445 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0454\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0366 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0695\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0366 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0564\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 30ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0465 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0579\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0362 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0447\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0327 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0582\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0415 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0527\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0333 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0425\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0323 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0694\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0424 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0616\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0422 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0451\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0326 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0486\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0400 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0486\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0366 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0473\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0375 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0436\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0354 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0722\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0433 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0392 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0294 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0503\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0427 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0399 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0546\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0362 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0502\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0350 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0349 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0604\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0397 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0275 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0445\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0316 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0557\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0382 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0425\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0287 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0313 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0271 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0614\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0402 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0496\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0369 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0456\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0346 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0471\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 309<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "01316e05ee5e4889ac55183d60087cfd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.25MB of 2.25MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133334-5fdu4jt6/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133334-5fdu4jt6/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>88</td></tr><tr><td>loss</td><td>0.00255</td></tr><tr><td>mean_squared_error</td><td>0.00255</td></tr><tr><td>mean_absolute_error</td><td>0.03326</td></tr><tr><td>val_loss</td><td>0.00378</td></tr><tr><td>val_mean_squared_error</td><td>0.00378</td></tr><tr><td>val_mean_absolute_error</td><td>0.04707</td></tr><tr><td>_runtime</td><td>40</td></tr><tr><td>_timestamp</td><td>1626356054</td></tr><tr><td>_step</td><td>88</td></tr><tr><td>best_val_loss</td><td>0.00276</td></tr><tr><td>best_epoch</td><td>78</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄█▄▅▃▂▄▃▂▂▂▄▂▂▂▂▁▁▂▁▁▁▂▁▁▂▁▁▂▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▄█▄▅▃▂▄▃▂▂▂▄▂▂▂▂▁▁▂▁▁▁▂▁▁▂▁▁▂▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆█▅▆▃▃▆▃▃▂▃▅▂▃▂▂▂▂▃▁▁▂▂▁▁▂▁▂▂▂▁▃▂▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">hearty-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5fdu4jt6\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5fdu4jt6</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: aimr08ue with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dandy-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/aimr08ue\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/aimr08ue</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_133424-aimr08ue</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "32/32 [==============================] - 8s 80ms/step - loss: 0.1228 - mean_squared_error: 0.1228 - mean_absolute_error: 0.2658 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1063\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0699 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0875\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0536 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0855\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0525 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0803\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0483 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0777\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0473 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0723\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0466 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0726\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0434 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0663\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0422 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0689\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0449 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0652\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0491 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0607\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0361 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0620\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 1s 16ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0441 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0615\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 0s 16ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0501 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0577\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0396 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0593\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0347 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0582\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0370 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0566\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0339 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0530\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0330 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0515\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0419 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0534\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0307 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0573\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0357 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0499\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0359 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0497\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0302 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0533\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0363 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0490\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0311 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0486\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0290 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0477\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0306 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0484\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0400 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0473\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0335 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0513\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0340 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0464\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0299 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0503\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0334 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0461\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0312 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0488\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0292 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0471\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0312 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0515\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0301 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0457\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0304 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0618\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0421 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0297 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0479\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0303 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0390 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0476\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0297 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0456\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0300 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0465\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0291 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0456\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0283 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0453\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0288 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0297 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0453\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0289 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0435\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0259 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0460\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0275 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0433\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0294 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0470\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0310 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0431\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0272 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0310 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0459\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0290 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0419\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0258 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0289 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0435\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0292 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0461\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0311 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0422\n",
            "Epoch 61/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0257 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 62/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0284 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0418\n",
            "Epoch 63/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0260 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0426\n",
            "Epoch 64/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0276 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 65/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0291 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0427\n",
            "Epoch 66/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0271 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 67/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0421\n",
            "Epoch 68/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0273 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 69/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0279 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0418\n",
            "Epoch 70/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0264 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0414\n",
            "Epoch 71/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0253 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0432\n",
            "Epoch 72/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0254 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 73/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0270 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0444\n",
            "Epoch 74/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0289 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 75/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0294 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 76/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0420\n",
            "Epoch 77/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0294 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 78/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0257 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0476\n",
            "Epoch 79/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0364 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 80/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0266 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 81/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0249 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0424\n",
            "Epoch 82/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 83/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0313 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 84/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0258 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0416\n",
            "Epoch 85/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0249 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 86/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0270 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 87/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0244 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 88/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0270 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0460\n",
            "Epoch 89/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0277 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 90/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0245 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0434\n",
            "Epoch 91/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0319 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0407\n",
            "Epoch 92/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0251 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0412\n",
            "Epoch 93/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0528\n",
            "Epoch 94/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0330 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0408\n",
            "Epoch 95/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0251 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0407\n",
            "Epoch 96/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 97/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0255 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 98/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0518\n",
            "Epoch 99/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0387 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 100/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0284 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0407\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 637<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "21ca2f7a6877404eb3a3d9c54f236cfd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.23MB of 3.23MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133424-aimr08ue/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133424-aimr08ue/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00178</td></tr><tr><td>mean_squared_error</td><td>0.00178</td></tr><tr><td>mean_absolute_error</td><td>0.02593</td></tr><tr><td>val_loss</td><td>0.00279</td></tr><tr><td>val_mean_squared_error</td><td>0.00279</td></tr><tr><td>val_mean_absolute_error</td><td>0.04069</td></tr><tr><td>_runtime</td><td>113</td></tr><tr><td>_timestamp</td><td>1626356177</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00272</td></tr><tr><td>best_epoch</td><td>94</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▄▃▃▃▂▂▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▄▃▃▃▂▂▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▄▄▃▃▃▂▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dandy-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/aimr08ue\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/aimr08ue</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: sbmk4wq9 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">earnest-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/sbmk4wq9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/sbmk4wq9</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_133646-sbmk4wq9</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 248ms/step - loss: 0.8852 - mean_squared_error: 0.8852 - mean_absolute_error: 0.6713 - val_loss: 0.0436 - val_mean_squared_error: 0.0436 - val_mean_absolute_error: 0.1828\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0454 - mean_squared_error: 0.0454 - mean_absolute_error: 0.1761 - val_loss: 0.0398 - val_mean_squared_error: 0.0398 - val_mean_absolute_error: 0.1741\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0285 - mean_squared_error: 0.0285 - mean_absolute_error: 0.1459 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1018\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0884 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0990\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0555 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0732\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0516 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0771\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0434 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0662\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0419 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0634\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0357 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0642\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0400 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0601\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0367 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0572\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0351 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0586\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0381 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0554\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0342 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0540\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0323 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0540\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0333 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0525\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0350 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0544\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0353 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0508\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0326 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0513\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0320 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0577\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0352 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0556\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0394 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0518\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0346 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0558\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0366 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0475\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0282 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0307 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0483\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0291 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0472\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0312 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0479\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0305 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0489\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0358 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0300 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0274 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0475\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0283 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0440\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0466\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0311 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0456\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0294 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0439\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0283 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0436\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0269 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0465\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0267 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0454\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0273 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0505\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0282 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0447\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0283 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0441\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0289 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0438\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0317 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0492\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0275 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0454\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0280 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0268 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0524\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0316 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0254 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0453\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0271 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 994<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "341681ee65994a888161b8913f320f69",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.26MB of 3.26MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133646-sbmk4wq9/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133646-sbmk4wq9/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00213</td></tr><tr><td>mean_squared_error</td><td>0.00213</td></tr><tr><td>mean_absolute_error</td><td>0.0268</td></tr><tr><td>val_loss</td><td>0.00347</td></tr><tr><td>val_mean_squared_error</td><td>0.00347</td></tr><tr><td>val_mean_absolute_error</td><td>0.04676</td></tr><tr><td>_runtime</td><td>24</td></tr><tr><td>_timestamp</td><td>1626356230</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00304</td></tr><tr><td>best_epoch</td><td>47</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▄▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▄▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▄▄▃▂▂▂▂▂▂▂▂▂▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">earnest-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/sbmk4wq9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/sbmk4wq9</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: xrp5ozx1 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">vague-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xrp5ozx1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xrp5ozx1</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_133728-xrp5ozx1</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 8s 118ms/step - loss: 0.0995 - mean_squared_error: 0.0995 - mean_absolute_error: 0.2385 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1004\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0202 - mean_squared_error: 0.0202 - mean_absolute_error: 0.0996 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1016\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0768 - val_loss: 0.0262 - val_mean_squared_error: 0.0262 - val_mean_absolute_error: 0.1274\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0905 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0945\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0650 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1018\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0799 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0899\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0777 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0870\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0547 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0904\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0693 - val_loss: 0.0236 - val_mean_squared_error: 0.0236 - val_mean_absolute_error: 0.1211\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0730 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0975\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0820 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0764\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0665 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0917\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0768 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0838\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0639 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1130\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0808 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0758\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0640 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0677\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0536 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0870\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0617 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0584\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0640 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0581\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0581 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0566\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0559 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0578\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0552 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0597\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0551 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0788\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0584 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0794\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0660 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0865\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0537 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0546\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0500 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0710\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0591 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0584\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0427 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0589\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0444 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0583\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0458 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0534\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0445 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0522\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0402 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0518\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0356 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0521\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0389 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0576\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0489 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0497\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0419 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0534\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0425 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0487\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0428 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0630\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0424 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0541\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0402 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0526\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 20ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0473 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0568\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0423 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0461\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0445 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0479\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0418 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0485\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0399 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0531\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0353 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0357 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0505\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0368 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0577\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0405 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0594\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0411 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0662\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0406 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0596\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 19ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0456 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0485\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1199<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "1f3eef1ea34947828dbebd74da1d53bf",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.33MB of 2.33MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133728-xrp5ozx1/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133728-xrp5ozx1/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>52</td></tr><tr><td>loss</td><td>0.00347</td></tr><tr><td>mean_squared_error</td><td>0.00347</td></tr><tr><td>mean_absolute_error</td><td>0.03944</td></tr><tr><td>val_loss</td><td>0.00377</td></tr><tr><td>val_mean_squared_error</td><td>0.00377</td></tr><tr><td>val_mean_absolute_error</td><td>0.04853</td></tr><tr><td>_runtime</td><td>30</td></tr><tr><td>_timestamp</td><td>1626356278</td></tr><tr><td>_step</td><td>52</td></tr><tr><td>best_val_loss</td><td>0.00368</td></tr><tr><td>best_epoch</td><td>42</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▄▃▃▃▃▃▂▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▅█▅▄▄▇▅▃▃▆▃▄▂▂▂▂▃▃▂▃▂▂▁▁▁▂▁▁▂▁▂▁▁▁▁▁▂▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▅▅█▅▄▄▇▅▃▃▆▃▄▂▂▂▂▃▃▂▃▂▂▁▁▁▂▁▁▂▁▂▁▁▁▁▁▂▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆▆█▆▅▅▇▅▄▄▇▄▅▂▂▂▂▄▄▂▃▂▂▂▁▂▂▂▁▂▂▂▁▁▂▁▂▂▃▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">vague-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xrp5ozx1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xrp5ozx1</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4a985kow with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">curious-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4a985kow\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4a985kow</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_133809-4a985kow</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 19s 286ms/step - loss: 0.1967 - mean_squared_error: 0.1967 - mean_absolute_error: 0.3570 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1222\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0751 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1045\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0535 - val_loss: 0.0277 - val_mean_squared_error: 0.0277 - val_mean_absolute_error: 0.1305\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0695 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1205\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 7s 212ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0653 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0959\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0545 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0940\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0635 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0960\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 7s 211ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0564 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0980\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0459 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0947\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0502 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0944\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 7s 233ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0462 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0959\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0436 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0934\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 7s 210ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0442 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0942\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0426 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0913\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0465 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0917\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0381 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.1008\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0399 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0892\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0404 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0887\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 7s 226ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0376 - val_loss: 0.0243 - val_mean_squared_error: 0.0243 - val_mean_absolute_error: 0.1277\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 7s 233ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0577 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0861\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0453 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0897\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0351 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0878\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 7s 208ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0415 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0980\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 7s 205ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0404 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0926\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0364 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0829\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0360 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0868\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 7s 214ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0365 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0989\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0459 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0821\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0384 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0864\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0413 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0863\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 7s 226ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0340 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0976\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0356 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1017\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 7s 213ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0333 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0862\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0366 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0929\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0334 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0806\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 7s 210ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0349 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0856\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 7s 227ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0318 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0847\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 7s 234ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0348 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0910\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0321 - val_loss: 0.0205 - val_mean_squared_error: 0.0205 - val_mean_absolute_error: 0.1189\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0407 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1117\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0418 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0904\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 7s 235ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0305 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0885\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0321 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0853\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0385 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0895\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0333 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0895\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1413<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "cfb76553eb7644e59e441dfe59dafc05",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.31MB of 3.31MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133809-4a985kow/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_133809-4a985kow/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>44</td></tr><tr><td>loss</td><td>0.00277</td></tr><tr><td>mean_squared_error</td><td>0.00277</td></tr><tr><td>mean_absolute_error</td><td>0.03327</td></tr><tr><td>val_loss</td><td>0.01219</td></tr><tr><td>val_mean_squared_error</td><td>0.01219</td></tr><tr><td>val_mean_absolute_error</td><td>0.0895</td></tr><tr><td>_runtime</td><td>337</td></tr><tr><td>_timestamp</td><td>1626356626</td></tr><tr><td>_step</td><td>44</td></tr><tr><td>best_val_loss</td><td>0.00984</td></tr><tr><td>best_epoch</td><td>34</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆▄█▆▃▂▃▃▂▂▂▂▂▂▃▂▇▁▂▂▃▂▁▂▁▂▂▃▃▂▂▁▁▂▅▅▂▂▂▂</td></tr><tr><td>val_mean_squared_error</td><td>▆▄█▆▃▂▃▃▂▂▂▂▂▂▃▂▇▁▂▂▃▂▁▂▁▂▂▃▃▂▂▁▁▂▅▅▂▂▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>▇▄█▇▃▃▃▃▃▃▃▃▂▃▄▂█▂▂▂▃▃▁▂▁▂▂▃▄▂▃▁▂▂▆▅▂▂▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">curious-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4a985kow\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4a985kow</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: gzu6n0gw with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">soft-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/gzu6n0gw\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/gzu6n0gw</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_134455-gzu6n0gw</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 9s 264ms/step - loss: 0.2709 - mean_squared_error: 0.2709 - mean_absolute_error: 0.4533 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1139\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.0915 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1102\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0827 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.1011\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0843 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0975\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0689 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1024\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0712 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0920\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0679 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0958\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0647 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0903\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0645 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0892\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0685 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0902\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0728 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0975\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0630 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0861\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0565 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0813\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0517 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0818\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0534 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0822\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0617 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0765\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0543 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0789\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0521 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0791\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0550 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0902\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0791 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0755\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0515 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0750\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0535 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0738\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0507 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0707\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0418 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0707\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0437 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0681\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0496 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0779\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0690 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0698\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0535 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0670\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0482 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0672\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0538 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0657\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0411 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0678\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0534 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0654\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0397 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0632\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0409 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0635\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0457 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0623\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0421 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0630\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0387 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0621\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0471 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0684\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0495 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0701\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0624 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0795\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0514 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0598\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0403 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0623\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0403 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0663\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0496 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0595\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0407 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0590\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0398 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0586\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0352 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0565\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0407 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0583\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0352 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0632\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0382 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0568\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0378 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0552\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0364 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0543\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0383 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0854\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0799 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0555\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0359 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0623\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0515 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0581\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0360 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0647\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0449 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0701\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0490 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0556\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0382 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0542\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0395 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0550\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0406 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0562\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0337 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0567\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0364 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0526\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0394 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0558\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0532 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0536\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0353 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0587\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0380 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0527\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0360 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0604\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0406 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0514\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0315 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0530\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0391 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0578\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0398 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0633\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0476 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0522\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0339 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0538\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0410 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0541\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0350 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0507\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0327 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0505\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0306 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0545\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0363 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0528\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0387 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0522\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0359 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0552\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0393 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0530\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0441 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0490\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0358 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0489\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0287 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0607\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0415 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0491\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0379 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0498\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0342 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0507\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0305 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0304 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0524\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 0s 31ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0327 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0472\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0294 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0374 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0555\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0481 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0496\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0317 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0483\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0314 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0575\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 0s 31ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0539 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0483\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0307 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0501\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0338 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0474\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0297 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0337 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0307 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0467\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0347 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0497\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0316 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0508\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0356 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0584\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0440 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0497\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0314 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0476\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0373 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0400 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0493\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0312 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0489\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0333 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0465\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0307 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0466\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0311 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0466\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0351 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0300 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0466\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0339 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0460\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0293 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0467\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0296 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0460\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0313 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0473\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0308 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0477\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0315 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0549\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0348 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0456\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0324 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0462\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0309 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0386 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0470\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0301 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0461\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0296 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0460\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0306 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0601\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0417 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0515\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0302 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0350 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0464\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0317 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0460\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0345 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0451\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0392 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0456\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0326 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0449\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0281 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0501\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0365 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0448\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0268 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0472\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0302 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0448\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0275 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0276 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0488\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0387 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0484\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0368 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0446\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0306 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0443\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0291 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0441\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 0s 31ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0277 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0461\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0357 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0560\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0361 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0440\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0265 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0463\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0320 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0438\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0268 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0437\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0300 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0461\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 0s 31ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0301 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0549\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0372 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0471\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0317 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0450\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0336 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0439\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0296 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0531\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 0s 29ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0488 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1603<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "908beceeed19423399da315d4da2c43b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.36MB of 3.36MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134455-gzu6n0gw/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134455-gzu6n0gw/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>160</td></tr><tr><td>loss</td><td>0.00399</td></tr><tr><td>mean_squared_error</td><td>0.00399</td></tr><tr><td>mean_absolute_error</td><td>0.04261</td></tr><tr><td>val_loss</td><td>0.00335</td></tr><tr><td>val_mean_squared_error</td><td>0.00335</td></tr><tr><td>val_mean_absolute_error</td><td>0.04381</td></tr><tr><td>_runtime</td><td>52</td></tr><tr><td>_timestamp</td><td>1626356747</td></tr><tr><td>_step</td><td>160</td></tr><tr><td>best_val_loss</td><td>0.00333</td></tr><tr><td>best_epoch</td><td>150</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▆▄▄▄▄▄▂▃▂▂▂▄▂▂▃▂▂▁▂▁▁▂▂▁▂▁▁▁▁▂▁▁▁▁▁▂▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▆▄▄▄▄▄▂▃▂▂▂▄▂▂▃▂▂▁▂▁▁▂▂▁▂▁▁▁▁▂▁▁▁▁▁▂▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▇▄▄▄▄▄▂▄▂▂▂▅▃▂▄▂▃▁▂▁▁▃▃▂▂▂▁▁▂▂▂▁▁▁▁▂▁▁</td></tr><tr><td>val_loss</td><td>█▆▆▅▅▅▅▃▃▃▃▂▂▂▃▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▂▁▂▁▂▁▁▂▁▂</td></tr><tr><td>val_mean_squared_error</td><td>█▆▆▅▅▅▅▃▃▃▃▂▂▂▃▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▂▁▂▁▂▁▁▂▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▆▅▅▄▅▃▃▄▃▃▂▂▄▂▂▂▂▂▂▃▁▂▁▁▃▂▁▁▂▁▃▁▂▁▁▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">soft-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/gzu6n0gw\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/gzu6n0gw</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: qfp43zwg with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">zany-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/qfp43zwg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/qfp43zwg</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_134558-qfp43zwg</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 11s 338ms/step - loss: 88.5529 - mean_squared_error: 88.5529 - mean_absolute_error: 1.6555 - val_loss: 0.1441 - val_mean_squared_error: 0.1441 - val_mean_absolute_error: 0.3322\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0640 - mean_squared_error: 0.0640 - mean_absolute_error: 0.2183 - val_loss: 0.0724 - val_mean_squared_error: 0.0724 - val_mean_absolute_error: 0.2313\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 4s 233ms/step - loss: 0.0232 - mean_squared_error: 0.0232 - mean_absolute_error: 0.1208 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1112\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 4s 236ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0566 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1156\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 4s 224ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0690 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1091\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 4s 221ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0634 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0946\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 4s 232ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0483 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0773\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 4s 243ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0418 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0760\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 4s 247ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0405 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0735\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 4s 250ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0420 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0738\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 4s 237ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0398 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0694\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 4s 236ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0354 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0664\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 4s 259ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0398 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0716\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 4s 236ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0466 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0667\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 4s 222ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0362 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0696\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 4s 223ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0419 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0684\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0366 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0632\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 3s 213ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0383 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0656\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0362 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0742\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 4s 230ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0386 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0629\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0363 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0647\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 4s 226ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0321 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0639\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 4s 226ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0322 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0622\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 4s 232ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0329 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0671\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 4s 244ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0330 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0800\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 4s 259ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0420 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0617\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 4s 247ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0315 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0636\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 4s 242ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0350 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0671\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 4s 245ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0299 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0662\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 4s 242ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0311 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0651\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 4s 229ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0278 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0702\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 4s 231ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0306 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0746\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 4s 236ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0331 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0636\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 4s 255ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0311 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0695\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 4s 253ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0324 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0710\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 4s 263ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0288 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0745\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2141<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ce99c1ab1e9846e4a843d112aebaeb0c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.38MB of 3.38MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134558-qfp43zwg/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134558-qfp43zwg/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>35</td></tr><tr><td>loss</td><td>0.00208</td></tr><tr><td>mean_squared_error</td><td>0.00208</td></tr><tr><td>mean_absolute_error</td><td>0.02844</td></tr><tr><td>val_loss</td><td>0.0086</td></tr><tr><td>val_mean_squared_error</td><td>0.0086</td></tr><tr><td>val_mean_absolute_error</td><td>0.07452</td></tr><tr><td>_runtime</td><td>150</td></tr><tr><td>_timestamp</td><td>1626356908</td></tr><tr><td>_step</td><td>35</td></tr><tr><td>best_val_loss</td><td>0.00611</td></tr><tr><td>best_epoch</td><td>25</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">zany-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/qfp43zwg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/qfp43zwg</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: korgj7dp with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">celestial-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/korgj7dp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/korgj7dp</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_134839-korgj7dp</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "32/32 [==============================] - 8s 71ms/step - loss: 1.1210 - mean_squared_error: 1.1210 - mean_absolute_error: 0.6576 - val_loss: 0.1943 - val_mean_squared_error: 0.1943 - val_mean_absolute_error: 0.3891\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0713 - mean_squared_error: 0.0713 - mean_absolute_error: 0.2217 - val_loss: 0.0956 - val_mean_squared_error: 0.0956 - val_mean_absolute_error: 0.2369\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0708 - mean_squared_error: 0.0708 - mean_absolute_error: 0.2181 - val_loss: 0.1362 - val_mean_squared_error: 0.1362 - val_mean_absolute_error: 0.3215\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0714 - mean_squared_error: 0.0714 - mean_absolute_error: 0.2217 - val_loss: 0.1420 - val_mean_squared_error: 0.1420 - val_mean_absolute_error: 0.3288\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0564 - mean_squared_error: 0.0564 - mean_absolute_error: 0.1978 - val_loss: 0.0690 - val_mean_squared_error: 0.0690 - val_mean_absolute_error: 0.2178\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0590 - mean_squared_error: 0.0590 - mean_absolute_error: 0.2014 - val_loss: 0.0762 - val_mean_squared_error: 0.0762 - val_mean_absolute_error: 0.2351\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.1224 - mean_squared_error: 0.1224 - mean_absolute_error: 0.1967 - val_loss: 0.1382 - val_mean_squared_error: 0.1382 - val_mean_absolute_error: 0.3502\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0595 - mean_squared_error: 0.0595 - mean_absolute_error: 0.1897 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1038\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0165 - mean_squared_error: 0.0165 - mean_absolute_error: 0.0909 - val_loss: 0.0323 - val_mean_squared_error: 0.0323 - val_mean_absolute_error: 0.1478\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0638 - val_loss: 0.0569 - val_mean_squared_error: 0.0569 - val_mean_absolute_error: 0.2013\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0729 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1034\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0699 - val_loss: 0.0371 - val_mean_squared_error: 0.0371 - val_mean_absolute_error: 0.1565\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.0857 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0849\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0575 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0694\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0728 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0670\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0585 - val_loss: 0.0493 - val_mean_squared_error: 0.0493 - val_mean_absolute_error: 0.1874\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0746 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0489 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0650\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0550 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0531\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0529 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0549\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0475 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0538\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0380 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0804\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0484 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0557\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0441 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0550\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0408 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0556\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0388 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1135\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0471 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0968\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2304<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "878228b4413941788acec67cb562a630",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.45MB of 2.45MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134839-korgj7dp/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134839-korgj7dp/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>26</td></tr><tr><td>loss</td><td>0.00371</td></tr><tr><td>mean_squared_error</td><td>0.00371</td></tr><tr><td>mean_absolute_error</td><td>0.04219</td></tr><tr><td>val_loss</td><td>0.01475</td></tr><tr><td>val_mean_squared_error</td><td>0.01475</td></tr><tr><td>val_mean_absolute_error</td><td>0.09681</td></tr><tr><td>_runtime</td><td>29</td></tr><tr><td>_timestamp</td><td>1626356948</td></tr><tr><td>_step</td><td>26</td></tr><tr><td>best_val_loss</td><td>0.0046</td></tr><tr><td>best_epoch</td><td>16</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▄▄▄▄▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▆▆▃▄▆▁▂▃▁▂▁▁▁▃▁▁▁▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▆▆▃▄▆▁▂▃▁▂▁▁▁▃▁▁▁▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▇▇▄▅▇▂▃▄▂▃▂▁▁▄▁▁▁▁▁▂▁▁▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▆▆▆▆▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▆▆▆▆▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">celestial-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/korgj7dp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/korgj7dp</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: q7zz592u with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">eager-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/q7zz592u\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/q7zz592u</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_134920-q7zz592u</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "16/16 [==============================] - 9s 132ms/step - loss: 0.1573 - mean_squared_error: 0.1573 - mean_absolute_error: 0.3089 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1029\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0744 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0994\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0753 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0890\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0667 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0882\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0630 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0843\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0573 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1030\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0662 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0795\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0532 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0776\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0530 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0750\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0532 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0772\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0567 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0777\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0511 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0767\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0600 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0687\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0487 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0731\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0554 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0708\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0481 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0690\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0503 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0698\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0596 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0647\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0424 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0620\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0463 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0641\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0441 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0608\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0395 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0617\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0410 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0661\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0589 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0603\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0400 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0640\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0460 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0615\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0449 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0628\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0384 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0589\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0462 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0628\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0584 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0564\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0371 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0558\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0382 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0575\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0354 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0548\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0360 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0541\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0452 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0568\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0386 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0571\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0382 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0539\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0371 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0559\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0342 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0653\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0505 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0529\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0348 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0524\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0367 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0515\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0354 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0517\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0367 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0516\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0425 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0522\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0335 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0535\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0301 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0567\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0355 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0379 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0535\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0320 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0549\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2440<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e74791ff483c46a1bf8a7bc9277694d8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.42MB of 3.42MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134920-q7zz592u/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_134920-q7zz592u/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00288</td></tr><tr><td>mean_squared_error</td><td>0.00288</td></tr><tr><td>mean_absolute_error</td><td>0.03271</td></tr><tr><td>val_loss</td><td>0.00485</td></tr><tr><td>val_mean_squared_error</td><td>0.00485</td></tr><tr><td>val_mean_absolute_error</td><td>0.0549</td></tr><tr><td>_runtime</td><td>35</td></tr><tr><td>_timestamp</td><td>1626356995</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.0045</td></tr><tr><td>best_epoch</td><td>47</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▆▅█▅▄▄▅▄▃▃▄▃▂▃▂▂▃▂▂▂▂▂▂▂▂▁▁▂▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▆▅█▅▄▄▅▄▃▃▄▃▂▃▂▂▃▂▂▂▂▂▂▂▂▁▁▂▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▆▆█▅▅▄▅▅▄▄▄▄▃▃▂▃▃▂▃▃▂▃▂▂▂▂▂▂▂▃▁▁▁▁▂▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">eager-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/q7zz592u\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/q7zz592u</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: xqgt9wpj with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">vivid-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xqgt9wpj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xqgt9wpj</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_135007-xqgt9wpj</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "16/16 [==============================] - 12s 376ms/step - loss: 0.3066 - mean_squared_error: 0.3066 - mean_absolute_error: 0.4939 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1184\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 4s 236ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0765 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1198\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 4s 246ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0760 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1154\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 4s 249ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0688 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1084\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 4s 246ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0574 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1053\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 4s 242ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0644 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0996\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 4s 248ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0661 - val_loss: 0.0212 - val_mean_squared_error: 0.0212 - val_mean_absolute_error: 0.1151\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 4s 243ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0610 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1005\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 4s 224ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0600 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0948\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 4s 228ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0560 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0971\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 4s 228ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0459 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.1030\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 4s 233ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0506 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0968\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0476 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1031\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0433 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1000\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0427 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0926\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 4s 231ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0545 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0989\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 3s 212ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0438 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0936\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0416 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0951\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 4s 242ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0504 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1067\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 4s 246ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0511 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0950\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 4s 242ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0455 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1062\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 4s 256ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0475 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0951\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 4s 249ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0416 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.1006\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 4s 252ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0517 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1022\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 4s 257ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0463 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0908\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0403 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0888\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 4s 234ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0525 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1028\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 4s 232ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0487 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0895\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0419 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0919\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 4s 232ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0454 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0946\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 4s 233ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0384 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0903\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0394 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0920\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 4s 229ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0372 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0838\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 4s 225ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0428 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1054\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0447 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0852\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 4s 222ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0396 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0897\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 4s 244ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0368 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0907\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 4s 245ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0364 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0919\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 4s 243ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0443 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0891\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 4s 244ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0381 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0954\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 4s 256ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0332 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0960\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 4s 259ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0348 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1025\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 4s 246ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0433 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0966\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2645<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "6055395455b24fdb901d86738ace5a78",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.44MB of 3.44MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_135007-xqgt9wpj/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_135007-xqgt9wpj/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>42</td></tr><tr><td>loss</td><td>0.00361</td></tr><tr><td>mean_squared_error</td><td>0.00361</td></tr><tr><td>mean_absolute_error</td><td>0.03759</td></tr><tr><td>val_loss</td><td>0.01428</td></tr><tr><td>val_mean_squared_error</td><td>0.01428</td></tr><tr><td>val_mean_absolute_error</td><td>0.09655</td></tr><tr><td>_runtime</td><td>178</td></tr><tr><td>_timestamp</td><td>1626357185</td></tr><tr><td>_step</td><td>42</td></tr><tr><td>best_val_loss</td><td>0.01038</td></tr><tr><td>best_epoch</td><td>32</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>██▇▆▅▄█▅▃▄▅▄▅▃▄▃▃▅▃▅▃▄▄▂▂▄▂▃▂▂▁▅▁▂▂▂▂▃▃▃</td></tr><tr><td>val_mean_squared_error</td><td>██▇▆▅▄█▅▃▄▅▄▅▃▄▃▃▅▃▅▃▄▄▂▂▄▂▃▂▂▁▅▁▂▂▂▂▃▃▃</td></tr><tr><td>val_mean_absolute_error</td><td>██▇▆▅▄▇▄▃▄▅▄▅▃▄▃▃▅▃▅▃▄▅▂▂▅▃▃▂▃▁▅▁▂▂▃▂▃▃▃</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">vivid-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xqgt9wpj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/xqgt9wpj</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: tkj4o9lz with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sage-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/tkj4o9lz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/tkj4o9lz</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_135351-tkj4o9lz</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 16s 291ms/step - loss: 1504.1151 - mean_squared_error: 1504.1151 - mean_absolute_error: 4.8111 - val_loss: 0.0237 - val_mean_squared_error: 0.0237 - val_mean_absolute_error: 0.1302\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0849 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1250\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 7s 230ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0770 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1107\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0691 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1062\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 8s 242ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0586 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1038\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0520 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0998\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0581 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0991\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 7s 223ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0758 - val_loss: 0.0262 - val_mean_squared_error: 0.0262 - val_mean_absolute_error: 0.1343\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0195 - mean_squared_error: 0.0195 - mean_absolute_error: 0.0985 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1063\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0206 - mean_squared_error: 0.0206 - mean_absolute_error: 0.1038 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1121\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0775 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1253\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0791 - val_loss: 0.0297 - val_mean_squared_error: 0.0297 - val_mean_absolute_error: 0.1403\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 8s 243ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - mean_absolute_error: 0.0843 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1102\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0766 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0977\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0649 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1038\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0669 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0985\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0573 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0915\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 7s 214ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0592 - val_loss: 0.0269 - val_mean_squared_error: 0.0269 - val_mean_absolute_error: 0.1370\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0651 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0912\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 7s 205ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0535 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0953\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0576 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0897\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0471 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0938\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0555 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0775\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0604 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0907\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0523 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0979\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0495 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0828\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0475 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0828\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0507 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0830\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 7s 223ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0464 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0808\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0471 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0735\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0451 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0761\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0489 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0901\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 7s 227ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0418 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0744\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 7s 214ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0432 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0760\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0439 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0729\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0416 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.1042\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0512 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0698\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0370 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0732\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 8s 234ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0356 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0726\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 8s 245ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0403 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0739\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0381 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0694\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0390 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0762\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 7s 227ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0430 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0768\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 7s 227ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0343 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0667\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0409 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0658\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 7s 234ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0344 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0667\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0399 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0730\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0338 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0765\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0328 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0671\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0356 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0693\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0339 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0701\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0398 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0656\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0342 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0717\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 8s 245ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0334 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0680\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2829<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e30b59a49505490eb1827548ba7ff9d3",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.52MB of 2.52MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_135351-tkj4o9lz/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_135351-tkj4o9lz/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>53</td></tr><tr><td>loss</td><td>0.00287</td></tr><tr><td>mean_squared_error</td><td>0.00287</td></tr><tr><td>mean_absolute_error</td><td>0.03545</td></tr><tr><td>val_loss</td><td>0.0074</td></tr><tr><td>val_mean_squared_error</td><td>0.0074</td></tr><tr><td>val_mean_absolute_error</td><td>0.068</td></tr><tr><td>_runtime</td><td>405</td></tr><tr><td>_timestamp</td><td>1626357636</td></tr><tr><td>_step</td><td>53</td></tr><tr><td>best_val_loss</td><td>0.00677</td></tr><tr><td>best_epoch</td><td>43</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▆▅▄▄▄▅▅▇▅▄▅▄█▃▃▃▃▄▂▂▂▂▃▂▂▄▁▂▂▁▂▁▁▁▂▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▆▅▄▄▄▅▅▇▅▄▅▄█▃▃▃▃▄▂▂▂▂▃▂▂▄▁▂▂▁▂▁▁▁▂▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▇▅▅▄▄▅▆▇▅▄▅▄█▄▃▄▃▄▃▃▂▂▃▂▂▅▁▂▂▁▂▁▁▂▂▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sage-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/tkj4o9lz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/tkj4o9lz</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 91bx01bf with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">clean-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/91bx01bf\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/91bx01bf</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_140133-91bx01bf</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 9s 259ms/step - loss: 0.2141 - mean_squared_error: 0.2141 - mean_absolute_error: 0.3928 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1113\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0848 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1098\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0758 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.1025\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0833 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1058\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0211 - mean_squared_error: 0.0211 - mean_absolute_error: 0.1095 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0955\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0207 - mean_squared_error: 0.0207 - mean_absolute_error: 0.1018 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0936\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0881 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0909\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0819 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0906\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0680 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1134\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - mean_absolute_error: 0.0954 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1030\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0842 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0823\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0816 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0856\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0576 - val_loss: 0.0269 - val_mean_squared_error: 0.0269 - val_mean_absolute_error: 0.1288\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0236 - mean_squared_error: 0.0236 - mean_absolute_error: 0.1155 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0872\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0837 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0802\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0873 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0864\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0608 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0892\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0973 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0758\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0757 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0744\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0631 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0869\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0740 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1126\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - mean_absolute_error: 0.0902 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0919\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0813 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0928\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0695 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1005\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0774 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0678\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0725 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0772\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0724 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0657\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0629 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0647\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0546 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0884\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0665 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0688\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0751 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0681\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0691 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0651\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0511 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0670\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0649 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0742\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0539 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0805\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0750 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0669\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0567 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0647\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0577 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0731\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0639 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0623\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0585 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0755\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0603 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0671\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0651 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0702\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0571 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0626\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0620 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0662\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0417 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0646\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0693 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0567\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0491 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0562\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0441 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0675\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0574 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0618\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0607 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0579\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0421 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0785\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0621 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0543\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0489 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0615\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0554 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0558\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0423 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0609\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0536 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0552\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0408 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0784\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0583 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0578\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0484 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0605\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0413 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0620\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0588 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0537\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0497 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0593\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0502 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0516\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0493 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0566\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0396 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0729\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0554 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0570\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0509 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0508\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0350 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0807\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0597 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0550\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0474 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0509\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0382 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0639\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0536 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0565\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0438 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0522\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0503 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0384 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0506\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0410 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0395 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0513\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0383 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0602\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0474 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0579\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0461 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0412 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0528\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0439 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0528\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0376 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0479\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0391 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0493\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0322 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0493\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0436 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0507\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3046<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c4b162c116af47f086ce630268924810",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.60MB of 0.60MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140133-91bx01bf/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140133-91bx01bf/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>85</td></tr><tr><td>loss</td><td>0.00408</td></tr><tr><td>mean_squared_error</td><td>0.00408</td></tr><tr><td>mean_absolute_error</td><td>0.04433</td></tr><tr><td>val_loss</td><td>0.00487</td></tr><tr><td>val_mean_squared_error</td><td>0.00487</td></tr><tr><td>val_mean_absolute_error</td><td>0.05067</td></tr><tr><td>_runtime</td><td>31</td></tr><tr><td>_timestamp</td><td>1626357724</td></tr><tr><td>_step</td><td>85</td></tr><tr><td>best_val_loss</td><td>0.00424</td></tr><tr><td>best_epoch</td><td>75</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▂▂▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▂▂▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▃▃▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▆▅▅█▄▄▄▃▄▅▆▃▄▂▂▃▃▃▂▂▂▃▄▂▂▃▂▂▁▁▄▁▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▆▅▅█▄▄▄▃▄▅▆▃▄▂▂▃▃▃▂▂▂▃▄▂▂▃▂▂▁▁▄▁▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▆▆█▅▅▅▄▅▆▇▃▅▃▃▄▄▄▃▃▂▃▄▂▂▄▂▂▂▂▅▁▂▁▁▂▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">clean-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/91bx01bf\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/91bx01bf</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: t7fre3x3 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">glorious-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/t7fre3x3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/t7fre3x3</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_140217-t7fre3x3</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 10s 468ms/step - loss: 0.3278 - mean_squared_error: 0.3278 - mean_absolute_error: 0.5263 - val_loss: 0.1503 - val_mean_squared_error: 0.1503 - val_mean_absolute_error: 0.3108\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 2s 247ms/step - loss: 0.1251 - mean_squared_error: 0.1251 - mean_absolute_error: 0.2899 - val_loss: 0.0222 - val_mean_squared_error: 0.0222 - val_mean_absolute_error: 0.1240\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 2s 267ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0656 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1194\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 2s 259ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0617 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1122\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 2s 253ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0619 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1105\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 2s 250ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0603 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1056\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 2s 266ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0550 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1030\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 2s 256ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0684 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0985\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 2s 238ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0587 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0969\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 2s 259ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0512 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0931\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 2s 260ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0488 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0934\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 2s 242ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0429 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0991\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 2s 242ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0606 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0968\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 2s 241ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0543 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0911\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 2s 233ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0426 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0952\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 2s 234ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0596 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0943\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0466 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0991\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 2s 239ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0665 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0882\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 2s 243ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0406 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0864\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 2s 260ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0474 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0885\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0573 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0887\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0378 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0930\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 2s 228ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0430 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0893\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 2s 254ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0395 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0933\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 2s 230ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0447 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1013\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 2s 209ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0538 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0956\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 2s 240ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0556 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0890\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 2s 226ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0430 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1011\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 2s 225ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0524 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0968\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3359<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "511a8f90ab9a4ea98ff5d05245e55176",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.52MB of 3.52MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140217-t7fre3x3/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140217-t7fre3x3/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>28</td></tr><tr><td>loss</td><td>0.00506</td></tr><tr><td>mean_squared_error</td><td>0.00506</td></tr><tr><td>mean_absolute_error</td><td>0.04538</td></tr><tr><td>val_loss</td><td>0.01375</td></tr><tr><td>val_mean_squared_error</td><td>0.01375</td></tr><tr><td>val_mean_absolute_error</td><td>0.09681</td></tr><tr><td>_runtime</td><td>71</td></tr><tr><td>_timestamp</td><td>1626357808</td></tr><tr><td>_step</td><td>28</td></tr><tr><td>best_val_loss</td><td>0.01176</td></tr><tr><td>best_epoch</td><td>18</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr><tr><td>loss</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">glorious-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/t7fre3x3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/t7fre3x3</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: cfil2ml3 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">warm-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/cfil2ml3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/cfil2ml3</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_140340-cfil2ml3</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 11s 505ms/step - loss: 0.3241 - mean_squared_error: 0.3241 - mean_absolute_error: 0.5220 - val_loss: 0.1742 - val_mean_squared_error: 0.1742 - val_mean_absolute_error: 0.3391\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 2s 292ms/step - loss: 0.1847 - mean_squared_error: 0.1847 - mean_absolute_error: 0.3752 - val_loss: 0.0401 - val_mean_squared_error: 0.0401 - val_mean_absolute_error: 0.1675\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 2s 255ms/step - loss: 0.0432 - mean_squared_error: 0.0432 - mean_absolute_error: 0.1570 - val_loss: 0.0364 - val_mean_squared_error: 0.0364 - val_mean_absolute_error: 0.1498\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 2s 254ms/step - loss: 0.0283 - mean_squared_error: 0.0283 - mean_absolute_error: 0.1255 - val_loss: 0.0280 - val_mean_squared_error: 0.0280 - val_mean_absolute_error: 0.1443\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 2s 260ms/step - loss: 0.0184 - mean_squared_error: 0.0184 - mean_absolute_error: 0.1064 - val_loss: 0.0247 - val_mean_squared_error: 0.0247 - val_mean_absolute_error: 0.1322\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 2s 247ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0891 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1229\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 2s 239ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0865 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1108\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 2s 228ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0734 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1017\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 2s 240ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0677 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0976\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 2s 260ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0612 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0971\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 2s 260ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0578 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0953\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 2s 247ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0553 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.1002\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 2s 222ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0597 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0971\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 2s 226ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0562 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0987\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 2s 234ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0572 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0984\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 2s 228ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0528 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.1011\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 2s 234ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0490 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.1002\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 2s 228ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0499 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.1017\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 2s 245ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0474 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0971\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 2s 248ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0482 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0968\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 2s 244ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0468 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.1035\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3501<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ff6733934c6945cdb5e1d861e933bac9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.54MB of 3.54MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140340-cfil2ml3/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140340-cfil2ml3/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>20</td></tr><tr><td>loss</td><td>0.00555</td></tr><tr><td>mean_squared_error</td><td>0.00555</td></tr><tr><td>mean_absolute_error</td><td>0.04751</td></tr><tr><td>val_loss</td><td>0.01562</td></tr><tr><td>val_mean_squared_error</td><td>0.01562</td></tr><tr><td>val_mean_absolute_error</td><td>0.10353</td></tr><tr><td>_runtime</td><td>56</td></tr><tr><td>_timestamp</td><td>1626357876</td></tr><tr><td>_step</td><td>20</td></tr><tr><td>best_val_loss</td><td>0.01383</td></tr><tr><td>best_epoch</td><td>10</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">warm-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/cfil2ml3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/cfil2ml3</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: u0b1lp62 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">floral-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/u0b1lp62\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/u0b1lp62</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_140526-u0b1lp62</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "32/32 [==============================] - 9s 72ms/step - loss: 0.0992 - mean_squared_error: 0.0992 - mean_absolute_error: 0.2196 - val_loss: 0.0217 - val_mean_squared_error: 0.0217 - val_mean_absolute_error: 0.1160\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0956 - val_loss: 0.0250 - val_mean_squared_error: 0.0250 - val_mean_absolute_error: 0.1215\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0845 - val_loss: 0.0303 - val_mean_squared_error: 0.0303 - val_mean_absolute_error: 0.1371\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0920 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0846\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0612 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0761\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0680 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0748\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0616 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0693\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0583 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0673\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0561 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0616\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0541 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0717\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0547 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0558\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0638 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0785\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0605 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0593\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0541 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0694\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0465 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0559\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0420 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0524\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0457 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0714\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0462 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0761\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0527 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0631\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0501 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0423 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0473 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0514\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0459 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0585\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0404 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0477\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0394 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0478\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0393 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0821\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0436 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0455\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0408 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0510\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0444 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0822\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0408 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0439\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0354 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0448\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0350 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0435\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0339 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0548\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0408 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0510\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0374 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0432\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0349 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0442\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0318 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0533\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0330 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0453\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0299 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0324 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0429\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0330 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0442\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0307 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0626\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0356 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0461\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0352 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0428\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0351 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0530\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0334 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0327 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0407\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0339 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0415\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0407\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0268 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0280 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0475\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0269 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0294 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0500\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0264 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0347 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0515\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0323 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0594\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0325 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0459\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0275 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0311 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3619<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9eee99d0ec1143a791e97b90a27a9596",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.61MB of 2.61MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140526-u0b1lp62/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140526-u0b1lp62/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>59</td></tr><tr><td>loss</td><td>0.0022</td></tr><tr><td>mean_squared_error</td><td>0.0022</td></tr><tr><td>mean_absolute_error</td><td>0.02933</td></tr><tr><td>val_loss</td><td>0.0029</td></tr><tr><td>val_mean_squared_error</td><td>0.0029</td></tr><tr><td>val_mean_absolute_error</td><td>0.04286</td></tr><tr><td>_runtime</td><td>51</td></tr><tr><td>_timestamp</td><td>1626357977</td></tr><tr><td>_step</td><td>59</td></tr><tr><td>best_val_loss</td><td>0.00278</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▅▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇█▄▃▃▃▃▂▂▂▂▃▂▁▂▂▁▃▂▃▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇█▄▃▃▃▃▂▂▂▂▃▂▁▂▂▁▃▂▃▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▅▄▃▃▄▂▃▃▂▄▃▂▂▃▂▅▂▅▁▁▂▁▂▁▁▁▁▁▂▁▁▁▂▁▁▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">floral-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/u0b1lp62\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/u0b1lp62</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: lvdrvmbr with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">robust-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/lvdrvmbr\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/lvdrvmbr</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_140630-lvdrvmbr</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "32/32 [==============================] - 9s 71ms/step - loss: 1.4646 - mean_squared_error: 1.4646 - mean_absolute_error: 0.5820 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1096\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0296 - mean_squared_error: 0.0296 - mean_absolute_error: 0.1310 - val_loss: 0.0269 - val_mean_squared_error: 0.0269 - val_mean_absolute_error: 0.1353\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0562 - mean_squared_error: 0.0562 - mean_absolute_error: 0.1875 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1216\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0377 - mean_squared_error: 0.0377 - mean_absolute_error: 0.1529 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0730\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0315 - mean_squared_error: 0.0315 - mean_absolute_error: 0.1208 - val_loss: 0.0647 - val_mean_squared_error: 0.0647 - val_mean_absolute_error: 0.2165\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0271 - mean_squared_error: 0.0271 - mean_absolute_error: 0.1190 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0905\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0859 - val_loss: 0.0257 - val_mean_squared_error: 0.0257 - val_mean_absolute_error: 0.1326\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0807 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0923\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0670 - val_loss: 0.0346 - val_mean_squared_error: 0.0346 - val_mean_absolute_error: 0.1673\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0663 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0967\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0583 - val_loss: 0.0376 - val_mean_squared_error: 0.0376 - val_mean_absolute_error: 0.1629\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0734 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0448\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0556 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0525\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0594 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0739\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0487 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0941\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0459 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0490\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0507 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1108\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0482 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0604\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0471 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0805\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0405 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0809\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0505 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0945\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0445 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0700\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3854<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "da525a5ddb094e3aa675aabed3711431",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.63MB of 2.63MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140630-lvdrvmbr/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140630-lvdrvmbr/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>21</td></tr><tr><td>loss</td><td>0.00383</td></tr><tr><td>mean_squared_error</td><td>0.00383</td></tr><tr><td>mean_absolute_error</td><td>0.04282</td></tr><tr><td>val_loss</td><td>0.00781</td></tr><tr><td>val_mean_squared_error</td><td>0.00781</td></tr><tr><td>val_mean_absolute_error</td><td>0.07004</td></tr><tr><td>_runtime</td><td>28</td></tr><tr><td>_timestamp</td><td>1626358018</td></tr><tr><td>_step</td><td>21</td></tr><tr><td>best_val_loss</td><td>0.00342</td></tr><tr><td>best_epoch</td><td>11</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▄▄▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▄▃▂█▂▄▂▅▂▅▁▁▂▂▁▃▁▂▂▂▂</td></tr><tr><td>val_mean_squared_error</td><td>▃▄▃▂█▂▄▂▅▂▅▁▁▂▂▁▃▁▂▂▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▅▄▂█▃▅▃▆▃▆▁▁▂▃▁▄▂▂▂▃▂</td></tr><tr><td>_runtime</td><td>▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▆▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▆▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">robust-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/lvdrvmbr\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/lvdrvmbr</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: clczzkqg with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">stellar-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/clczzkqg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/clczzkqg</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_140713-clczzkqg</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 15s 278ms/step - loss: 34836.4293 - mean_squared_error: 34836.4293 - mean_absolute_error: 17.3653 - val_loss: 0.0232 - val_mean_squared_error: 0.0232 - val_mean_absolute_error: 0.1232\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0173 - mean_squared_error: 0.0173 - mean_absolute_error: 0.0919 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1217\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 8s 234ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0823 - val_loss: 0.0260 - val_mean_squared_error: 0.0260 - val_mean_absolute_error: 0.1281\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0801 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1216\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0692 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1212\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0628 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1159\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0615 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1152\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 7s 212ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0629 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1230\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0615 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1170\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0858 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1122\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.0831 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1152\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 8s 239ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.0950 - val_loss: 0.0463 - val_mean_squared_error: 0.0463 - val_mean_absolute_error: 0.1750\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - mean_absolute_error: 0.0934 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1100\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0789 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1063\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.0830 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1047\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0664 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1078\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0728 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0994\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 7s 214ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0639 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0933\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 6s 202ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0652 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1023\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 8s 239ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0699 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0924\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 7s 235ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0496 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0876\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0582 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1206\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 7s 227ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0671 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1011\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0557 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0967\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0526 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0984\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0506 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0845\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 7s 227ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0473 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0808\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0422 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0842\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0427 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0797\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0399 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0792\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0479 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0785\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0427 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0871\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0443 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0824\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0402 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0751\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0432 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0891\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0412 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0839\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 7s 210ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0468 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0766\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 7s 214ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0443 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0807\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0338 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0817\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0445 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0763\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 7s 211ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0409 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0820\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0391 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0746\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0464 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0827\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0388 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0857\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3975<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2d3dbdac1b8b4703a9fbd77e7e3d153b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.66MB of 2.66MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140713-clczzkqg/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_140713-clczzkqg/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>43</td></tr><tr><td>loss</td><td>0.00392</td></tr><tr><td>mean_squared_error</td><td>0.00392</td></tr><tr><td>mean_absolute_error</td><td>0.03895</td></tr><tr><td>val_loss</td><td>0.01152</td></tr><tr><td>val_mean_squared_error</td><td>0.01152</td></tr><tr><td>val_mean_absolute_error</td><td>0.08575</td></tr><tr><td>_runtime</td><td>329</td></tr><tr><td>_timestamp</td><td>1626358362</td></tr><tr><td>_step</td><td>43</td></tr><tr><td>best_val_loss</td><td>0.00863</td></tr><tr><td>best_epoch</td><td>33</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄▄▄▃▃▃▃▄▃▃█▃▃▂▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▄▄▄▃▃▃▃▄▃▃█▃▃▂▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▄▅▄▄▄▄▄▄▄█▃▃▃▃▃▂▃▂▂▃▃▃▂▁▂▁▁▁▂▁▂▂▁▁▁▁▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">stellar-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/clczzkqg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/clczzkqg</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: zqdbo7wu with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">bumbling-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/zqdbo7wu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/zqdbo7wu</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_141256-zqdbo7wu</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 15s 273ms/step - loss: 14.8188 - mean_squared_error: 14.8188 - mean_absolute_error: 0.7201 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1189\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 7s 212ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0646 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1048\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 7s 205ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0682 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1025\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 7s 212ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0581 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1077\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 8s 239ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0571 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0991\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0844 - val_loss: 0.0401 - val_mean_squared_error: 0.0401 - val_mean_absolute_error: 0.1571\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0215 - mean_squared_error: 0.0215 - mean_absolute_error: 0.1107 - val_loss: 0.0316 - val_mean_squared_error: 0.0316 - val_mean_absolute_error: 0.1365\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0809 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0988\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0820 - val_loss: 0.0237 - val_mean_squared_error: 0.0237 - val_mean_absolute_error: 0.1257\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0886 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1122\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 7s 210ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0875 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.1011\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0696 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0904\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0671 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1215\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0587 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0930\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 8s 239ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0559 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.1032\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0592 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0814\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 7s 210ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0466 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0887\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0499 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1190\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0494 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0809\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0521 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0862\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0487 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0798\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 7s 209ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0516 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0809\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0488 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0887\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 7s 235ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0451 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0893\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0563 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0773\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0450 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0725\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 7s 226ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0453 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0873\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 8s 241ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0468 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0729\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0526 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0768\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0416 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0760\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 7s 207ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0464 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0768\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0409 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0770\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0391 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0802\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0411 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0777\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 7s 213ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0400 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0911\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0358 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0738\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4162<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e86ff260afa14f07ba16933f47048fdd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.68MB of 2.68MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_141256-zqdbo7wu/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_141256-zqdbo7wu/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>35</td></tr><tr><td>loss</td><td>0.00325</td></tr><tr><td>mean_squared_error</td><td>0.00325</td></tr><tr><td>mean_absolute_error</td><td>0.0379</td></tr><tr><td>val_loss</td><td>0.00834</td></tr><tr><td>val_mean_squared_error</td><td>0.00834</td></tr><tr><td>val_mean_absolute_error</td><td>0.07383</td></tr><tr><td>_runtime</td><td>271</td></tr><tr><td>_timestamp</td><td>1626358647</td></tr><tr><td>_step</td><td>35</td></tr><tr><td>best_val_loss</td><td>0.00791</td></tr><tr><td>best_epoch</td><td>25</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄▃▃▃▃█▆▃▄▃▃▂▄▂▃▂▂▄▁▂▁▂▂▂▁▁▂▁▁▁▁▁▂▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▄▃▃▃▃█▆▃▄▃▃▂▄▂▃▂▂▄▁▂▁▂▂▂▁▁▂▁▁▁▁▁▂▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅▄▃▄▃█▆▃▅▄▃▂▅▃▄▂▂▅▂▂▂▂▂▂▁▁▂▁▁▁▁▁▂▁▃▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">bumbling-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/zqdbo7wu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/zqdbo7wu</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: y2myytd0 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">robust-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/y2myytd0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/y2myytd0</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_141839-y2myytd0</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "32/32 [==============================] - 10s 77ms/step - loss: 1.2319 - mean_squared_error: 1.2319 - mean_absolute_error: 0.5475 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1034\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0184 - mean_squared_error: 0.0184 - mean_absolute_error: 0.0994 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0851\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0674 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0706\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0609 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1085\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0673 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0596\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0484 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0775\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0628 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0801\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0405 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0530\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0432 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0608\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0513 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0541\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0424 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0644\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0541 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0553\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0464 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0594\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0354 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0496\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0372 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0711\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0430 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0502\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0357 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0674\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0447 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0360 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0550\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0473\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0347 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0472\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0304 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0804\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0401 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0554\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0362 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0505\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0327 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0457\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0316 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0433\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0303 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0470\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0375 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0516\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0284 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0357 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0453\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0313 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0545\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 1s 21ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0353 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0430\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0287 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0425\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0329 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0465\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0275 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0497\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0295 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0433\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0483\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0283 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 1s 22ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0274 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0420\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4326<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e3043784fe504c65983a6ecd1ebb84d9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.65MB of 3.65MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_141839-y2myytd0/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_141839-y2myytd0/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>38</td></tr><tr><td>loss</td><td>0.00215</td></tr><tr><td>mean_squared_error</td><td>0.00215</td></tr><tr><td>mean_absolute_error</td><td>0.02758</td></tr><tr><td>val_loss</td><td>0.00283</td></tr><tr><td>val_mean_squared_error</td><td>0.00283</td></tr><tr><td>val_mean_absolute_error</td><td>0.04198</td></tr><tr><td>_runtime</td><td>44</td></tr><tr><td>_timestamp</td><td>1626358763</td></tr><tr><td>_step</td><td>38</td></tr><tr><td>best_val_loss</td><td>0.00281</td></tr><tr><td>best_epoch</td><td>28</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▄█▃▅▅▂▃▂▃▂▃▂▄▂▃▁▂▁▁▅▂▂▁▁▂▂▁▁▂▁▁▁▂▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▄█▃▅▅▂▃▂▃▂▃▂▄▂▃▁▂▁▁▅▂▂▁▁▂▂▁▁▂▁▁▁▂▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▆▄█▃▅▅▂▃▂▃▃▃▂▄▂▄▂▂▂▂▅▃▂▂▁▂▂▁▁▂▁▁▂▂▁▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">robust-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/y2myytd0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/y2myytd0</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: m1xm9pa4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">colorful-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m1xm9pa4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m1xm9pa4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_141936-m1xm9pa4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 9s 123ms/step - loss: 0.4241 - mean_squared_error: 0.4241 - mean_absolute_error: 0.4774 - val_loss: 0.0973 - val_mean_squared_error: 0.0973 - val_mean_absolute_error: 0.2392\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0608 - mean_squared_error: 0.0608 - mean_absolute_error: 0.1836 - val_loss: 0.0259 - val_mean_squared_error: 0.0259 - val_mean_absolute_error: 0.1267\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0798 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0742\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0898 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0753\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0582 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0639\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0527 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0669\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0447 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0654\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0552 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0617\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0396 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0617\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0473 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0574\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0322 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0572\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0451 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0679\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0401 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0857\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0687 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0525\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0364 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0512\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0438 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0649\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0415 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0497\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0419 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0544\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0284 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0701\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0537 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0591\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 30ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0504 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0477\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0240 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0369 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0452\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0279 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0454\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0484 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0464\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0236 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0444\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0313 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0313 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0620\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0384 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0508\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0427 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0486\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0284 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0542\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0385 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0559\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0432 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0458\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0326 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0525\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0297 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0402 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0521\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0346 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0464\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0401 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0462\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0353 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0243 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0287 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0555\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0390 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0592\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0414 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0440\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0273 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0404\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0230 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0405\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0252 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0319 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0470\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0244 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0274 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0253 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0407\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0268 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0435\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0275 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 22ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0266 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0489\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0384 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0434\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0263 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0435\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0273 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0397\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0236 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0263 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0441\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0229 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0228 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0237 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0394\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0232 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0296 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0250 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0399\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 9.7926e-04 - mean_squared_error: 9.7926e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0253 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0436\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0256 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0235 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0447\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0217 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0449\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0389\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0226 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4498<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9cfc7bcdbb8f4defae1f91a77565c9b8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.68MB of 3.68MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_141936-m1xm9pa4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_141936-m1xm9pa4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>72</td></tr><tr><td>loss</td><td>0.00156</td></tr><tr><td>mean_squared_error</td><td>0.00156</td></tr><tr><td>mean_absolute_error</td><td>0.02366</td></tr><tr><td>val_loss</td><td>0.00262</td></tr><tr><td>val_mean_squared_error</td><td>0.00262</td></tr><tr><td>val_mean_absolute_error</td><td>0.04063</td></tr><tr><td>_runtime</td><td>46</td></tr><tr><td>_timestamp</td><td>1626358822</td></tr><tr><td>_step</td><td>72</td></tr><tr><td>best_val_loss</td><td>0.0025</td></tr><tr><td>best_epoch</td><td>62</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▂▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▂▂▂▂▂▃▁▁▂▁▁▁▁▂▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">colorful-sweep-21</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m1xm9pa4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m1xm9pa4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4okc0vt4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">autumn-sweep-22</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4okc0vt4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4okc0vt4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_142035-4okc0vt4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 8s 247ms/step - loss: 2.0140 - mean_squared_error: 2.0140 - mean_absolute_error: 0.9273 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1112\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0383 - mean_squared_error: 0.0383 - mean_absolute_error: 0.1514 - val_loss: 0.0251 - val_mean_squared_error: 0.0251 - val_mean_absolute_error: 0.1317\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0407 - mean_squared_error: 0.0407 - mean_absolute_error: 0.1561 - val_loss: 0.0468 - val_mean_squared_error: 0.0468 - val_mean_absolute_error: 0.1694\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0458 - mean_squared_error: 0.0458 - mean_absolute_error: 0.1728 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0946\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 26ms/step - loss: 0.0312 - mean_squared_error: 0.0312 - mean_absolute_error: 0.1355 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0893\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0449 - mean_squared_error: 0.0449 - mean_absolute_error: 0.1563 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0884\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0904 - mean_squared_error: 0.0904 - mean_absolute_error: 0.2382 - val_loss: 0.0801 - val_mean_squared_error: 0.0801 - val_mean_absolute_error: 0.2187\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0594 - mean_squared_error: 0.0594 - mean_absolute_error: 0.1863 - val_loss: 0.0432 - val_mean_squared_error: 0.0432 - val_mean_absolute_error: 0.1838\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0507 - mean_squared_error: 0.0507 - mean_absolute_error: 0.1803 - val_loss: 0.0378 - val_mean_squared_error: 0.0378 - val_mean_absolute_error: 0.1529\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0340 - mean_squared_error: 0.0340 - mean_absolute_error: 0.1518 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1005\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0430 - mean_squared_error: 0.0430 - mean_absolute_error: 0.1643 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1153\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0936 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0971\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0296 - mean_squared_error: 0.0296 - mean_absolute_error: 0.1334 - val_loss: 0.0371 - val_mean_squared_error: 0.0371 - val_mean_absolute_error: 0.1657\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0314 - mean_squared_error: 0.0314 - mean_absolute_error: 0.1416 - val_loss: 0.0230 - val_mean_squared_error: 0.0230 - val_mean_absolute_error: 0.1159\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 27ms/step - loss: 0.0237 - mean_squared_error: 0.0237 - mean_absolute_error: 0.1231 - val_loss: 0.0451 - val_mean_squared_error: 0.0451 - val_mean_absolute_error: 0.1652\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0410 - mean_squared_error: 0.0410 - mean_absolute_error: 0.1595 - val_loss: 0.0277 - val_mean_squared_error: 0.0277 - val_mean_absolute_error: 0.1388\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4772<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "7757622981bf4aa899bd99510af179d6",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.74MB of 2.74MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_142035-4okc0vt4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_142035-4okc0vt4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>15</td></tr><tr><td>loss</td><td>0.04168</td></tr><tr><td>mean_squared_error</td><td>0.04168</td></tr><tr><td>mean_absolute_error</td><td>0.16331</td></tr><tr><td>val_loss</td><td>0.02772</td></tr><tr><td>val_mean_squared_error</td><td>0.02772</td></tr><tr><td>val_mean_absolute_error</td><td>0.13882</td></tr><tr><td>_runtime</td><td>17</td></tr><tr><td>_timestamp</td><td>1626358852</td></tr><tr><td>_step</td><td>15</td></tr><tr><td>best_val_loss</td><td>0.01297</td></tr><tr><td>best_epoch</td><td>5</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▁▃▂▂▁▂▁▁▁▁▂</td></tr><tr><td>val_loss</td><td>▂▂▅▁▁▁█▄▄▁▂▁▄▂▄▃</td></tr><tr><td>val_mean_squared_error</td><td>▂▂▅▁▁▁█▄▄▁▂▁▄▂▄▃</td></tr><tr><td>val_mean_absolute_error</td><td>▂▃▅▁▁▁█▆▄▂▂▁▅▂▅▄</td></tr><tr><td>_runtime</td><td>▁▁▁▃▃▃▃▆▆▆▆▆████</td></tr><tr><td>_timestamp</td><td>▁▁▁▃▃▃▃▆▆▆▆▆████</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">autumn-sweep-22</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4okc0vt4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4okc0vt4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 5nlp2oey with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">worldly-sweep-23</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5nlp2oey\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5nlp2oey</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_142107-5nlp2oey</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 17s 298ms/step - loss: 0.2047 - mean_squared_error: 0.2047 - mean_absolute_error: 0.3585 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1221\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0825 - val_loss: 0.0275 - val_mean_squared_error: 0.0275 - val_mean_absolute_error: 0.1305\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0686 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1158\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 7s 210ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0648 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1118\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 7s 209ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0586 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1075\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0541 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1161\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 7s 213ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0542 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.1070\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0510 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1051\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0513 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1071\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 8s 244ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0525 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.1004\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0450 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1012\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 7s 226ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0540 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1012\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0451 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.1013\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0486 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0948\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 7s 228ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0476 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0937\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0456 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0979\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0399 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0992\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0478 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.1027\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 7s 231ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0437 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1129\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 7s 230ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0446 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0972\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 8s 241ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0392 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1068\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0395 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0988\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0392 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0928\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0380 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0961\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0347 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1007\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 7s 223ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0424 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.1038\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 7s 234ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0389 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0993\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0414 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1011\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0376 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0921\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 7s 234ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0354 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0914\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0373 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0866\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0368 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1087\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0379 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0863\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0351 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0943\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0365 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0912\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0346 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.1075\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0408 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0911\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 8s 242ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0323 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0900\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 8s 241ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0385 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0882\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 7s 210ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0416 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0920\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0307 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0898\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4875<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "40e8ff472c4447239785b04c17610ed8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.72MB of 3.72MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_142107-5nlp2oey/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_142107-5nlp2oey/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>40</td></tr><tr><td>loss</td><td>0.00256</td></tr><tr><td>mean_squared_error</td><td>0.00256</td></tr><tr><td>mean_absolute_error</td><td>0.03204</td></tr><tr><td>val_loss</td><td>0.01241</td></tr><tr><td>val_mean_squared_error</td><td>0.01241</td></tr><tr><td>val_mean_absolute_error</td><td>0.08984</td></tr><tr><td>_runtime</td><td>311</td></tr><tr><td>_timestamp</td><td>1626359178</td></tr><tr><td>_step</td><td>40</td></tr><tr><td>best_val_loss</td><td>0.01133</td></tr><tr><td>best_epoch</td><td>30</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆█▅▅▄▅▃▃▄▃▃▃▃▂▂▂▂▃▄▂▃▂▂▂▃▃▃▃▂▂▁▄▁▂▂▃▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▆█▅▅▄▅▃▃▄▃▃▃▃▂▂▂▂▃▄▂▃▂▂▂▃▃▃▃▂▂▁▄▁▂▂▃▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇█▆▅▄▆▄▄▄▃▃▃▃▂▂▃▃▄▅▃▄▃▂▃▃▄▃▃▂▂▁▅▁▂▂▄▂▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">worldly-sweep-23</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5nlp2oey\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/5nlp2oey</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: opzlubit with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">gentle-sweep-24</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/opzlubit\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/opzlubit</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_142651-opzlubit</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 15s 288ms/step - loss: 753625322234997663429761695744.0000 - mean_squared_error: 753625322234997663429761695744.0000 - mean_absolute_error: 490990530890705.2500 - val_loss: 515996702863533197963865096192.0000 - val_mean_squared_error: 515996702863533197963865096192.0000 - val_mean_absolute_error: 423593431269376.0000\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 971010273834930013569554579456.0000 - mean_squared_error: 971010273834930013569554579456.0000 - mean_absolute_error: 620959870230279.7500 - val_loss: 515996702863533197963865096192.0000 - val_mean_squared_error: 515996702863533197963865096192.0000 - val_mean_absolute_error: 423593431269376.0000\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 891899585481701616859089993728.0000 - mean_squared_error: 891899585481701616859089993728.0000 - mean_absolute_error: 597411135988456.7500 - val_loss: 517107554576031590346773233664.0000 - val_mean_squared_error: 517107554576031590346773233664.0000 - val_mean_absolute_error: 424485375180800.0000\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 8s 234ms/step - loss: 917794172074937166466708930560.0000 - mean_squared_error: 917794172074937166466708930560.0000 - mean_absolute_error: 615036654802261.3750 - val_loss: 503182655859596073069405274112.0000 - val_mean_squared_error: 503182655859596073069405274112.0000 - val_mean_absolute_error: 419531499503616.0000\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 8s 240ms/step - loss: 824837823452815567919333244928.0000 - mean_squared_error: 824837823452815567919333244928.0000 - mean_absolute_error: 562951980922445.6250 - val_loss: 497543696931867361198311735296.0000 - val_mean_squared_error: 497543696931867361198311735296.0000 - val_mean_absolute_error: 416601862045696.0000\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 883947834689806217710325989376.0000 - mean_squared_error: 883947834689806217710325989376.0000 - mean_absolute_error: 588989446368907.6250 - val_loss: 442661071467661740710809305088.0000 - val_mean_squared_error: 442661071467661740710809305088.0000 - val_mean_absolute_error: 393349378867200.0000\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 726754914990270858280103313408.0000 - mean_squared_error: 726754914990270858280103313408.0000 - mean_absolute_error: 532245346103916.6250 - val_loss: 402976645839400745678934114304.0000 - val_mean_squared_error: 402976645839400745678934114304.0000 - val_mean_absolute_error: 375116470943744.0000\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 679016465277480823912770043904.0000 - mean_squared_error: 679016465277480823912770043904.0000 - mean_absolute_error: 512701160465128.7500 - val_loss: 397112297804177631381081292800.0000 - val_mean_squared_error: 397112297804177631381081292800.0000 - val_mean_absolute_error: 372496406675456.0000\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 621485015798348601756594733056.0000 - mean_squared_error: 621485015798348601756594733056.0000 - mean_absolute_error: 484980108510673.4375 - val_loss: 190533868278853588315837300736.0000 - val_mean_squared_error: 190533868278853588315837300736.0000 - val_mean_absolute_error: 258160753377280.0000\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 7s 212ms/step - loss: 332237512920601467659353063424.0000 - mean_squared_error: 332237512920601467659353063424.0000 - mean_absolute_error: 360802071958869.3125 - val_loss: 185274965405666225491542016000.0000 - val_mean_squared_error: 185274965405666225491542016000.0000 - val_mean_absolute_error: 254552091656192.0000\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 300480846172870697176698716160.0000 - mean_squared_error: 300480846172870697176698716160.0000 - mean_absolute_error: 349261550758570.6875 - val_loss: 172979434241548187641546014720.0000 - val_mean_squared_error: 172979434241548187641546014720.0000 - val_mean_absolute_error: 245971954958336.0000\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 290877707290646143363373334528.0000 - mean_squared_error: 290877707290646143363373334528.0000 - mean_absolute_error: 341080754507155.3750 - val_loss: 172178294212462318070332915712.0000 - val_mean_squared_error: 172178294212462318070332915712.0000 - val_mean_absolute_error: 245401865158656.0000\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 329048446745586265783260938240.0000 - mean_squared_error: 329048446745586265783260938240.0000 - mean_absolute_error: 362675860239453.0625 - val_loss: 170848419142488431542413557760.0000 - val_mean_squared_error: 170848419142488431542413557760.0000 - val_mean_absolute_error: 244452375396352.0000\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 281362267619476980628497367040.0000 - mean_squared_error: 281362267619476980628497367040.0000 - mean_absolute_error: 333279990668567.2500 - val_loss: 135787388640349099699845726208.0000 - val_mean_squared_error: 135787388640349099699845726208.0000 - val_mean_absolute_error: 217918067441664.0000\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 266452514507570497074982027264.0000 - mean_squared_error: 266452514507570497074982027264.0000 - mean_absolute_error: 323066628597946.1875 - val_loss: 131400990198536732525232914432.0000 - val_mean_squared_error: 131400990198536732525232914432.0000 - val_mean_absolute_error: 214423205576704.0000\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 257726616160997235658302947328.0000 - mean_squared_error: 257726616160997235658302947328.0000 - mean_absolute_error: 314193194643580.1250 - val_loss: 130717191531817207898289733632.0000 - val_mean_squared_error: 130717191531817207898289733632.0000 - val_mean_absolute_error: 213818017841152.0000\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 7s 213ms/step - loss: 290915265845406578336430292992.0000 - mean_squared_error: 290915265845406578336430292992.0000 - mean_absolute_error: 342233771218757.8125 - val_loss: 157768682355492094668940771328.0000 - val_mean_squared_error: 157768682355492094668940771328.0000 - val_mean_absolute_error: 234716137521152.0000\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 269733499685848581300486668288.0000 - mean_squared_error: 269733499685848581300486668288.0000 - mean_absolute_error: 329506857831827.3750 - val_loss: 137855775715113038564154146816.0000 - val_mean_squared_error: 137855775715113038564154146816.0000 - val_mean_absolute_error: 218551424122880.0000\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 258391958674685589718636167168.0000 - mean_squared_error: 258391958674685589718636167168.0000 - mean_absolute_error: 312147096220268.6250 - val_loss: 135103334965839500112061005824.0000 - val_mean_squared_error: 135103334965839500112061005824.0000 - val_mean_absolute_error: 216512052854784.0000\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 235489940873317038659767107584.0000 - mean_squared_error: 235489940873317038659767107584.0000 - mean_absolute_error: 300602274968669.0625 - val_loss: 138723737229931513615141044224.0000 - val_mean_squared_error: 138723737229931513615141044224.0000 - val_mean_absolute_error: 221398333128704.0000\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 175814451435957300702960680960.0000 - mean_squared_error: 175814451435957300702960680960.0000 - mean_absolute_error: 261098505415338.6562 - val_loss: 125876548658017609550571503616.0000 - val_mean_squared_error: 125876548658017609550571503616.0000 - val_mean_absolute_error: 209894682656768.0000\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 8s 239ms/step - loss: 165932754178905696230229147648.0000 - mean_squared_error: 165932754178905696230229147648.0000 - mean_absolute_error: 250085155354189.5625 - val_loss: 131884976094633076723894190080.0000 - val_mean_squared_error: 131884976094633076723894190080.0000 - val_mean_absolute_error: 214806028091392.0000\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 197810381338952881387245404160.0000 - mean_squared_error: 197810381338952881387245404160.0000 - mean_absolute_error: 285531770581116.1250 - val_loss: 124980026270710738885332172800.0000 - val_mean_squared_error: 124980026270710738885332172800.0000 - val_mean_absolute_error: 209197102792704.0000\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 7s 233ms/step - loss: 168239980519519328469608562688.0000 - mean_squared_error: 168239980519519328469608562688.0000 - mean_absolute_error: 252253036029641.6875 - val_loss: 124268809544191673098278273024.0000 - val_mean_squared_error: 124268809544191673098278273024.0000 - val_mean_absolute_error: 208632448811008.0000\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 7s 223ms/step - loss: 184381556918197741217170587648.0000 - mean_squared_error: 184381556918197741217170587648.0000 - mean_absolute_error: 267446996832131.8750 - val_loss: 69748238473494702570019487744.0000 - val_mean_squared_error: 69748238473494702570019487744.0000 - val_mean_absolute_error: 156195478306816.0000\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 117317032734225199857777246208.0000 - mean_squared_error: 117317032734225199857777246208.0000 - mean_absolute_error: 210421642301315.8750 - val_loss: 59330017991510731999695339520.0000 - val_mean_squared_error: 59330017991510731999695339520.0000 - val_mean_absolute_error: 144058521485312.0000\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 91006538166314392651269406720.0000 - mean_squared_error: 91006538166314392651269406720.0000 - mean_absolute_error: 187994625603646.0625 - val_loss: 58892448235574513543839481856.0000 - val_mean_squared_error: 58892448235574513543839481856.0000 - val_mean_absolute_error: 143526079758336.0000\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 91745285717020512881175691264.0000 - mean_squared_error: 91745285717020512881175691264.0000 - mean_absolute_error: 187132756122903.2812 - val_loss: 58892448235574513543839481856.0000 - val_mean_squared_error: 58892448235574513543839481856.0000 - val_mean_absolute_error: 143526079758336.0000\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 88846739957337508270187741184.0000 - mean_squared_error: 88846739957337508270187741184.0000 - mean_absolute_error: 184953288746201.2188 - val_loss: 53442846759075908706524725248.0000 - val_mean_squared_error: 53442846759075908706524725248.0000 - val_mean_absolute_error: 136724034355200.0000\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 98998903885798758121658646528.0000 - mean_squared_error: 98998903885798758121658646528.0000 - mean_absolute_error: 200080569012099.8750 - val_loss: 52823177829193753861583536128.0000 - val_mean_squared_error: 52823177829193753861583536128.0000 - val_mean_absolute_error: 135921060020224.0000\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 8s 235ms/step - loss: 82028935253469893076912701440.0000 - mean_squared_error: 82028935253469893076912701440.0000 - mean_absolute_error: 177730204363931.1562 - val_loss: 51792941634924429192118403072.0000 - val_mean_squared_error: 51792941634924429192118403072.0000 - val_mean_absolute_error: 134590903615488.0000\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 8s 245ms/step - loss: 86459081269073525545413640192.0000 - mean_squared_error: 86459081269073525545413640192.0000 - mean_absolute_error: 185622769569667.8750 - val_loss: 51230186665893819311292678144.0000 - val_mean_squared_error: 51230186665893819311292678144.0000 - val_mean_absolute_error: 133853855350784.0000\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 75355416447201759725382270976.0000 - mean_squared_error: 75355416447201759725382270976.0000 - mean_absolute_error: 167036649392562.4375 - val_loss: 48932982045568914657799831552.0000 - val_mean_squared_error: 48932982045568914657799831552.0000 - val_mean_absolute_error: 130796727828480.0000\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 7s 209ms/step - loss: 76754073357406700632396529664.0000 - mean_squared_error: 76754073357406700632396529664.0000 - mean_absolute_error: 173444111198394.1875 - val_loss: 42325838819155785255349125120.0000 - val_mean_squared_error: 42325838819155785255349125120.0000 - val_mean_absolute_error: 121579769954304.0000\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 69253892850151058362874200064.0000 - mean_squared_error: 69253892850151058362874200064.0000 - mean_absolute_error: 166736151659985.4688 - val_loss: 40136351378305137209180684288.0000 - val_mean_squared_error: 40136351378305137209180684288.0000 - val_mean_absolute_error: 118369382563840.0000\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 67678631597158038345852387328.0000 - mean_squared_error: 67678631597158038345852387328.0000 - mean_absolute_error: 162299172348152.2500 - val_loss: 40136351378305137209180684288.0000 - val_mean_squared_error: 40136351378305137209180684288.0000 - val_mean_absolute_error: 118369382563840.0000\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 67223168079108149910538551296.0000 - mean_squared_error: 67223168079108149910538551296.0000 - mean_absolute_error: 162997649793272.2500 - val_loss: 39129802574313886680107450368.0000 - val_mean_squared_error: 39129802574313886680107450368.0000 - val_mean_absolute_error: 116963586080768.0000\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 63791765797413690339594600448.0000 - mean_squared_error: 63791765797413690339594600448.0000 - mean_absolute_error: 157077696771165.0938 - val_loss: 39082328624061598136774164480.0000 - val_mean_squared_error: 39082328624061598136774164480.0000 - val_mean_absolute_error: 116913287987200.0000\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 8s 240ms/step - loss: 65357518350840432776292859904.0000 - mean_squared_error: 65357518350840432776292859904.0000 - mean_absolute_error: 163211936276231.7500 - val_loss: 39082328624061598136774164480.0000 - val_mean_squared_error: 39082328624061598136774164480.0000 - val_mean_absolute_error: 116913287987200.0000\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 8s 242ms/step - loss: 65900879848644031914526638080.0000 - mean_squared_error: 65900879848644031914526638080.0000 - mean_absolute_error: 162002639122556.1250 - val_loss: 39037529894421855247454437376.0000 - val_mean_squared_error: 39037529894421855247454437376.0000 - val_mean_absolute_error: 116840927854592.0000\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 8s 240ms/step - loss: 70471948005891180453800443904.0000 - mean_squared_error: 70471948005891180453800443904.0000 - mean_absolute_error: 167353659972887.2812 - val_loss: 37425151055526499368738750464.0000 - val_mean_squared_error: 37425151055526499368738750464.0000 - val_mean_absolute_error: 114407988264960.0000\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 7s 226ms/step - loss: 60177979425662167108366106624.0000 - mean_squared_error: 60177979425662167108366106624.0000 - mean_absolute_error: 154777285494721.9375 - val_loss: 34201599942372160805659475968.0000 - val_mean_squared_error: 34201599942372160805659475968.0000 - val_mean_absolute_error: 109368532008960.0000\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 52663658149728610133123006464.0000 - mean_squared_error: 52663658149728610133123006464.0000 - mean_absolute_error: 141770204548002.9062 - val_loss: 33880658471463373977646268416.0000 - val_mean_squared_error: 33880658471463373977646268416.0000 - val_mean_absolute_error: 108854394224640.0000\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 7s 232ms/step - loss: 57613647991847113112321785856.0000 - mean_squared_error: 57613647991847113112321785856.0000 - mean_absolute_error: 149723213741583.5000 - val_loss: 33622925875927797350818381824.0000 - val_mean_squared_error: 33622925875927797350818381824.0000 - val_mean_absolute_error: 108430064877568.0000\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 49486170000962279185387094016.0000 - mean_squared_error: 49486170000962279185387094016.0000 - mean_absolute_error: 135350223126031.5156 - val_loss: 33622925875927797350818381824.0000 - val_mean_squared_error: 33622925875927797350818381824.0000 - val_mean_absolute_error: 108430064877568.0000\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 8s 244ms/step - loss: 57276249646153583567296266240.0000 - mean_squared_error: 57276249646153583567296266240.0000 - mean_absolute_error: 151892051480948.3750 - val_loss: 33622538641876202039910858752.0000 - val_mean_squared_error: 33622538641876202039910858752.0000 - val_mean_absolute_error: 108429435731968.0000\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 7s 213ms/step - loss: 56266223892512806089045049344.0000 - mean_squared_error: 56266223892512806089045049344.0000 - mean_absolute_error: 148867062495294.0625 - val_loss: 33622538641876202039910858752.0000 - val_mean_squared_error: 33622538641876202039910858752.0000 - val_mean_absolute_error: 108429435731968.0000\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 7s 212ms/step - loss: 58974066755824142508925911040.0000 - mean_squared_error: 58974066755824142508925911040.0000 - mean_absolute_error: 151398492731454.0625 - val_loss: 33606577043164102639088566272.0000 - val_mean_squared_error: 33606577043164102639088566272.0000 - val_mean_absolute_error: 108404362182656.0000\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 61450858823534154896807821312.0000 - mean_squared_error: 61450858823534154896807821312.0000 - mean_absolute_error: 155405286176830.0625 - val_loss: 33590060566390266054953664512.0000 - val_mean_squared_error: 33590060566390266054953664512.0000 - val_mean_absolute_error: 108377736740864.0000\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 64129646110692501586710626304.0000 - mean_squared_error: 64129646110692501586710626304.0000 - mean_absolute_error: 162767225153722.1875 - val_loss: 34303163878319238265270435840.0000 - val_mean_squared_error: 34303163878319238265270435840.0000 - val_mean_absolute_error: 109556814315520.0000\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 7s 212ms/step - loss: 53264997428760525999853010944.0000 - mean_squared_error: 53264997428760525999853010944.0000 - mean_absolute_error: 144160464679532.5938 - val_loss: 31936644362758772959330959360.0000 - val_mean_squared_error: 31936644362758772959330959360.0000 - val_mean_absolute_error: 105676370083840.0000\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 7s 226ms/step - loss: 54473381607249770156753158144.0000 - mean_squared_error: 54473381607249770156753158144.0000 - mean_absolute_error: 145702276848919.2812 - val_loss: 31936644362758772959330959360.0000 - val_mean_squared_error: 31936644362758772959330959360.0000 - val_mean_absolute_error: 105676370083840.0000\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 55511350461981774320569942016.0000 - mean_squared_error: 55511350461981774320569942016.0000 - mean_absolute_error: 147691179200884.3750 - val_loss: 28618778146208561842043748352.0000 - val_mean_squared_error: 28618778146208561842043748352.0000 - val_mean_absolute_error: 99957386248192.0000\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 48582076658469271382941237248.0000 - mean_squared_error: 48582076658469271382941237248.0000 - mean_absolute_error: 139712954614256.4844 - val_loss: 28618778146208561842043748352.0000 - val_mean_squared_error: 28618778146208561842043748352.0000 - val_mean_absolute_error: 99957386248192.0000\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 8s 243ms/step - loss: 43817968677400484031143870464.0000 - mean_squared_error: 43817968677400484031143870464.0000 - mean_absolute_error: 132193097549761.9375 - val_loss: 22854546641605525457543888896.0000 - val_mean_squared_error: 22854546641605525457543888896.0000 - val_mean_absolute_error: 89262590525440.0000\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 45677360411466311890645286912.0000 - mean_squared_error: 45677360411466311890645286912.0000 - mean_absolute_error: 136926590767972.8438 - val_loss: 22760186675728065641706422272.0000 - val_mean_squared_error: 22760186675728065641706422272.0000 - val_mean_absolute_error: 89075809779712.0000\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 7s 215ms/step - loss: 38197262483189145283090972672.0000 - mean_squared_error: 38197262483189145283090972672.0000 - mean_absolute_error: 123846727716243.3906 - val_loss: 24661184748140207061770174464.0000 - val_mean_squared_error: 24661184748140207061770174464.0000 - val_mean_absolute_error: 92652225691648.0000\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 37535985855491536936740323328.0000 - mean_squared_error: 37535985855491536936740323328.0000 - mean_absolute_error: 121273329782659.8750 - val_loss: 24633903636968669121370652672.0000 - val_mean_squared_error: 24633903636968669121370652672.0000 - val_mean_absolute_error: 92614820888576.0000\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 43386986121850820182396633088.0000 - mean_squared_error: 43386986121850820182396633088.0000 - mean_absolute_error: 135092828857561.2188 - val_loss: 24633903636968669121370652672.0000 - val_mean_squared_error: 24633903636968669121370652672.0000 - val_mean_absolute_error: 92614820888576.0000\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 7s 223ms/step - loss: 36338783739976675153695211520.0000 - mean_squared_error: 36338783739976675153695211520.0000 - mean_absolute_error: 118671792390640.4844 - val_loss: 22883180710774405551297134592.0000 - val_mean_squared_error: 22883180710774405551297134592.0000 - val_mean_absolute_error: 89414835372032.0000\n",
            "Epoch 61/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 36201543040761590020191551488.0000 - mean_squared_error: 36201543040761590020191551488.0000 - mean_absolute_error: 118109920122197.3281 - val_loss: 22883180710774405551297134592.0000 - val_mean_squared_error: 22883180710774405551297134592.0000 - val_mean_absolute_error: 89414835372032.0000\n",
            "Epoch 62/100\n",
            "32/32 [==============================] - 8s 243ms/step - loss: 39874623660725052862502010880.0000 - mean_squared_error: 39874623660725052862502010880.0000 - mean_absolute_error: 123504745775104.0000 - val_loss: 21396655299830767152349052928.0000 - val_mean_squared_error: 21396655299830767152349052928.0000 - val_mean_absolute_error: 86488989564928.0000\n",
            "Epoch 63/100\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 39047761903121093827785392128.0000 - mean_squared_error: 39047761903121093827785392128.0000 - mean_absolute_error: 126149841649664.0000 - val_loss: 20367847621422510550561062912.0000 - val_mean_squared_error: 20367847621422510550561062912.0000 - val_mean_absolute_error: 84370069127168.0000\n",
            "Epoch 64/100\n",
            "32/32 [==============================] - 8s 241ms/step - loss: 34184472706199874546759106560.0000 - mean_squared_error: 34184472706199874546759106560.0000 - mean_absolute_error: 114489501894097.4531 - val_loss: 20367847621422510550561062912.0000 - val_mean_squared_error: 20367847621422510550561062912.0000 - val_mean_absolute_error: 84370069127168.0000\n",
            "Epoch 65/100\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 35518467325419992344430641152.0000 - mean_squared_error: 35518467325419992344430641152.0000 - mean_absolute_error: 118921611746086.7812 - val_loss: 20039978438883353953019363328.0000 - val_mean_squared_error: 20039978438883353953019363328.0000 - val_mean_absolute_error: 83781826379776.0000\n",
            "Epoch 66/100\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 34606262316778545636261756928.0000 - mean_squared_error: 34606262316778545636261756928.0000 - mean_absolute_error: 117574096006795.6406 - val_loss: 20039978438883353953019363328.0000 - val_mean_squared_error: 20039978438883353953019363328.0000 - val_mean_absolute_error: 83781826379776.0000\n",
            "Epoch 67/100\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 36946043793313003011001286656.0000 - mean_squared_error: 36946043793313003011001286656.0000 - mean_absolute_error: 123240508436107.6406 - val_loss: 20039978438883353953019363328.0000 - val_mean_squared_error: 20039978438883353953019363328.0000 - val_mean_absolute_error: 83781826379776.0000\n",
            "Epoch 68/100\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 32432113265366272696886755328.0000 - mean_squared_error: 32432113265366272696886755328.0000 - mean_absolute_error: 112438731270330.1875 - val_loss: 19910495872289551150905032704.0000 - val_mean_squared_error: 19910495872289551150905032704.0000 - val_mean_absolute_error: 83514615660544.0000\n",
            "Epoch 69/100\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 30864688564898550908364783616.0000 - mean_squared_error: 30864688564898550908364783616.0000 - mean_absolute_error: 111680938740642.9062 - val_loss: 18825126049332723373569998848.0000 - val_mean_squared_error: 18825126049332723373569998848.0000 - val_mean_absolute_error: 81140547321856.0000\n",
            "Epoch 70/100\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 29941180285876331104144719872.0000 - mean_squared_error: 29941180285876331104144719872.0000 - mean_absolute_error: 107368421714106.1875 - val_loss: 18823750660094587589401509888.0000 - val_mean_squared_error: 18823750660094587589401509888.0000 - val_mean_absolute_error: 81137619697664.0000\n",
            "Epoch 71/100\n",
            "32/32 [==============================] - 8s 239ms/step - loss: 31395053895488268835238182912.0000 - mean_squared_error: 31395053895488268835238182912.0000 - mean_absolute_error: 112699208479340.6094 - val_loss: 18352094862885016034393194496.0000 - val_mean_squared_error: 18352094862885016034393194496.0000 - val_mean_absolute_error: 80115543310336.0000\n",
            "Epoch 72/100\n",
            "32/32 [==============================] - 8s 236ms/step - loss: 28538524246770472103331233792.0000 - mean_squared_error: 28538524246770472103331233792.0000 - mean_absolute_error: 105471991309529.2188 - val_loss: 17409145710093433169646714880.0000 - val_mean_squared_error: 17409145710093433169646714880.0000 - val_mean_absolute_error: 78043322253312.0000\n",
            "Epoch 73/100\n",
            "32/32 [==============================] - 8s 243ms/step - loss: 25085796616651460209438359552.0000 - mean_squared_error: 25085796616651460209438359552.0000 - mean_absolute_error: 99149793094811.1562 - val_loss: 17640678616382049004829016064.0000 - val_mean_squared_error: 17640678616382049004829016064.0000 - val_mean_absolute_error: 78558869323776.0000\n",
            "Epoch 74/100\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 25925409193065210783650021376.0000 - mean_squared_error: 25925409193065210783650021376.0000 - mean_absolute_error: 100736636837143.2656 - val_loss: 17597719248487383842320023552.0000 - val_mean_squared_error: 17597719248487383842320023552.0000 - val_mean_absolute_error: 78465084686336.0000\n",
            "Epoch 75/100\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 24093676574142574383897509888.0000 - mean_squared_error: 24093676574142574383897509888.0000 - mean_absolute_error: 95391155010094.5469 - val_loss: 17597719248487383842320023552.0000 - val_mean_squared_error: 17597719248487383842320023552.0000 - val_mean_absolute_error: 78465084686336.0000\n",
            "Epoch 76/100\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 23450183949313409624003575808.0000 - mean_squared_error: 23450183949313409624003575808.0000 - mean_absolute_error: 94453168062960.4844 - val_loss: 17591741913111691588890787840.0000 - val_mean_squared_error: 17591741913111691588890787840.0000 - val_mean_absolute_error: 78451771965440.0000\n",
            "Epoch 77/100\n",
            "32/32 [==============================] - 7s 216ms/step - loss: 25746607948148491396596105216.0000 - mean_squared_error: 25746607948148491396596105216.0000 - mean_absolute_error: 100047409993045.3281 - val_loss: 18080155027785726079939903488.0000 - val_mean_squared_error: 18080155027785726079939903488.0000 - val_mean_absolute_error: 79666182356992.0000\n",
            "Epoch 78/100\n",
            "32/32 [==============================] - 7s 217ms/step - loss: 22981689060954042402722545664.0000 - mean_squared_error: 22981689060954042402722545664.0000 - mean_absolute_error: 95645825522967.2656 - val_loss: 18080155027785726079939903488.0000 - val_mean_squared_error: 18080155027785726079939903488.0000 - val_mean_absolute_error: 79666182356992.0000\n",
            "Epoch 79/100\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 26030354343414022909233987584.0000 - mean_squared_error: 26030354343414022909233987584.0000 - mean_absolute_error: 101693593477368.2500 - val_loss: 18080094817613069491963428864.0000 - val_mean_squared_error: 18080094817613069491963428864.0000 - val_mean_absolute_error: 79666081693696.0000\n",
            "Epoch 80/100\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 23379671433317388570484277248.0000 - mean_squared_error: 23379671433317388570484277248.0000 - mean_absolute_error: 94194978020631.2656 - val_loss: 17860351299248937726057119744.0000 - val_mean_squared_error: 17860351299248937726057119744.0000 - val_mean_absolute_error: 79109623382016.0000\n",
            "Epoch 81/100\n",
            "32/32 [==============================] - 7s 234ms/step - loss: 24370961484141405331582353408.0000 - mean_squared_error: 24370961484141405331582353408.0000 - mean_absolute_error: 97171465218730.6719 - val_loss: 17860351299248937726057119744.0000 - val_mean_squared_error: 17860351299248937726057119744.0000 - val_mean_absolute_error: 79109623382016.0000\n",
            "Epoch 82/100\n",
            "32/32 [==============================] - 8s 250ms/step - loss: 25668174950295591403531534336.0000 - mean_squared_error: 25668174950295591403531534336.0000 - mean_absolute_error: 102259889338430.0625 - val_loss: 17860351299248937726057119744.0000 - val_mean_squared_error: 17860351299248937726057119744.0000 - val_mean_absolute_error: 79109623382016.0000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5053<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "423123d1de8c4eb89e838bf3ab4cce1c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.81MB of 2.81MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_142651-opzlubit/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_142651-opzlubit/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>81</td></tr><tr><td>loss</td><td>2.466015054988046e+28</td></tr><tr><td>mean_squared_error</td><td>2.466015054988046e+28</td></tr><tr><td>mean_absolute_error</td><td>98727054278656.0</td></tr><tr><td>val_loss</td><td>1.7860351299248938e+28</td></tr><tr><td>val_mean_squared_error</td><td>1.7860351299248938e+28</td></tr><tr><td>val_mean_absolute_error</td><td>79109623382016.0</td></tr><tr><td>_runtime</td><td>613</td></tr><tr><td>_timestamp</td><td>1626359824</td></tr><tr><td>_step</td><td>81</td></tr><tr><td>best_val_loss</td><td>1.7409145710093433e+28</td></tr><tr><td>best_epoch</td><td>71</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>███▇▅▃▃▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>███▇▅▃▃▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>███▇▆▄▅▄▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>███▆▃▃▃▃▃▃▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>███▆▃▃▃▃▃▃▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>███▇▅▄▄▄▄▄▄▄▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">gentle-sweep-24</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/opzlubit\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/opzlubit</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: yhded1ck with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">drawn-sweep-25</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/yhded1ck\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/yhded1ck</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_143717-yhded1ck</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "16/16 [==============================] - 12s 334ms/step - loss: 0.2096 - mean_squared_error: 0.2096 - mean_absolute_error: 0.3825 - val_loss: 0.0234 - val_mean_squared_error: 0.0234 - val_mean_absolute_error: 0.1283\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 4s 230ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.0911 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1226\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 4s 234ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - mean_absolute_error: 0.0786 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1116\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 4s 234ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0790 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1062\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 4s 249ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0741 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1070\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 4s 244ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0624 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1088\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 4s 253ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0732 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1049\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 4s 248ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0564 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1059\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 4s 248ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0530 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.1021\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 4s 250ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0566 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.1019\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 4s 232ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0533 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.1019\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 3s 217ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0601 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0988\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 4s 252ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0419 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1436\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 4s 250ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0685 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1022\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 4s 242ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0444 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0982\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 4s 238ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0470 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0978\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 4s 255ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0466 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0942\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 4s 257ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0457 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.1009\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 4s 241ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0473 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0941\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 4s 221ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0404 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0919\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0479 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0897\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 4s 234ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0414 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1044\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 4s 241ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0458 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0957\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 4s 242ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0400 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0965\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 4s 219ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0427 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0971\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 4s 234ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0540 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0950\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0446 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0919\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 4s 233ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0339 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0852\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 4s 237ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0429 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0920\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 4s 236ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0363 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0869\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 4s 249ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0571 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0883\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 4s 243ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0397 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1009\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 4s 257ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0385 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0888\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 4s 253ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0392 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0924\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 4s 246ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0329 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0936\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 4s 257ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0350 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0881\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 3s 213ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0407 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0887\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 4s 221ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0370 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0912\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5356<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d1470ec4fa284e47a0a02d84ee307691",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.78MB of 3.78MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_143717-yhded1ck/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_143717-yhded1ck/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>37</td></tr><tr><td>loss</td><td>0.00366</td></tr><tr><td>mean_squared_error</td><td>0.00366</td></tr><tr><td>mean_absolute_error</td><td>0.03984</td></tr><tr><td>val_loss</td><td>0.0127</td></tr><tr><td>val_mean_squared_error</td><td>0.0127</td></tr><tr><td>val_mean_absolute_error</td><td>0.09118</td></tr><tr><td>_runtime</td><td>161</td></tr><tr><td>_timestamp</td><td>1626359998</td></tr><tr><td>_step</td><td>37</td></tr><tr><td>best_val_loss</td><td>0.01115</td></tr><tr><td>best_epoch</td><td>27</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▅▄▃▃▃▃▃▃▃▃▂█▂▂▂▂▂▂▁▁▃▂▂▂▂▂▁▂▁▁▃▁▂▂▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▅▅▄▃▃▃▃▃▃▃▃▂█▂▂▂▂▂▂▁▁▃▂▂▂▂▂▁▂▁▁▃▁▂▂▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▆▅▄▄▄▄▃▃▃▃▃▃█▃▃▃▂▃▂▂▂▃▂▂▂▂▂▁▂▁▁▃▁▂▂▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">drawn-sweep-25</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/yhded1ck\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/yhded1ck</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: m09d5s7q with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">kind-sweep-26</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m09d5s7q\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m09d5s7q</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_144013-m09d5s7q</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "16/16 [==============================] - 9s 123ms/step - loss: 0.1626 - mean_squared_error: 0.1626 - mean_absolute_error: 0.3136 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1047\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 0s 23ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0730 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1041\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0649 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0903\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0615 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0879\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0758 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0816\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0505 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1051\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0737 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0769\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0484 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0746\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0465 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0738\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0544 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0719\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0522 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0714\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0443 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0755\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0511 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0679\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0493 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0889\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0680 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0691\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0436 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0690\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0504 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0638\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0387 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0618\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0409 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0737\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0483 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0646\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0468 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0612\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0420 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0691\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0418 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0853\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0579 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0919\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0532 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0770\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0519 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0630\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0496 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0568\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0370 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0573\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0376 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0574\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0323 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0597\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0407 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0535\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0373 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0578\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0379 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0599\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0424 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0540\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 0s 28ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0363 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0524\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0364 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0516\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0347 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0524\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0364 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0545\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0345 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0520\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0387 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0638\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0363 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0512\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0341 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0598\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0431 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0499\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0444 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0311 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0549\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0310 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0490\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 0s 25ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0379 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0482\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0343 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0478\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 0s 27ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0369 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0477\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 0s 26ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0302 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0493\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5525<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "53f185c92c054d8cbfcff4e62b7deabd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.81MB of 3.81MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144013-m09d5s7q/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144013-m09d5s7q/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00281</td></tr><tr><td>mean_squared_error</td><td>0.00281</td></tr><tr><td>mean_absolute_error</td><td>0.03192</td></tr><tr><td>val_loss</td><td>0.00407</td></tr><tr><td>val_mean_squared_error</td><td>0.00407</td></tr><tr><td>val_mean_absolute_error</td><td>0.04928</td></tr><tr><td>_runtime</td><td>38</td></tr><tr><td>_timestamp</td><td>1626360051</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00407</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▂▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇█▆▅█▄▄▃▃▄▃▆▃▃▂▄▂▃▅▅▃▂▂▂▂▂▂▂▁▂▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇█▆▅█▄▄▃▃▄▃▆▃▃▂▄▂▃▅▅▃▂▂▂▂▂▂▂▁▂▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▆▆█▅▄▄▄▄▃▆▄▃▃▄▃▄▆▆▃▂▂▂▂▂▂▂▁▂▂▂▁▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">kind-sweep-26</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m09d5s7q\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/m09d5s7q</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4d44tz7f with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">giddy-sweep-27</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4d44tz7f\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4d44tz7f</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_144122-4d44tz7f</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 11s 488ms/step - loss: 0.2566 - mean_squared_error: 0.2566 - mean_absolute_error: 0.4431 - val_loss: 0.0359 - val_mean_squared_error: 0.0359 - val_mean_absolute_error: 0.1466\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 2s 266ms/step - loss: 0.0207 - mean_squared_error: 0.0207 - mean_absolute_error: 0.1067 - val_loss: 0.0254 - val_mean_squared_error: 0.0254 - val_mean_absolute_error: 0.1249\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 2s 251ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0925 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1177\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 2s 255ms/step - loss: 0.0123 - mean_squared_error: 0.0123 - mean_absolute_error: 0.0812 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1121\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 2s 288ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0749 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1057\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 2s 245ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0730 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1170\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 2s 271ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0912 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1006\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 2s 263ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0794 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1239\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 2s 259ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0721 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1036\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 2s 246ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0692 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1027\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 2s 244ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0706 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0987\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 2s 259ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0598 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0882\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0636 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0884\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 2s 236ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0458 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0867\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 2s 243ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0738 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0897\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 2s 223ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0502 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0886\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 2s 226ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0407 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0987\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 2s 240ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0573 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1127\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 2s 241ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0561 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0886\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 2s 251ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0765 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0917\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 2s 242ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0454 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0904\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 2s 226ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0597 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0875\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 2s 271ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0626 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0936\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 2s 216ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0530 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0890\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 2s 230ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0434 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0933\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 2s 239ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0382 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0840\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 2s 233ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0686 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0914\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 2s 237ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0409 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0879\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 2s 240ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0512 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0902\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 2s 266ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0511 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0893\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 2s 250ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0520 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0899\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 2s 234ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0492 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0918\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 2s 261ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0527 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0873\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 2s 263ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0405 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0909\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 2s 262ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0410 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0878\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 2s 257ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0529 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0923\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5730<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "915e69d0a12a4dedb2e8232464635f6c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.83MB of 3.83MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144122-4d44tz7f/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144122-4d44tz7f/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>35</td></tr><tr><td>loss</td><td>0.00471</td></tr><tr><td>mean_squared_error</td><td>0.00471</td></tr><tr><td>mean_absolute_error</td><td>0.04537</td></tr><tr><td>val_loss</td><td>0.01305</td></tr><tr><td>val_mean_squared_error</td><td>0.01305</td></tr><tr><td>val_mean_absolute_error</td><td>0.0923</td></tr><tr><td>_runtime</td><td>86</td></tr><tr><td>_timestamp</td><td>1626360168</td></tr><tr><td>_step</td><td>35</td></tr><tr><td>best_val_loss</td><td>0.0108</td></tr><tr><td>best_epoch</td><td>25</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▂▁▂▁▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▄▄▃▄▃▅▃▃▂▁▁▁▁▁▂▃▁▂▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>█▅▄▄▃▄▃▅▃▃▂▁▁▁▁▁▂▃▁▂▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▅▄▃▅▃▅▃▃▃▁▁▁▂▂▃▄▂▂▂▁▂▂▂▁▂▁▂▂▂▂▁▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">giddy-sweep-27</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4d44tz7f\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/4d44tz7f</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 6xk8mktv with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">flowing-sweep-28</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/6xk8mktv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/6xk8mktv</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_144307-6xk8mktv</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 12s 368ms/step - loss: 0.2390 - mean_squared_error: 0.2390 - mean_absolute_error: 0.4195 - val_loss: 0.0392 - val_mean_squared_error: 0.0392 - val_mean_absolute_error: 0.1560\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 4s 250ms/step - loss: 0.0292 - mean_squared_error: 0.0292 - mean_absolute_error: 0.1297 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1380\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 4s 248ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0928 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1140\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 4s 252ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0670 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0977\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 4s 265ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0573 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0981\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 4s 231ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0595 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0940\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 4s 222ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0477 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0934\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 4s 232ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0443 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0916\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 4s 229ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0434 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0925\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 4s 226ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0507 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0880\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 4s 243ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0454 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0966\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0495 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0932\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0440 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0875\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 4s 233ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0404 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0884\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 4s 231ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0407 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0968\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 4s 236ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0448 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0879\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 4s 259ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0437 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0834\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 4s 265ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0369 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0842\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 4s 248ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0378 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0848\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 4s 258ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0344 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0817\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 4s 256ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0414 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0828\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 4s 259ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0373 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0837\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 4s 231ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0377 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0871\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 4s 225ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0385 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0894\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 4s 229ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0367 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0872\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 4s 229ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0373 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0894\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 4s 235ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0388 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0855\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 4s 241ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0389 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0833\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 4s 227ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0390 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0908\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 4s 220ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0380 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0900\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5893<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "dc1a9b68f74e4e51a83d7c5aadb08a10",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.85MB of 3.85MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144307-6xk8mktv/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144307-6xk8mktv/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>29</td></tr><tr><td>loss</td><td>0.00336</td></tr><tr><td>mean_squared_error</td><td>0.00336</td></tr><tr><td>mean_absolute_error</td><td>0.03829</td></tr><tr><td>val_loss</td><td>0.01211</td></tr><tr><td>val_mean_squared_error</td><td>0.01211</td></tr><tr><td>val_mean_absolute_error</td><td>0.08999</td></tr><tr><td>_runtime</td><td>130</td></tr><tr><td>_timestamp</td><td>1626360317</td></tr><tr><td>_step</td><td>29</td></tr><tr><td>best_val_loss</td><td>0.00991</td></tr><tr><td>best_epoch</td><td>19</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▃▂▂▂▂▂▂▁▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▂▁▁▂▂</td></tr><tr><td>val_mean_squared_error</td><td>█▅▃▂▂▂▂▂▂▁▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▂▁▁▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▄▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▂▂▂▂▁▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">flowing-sweep-28</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/6xk8mktv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/6xk8mktv</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: rzec41gn with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">devoted-sweep-29</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/rzec41gn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/rzec41gn</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_144532-rzec41gn</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 16s 295ms/step - loss: 0.2674 - mean_squared_error: 0.2674 - mean_absolute_error: 0.3458 - val_loss: 0.0330 - val_mean_squared_error: 0.0330 - val_mean_absolute_error: 0.1547\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 7s 224ms/step - loss: 0.0147 - mean_squared_error: 0.0147 - mean_absolute_error: 0.0859 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1103\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0550 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0872\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 7s 221ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0421 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0804\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0398 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0885\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 7s 218ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0447 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0786\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 7s 225ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0397 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0695\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 7s 235ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0421 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0719\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0372 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0644\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 7s 229ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0388 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0765\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 7s 220ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0346 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0681\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 7s 222ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0386 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0701\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0378 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0679\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 7s 219ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0392 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0738\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 7s 214ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0312 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0659\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 7s 227ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0423 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0713\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 8s 237ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0355 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0683\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 7s 235ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0382 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0710\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 8s 238ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0291 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0692\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6038<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ce008f3d07ad408aa38ba5a8ba469d91",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 3.86MB of 3.86MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144532-rzec41gn/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210715_144532-rzec41gn/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>18</td></tr><tr><td>loss</td><td>0.00231</td></tr><tr><td>mean_squared_error</td><td>0.00231</td></tr><tr><td>mean_absolute_error</td><td>0.0314</td></tr><tr><td>val_loss</td><td>0.00724</td></tr><tr><td>val_mean_squared_error</td><td>0.00724</td></tr><tr><td>val_mean_absolute_error</td><td>0.06917</td></tr><tr><td>_runtime</td><td>153</td></tr><tr><td>_timestamp</td><td>1626360485</td></tr><tr><td>_step</td><td>18</td></tr><tr><td>best_val_loss</td><td>0.00672</td></tr><tr><td>best_epoch</td><td>8</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▃▂▂▂▁▁▁▂▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▃▂▂▂▁▁▁▂▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▃▂▃▂▁▂▁▂▁▁▁▂▁▂▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">devoted-sweep-29</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/rzec41gn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/rzec41gn</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: tv6w7c8q with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">youthful-sweep-30</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/sweeps/4oebpufv</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/tv6w7c8q\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_AE/runs/tv6w7c8q</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210715_144819-tv6w7c8q</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_1 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_2 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm_3 will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 10s 505ms/step - loss: 18376.0371 - mean_squared_error: 18376.0371 - mean_absolute_error: 18.3583 - val_loss: 0.0531 - val_mean_squared_error: 0.0531 - val_mean_absolute_error: 0.1773\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 2s 260ms/step - loss: 0.0641 - mean_squared_error: 0.0641 - mean_absolute_error: 0.2168 - val_loss: 0.0314 - val_mean_squared_error: 0.0314 - val_mean_absolute_error: 0.1385\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 2s 240ms/step - loss: 0.0182 - mean_squared_error: 0.0182 - mean_absolute_error: 0.0999 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1159\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 2s 244ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0667 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1168\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0652 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1156\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 2s 246ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0632 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1155\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 2s 244ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0648 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1151\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0612 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1146\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 2s 229ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0597 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1121\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 2s 230ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0620 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1118\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 2s 240ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0597 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1134\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0574 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1102\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 2s 225ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0574 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1084\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 2s 245ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0568 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1092\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 2s 243ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0568 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1067\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 2s 247ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0595 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1096\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 2s 238ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0594 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1052\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 2s 233ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0539 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1074\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 2s 226ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0625 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1020\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 2s 227ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0611 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1033\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 2s 236ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0516 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.1001\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 2s 238ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0539 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0965\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 2s 216ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0520 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.1012\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 2s 243ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0523 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0969\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 2s 249ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0590 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0981\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 2s 251ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0536 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.1013\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 2s 254ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0543 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0961\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 2s 242ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0516 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0955\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 2s 237ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0522 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0949\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 2s 265ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0572 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0939\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 2s 252ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0618 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0929\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0545 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0937\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 2s 258ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0580 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0924\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 2s 253ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0615 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0964\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 2s 255ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0769 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0954\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0713 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0979\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 2s 231ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0863 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1106\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 2s 238ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0942 - val_loss: 0.0304 - val_mean_squared_error: 0.0304 - val_mean_absolute_error: 0.1394\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 2s 233ms/step - loss: 0.0269 - mean_squared_error: 0.0269 - mean_absolute_error: 0.1274 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1094\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 2s 241ms/step - loss: 0.0192 - mean_squared_error: 0.0192 - mean_absolute_error: 0.1036 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0936\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 2s 253ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0797 - val_loss: 0.0224 - val_mean_squared_error: 0.0224 - val_mean_absolute_error: 0.1182\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 2s 235ms/step - loss: 0.0197 - mean_squared_error: 0.0197 - mean_absolute_error: 0.1026 - val_loss: 0.0253 - val_mean_squared_error: 0.0253 - val_mean_absolute_error: 0.1215\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 2s 232ms/step - loss: 0.0191 - mean_squared_error: 0.0191 - mean_absolute_error: 0.0935 - val_loss: 0.0393 - val_mean_squared_error: 0.0393 - val_mean_absolute_error: 0.1508\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6150<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "25047b56c55947e1a712bb1b89146b96",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 2.94MB of 2.94MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gFTu29dbi18i"
      },
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwsO8cDJPMdj"
      },
      "source": [
        "# picking the best values\n",
        "best_config = {\n",
        "    'epochs': 100,\n",
        "    'batch_size': 64,\n",
        "    'dropout': 0.1,\n",
        "    'learning_rate': 0.005,\n",
        "    'optimizer': 'nadam',\n",
        "    'activation': 'tanh'\n",
        "}"
      ],
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "07bb0e02-4077-4600-f06f-3d554822350e"
      },
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# layer 1\n",
        "model.add(LSTM(units=128, return_sequences=True, input_shape=(window_len, 1), activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 2\n",
        "model.add(LSTM(units=64, return_sequences=False, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 3\n",
        "model.add(RepeatVector(window_len))\n",
        "# layer 4\n",
        "model.add(LSTM(units=64, return_sequences=True, activation=best_config['activation']))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 5\n",
        "model.add(LSTM(units=128, return_sequences=False, activation=best_config['activation']))\n",
        "model.add(Dropout(0.1))\n",
        "# layer 6\n",
        "model.add((Dense(1)))\n",
        "\n",
        "# defining the optimiser\n",
        "if best_config['optimizer'] == 'sgd':\n",
        "  optimizer = SGD(learning_rate=best_config['learning_rate'], decay=1e-5, momentum=0.9, nesterov=True)\n",
        "elif best_config['optimizer'] == 'rmsprop':\n",
        "  optimizer = RMSprop(learning_rate=best_config['learning_rate'], decay=1e-5)\n",
        "elif best_config['optimizer'] == 'adam':\n",
        "  optimizer = Adam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "elif best_config['optimizer'] == 'nadam':\n",
        "  optimizer = Nadam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total number of trainable parameters:  247937\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5UG8j_4r7kSu",
        "outputId": "3a4ae031-21b7-436e-c312-f9d0de3983cb"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "lstm (LSTM)                  (None, 30, 128)           66560     \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 30, 128)           0         \n",
            "_________________________________________________________________\n",
            "lstm_1 (LSTM)                (None, 64)                49408     \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "repeat_vector (RepeatVector) (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "lstm_2 (LSTM)                (None, 30, 64)            33024     \n",
            "_________________________________________________________________\n",
            "dropout_2 (Dropout)          (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "lstm_3 (LSTM)                (None, 128)               98816     \n",
            "_________________________________________________________________\n",
            "dropout_3 (Dropout)          (None, 128)               0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 1)                 129       \n",
            "=================================================================\n",
            "Total params: 247,937\n",
            "Trainable params: 247,937\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "051a0eb7-3cdc-415f-a603-0b357956c323"
      },
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=best_config['epochs'], batch_size=best_config['batch_size'])"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "20/20 [==============================] - 7s 19ms/step - loss: 2.3695\n",
            "Epoch 2/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0276\n",
            "Epoch 3/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0194\n",
            "Epoch 4/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0084\n",
            "Epoch 5/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0091\n",
            "Epoch 6/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0070\n",
            "Epoch 7/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0080\n",
            "Epoch 8/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0048\n",
            "Epoch 9/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0067\n",
            "Epoch 10/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0036\n",
            "Epoch 11/100\n",
            "20/20 [==============================] - 0s 20ms/step - loss: 0.0043\n",
            "Epoch 12/100\n",
            "20/20 [==============================] - 0s 20ms/step - loss: 0.0046\n",
            "Epoch 13/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0062\n",
            "Epoch 14/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0020\n",
            "Epoch 15/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0078\n",
            "Epoch 16/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0061\n",
            "Epoch 17/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0030\n",
            "Epoch 18/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0058\n",
            "Epoch 19/100\n",
            "20/20 [==============================] - 0s 20ms/step - loss: 0.0022\n",
            "Epoch 20/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0035\n",
            "Epoch 21/100\n",
            "20/20 [==============================] - 0s 20ms/step - loss: 0.0047\n",
            "Epoch 22/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0054\n",
            "Epoch 23/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0022\n",
            "Epoch 24/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0043\n",
            "Epoch 25/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0022\n",
            "Epoch 26/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0035\n",
            "Epoch 27/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0015\n",
            "Epoch 28/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0032\n",
            "Epoch 29/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0040\n",
            "Epoch 30/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0013\n",
            "Epoch 31/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0022\n",
            "Epoch 32/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0025\n",
            "Epoch 33/100\n",
            "20/20 [==============================] - 0s 21ms/step - loss: 0.0019\n",
            "Epoch 34/100\n",
            "20/20 [==============================] - 0s 20ms/step - loss: 0.0018\n",
            "Epoch 35/100\n",
            "20/20 [==============================] - 0s 20ms/step - loss: 0.0019\n",
            "Epoch 36/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0020\n",
            "Epoch 37/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0027\n",
            "Epoch 38/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0028\n",
            "Epoch 39/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0024\n",
            "Epoch 40/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0057\n",
            "Epoch 41/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0012\n",
            "Epoch 42/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0016\n",
            "Epoch 43/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0024\n",
            "Epoch 44/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0011\n",
            "Epoch 45/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0020\n",
            "Epoch 46/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0013\n",
            "Epoch 47/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0021\n",
            "Epoch 48/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0019\n",
            "Epoch 49/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0010\n",
            "Epoch 50/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0033\n",
            "Epoch 51/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0012\n",
            "Epoch 52/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0015\n",
            "Epoch 53/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0029\n",
            "Epoch 54/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0012\n",
            "Epoch 55/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0014\n",
            "Epoch 56/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0014\n",
            "Epoch 57/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0013\n",
            "Epoch 58/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0017\n",
            "Epoch 59/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0012\n",
            "Epoch 60/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0024\n",
            "Epoch 61/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0014\n",
            "Epoch 62/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0011\n",
            "Epoch 63/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0022\n",
            "Epoch 64/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0023\n",
            "Epoch 65/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 8.4673e-04\n",
            "Epoch 66/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0012\n",
            "Epoch 67/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0025\n",
            "Epoch 68/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 9.8271e-04\n",
            "Epoch 69/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0019\n",
            "Epoch 70/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0015\n",
            "Epoch 71/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0012\n",
            "Epoch 72/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0020\n",
            "Epoch 73/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 8.1538e-04\n",
            "Epoch 74/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0017\n",
            "Epoch 75/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0018\n",
            "Epoch 76/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0026\n",
            "Epoch 77/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 9.3155e-04\n",
            "Epoch 78/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0038\n",
            "Epoch 79/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0014\n",
            "Epoch 80/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0010\n",
            "Epoch 81/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0014\n",
            "Epoch 82/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0025\n",
            "Epoch 83/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0015\n",
            "Epoch 84/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 0.0016\n",
            "Epoch 85/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 7.8655e-04\n",
            "Epoch 86/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0021\n",
            "Epoch 87/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0012\n",
            "Epoch 88/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 8.3302e-04\n",
            "Epoch 89/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0020\n",
            "Epoch 90/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 8.5672e-04\n",
            "Epoch 91/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 7.9952e-04\n",
            "Epoch 92/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0011\n",
            "Epoch 93/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0029\n",
            "Epoch 94/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0013\n",
            "Epoch 95/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 9.8982e-04\n",
            "Epoch 96/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 7.9146e-04\n",
            "Epoch 97/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 0.0031\n",
            "Epoch 98/100\n",
            "20/20 [==============================] - 0s 17ms/step - loss: 7.8569e-04\n",
            "Epoch 99/100\n",
            "20/20 [==============================] - 0s 19ms/step - loss: 0.0015\n",
            "Epoch 100/100\n",
            "20/20 [==============================] - 0s 18ms/step - loss: 8.5832e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7fca2c97b050>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rTXJN51l9Y-F"
      },
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H-D-XHyRjFMp"
      },
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "9695da78-47e7-4000-d9d0-0d0c4da533d0"
      },
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str, model_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "47a0f40d-12c8-4425-e26c-596acba8e534"
      },
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "eba7d991-197d-4ff3-f60c-9b10d785e3da"
      },
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "d_mse = mean_squared_error(y_true, y_dummy)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "d_rmse = mean_squared_error(y_true, y_dummy, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "d_mae = mean_absolute_error(y_true, y_dummy)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)\n",
        "print('Dummy MSE: ', d_mse)\n",
        "print('Dummy RMSE: ', d_rmse)\n",
        "print('Dummy MAE: ', d_mae)"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MSE:  0.002736181280713107\n",
            "RMSE:  0.05230852015411167\n",
            "MAE:  0.040902670270330385\n",
            "Dummy MSE:  0.01696823190684472\n",
            "Dummy RMSE:  0.13026216606077423\n",
            "Dummy MAE:  0.10864031818078547\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a25e65af-772a-4f83-dac2-a8ec75c7425a"
      },
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE: '+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n'+\n",
        "                 'Dummy MSE: '+str(d_mse)+'\\n'+'Dummy RMSE: '+str(d_rmse)+'\\n'+'Dummy MAE: '+str(d_mae))\n",
        "error_file.close()"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive/\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:absl:Found untraced functions such as lstm_cell_layer_call_and_return_conditional_losses, lstm_cell_layer_call_fn, lstm_cell_1_layer_call_and_return_conditional_losses, lstm_cell_1_layer_call_fn, lstm_cell_2_layer_call_and_return_conditional_losses while saving (showing 5 of 20). These functions will not be directly callable after loading.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/LSTM_AE_EURCHF/assets\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/LSTM_AE_EURCHF/assets\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}