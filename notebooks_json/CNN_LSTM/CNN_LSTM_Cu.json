{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "CNN_LSTM_Cu.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNxi70RxTu63tnqwB5X3kVc",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "9e14ebad6c574ca4b906dd6ce8da2913": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b23ecfe1b76842f7953948c7dac0c79e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_73eb68de0fe741cf8212c6069835f678",
              "IPY_MODEL_1899b8641038493bb4d1f7d2c7c57d2e"
            ]
          }
        },
        "b23ecfe1b76842f7953948c7dac0c79e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "73eb68de0fe741cf8212c6069835f678": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f6d3375ed3f04bafb0aa344fcf22c763",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 11.56MB of 11.56MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_13d7760c248c49afbb1b7384063ceb94"
          }
        },
        "1899b8641038493bb4d1f7d2c7c57d2e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_7d266f629643454c8e0258b20422b0bc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2357b250a5fc46ddb7742af36bc925d1"
          }
        },
        "f6d3375ed3f04bafb0aa344fcf22c763": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "13d7760c248c49afbb1b7384063ceb94": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7d266f629643454c8e0258b20422b0bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2357b250a5fc46ddb7742af36bc925d1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "617e6bdeb3e94e13b29c63c490646929": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6771625800124da0bd3d627d478f7aab",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_51fb1147221f4a218d5bdae26d9a5025",
              "IPY_MODEL_849bb6b0ff88417fb62512b0c9afbf4a"
            ]
          }
        },
        "6771625800124da0bd3d627d478f7aab": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "51fb1147221f4a218d5bdae26d9a5025": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e73b0bf720f64eb5a0bccc518a85acd1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 7.83MB of 7.83MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_60985bfcb73d4a528f306be81c97ddcc"
          }
        },
        "849bb6b0ff88417fb62512b0c9afbf4a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9a1a8962207c466d8cf41eaaa3ee66aa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e22901b3837e4752bf0ca2c56462a997"
          }
        },
        "e73b0bf720f64eb5a0bccc518a85acd1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "60985bfcb73d4a528f306be81c97ddcc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9a1a8962207c466d8cf41eaaa3ee66aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e22901b3837e4752bf0ca2c56462a997": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7209356ec8fb49e097950e389539b52f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_382e4b66b7c140e8ae079d95433b4bb7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f52a402beafc431ba494110b0abe0c2d",
              "IPY_MODEL_31d756646cd3435682e4a7eab8d4c38d"
            ]
          }
        },
        "382e4b66b7c140e8ae079d95433b4bb7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f52a402beafc431ba494110b0abe0c2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8bb1427b4bf64c6e9908048db74f871d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 7.60MB of 7.60MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c9aa289b0fc746b89165c0573779274e"
          }
        },
        "31d756646cd3435682e4a7eab8d4c38d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0817889ebc9d41b691ded85bf1706d90",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3b02fd7132654090825461c229f9985e"
          }
        },
        "8bb1427b4bf64c6e9908048db74f871d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c9aa289b0fc746b89165c0573779274e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0817889ebc9d41b691ded85bf1706d90": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3b02fd7132654090825461c229f9985e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d801ae16b0c84aa48c8bc997e9579302": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_5d19fb979bed40cdb68b49570c594cec",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_03ab8aa500964023b2c44744e2e1182c",
              "IPY_MODEL_e84ef2f9e35849de8b2460f16d3df59a"
            ]
          }
        },
        "5d19fb979bed40cdb68b49570c594cec": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "03ab8aa500964023b2c44744e2e1182c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f4c1296ec57c45db86acab3aca09e8b1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 11.68MB of 11.68MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_19de37f2308e48b7aece853ff7ed14cf"
          }
        },
        "e84ef2f9e35849de8b2460f16d3df59a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2ef975ba01a24d79ad7d78f8f009d3d6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f00e84f8a15c44c0b8603bdf3b76317f"
          }
        },
        "f4c1296ec57c45db86acab3aca09e8b1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "19de37f2308e48b7aece853ff7ed14cf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2ef975ba01a24d79ad7d78f8f009d3d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f00e84f8a15c44c0b8603bdf3b76317f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e8255682de7c4e049cf6cad245aee95d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c8bab68d954043909d6f3ab4e0a846ee",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_1afc78abb88c4fa684cf00cce9b33168",
              "IPY_MODEL_e1fc8163ed5e49c79060bd4c361f3f61"
            ]
          }
        },
        "c8bab68d954043909d6f3ab4e0a846ee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1afc78abb88c4fa684cf00cce9b33168": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_33c3b8495769479ca6b5e77c8feb4986",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 7.96MB of 7.96MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_90cb82e8fcf14e249f89635e75dbbf59"
          }
        },
        "e1fc8163ed5e49c79060bd4c361f3f61": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8f2e6befba6444dfb7a79f84fdc5e4dc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7265e9b0ffc94cdc930ab966632a760e"
          }
        },
        "33c3b8495769479ca6b5e77c8feb4986": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "90cb82e8fcf14e249f89635e75dbbf59": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8f2e6befba6444dfb7a79f84fdc5e4dc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7265e9b0ffc94cdc930ab966632a760e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "904aa5578cc44493ba8fae17d0f4ce97": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_dfba835f870349bf8ad2eec75715b773",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_235fca29b5504078ae318fe601df43e5",
              "IPY_MODEL_a34b6e65815c422eae095385ce7ab598"
            ]
          }
        },
        "dfba835f870349bf8ad2eec75715b773": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "235fca29b5504078ae318fe601df43e5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_a9911b832efc4fc581f5acd7c56a2beb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 7.97MB of 7.97MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_36c3ad1148fd4bf4896d2ba462fb4f4d"
          }
        },
        "a34b6e65815c422eae095385ce7ab598": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_57c63b9965d1447595944bf3e482ea87",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1c6bcf830e594567938433307e51ef19"
          }
        },
        "a9911b832efc4fc581f5acd7c56a2beb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "36c3ad1148fd4bf4896d2ba462fb4f4d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "57c63b9965d1447595944bf3e482ea87": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1c6bcf830e594567938433307e51ef19": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8f262abd4d304090ac7a166630f09697": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_610aebd58e3d4997989485b53a068669",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_75986ee634f14e888979c18c0a2522d4",
              "IPY_MODEL_3b3e8991c8bf45b28d203583c35433a6"
            ]
          }
        },
        "610aebd58e3d4997989485b53a068669": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "75986ee634f14e888979c18c0a2522d4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d63ea64a345740859718d6b088e41ef7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.02MB of 8.02MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5b7b03fa9078451cabf8e9d4582da15a"
          }
        },
        "3b3e8991c8bf45b28d203583c35433a6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0d1cd8467f0342a5aff6ee56fc146067",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_be8ada4a3c5f4321adbc4781164eb9a4"
          }
        },
        "d63ea64a345740859718d6b088e41ef7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5b7b03fa9078451cabf8e9d4582da15a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0d1cd8467f0342a5aff6ee56fc146067": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "be8ada4a3c5f4321adbc4781164eb9a4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dd938e22530f44648f693db827e85a13": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b05e42cbd6914be890a84249e181171c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_1f98d7c4022c401ab18572b1863f68c5",
              "IPY_MODEL_348b0cb8144643949175954bdaa94881"
            ]
          }
        },
        "b05e42cbd6914be890a84249e181171c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1f98d7c4022c401ab18572b1863f68c5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_96ce9b3a1907476d948dc807357d7ba1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.04MB of 8.04MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0a3fc3ec23f5454d811b92748c70d2ec"
          }
        },
        "348b0cb8144643949175954bdaa94881": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f875df21a1494638b27af4f624c2710c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d3e56436b1a9439d9ed51ae636732f76"
          }
        },
        "96ce9b3a1907476d948dc807357d7ba1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0a3fc3ec23f5454d811b92748c70d2ec": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f875df21a1494638b27af4f624c2710c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d3e56436b1a9439d9ed51ae636732f76": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3220103a4e3744b39b50ace6d009b5b8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_8a0f7d4a2c5c435cb01a2bb3c7e6f6b1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5faa05523efd4455a4524752619e8940",
              "IPY_MODEL_827ea26e11544b06a11f4328769a583c"
            ]
          }
        },
        "8a0f7d4a2c5c435cb01a2bb3c7e6f6b1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5faa05523efd4455a4524752619e8940": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_88081e23e2994c818f99187de58570b0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 11.82MB of 11.82MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_096bf45cd1d74c40b7b19aa9bf78b907"
          }
        },
        "827ea26e11544b06a11f4328769a583c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9250dc1fd3bb4b029289bf8df7a7ecd9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_94f69fbd8905423789b635f19da34841"
          }
        },
        "88081e23e2994c818f99187de58570b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "096bf45cd1d74c40b7b19aa9bf78b907": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9250dc1fd3bb4b029289bf8df7a7ecd9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "94f69fbd8905423789b635f19da34841": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f1de5a4c4c7f458a86303dcf90818670": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6fb4188e917a4bb3a0c134722769e027",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5ed68e9835184263aa2f86d15fe60015",
              "IPY_MODEL_cfb0e234d1c3406a81fca4987dbae2d0"
            ]
          }
        },
        "6fb4188e917a4bb3a0c134722769e027": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5ed68e9835184263aa2f86d15fe60015": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_cc19fed074ce41c7bca1cd3ec790ba9d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 11.84MB of 11.84MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c949bfc290f441e6981053eab5c150da"
          }
        },
        "cfb0e234d1c3406a81fca4987dbae2d0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_1d6779c8a90147ca871a0bc56a784dfc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ec0a6b19870c4ac7ba65ffcfdb396f09"
          }
        },
        "cc19fed074ce41c7bca1cd3ec790ba9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c949bfc290f441e6981053eab5c150da": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1d6779c8a90147ca871a0bc56a784dfc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ec0a6b19870c4ac7ba65ffcfdb396f09": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e162551aa8eb44e899057935d0c55a7f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_abc6e46724254d9eb2eb13c9b40fed8e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_653d437290bf4da1af752bb52bf79e08",
              "IPY_MODEL_c63c1142d4e545f59c6ecf3fe36091cd"
            ]
          }
        },
        "abc6e46724254d9eb2eb13c9b40fed8e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "653d437290bf4da1af752bb52bf79e08": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_c1e39bb71bdc481a92849c4315f640df",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.13MB of 8.13MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_400526a7b1af43079a379395b9958bd7"
          }
        },
        "c63c1142d4e545f59c6ecf3fe36091cd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_357c8256f4ef4c7999686ef4a3c54083",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ad03cda0c6324e2e921c98579508b666"
          }
        },
        "c1e39bb71bdc481a92849c4315f640df": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "400526a7b1af43079a379395b9958bd7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "357c8256f4ef4c7999686ef4a3c54083": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ad03cda0c6324e2e921c98579508b666": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e4baaab6d8404e918a5017b39f1567c2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ec2dccab47314f3f8d9afc75e03658ab",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_55d2c5b67c0b4379ade09a0bceb21cfe",
              "IPY_MODEL_24e774dbc347458c996425810341d968"
            ]
          }
        },
        "ec2dccab47314f3f8d9afc75e03658ab": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "55d2c5b67c0b4379ade09a0bceb21cfe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_829327e5c24a4f50906703c2d0b13b34",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 11.89MB of 11.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c927dac360ad4e60b7c6fcb1fac8f718"
          }
        },
        "24e774dbc347458c996425810341d968": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_aeeeee1a3a5444bea06e484c1b4bbbd0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b825d6af551a4359a1bcb49a846c0ca2"
          }
        },
        "829327e5c24a4f50906703c2d0b13b34": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c927dac360ad4e60b7c6fcb1fac8f718": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "aeeeee1a3a5444bea06e484c1b4bbbd0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b825d6af551a4359a1bcb49a846c0ca2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "73db8e01cd5a4ad2b0786018ebd374a2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7f01337b842b4bdba66965b5c3e9070e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9fd7a5a78c78459d83e350872b1b6060",
              "IPY_MODEL_cb57182bbaff42f294a97c38a2956084"
            ]
          }
        },
        "7f01337b842b4bdba66965b5c3e9070e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9fd7a5a78c78459d83e350872b1b6060": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_fa751438f8574f7ca07a62848b68e171",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.19MB of 8.19MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ed276406291e436988d3fa56051e315d"
          }
        },
        "cb57182bbaff42f294a97c38a2956084": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a7712e63732e4383bb7746a38ca17cb2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8bd22e3c344049348b4c4942fa82af39"
          }
        },
        "fa751438f8574f7ca07a62848b68e171": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ed276406291e436988d3fa56051e315d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a7712e63732e4383bb7746a38ca17cb2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8bd22e3c344049348b4c4942fa82af39": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2ac553c88557468881514061fc7006ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f70b7dbea0a3407a9df524f942512fe7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b11e618a45c74895bcacb54bdba7dd96",
              "IPY_MODEL_d6f17bc18eb14639b73f9baaf81f9b75"
            ]
          }
        },
        "f70b7dbea0a3407a9df524f942512fe7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b11e618a45c74895bcacb54bdba7dd96": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9a70410dbb6040b4ad9d0d053742799a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 11.97MB of 11.97MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_780bf3c4cabb44fabb80517349385113"
          }
        },
        "d6f17bc18eb14639b73f9baaf81f9b75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_26eff53f6be0403d9aaa44b1ee81f805",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1e96e3590a22465a8ad12c26e9ffcb7a"
          }
        },
        "9a70410dbb6040b4ad9d0d053742799a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "780bf3c4cabb44fabb80517349385113": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "26eff53f6be0403d9aaa44b1ee81f805": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1e96e3590a22465a8ad12c26e9ffcb7a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d0a0dc171f4b4952979bcdd1e03540d7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_8de5b300fe184ddb8e96ca3ede6b1ad3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_55d0f2b9835f4dc9b6159c0fa2ab7a41",
              "IPY_MODEL_df2543f948dc44049711bf02cff1a7c7"
            ]
          }
        },
        "8de5b300fe184ddb8e96ca3ede6b1ad3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "55d0f2b9835f4dc9b6159c0fa2ab7a41": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_60c5afe3013e4b01896928dea23bfb38",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.22MB of 8.22MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_edfae60280514583a320ac3382a5001e"
          }
        },
        "df2543f948dc44049711bf02cff1a7c7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d7b89953e0434cf4a4795d4a23fc0f9d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b0248579ec424affb228615077f59916"
          }
        },
        "60c5afe3013e4b01896928dea23bfb38": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "edfae60280514583a320ac3382a5001e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d7b89953e0434cf4a4795d4a23fc0f9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b0248579ec424affb228615077f59916": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4eee187e75684bb7b465be242422bfd0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_dcef701f05554b5e97525e6afdc61f41",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_8dac7024eb4e4d3a81adccfcc44fba8c",
              "IPY_MODEL_a07f1789489944619e60176e9d4d3b66"
            ]
          }
        },
        "dcef701f05554b5e97525e6afdc61f41": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8dac7024eb4e4d3a81adccfcc44fba8c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_bd988b86fabe488a91031e2081cf5ef9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.25MB of 8.25MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_06cf90df2c3b483bb31241c50d524a8e"
          }
        },
        "a07f1789489944619e60176e9d4d3b66": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_116da3bac56640f4b722301513520708",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_054e95264eca47008ddd957612cab363"
          }
        },
        "bd988b86fabe488a91031e2081cf5ef9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "06cf90df2c3b483bb31241c50d524a8e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "116da3bac56640f4b722301513520708": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "054e95264eca47008ddd957612cab363": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3027c14f490e4ab0a64acdf31c3ce9d8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_199f7bf37f51445ca3cffc7d0802353e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_78a311c919aa4d259e03e1625e61bf20",
              "IPY_MODEL_cc4821331b9447a1956cddf9d3521c76"
            ]
          }
        },
        "199f7bf37f51445ca3cffc7d0802353e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "78a311c919aa4d259e03e1625e61bf20": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_a43a5019bf844e208887a5e80a42170b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.28MB of 8.28MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_91953a0791c14f7991790f3cdfd4f33d"
          }
        },
        "cc4821331b9447a1956cddf9d3521c76": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_254a71f1eaf841f89fb060a532700090",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_aab41896ce954cd1997deea6c90dae31"
          }
        },
        "a43a5019bf844e208887a5e80a42170b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "91953a0791c14f7991790f3cdfd4f33d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "254a71f1eaf841f89fb060a532700090": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "aab41896ce954cd1997deea6c90dae31": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c72cefda36d748d6a369786fb45d5469": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_76ed72f401c444a1abe83da7b2422bc0",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9c60754b2e97475cbb55dc5326e5852d",
              "IPY_MODEL_986b459f51214b2e8d87c4cea573c162"
            ]
          }
        },
        "76ed72f401c444a1abe83da7b2422bc0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9c60754b2e97475cbb55dc5326e5852d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_7f92b724f11c4b20a57f329da083d20e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 12.05MB of 12.05MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_110be08424d84a65b57118e7f139f940"
          }
        },
        "986b459f51214b2e8d87c4cea573c162": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_99062ab9b8e449a29b0e1f154dc9228b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_046228407c3f4d36853dd71f3834beea"
          }
        },
        "7f92b724f11c4b20a57f329da083d20e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "110be08424d84a65b57118e7f139f940": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "99062ab9b8e449a29b0e1f154dc9228b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "046228407c3f4d36853dd71f3834beea": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ce8bf42cff6741eab029b9d5db060052": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_93d8c4ea3c75479fa7db699b9e7a7526",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_deaa01325ac64b5cbb2d7b109ad0b673",
              "IPY_MODEL_8534115f0ec4497bab87c2211ad64b2e"
            ]
          }
        },
        "93d8c4ea3c75479fa7db699b9e7a7526": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "deaa01325ac64b5cbb2d7b109ad0b673": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_0fa1102bd75a4e23ba1cf20b6a407846",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.32MB of 8.32MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4186ae8e62c8429d8b64f91936ffd9aa"
          }
        },
        "8534115f0ec4497bab87c2211ad64b2e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_442e4c71291a4a4ea0b57f2f7254b45a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ff9ee6d82b914aa1ad0d18bd7a68ef2d"
          }
        },
        "0fa1102bd75a4e23ba1cf20b6a407846": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4186ae8e62c8429d8b64f91936ffd9aa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "442e4c71291a4a4ea0b57f2f7254b45a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ff9ee6d82b914aa1ad0d18bd7a68ef2d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fc9d334b591d4bf0b1ff364502ce2d01": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_83601e43b8de48cbb6b0af5db47996e0",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a0e59dd05fdb445d97f5dc984419f266",
              "IPY_MODEL_b979b904a91444598182fd24637b3d21"
            ]
          }
        },
        "83601e43b8de48cbb6b0af5db47996e0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a0e59dd05fdb445d97f5dc984419f266": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_70c72cdb6e954580aea8718273961bda",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.35MB of 8.35MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_18cebbb21b5d4608aa9d7ae59662e3a6"
          }
        },
        "b979b904a91444598182fd24637b3d21": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_1c0321abce9d4fe48e3fb622c5d55f2a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2eed049dfe824da08e2917cba45e4f93"
          }
        },
        "70c72cdb6e954580aea8718273961bda": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "18cebbb21b5d4608aa9d7ae59662e3a6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1c0321abce9d4fe48e3fb622c5d55f2a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2eed049dfe824da08e2917cba45e4f93": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f6e5ae10926d49389008821e36266775": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ff1b339e44fb469c8ed329edd5a303d2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_bfe3005459aa41ac9fcf7e12db6e62e1",
              "IPY_MODEL_566b999ed3f042afb2902a7e647d1e9b"
            ]
          }
        },
        "ff1b339e44fb469c8ed329edd5a303d2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bfe3005459aa41ac9fcf7e12db6e62e1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_61d9e1266e3e4ca1a483a47e4299ab8c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 8.36MB of 8.36MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_adf17a9e6fda4ca7aaf97465ae7aedcb"
          }
        },
        "566b999ed3f042afb2902a7e647d1e9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_697af603a5dc4156aa95b6017a4174a7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8ed4ecf8f67d4361b1388cca3bddf31b"
          }
        },
        "61d9e1266e3e4ca1a483a47e4299ab8c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "adf17a9e6fda4ca7aaf97465ae7aedcb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "697af603a5dc4156aa95b6017a4174a7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8ed4ecf8f67d4361b1388cca3bddf31b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/CNN_LSTM/CNN_LSTM_Cu.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5F7GfFTgUo3"
      },
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fca35a99-09e8-4796-af90-d878807541d3"
      },
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 150, done.\u001b[K\n",
            "remote: Counting objects: 100% (150/150), done.\u001b[K\n",
            "remote: Compressing objects: 100% (145/145), done.\u001b[K\n",
            "remote: Total 150 (delta 73), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (150/150), 121.14 KiB | 4.84 MiB/s, done.\n",
            "Resolving deltas: 100% (73/73), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "24c3bf33-6b19-4e23-aa95-d431d4d8e9c5"
      },
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/feeder_repo\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c04d9265-e3ab-45b4-9111-780128570272"
      },
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRqkwo6kZUz_"
      },
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzVhwND1HAlw"
      },
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "b999afd3-0549-4126-defa-61c8a85bd3f7"
      },
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Wed Jul 21 15:14:25 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   35C    P0    27W / 250W |      0MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WB9wD4Aahs8_"
      },
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vBlKerL-c4-3"
      },
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'Cu'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'CNN_LSTM'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfQJbuBk0vW0"
      },
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len, time_distributed=True)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X53Fp1Gwh88_"
      },
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "eaadda49-a173-47e1-c49b-28748f6a8d8c"
      },
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8 MB 9.6 MB/s \n",
            "\u001b[K     |████████████████████████████████| 138 kB 60.7 MB/s \n",
            "\u001b[K     |████████████████████████████████| 170 kB 70.2 MB/s \n",
            "\u001b[K     |████████████████████████████████| 133 kB 66.7 MB/s \n",
            "\u001b[K     |████████████████████████████████| 97 kB 9.4 MB/s \n",
            "\u001b[K     |████████████████████████████████| 63 kB 2.1 MB/s \n",
            "\u001b[K     |████████████████████████████████| 62 kB 1.1 MB/s \n",
            "\u001b[?25h  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "google-colab 1.0.0 requires requests~=2.23.0, but you have requests 2.26.0 which is incompatible.\n",
            "datascience 0.10.6 requires folium==0.2.1, but you have folium 0.8.3 which is incompatible.\u001b[0m\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pbgZaoQDiIKX"
      },
      "source": [
        "!pip install wandb -qq"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "11532a3d-e974-402e-eac4-66df66a2123a"
      },
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j91IBGuSid5w"
      },
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'rmsprop', 'sgd']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['relu', 'selu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0Sr9HsorH4E"
      },
      "source": [
        "# wandb calls this training function to run through the hyperparameter search\n",
        "def train():\n",
        "    # default values for searching\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "\n",
        "    # setting keras model to sequential mode\n",
        "    model = Sequential()\n",
        "\n",
        "    # layer 1\n",
        "    model.add(TimeDistributed(Conv1D(filters=128, kernel_size=2, activation=config.activation), input_shape=(None, window_len, 1)))\n",
        "    # layer 2\n",
        "    model.add(TimeDistributed(MaxPooling1D(pool_size=2)))\n",
        "    # layer 3\n",
        "    model.add(TimeDistributed(Flatten()))\n",
        "    # layer 4\n",
        "    model.add(LSTM(units=128, activation='tanh', return_sequences=False))\n",
        "    # layer 5\n",
        "    model.add(Dropout(0.1))\n",
        "    # layer 6\n",
        "    model.add(Dense(1))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "d7e910f6-a23c-4a36-d824-ce9b70a95faa"
      },
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Create sweep with ID: dq1qh4bn\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "9e14ebad6c574ca4b906dd6ce8da2913",
            "b23ecfe1b76842f7953948c7dac0c79e",
            "73eb68de0fe741cf8212c6069835f678",
            "1899b8641038493bb4d1f7d2c7c57d2e",
            "f6d3375ed3f04bafb0aa344fcf22c763",
            "13d7760c248c49afbb1b7384063ceb94",
            "7d266f629643454c8e0258b20422b0bc",
            "2357b250a5fc46ddb7742af36bc925d1",
            "617e6bdeb3e94e13b29c63c490646929",
            "6771625800124da0bd3d627d478f7aab",
            "51fb1147221f4a218d5bdae26d9a5025",
            "849bb6b0ff88417fb62512b0c9afbf4a",
            "e73b0bf720f64eb5a0bccc518a85acd1",
            "60985bfcb73d4a528f306be81c97ddcc",
            "9a1a8962207c466d8cf41eaaa3ee66aa",
            "e22901b3837e4752bf0ca2c56462a997",
            "7209356ec8fb49e097950e389539b52f",
            "382e4b66b7c140e8ae079d95433b4bb7",
            "f52a402beafc431ba494110b0abe0c2d",
            "31d756646cd3435682e4a7eab8d4c38d",
            "8bb1427b4bf64c6e9908048db74f871d",
            "c9aa289b0fc746b89165c0573779274e",
            "0817889ebc9d41b691ded85bf1706d90",
            "3b02fd7132654090825461c229f9985e",
            "d801ae16b0c84aa48c8bc997e9579302",
            "5d19fb979bed40cdb68b49570c594cec",
            "03ab8aa500964023b2c44744e2e1182c",
            "e84ef2f9e35849de8b2460f16d3df59a",
            "f4c1296ec57c45db86acab3aca09e8b1",
            "19de37f2308e48b7aece853ff7ed14cf",
            "2ef975ba01a24d79ad7d78f8f009d3d6",
            "f00e84f8a15c44c0b8603bdf3b76317f",
            "e8255682de7c4e049cf6cad245aee95d",
            "c8bab68d954043909d6f3ab4e0a846ee",
            "1afc78abb88c4fa684cf00cce9b33168",
            "e1fc8163ed5e49c79060bd4c361f3f61",
            "33c3b8495769479ca6b5e77c8feb4986",
            "90cb82e8fcf14e249f89635e75dbbf59",
            "8f2e6befba6444dfb7a79f84fdc5e4dc",
            "7265e9b0ffc94cdc930ab966632a760e",
            "904aa5578cc44493ba8fae17d0f4ce97",
            "dfba835f870349bf8ad2eec75715b773",
            "235fca29b5504078ae318fe601df43e5",
            "a34b6e65815c422eae095385ce7ab598",
            "a9911b832efc4fc581f5acd7c56a2beb",
            "36c3ad1148fd4bf4896d2ba462fb4f4d",
            "57c63b9965d1447595944bf3e482ea87",
            "1c6bcf830e594567938433307e51ef19",
            "8f262abd4d304090ac7a166630f09697",
            "610aebd58e3d4997989485b53a068669",
            "75986ee634f14e888979c18c0a2522d4",
            "3b3e8991c8bf45b28d203583c35433a6",
            "d63ea64a345740859718d6b088e41ef7",
            "5b7b03fa9078451cabf8e9d4582da15a",
            "0d1cd8467f0342a5aff6ee56fc146067",
            "be8ada4a3c5f4321adbc4781164eb9a4",
            "dd938e22530f44648f693db827e85a13",
            "b05e42cbd6914be890a84249e181171c",
            "1f98d7c4022c401ab18572b1863f68c5",
            "348b0cb8144643949175954bdaa94881",
            "96ce9b3a1907476d948dc807357d7ba1",
            "0a3fc3ec23f5454d811b92748c70d2ec",
            "f875df21a1494638b27af4f624c2710c",
            "d3e56436b1a9439d9ed51ae636732f76",
            "3220103a4e3744b39b50ace6d009b5b8",
            "8a0f7d4a2c5c435cb01a2bb3c7e6f6b1",
            "5faa05523efd4455a4524752619e8940",
            "827ea26e11544b06a11f4328769a583c",
            "88081e23e2994c818f99187de58570b0",
            "096bf45cd1d74c40b7b19aa9bf78b907",
            "9250dc1fd3bb4b029289bf8df7a7ecd9",
            "94f69fbd8905423789b635f19da34841",
            "f1de5a4c4c7f458a86303dcf90818670",
            "6fb4188e917a4bb3a0c134722769e027",
            "5ed68e9835184263aa2f86d15fe60015",
            "cfb0e234d1c3406a81fca4987dbae2d0",
            "cc19fed074ce41c7bca1cd3ec790ba9d",
            "c949bfc290f441e6981053eab5c150da",
            "1d6779c8a90147ca871a0bc56a784dfc",
            "ec0a6b19870c4ac7ba65ffcfdb396f09",
            "e162551aa8eb44e899057935d0c55a7f",
            "abc6e46724254d9eb2eb13c9b40fed8e",
            "653d437290bf4da1af752bb52bf79e08",
            "c63c1142d4e545f59c6ecf3fe36091cd",
            "c1e39bb71bdc481a92849c4315f640df",
            "400526a7b1af43079a379395b9958bd7",
            "357c8256f4ef4c7999686ef4a3c54083",
            "ad03cda0c6324e2e921c98579508b666",
            "e4baaab6d8404e918a5017b39f1567c2",
            "ec2dccab47314f3f8d9afc75e03658ab",
            "55d2c5b67c0b4379ade09a0bceb21cfe",
            "24e774dbc347458c996425810341d968",
            "829327e5c24a4f50906703c2d0b13b34",
            "c927dac360ad4e60b7c6fcb1fac8f718",
            "aeeeee1a3a5444bea06e484c1b4bbbd0",
            "b825d6af551a4359a1bcb49a846c0ca2",
            "73db8e01cd5a4ad2b0786018ebd374a2",
            "7f01337b842b4bdba66965b5c3e9070e",
            "9fd7a5a78c78459d83e350872b1b6060",
            "cb57182bbaff42f294a97c38a2956084",
            "fa751438f8574f7ca07a62848b68e171",
            "ed276406291e436988d3fa56051e315d",
            "a7712e63732e4383bb7746a38ca17cb2",
            "8bd22e3c344049348b4c4942fa82af39",
            "2ac553c88557468881514061fc7006ee",
            "f70b7dbea0a3407a9df524f942512fe7",
            "b11e618a45c74895bcacb54bdba7dd96",
            "d6f17bc18eb14639b73f9baaf81f9b75",
            "9a70410dbb6040b4ad9d0d053742799a",
            "780bf3c4cabb44fabb80517349385113",
            "26eff53f6be0403d9aaa44b1ee81f805",
            "1e96e3590a22465a8ad12c26e9ffcb7a",
            "d0a0dc171f4b4952979bcdd1e03540d7",
            "8de5b300fe184ddb8e96ca3ede6b1ad3",
            "55d0f2b9835f4dc9b6159c0fa2ab7a41",
            "df2543f948dc44049711bf02cff1a7c7",
            "60c5afe3013e4b01896928dea23bfb38",
            "edfae60280514583a320ac3382a5001e",
            "d7b89953e0434cf4a4795d4a23fc0f9d",
            "b0248579ec424affb228615077f59916",
            "4eee187e75684bb7b465be242422bfd0",
            "dcef701f05554b5e97525e6afdc61f41",
            "8dac7024eb4e4d3a81adccfcc44fba8c",
            "a07f1789489944619e60176e9d4d3b66",
            "bd988b86fabe488a91031e2081cf5ef9",
            "06cf90df2c3b483bb31241c50d524a8e",
            "116da3bac56640f4b722301513520708",
            "054e95264eca47008ddd957612cab363",
            "3027c14f490e4ab0a64acdf31c3ce9d8",
            "199f7bf37f51445ca3cffc7d0802353e",
            "78a311c919aa4d259e03e1625e61bf20",
            "cc4821331b9447a1956cddf9d3521c76",
            "a43a5019bf844e208887a5e80a42170b",
            "91953a0791c14f7991790f3cdfd4f33d",
            "254a71f1eaf841f89fb060a532700090",
            "aab41896ce954cd1997deea6c90dae31",
            "c72cefda36d748d6a369786fb45d5469",
            "76ed72f401c444a1abe83da7b2422bc0",
            "9c60754b2e97475cbb55dc5326e5852d",
            "986b459f51214b2e8d87c4cea573c162",
            "7f92b724f11c4b20a57f329da083d20e",
            "110be08424d84a65b57118e7f139f940",
            "99062ab9b8e449a29b0e1f154dc9228b",
            "046228407c3f4d36853dd71f3834beea",
            "ce8bf42cff6741eab029b9d5db060052",
            "93d8c4ea3c75479fa7db699b9e7a7526",
            "deaa01325ac64b5cbb2d7b109ad0b673",
            "8534115f0ec4497bab87c2211ad64b2e",
            "0fa1102bd75a4e23ba1cf20b6a407846",
            "4186ae8e62c8429d8b64f91936ffd9aa",
            "442e4c71291a4a4ea0b57f2f7254b45a",
            "ff9ee6d82b914aa1ad0d18bd7a68ef2d",
            "fc9d334b591d4bf0b1ff364502ce2d01",
            "83601e43b8de48cbb6b0af5db47996e0",
            "a0e59dd05fdb445d97f5dc984419f266",
            "b979b904a91444598182fd24637b3d21",
            "70c72cdb6e954580aea8718273961bda",
            "18cebbb21b5d4608aa9d7ae59662e3a6",
            "1c0321abce9d4fe48e3fb622c5d55f2a",
            "2eed049dfe824da08e2917cba45e4f93",
            "f6e5ae10926d49389008821e36266775",
            "ff1b339e44fb469c8ed329edd5a303d2",
            "bfe3005459aa41ac9fcf7e12db6e62e1",
            "566b999ed3f042afb2902a7e647d1e9b",
            "61d9e1266e3e4ca1a483a47e4299ab8c",
            "adf17a9e6fda4ca7aaf97465ae7aedcb",
            "697af603a5dc4156aa95b6017a4174a7",
            "8ed4ecf8f67d4361b1388cca3bddf31b"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "a2149b9b-5d56-4a9f-be06-3fa529795e63"
      },
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_'+model_str)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: vostom7w with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">balmy-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vostom7w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vostom7w</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140327-vostom7w</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 42s 56ms/step - loss: 0.3667 - mean_squared_error: 0.3667 - mean_absolute_error: 0.2895 - val_loss: 0.0621 - val_mean_squared_error: 0.0621 - val_mean_absolute_error: 0.2150\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0239 - mean_squared_error: 0.0239 - mean_absolute_error: 0.1126 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0781\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0675 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0755\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0544 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1369\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0594 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0686\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0458 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0870\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0653 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0628\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0441 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0619\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0696 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0703\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0384 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0850\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0783 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0586\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0392 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.1022\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0472 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0619\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0553\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0416 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0624\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0392 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0562\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0398 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0628\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0392 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0571\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0372 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0557\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0678\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0469 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0568\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0428 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0625\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0345 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0567\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0320 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0588\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0318 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0600\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0355 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0634\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0365 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0705\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0383 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0761\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.1031 - mean_squared_error: 0.1031 - mean_absolute_error: 0.2420 - val_loss: 0.0782 - val_mean_squared_error: 0.0782 - val_mean_absolute_error: 0.2573\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 178<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9e14ebad6c574ca4b906dd6ce8da2913",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.23MB of 0.23MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140327-vostom7w/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140327-vostom7w/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>28</td></tr><tr><td>loss</td><td>0.10471</td></tr><tr><td>mean_squared_error</td><td>0.10471</td></tr><tr><td>mean_absolute_error</td><td>0.25873</td></tr><tr><td>val_loss</td><td>0.07822</td></tr><tr><td>val_mean_squared_error</td><td>0.07822</td></tr><tr><td>val_mean_absolute_error</td><td>0.2573</td></tr><tr><td>_runtime</td><td>60</td></tr><tr><td>_timestamp</td><td>1626876267</td></tr><tr><td>_step</td><td>28</td></tr><tr><td>best_val_loss</td><td>0.00524</td></tr><tr><td>best_epoch</td><td>18</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇</td></tr><tr><td>mean_absolute_error</td><td>▅▃▂▂▁▁▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█</td></tr><tr><td>val_loss</td><td>▆▂▁▃▁▂▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█</td></tr><tr><td>val_mean_squared_error</td><td>▆▂▁▃▁▂▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█</td></tr><tr><td>val_mean_absolute_error</td><td>▇▂▂▄▁▂▁▁▂▂▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂█</td></tr><tr><td>_runtime</td><td>▁▂▂▂▂▂▂▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▂▂▂▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">balmy-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vostom7w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vostom7w</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: bl5hj37w with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">genial-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bl5hj37w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bl5hj37w</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140435-bl5hj37w</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 5s 43ms/step - loss: 0.1841 - mean_squared_error: 0.1841 - mean_absolute_error: 0.3426 - val_loss: 0.0481 - val_mean_squared_error: 0.0481 - val_mean_absolute_error: 0.1839\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0260 - mean_squared_error: 0.0260 - mean_absolute_error: 0.1359 - val_loss: 0.0282 - val_mean_squared_error: 0.0282 - val_mean_absolute_error: 0.1384\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0994 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1152\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0749 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1060\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0622 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1038\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0604 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1016\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0584 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1011\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0581 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1005\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0559 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1004\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1007\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0572 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0995\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0562 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0982\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0585 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0982\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0550 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0972\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0551 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0996\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0554 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0974\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0556 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0990\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0551 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0956\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0569 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0948\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0548 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0950\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0537 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0945\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0510 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0936\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0526 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0947\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0540 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0943\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0537 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0923\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0530 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0924\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0533 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0915\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0508 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0913\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0485 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0902\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0499 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0904\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0910\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0508 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0895\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0508 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0920\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0501 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0917\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0530 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0908\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0510 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0885\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0515 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0877\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0497 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0877\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 1s 18ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0475 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0856\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0504 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0873\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0474 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0866\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0478 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0867\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0479 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0473 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0853\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0480 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0470 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0841\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0480 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0836\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0454 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0464 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0838\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0472 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0826\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 335<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "617e6bdeb3e94e13b29c63c490646929",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 7.80MB of 7.80MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140435-bl5hj37w/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140435-bl5hj37w/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00357</td></tr><tr><td>mean_squared_error</td><td>0.00357</td></tr><tr><td>mean_absolute_error</td><td>0.04664</td></tr><tr><td>val_loss</td><td>0.01224</td></tr><tr><td>val_mean_squared_error</td><td>0.01224</td></tr><tr><td>val_mean_absolute_error</td><td>0.0826</td></tr><tr><td>_runtime</td><td>24</td></tr><tr><td>_timestamp</td><td>1626876299</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.01224</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">genial-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bl5hj37w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bl5hj37w</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 2o52pyas with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">frosty-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/2o52pyas\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/2o52pyas</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140507-2o52pyas</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 4s 42ms/step - loss: 0.2293 - mean_squared_error: 0.2293 - mean_absolute_error: 0.4047 - val_loss: 0.0558 - val_mean_squared_error: 0.0558 - val_mean_absolute_error: 0.1807\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0452 - mean_squared_error: 0.0452 - mean_absolute_error: 0.1730 - val_loss: 0.0268 - val_mean_squared_error: 0.0268 - val_mean_absolute_error: 0.1373\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0163 - mean_squared_error: 0.0163 - mean_absolute_error: 0.1091 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1352\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.1018 - val_loss: 0.0265 - val_mean_squared_error: 0.0265 - val_mean_absolute_error: 0.1317\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0998 - val_loss: 0.0254 - val_mean_squared_error: 0.0254 - val_mean_absolute_error: 0.1282\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0934 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1249\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0900 - val_loss: 0.0239 - val_mean_squared_error: 0.0239 - val_mean_absolute_error: 0.1225\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0871 - val_loss: 0.0233 - val_mean_squared_error: 0.0233 - val_mean_absolute_error: 0.1201\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0846 - val_loss: 0.0226 - val_mean_squared_error: 0.0226 - val_mean_absolute_error: 0.1177\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0792 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1157\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0783 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1140\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0742 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1126\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0737 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1109\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0700 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1100\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0721 - val_loss: 0.0205 - val_mean_squared_error: 0.0205 - val_mean_absolute_error: 0.1086\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0663 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1078\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0686 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1071\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0662 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1064\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0650 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1055\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0633 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1050\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0628 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1046\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0642 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1039\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0657 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1034\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0621 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1031\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0629 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1030\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0632 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1026\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0617 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1025\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0625 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1020\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0609 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1013\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0573 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1014\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0622 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1006\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0575 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1008\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0593 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1006\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0568 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1003\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0572 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1005\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0561 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1003\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0603 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.0999\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0607 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.0997\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0586 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0995\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0588 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0996\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0605 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0995\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0562 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0990\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0599 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0990\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.0988\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0568 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0990\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0576 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.0987\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0582 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0984\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0566 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0985\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0592 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0983\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0560 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0978\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0571 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0978\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0566 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0979\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0584 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0978\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0582 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.0972\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0975\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0582 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0971\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0579 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0970\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0574 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.0967\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0579 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0970\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0551 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0966\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0584 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0965\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0560 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0963\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0579 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0965\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0552 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.0963\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0548 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0958\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0604 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0958\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0545 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0962\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0566 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0961\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0577 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0955\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0558 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0952\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0560 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0950\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0549 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0948\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0536 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0952\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0568 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0952\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0561 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0951\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0554 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0950\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0547 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0947\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0561 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0946\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0546 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0943\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0554 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.0945\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0550 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0941\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0536 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0942\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0570 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0943\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0561 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0938\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0517 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0939\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0539 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0937\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0546 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0936\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0561 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0937\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0556 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0935\n",
            "Epoch 90/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0577 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0934\n",
            "Epoch 91/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0554 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0929\n",
            "Epoch 92/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0556 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0930\n",
            "Epoch 93/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0523 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0927\n",
            "Epoch 94/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0566 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0929\n",
            "Epoch 95/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0544 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0929\n",
            "Epoch 96/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0540 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0925\n",
            "Epoch 97/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0564 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0928\n",
            "Epoch 98/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0548 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0927\n",
            "Epoch 99/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0536 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0923\n",
            "Epoch 100/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0556 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0919\n",
            "Epoch 101/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0541 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0919\n",
            "Epoch 102/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0567 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0920\n",
            "Epoch 103/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0555 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0917\n",
            "Epoch 104/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0533 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0918\n",
            "Epoch 105/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0544 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0918\n",
            "Epoch 106/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0533 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0917\n",
            "Epoch 107/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0533 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0914\n",
            "Epoch 108/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0543 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0914\n",
            "Epoch 109/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0549 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0912\n",
            "Epoch 110/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0521 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0914\n",
            "Epoch 111/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0535 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0910\n",
            "Epoch 112/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0529 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0908\n",
            "Epoch 113/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0559 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0908\n",
            "Epoch 114/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0515 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0905\n",
            "Epoch 115/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0518 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0907\n",
            "Epoch 116/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0507 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0905\n",
            "Epoch 117/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0529 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0907\n",
            "Epoch 118/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0524 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0902\n",
            "Epoch 119/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0529 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0902\n",
            "Epoch 120/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0518 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0900\n",
            "Epoch 121/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0544 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0900\n",
            "Epoch 122/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0540 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0897\n",
            "Epoch 123/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0556 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0900\n",
            "Epoch 124/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0502 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0898\n",
            "Epoch 125/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0541 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0895\n",
            "Epoch 126/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0506 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0897\n",
            "Epoch 127/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0520 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0895\n",
            "Epoch 128/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0521 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0894\n",
            "Epoch 129/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0533 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0892\n",
            "Epoch 130/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0493 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0891\n",
            "Epoch 131/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0497 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0890\n",
            "Epoch 132/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0539 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0888\n",
            "Epoch 133/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0520 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0887\n",
            "Epoch 134/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0524 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0888\n",
            "Epoch 135/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0511 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0887\n",
            "Epoch 136/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0503 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0888\n",
            "Epoch 137/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0526 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0888\n",
            "Epoch 138/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0885\n",
            "Epoch 139/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0520 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0885\n",
            "Epoch 140/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0502 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0882\n",
            "Epoch 141/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0516 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0881\n",
            "Epoch 142/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0496 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0880\n",
            "Epoch 143/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0516 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0878\n",
            "Epoch 144/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0538 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0878\n",
            "Epoch 145/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0526 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0879\n",
            "Epoch 146/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0495 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0876\n",
            "Epoch 147/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0507 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0873\n",
            "Epoch 148/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0512 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0875\n",
            "Epoch 149/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0504 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0874\n",
            "Epoch 150/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0512 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0875\n",
            "Epoch 151/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0495 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0873\n",
            "Epoch 152/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0518 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0871\n",
            "Epoch 153/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0519 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0869\n",
            "Epoch 154/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0867\n",
            "Epoch 155/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0472 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0868\n",
            "Epoch 156/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0512 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0867\n",
            "Epoch 157/200\n",
            "31/31 [==============================] - 0s 7ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0496 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0866\n",
            "Epoch 158/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0498 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0868\n",
            "Epoch 159/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0496 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0866\n",
            "Epoch 160/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0511 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0866\n",
            "Epoch 161/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0499 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0865\n",
            "Epoch 162/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0512 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0861\n",
            "Epoch 163/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0504 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0863\n",
            "Epoch 164/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0522 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0862\n",
            "Epoch 165/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0507 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0859\n",
            "Epoch 166/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0506 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0859\n",
            "Epoch 167/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0522 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0860\n",
            "Epoch 168/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0494 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0858\n",
            "Epoch 169/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0485 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0856\n",
            "Epoch 170/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0511 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0857\n",
            "Epoch 171/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0494 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0855\n",
            "Epoch 172/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0514 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0856\n",
            "Epoch 173/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0499 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0854\n",
            "Epoch 174/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0520 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0856\n",
            "Epoch 175/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0489 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0853\n",
            "Epoch 176/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0494 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0852\n",
            "Epoch 177/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0501 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0852\n",
            "Epoch 178/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0491 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0849\n",
            "Epoch 179/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0487 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0850\n",
            "Epoch 180/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0484 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0850\n",
            "Epoch 181/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0482 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0847\n",
            "Epoch 182/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0478 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0849\n",
            "Epoch 183/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0490 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0849\n",
            "Epoch 184/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0492 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0842\n",
            "Epoch 185/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0492 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 186/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0479 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0844\n",
            "Epoch 187/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0472 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0846\n",
            "Epoch 188/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0484 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0842\n",
            "Epoch 189/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0496 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 190/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0468 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 191/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0475 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 192/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0489 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0842\n",
            "Epoch 193/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0480 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 194/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0481 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0839\n",
            "Epoch 195/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0486 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0840\n",
            "Epoch 196/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0495 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0840\n",
            "Epoch 197/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0507 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0840\n",
            "Epoch 198/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0476 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0835\n",
            "Epoch 199/200\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0480 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0835\n",
            "Epoch 200/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0475 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0836\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 544<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "7209356ec8fb49e097950e389539b52f",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 7.55MB of 7.55MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140507-2o52pyas/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140507-2o52pyas/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00382</td></tr><tr><td>mean_squared_error</td><td>0.00382</td></tr><tr><td>mean_absolute_error</td><td>0.04772</td></tr><tr><td>val_loss</td><td>0.01258</td></tr><tr><td>val_mean_squared_error</td><td>0.01258</td></tr><tr><td>val_mean_absolute_error</td><td>0.08358</td></tr><tr><td>_runtime</td><td>68</td></tr><tr><td>_timestamp</td><td>1626876375</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.01256</td></tr><tr><td>best_epoch</td><td>198</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▅▅▄▄▄▄▄▄▃▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▅▅▄▄▄▄▄▄▃▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▅▄▄▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">frosty-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/2o52pyas\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/2o52pyas</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 58xggn2b with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">genial-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/58xggn2b\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/58xggn2b</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140627-58xggn2b</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 163ms/step - loss: 0.5456 - mean_squared_error: 0.5456 - mean_absolute_error: 0.5865 - val_loss: 0.1406 - val_mean_squared_error: 0.1406 - val_mean_absolute_error: 0.2850\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.1171 - mean_squared_error: 0.1171 - mean_absolute_error: 0.2657 - val_loss: 0.0407 - val_mean_squared_error: 0.0407 - val_mean_absolute_error: 0.1548\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0430 - mean_squared_error: 0.0430 - mean_absolute_error: 0.1621 - val_loss: 0.0465 - val_mean_squared_error: 0.0465 - val_mean_absolute_error: 0.1800\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0185 - mean_squared_error: 0.0185 - mean_absolute_error: 0.1114 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.0958\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0698 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0924\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0658 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0928\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0659 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0881\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0571 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0876\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0557 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0866\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0532 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0828\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0534 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0791\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0473 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0780\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0481 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0754\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0457 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0749\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0434 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0745\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0432 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0714\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0458 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0695\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0682\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0397 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0666\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0374 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0655\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0380 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0643\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0369 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0670\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0390 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0629\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0351 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0635\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0371 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0621\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0351 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0618\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0358 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0642\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0392 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0602\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0357 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0632\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0338 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0587\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0358 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0584\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0349 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0586\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0345 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0664\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0362 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0581\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0335 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0574\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0332 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0599\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0308 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0567\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0323 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0571\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0348 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0602\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0322 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0567\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0291 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0557\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0304 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0557\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0294 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0553\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0295 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0554\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0311 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0565\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0335 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0554\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0278 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0552\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0282 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0579\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0327 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0552\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0283 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0562\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0319 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0556\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0291 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0574\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0296 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0548\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0551\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0303 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0568\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0345 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0553\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0306 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0550\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0315 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0563\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0315 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0546\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0313 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0634\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0329 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0578\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0321 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0566\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0310 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0544\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0264 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0574\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0310 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0548\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0306 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0560\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0331 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0562\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0279 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0554\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0279 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0555\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0277 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0548\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0275 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0551\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0283 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0549\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0284 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0554\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Processing terminal ouput (stdout)...\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Done.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1196<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d801ae16b0c84aa48c8bc997e9579302",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 11.64MB of 11.64MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140627-58xggn2b/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140627-58xggn2b/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>72</td></tr><tr><td>loss</td><td>0.00123</td></tr><tr><td>mean_squared_error</td><td>0.00123</td></tr><tr><td>mean_absolute_error</td><td>0.02739</td></tr><tr><td>val_loss</td><td>0.00526</td></tr><tr><td>val_mean_squared_error</td><td>0.00526</td></tr><tr><td>val_mean_absolute_error</td><td>0.0554</td></tr><tr><td>_runtime</td><td>21</td></tr><tr><td>_timestamp</td><td>1626876408</td></tr><tr><td>_step</td><td>72</td></tr><tr><td>best_val_loss</td><td>0.0052</td></tr><tr><td>best_epoch</td><td>62</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▄▄▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▄▄▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">genial-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/58xggn2b\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/58xggn2b</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 20yrhxj9 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">tough-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/20yrhxj9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/20yrhxj9</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140701-20yrhxj9</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 4s 76ms/step - loss: 0.2992 - mean_squared_error: 0.2992 - mean_absolute_error: 0.4784 - val_loss: 0.1870 - val_mean_squared_error: 0.1870 - val_mean_absolute_error: 0.3556\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.1977 - mean_squared_error: 0.1977 - mean_absolute_error: 0.3724 - val_loss: 0.1138 - val_mean_squared_error: 0.1138 - val_mean_absolute_error: 0.2589\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.1149 - mean_squared_error: 0.1149 - mean_absolute_error: 0.2737 - val_loss: 0.0706 - val_mean_squared_error: 0.0706 - val_mean_absolute_error: 0.1993\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0751 - mean_squared_error: 0.0751 - mean_absolute_error: 0.2273 - val_loss: 0.0491 - val_mean_squared_error: 0.0491 - val_mean_absolute_error: 0.1771\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0504 - mean_squared_error: 0.0504 - mean_absolute_error: 0.1894 - val_loss: 0.0399 - val_mean_squared_error: 0.0399 - val_mean_absolute_error: 0.1699\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0383 - mean_squared_error: 0.0383 - mean_absolute_error: 0.1683 - val_loss: 0.0362 - val_mean_squared_error: 0.0362 - val_mean_absolute_error: 0.1667\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0330 - mean_squared_error: 0.0330 - mean_absolute_error: 0.1579 - val_loss: 0.0350 - val_mean_squared_error: 0.0350 - val_mean_absolute_error: 0.1650\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0285 - mean_squared_error: 0.0285 - mean_absolute_error: 0.1446 - val_loss: 0.0347 - val_mean_squared_error: 0.0347 - val_mean_absolute_error: 0.1640\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0262 - mean_squared_error: 0.0262 - mean_absolute_error: 0.1386 - val_loss: 0.0346 - val_mean_squared_error: 0.0346 - val_mean_absolute_error: 0.1629\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0260 - mean_squared_error: 0.0260 - mean_absolute_error: 0.1379 - val_loss: 0.0345 - val_mean_squared_error: 0.0345 - val_mean_absolute_error: 0.1617\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0251 - mean_squared_error: 0.0251 - mean_absolute_error: 0.1356 - val_loss: 0.0341 - val_mean_squared_error: 0.0341 - val_mean_absolute_error: 0.1601\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0258 - mean_squared_error: 0.0258 - mean_absolute_error: 0.1379 - val_loss: 0.0337 - val_mean_squared_error: 0.0337 - val_mean_absolute_error: 0.1585\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0235 - mean_squared_error: 0.0235 - mean_absolute_error: 0.1309 - val_loss: 0.0333 - val_mean_squared_error: 0.0333 - val_mean_absolute_error: 0.1571\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0235 - mean_squared_error: 0.0235 - mean_absolute_error: 0.1314 - val_loss: 0.0328 - val_mean_squared_error: 0.0328 - val_mean_absolute_error: 0.1555\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0233 - mean_squared_error: 0.0233 - mean_absolute_error: 0.1309 - val_loss: 0.0323 - val_mean_squared_error: 0.0323 - val_mean_absolute_error: 0.1538\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0223 - mean_squared_error: 0.0223 - mean_absolute_error: 0.1281 - val_loss: 0.0319 - val_mean_squared_error: 0.0319 - val_mean_absolute_error: 0.1522\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0207 - mean_squared_error: 0.0207 - mean_absolute_error: 0.1233 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1505\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0199 - mean_squared_error: 0.0199 - mean_absolute_error: 0.1213 - val_loss: 0.0308 - val_mean_squared_error: 0.0308 - val_mean_absolute_error: 0.1488\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0194 - mean_squared_error: 0.0194 - mean_absolute_error: 0.1185 - val_loss: 0.0303 - val_mean_squared_error: 0.0303 - val_mean_absolute_error: 0.1471\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0184 - mean_squared_error: 0.0184 - mean_absolute_error: 0.1147 - val_loss: 0.0297 - val_mean_squared_error: 0.0297 - val_mean_absolute_error: 0.1454\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0183 - mean_squared_error: 0.0183 - mean_absolute_error: 0.1153 - val_loss: 0.0291 - val_mean_squared_error: 0.0291 - val_mean_absolute_error: 0.1435\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0182 - mean_squared_error: 0.0182 - mean_absolute_error: 0.1160 - val_loss: 0.0286 - val_mean_squared_error: 0.0286 - val_mean_absolute_error: 0.1419\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.1103 - val_loss: 0.0283 - val_mean_squared_error: 0.0283 - val_mean_absolute_error: 0.1405\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0168 - mean_squared_error: 0.0168 - mean_absolute_error: 0.1108 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1391\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - mean_absolute_error: 0.1113 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1374\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.1026 - val_loss: 0.0269 - val_mean_squared_error: 0.0269 - val_mean_absolute_error: 0.1358\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.1049 - val_loss: 0.0265 - val_mean_squared_error: 0.0265 - val_mean_absolute_error: 0.1344\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.1031 - val_loss: 0.0261 - val_mean_squared_error: 0.0261 - val_mean_absolute_error: 0.1330\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 24ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.1019 - val_loss: 0.0259 - val_mean_squared_error: 0.0259 - val_mean_absolute_error: 0.1318\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.1042 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1305\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0976 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1294\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.1004 - val_loss: 0.0249 - val_mean_squared_error: 0.0249 - val_mean_absolute_error: 0.1282\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0977 - val_loss: 0.0246 - val_mean_squared_error: 0.0246 - val_mean_absolute_error: 0.1270\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0924 - val_loss: 0.0243 - val_mean_squared_error: 0.0243 - val_mean_absolute_error: 0.1261\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0909 - val_loss: 0.0241 - val_mean_squared_error: 0.0241 - val_mean_absolute_error: 0.1252\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0913 - val_loss: 0.0238 - val_mean_squared_error: 0.0238 - val_mean_absolute_error: 0.1242\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0907 - val_loss: 0.0236 - val_mean_squared_error: 0.0236 - val_mean_absolute_error: 0.1234\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0888 - val_loss: 0.0234 - val_mean_squared_error: 0.0234 - val_mean_absolute_error: 0.1226\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0865 - val_loss: 0.0232 - val_mean_squared_error: 0.0232 - val_mean_absolute_error: 0.1216\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0846 - val_loss: 0.0230 - val_mean_squared_error: 0.0230 - val_mean_absolute_error: 0.1209\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0831 - val_loss: 0.0227 - val_mean_squared_error: 0.0227 - val_mean_absolute_error: 0.1200\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0862 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1192\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0815 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1184\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0814 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1174\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0788 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1165\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0788 - val_loss: 0.0217 - val_mean_squared_error: 0.0217 - val_mean_absolute_error: 0.1159\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0798 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1152\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0781 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1147\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0760 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1140\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0752 - val_loss: 0.0212 - val_mean_squared_error: 0.0212 - val_mean_absolute_error: 0.1135\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0776 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1130\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0759 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1123\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0730 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1119\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0758 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1114\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0712 - val_loss: 0.0207 - val_mean_squared_error: 0.0207 - val_mean_absolute_error: 0.1109\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0701 - val_loss: 0.0205 - val_mean_squared_error: 0.0205 - val_mean_absolute_error: 0.1104\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0715 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1099\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0683 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1094\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0672 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1090\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0698 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1086\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0677 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1081\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0726 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1077\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0666 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1077\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0689 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1072\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0644 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1071\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0640 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1066\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0662 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1064\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0666 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1063\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0634 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1060\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0625 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1056\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0653 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1053\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0618 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1052\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0620 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1048\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0650 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1048\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0630 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1045\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0620 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1042\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0607 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1041\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0620 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1040\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1040\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0628 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1038\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0621 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1037\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0611 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1034\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0585 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1032\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0613 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1029\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0605 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1030\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0588 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1029\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0619 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1026\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0611 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1027\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0609 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1028\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0587 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1024\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0608 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1025\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0599 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1022\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0594 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1023\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0610 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1023\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0609 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1021\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0612 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1019\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0619 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1018\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0599 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1021\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0598 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1018\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0603 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1016\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1470<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e8255682de7c4e049cf6cad245aee95d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 7.92MB of 7.92MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140701-20yrhxj9/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140701-20yrhxj9/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00562</td></tr><tr><td>mean_squared_error</td><td>0.00562</td></tr><tr><td>mean_absolute_error</td><td>0.05836</td></tr><tr><td>val_loss</td><td>0.01871</td></tr><tr><td>val_mean_squared_error</td><td>0.01871</td></tr><tr><td>val_mean_absolute_error</td><td>0.10156</td></tr><tr><td>_runtime</td><td>30</td></tr><tr><td>_timestamp</td><td>1626876451</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.01871</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">tough-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/20yrhxj9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/20yrhxj9</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: sqho8rw1 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sweet-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/sqho8rw1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/sqho8rw1</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140758-sqho8rw1</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 4s 158ms/step - loss: 0.1646 - mean_squared_error: 0.1646 - mean_absolute_error: 0.2909 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1024\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0602 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0990\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0594 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0952\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0796 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0915\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0653 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0896\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0731 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0975\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0564 - val_loss: 0.0312 - val_mean_squared_error: 0.0312 - val_mean_absolute_error: 0.1415\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0631 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1148\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0717 - val_loss: 0.0222 - val_mean_squared_error: 0.0222 - val_mean_absolute_error: 0.1160\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0563 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0795\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0675 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0796\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0539 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0881\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0575 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0870\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0484 - val_loss: 0.0207 - val_mean_squared_error: 0.0207 - val_mean_absolute_error: 0.1137\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0675 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0895\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0559 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0934\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0469 - val_loss: 0.0269 - val_mean_squared_error: 0.0269 - val_mean_absolute_error: 0.1335\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0712 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0796\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0498 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0739\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0454 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0808\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0599 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0740\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0525 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0725\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0439 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0742\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0463 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0716\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0460 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0730\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0658 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0750\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0399 - val_loss: 0.0239 - val_mean_squared_error: 0.0239 - val_mean_absolute_error: 0.1277\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0625 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0731\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0388 - val_loss: 0.0241 - val_mean_squared_error: 0.0241 - val_mean_absolute_error: 0.1281\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0707 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0694\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0388 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0791\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0627 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0683\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0705\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0561 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0677\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0442 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0695\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0532 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0723\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0482 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0708\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0526 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0668\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0457 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0676\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0468 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0659\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0417 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0672\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0481 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0662\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0688\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0550 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0672\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0466 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0674\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0478 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0736\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0558 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0653\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0422 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0666\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0506 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0649\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0372 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0786\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1825<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "904aa5578cc44493ba8fae17d0f4ce97",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 7.95MB of 7.95MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140758-sqho8rw1/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140758-sqho8rw1/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00223</td></tr><tr><td>mean_squared_error</td><td>0.00223</td></tr><tr><td>mean_absolute_error</td><td>0.03636</td></tr><tr><td>val_loss</td><td>0.00995</td></tr><tr><td>val_mean_squared_error</td><td>0.00995</td></tr><tr><td>val_mean_absolute_error</td><td>0.07862</td></tr><tr><td>_runtime</td><td>15</td></tr><tr><td>_timestamp</td><td>1626876493</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00703</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▃▂▂▂▃▃▂▂▂▂▂▂▂▂▂▁▂▂▁▂▁▁▂▁▂▂▁▂▂▁▂▁▂▂▂▂▁</td></tr><tr><td>val_loss</td><td>▄▄▃▃▄█▅▅▂▃▃▅▃▇▂▂▂▁▂▁▂▆▂▆▂▁▁▁▂▁▁▁▁▁▁▁▂▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▄▄▃▃▄█▅▅▂▃▃▅▃▇▂▂▂▁▂▁▂▆▂▆▂▁▁▁▂▁▁▁▁▁▁▁▂▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▄▄▃▄█▆▆▂▃▃▅▄▇▂▂▂▂▂▂▂▇▂▇▂▁▁▁▂▂▁▁▁▁▁▁▂▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sweet-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/sqho8rw1\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/sqho8rw1</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: bjnea79z with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">icy-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bjnea79z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bjnea79z</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140824-bjnea79z</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 4s 79ms/step - loss: 0.1877 - mean_squared_error: 0.1877 - mean_absolute_error: 0.3625 - val_loss: 0.0412 - val_mean_squared_error: 0.0412 - val_mean_absolute_error: 0.1761\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0327 - mean_squared_error: 0.0327 - mean_absolute_error: 0.1508 - val_loss: 0.0418 - val_mean_squared_error: 0.0418 - val_mean_absolute_error: 0.1702\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0226 - mean_squared_error: 0.0226 - mean_absolute_error: 0.1269 - val_loss: 0.0277 - val_mean_squared_error: 0.0277 - val_mean_absolute_error: 0.1398\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - mean_absolute_error: 0.1084 - val_loss: 0.0262 - val_mean_squared_error: 0.0262 - val_mean_absolute_error: 0.1311\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0900 - val_loss: 0.0237 - val_mean_squared_error: 0.0237 - val_mean_absolute_error: 0.1219\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0834 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1149\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0743 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1104\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0686 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1075\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0652 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1070\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0629 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1061\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0605 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1043\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0615 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1041\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0601 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1037\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0592 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1037\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0600 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1031\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0606 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1026\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0575 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1031\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0602 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1029\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0555 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1026\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0587 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1025\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0553 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1013\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0576 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1020\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0574 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1008\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0566 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1012\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0560 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1004\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0558 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1002\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0573 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1001\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0565 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0995\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0552 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0998\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0559 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.0991\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0565 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.0990\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0567 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0981\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0551 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0978\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0555 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0973\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0535 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0982\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 7ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0544 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.0980\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0545 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.0979\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0560 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0969\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0538 - val_loss: 0.0171 - val_mean_squared_error: 0.0171 - val_mean_absolute_error: 0.0969\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0546 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.0974\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0546 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0965\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0540 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0950\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0528 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0965\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0525 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0953\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0508 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0949\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0542 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0952\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0533 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0945\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0532 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0954\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0539 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0931\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0515 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0942\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0531 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0943\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0526 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0936\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0530 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0936\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0506 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0933\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0526 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0930\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0518 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0934\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0507 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0933\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0514 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0924\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0517 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0923\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0523 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0915\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0516 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0916\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0520 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0908\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0523 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0912\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0517 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0910\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0506 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0904\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0524 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0905\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0511 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0902\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0493 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0908\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0520 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0893\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0900\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0520 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0892\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0515 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0897\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0504 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0885\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0496 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0883\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0890\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0488 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0880\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0882\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0499 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0881\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0489 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0882\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0875\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0498 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0871\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0474 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0871\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0487 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0874\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0486 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0864\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0477 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0860\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0482 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0864\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0481 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0867\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0468 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0858\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0477 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0859\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0490 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0848\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0466 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0860\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0475 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0850\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0472 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0857\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0458 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0849\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0470 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0849\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0487 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0851\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0461 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0848\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0471 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0839\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0468 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0843\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0470 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0838\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2030<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "8f262abd4d304090ac7a166630f09697",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 7.98MB of 7.98MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140824-bjnea79z/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140824-bjnea79z/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00359</td></tr><tr><td>mean_squared_error</td><td>0.00359</td></tr><tr><td>mean_absolute_error</td><td>0.04678</td></tr><tr><td>val_loss</td><td>0.01261</td></tr><tr><td>val_mean_squared_error</td><td>0.01261</td></tr><tr><td>val_mean_absolute_error</td><td>0.08378</td></tr><tr><td>_runtime</td><td>28</td></tr><tr><td>_timestamp</td><td>1626876532</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.01261</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">icy-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bjnea79z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/bjnea79z</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0bsx62cr with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fearless-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/0bsx62cr\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/0bsx62cr</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140921-0bsx62cr</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 4s 159ms/step - loss: 0.1078 - mean_squared_error: 0.1078 - mean_absolute_error: 0.2338 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1020\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0614 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0989\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0877 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0991\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0644 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0921\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0934 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0943\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0632 - val_loss: 0.0297 - val_mean_squared_error: 0.0297 - val_mean_absolute_error: 0.1369\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0222 - mean_squared_error: 0.0222 - mean_absolute_error: 0.1198 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0863\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0665 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0903\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0790 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0999\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0755 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1134\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0758 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1149\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0847 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0795\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0724 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0873\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0706 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0808\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0642 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0767\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0800 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0704\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0482 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0841\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0790 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0699\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0483 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0813\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0657 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0690\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0528 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0755\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0515 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0847\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0623 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0732\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0458 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0794\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0659 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0742\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0500 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0846\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0565 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0813\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0571 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0643\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0468 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0777\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0464 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0633\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0492 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0680\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0441 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0621\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0493 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0664\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0447 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0675\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0520 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0628\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0361 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0667\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0627 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0616\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0454 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0658\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0448 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0668\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0488 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0680\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0479 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0652\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0423 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0661\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0413 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0680\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0591 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0618\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0344 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0614\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0523 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0600\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0402 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0748\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0523 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0607\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0623\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0357 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0616\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0616\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0405 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0700\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0671\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0488 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0619\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0405 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0713\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0456 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0592\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0358 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0742\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0431 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0635\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0454 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0602\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0375 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0749\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0518 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0630\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0411 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0695\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0451 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0622\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0403 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0591\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0430 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0636\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0372 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0694\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2385<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "dd938e22530f44648f693db827e85a13",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.01MB of 8.01MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140921-0bsx62cr/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140921-0bsx62cr/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>65</td></tr><tr><td>loss</td><td>0.00237</td></tr><tr><td>mean_squared_error</td><td>0.00237</td></tr><tr><td>mean_absolute_error</td><td>0.0378</td></tr><tr><td>val_loss</td><td>0.00798</td></tr><tr><td>val_mean_squared_error</td><td>0.00798</td></tr><tr><td>val_mean_absolute_error</td><td>0.06937</td></tr><tr><td>_runtime</td><td>17</td></tr><tr><td>_timestamp</td><td>1626876578</td></tr><tr><td>_step</td><td>65</td></tr><tr><td>best_val_loss</td><td>0.00598</td></tr><tr><td>best_epoch</td><td>55</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▃▂▂▂▂▂▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▃▂▂▂▂▂▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▅▄▃▃▃▃▂▂▃▂▁▂▂▂▂▁▁▁▂▁▂▁▂▂▁▂▂▁▁▁▁▂▂▁▁▁</td></tr><tr><td>val_loss</td><td>▅▅▄█▃▄▆▂▃▂▃▂▂▃▃▃▃▂▁▁▁▂▁▁▁▁▁▁▂▁▁▂▁▁▂▁▁▂▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▅▅▄█▃▄▆▂▃▂▃▂▂▃▃▃▃▂▁▁▁▂▁▁▁▁▁▁▂▁▁▂▁▁▂▁▁▂▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▅▅▄█▃▅▆▃▃▂▃▃▂▃▃▃▃▃▂▁▂▂▁▂▂▂▁▁▂▁▁▂▁▁▂▁▁▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">fearless-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/0bsx62cr\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/0bsx62cr</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: tg1rm65i with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">whole-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/tg1rm65i\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/tg1rm65i</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_140947-tg1rm65i</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 5s 45ms/step - loss: 0.0610 - mean_squared_error: 0.0610 - mean_absolute_error: 0.1792 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1045\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0655 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1014\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0545 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0836\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0492 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0820\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0424 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0726\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0766\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0396 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0718\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0379 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0671\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0357 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0660\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0354 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0646\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0647\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0353 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0654\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0343 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0718\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0333 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0662\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0614\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0656\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0326 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0610\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0323 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0631\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0319 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0639\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0314 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0600\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0349 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0642\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0311 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0599\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0326 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0616\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0326 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0604\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0320 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0633\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0292 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0588\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0304 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0675\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0639\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0326 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0589\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0299 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0608\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0308 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0595\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0313 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0628\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0298 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0580\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0339 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0581\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0298 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0629\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0602\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0281 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0624\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0328 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0587\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0288 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0681\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0313 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0599\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0275 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0579\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0294 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0588\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0298 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0574\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0289 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0573\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0343 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0623\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0305 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0599\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0279 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0583\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0283 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0583\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0302 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0573\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0305 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0588\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2638<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3220103a4e3744b39b50ace6d009b5b8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 11.79MB of 11.79MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140947-tg1rm65i/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_140947-tg1rm65i/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00147</td></tr><tr><td>mean_squared_error</td><td>0.00147</td></tr><tr><td>mean_absolute_error</td><td>0.02926</td></tr><tr><td>val_loss</td><td>0.00578</td></tr><tr><td>val_mean_squared_error</td><td>0.00578</td></tr><tr><td>val_mean_absolute_error</td><td>0.05878</td></tr><tr><td>_runtime</td><td>26</td></tr><tr><td>_timestamp</td><td>1626876613</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00559</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▅▄▃▂▂▂▂▂▂▂▂▁▁▂▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▅▄▃▂▂▂▂▂▂▂▂▁▁▂▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▅▅▄▃▂▂▂▂▃▂▂▂▂▂▂▁▂▁▁▃▂▁▁▂▁▁▁▂▁▃▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">whole-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/tg1rm65i\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/tg1rm65i</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: fivvspfb with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">ruby-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/fivvspfb\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/fivvspfb</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141024-fivvspfb</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 164ms/step - loss: 0.1540 - mean_squared_error: 0.1540 - mean_absolute_error: 0.3056 - val_loss: 0.0583 - val_mean_squared_error: 0.0583 - val_mean_absolute_error: 0.2009\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0997 - val_loss: 0.0241 - val_mean_squared_error: 0.0241 - val_mean_absolute_error: 0.1229\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0188 - mean_squared_error: 0.0188 - mean_absolute_error: 0.1068 - val_loss: 0.0260 - val_mean_squared_error: 0.0260 - val_mean_absolute_error: 0.1240\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0754 - val_loss: 0.0214 - val_mean_squared_error: 0.0214 - val_mean_absolute_error: 0.1101\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0605 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0956\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0592 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1039\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0563 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0914\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0525 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0906\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0492 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0857\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0475 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0828\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0431 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0783\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0420 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0768\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0764\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0401 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0722\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0399 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0704\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0699\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0392 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0738\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0380 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0712\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0375 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0722\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 9ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0353 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0692\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0368 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0675\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0360 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0666\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0349 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0660\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0356 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0673\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0342 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0669\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0352 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0718\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0363 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0685\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0364 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0651\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0353 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0630\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0335 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0643\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0328 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0634\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0337 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0644\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0343 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0675\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0342 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0685\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0355 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0671\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0342 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0630\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0320 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0617\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0318 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0614\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0329 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0615\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0319 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0616\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0324 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0618\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0321 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0613\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0323 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0604\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0305 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0624\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0307 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0617\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0628\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0320 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0631\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0636\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0645\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0299 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0635\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0296 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0634\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0326 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0628\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0649\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2843<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f1de5a4c4c7f458a86303dcf90818670",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 11.81MB of 11.81MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141024-fivvspfb/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141024-fivvspfb/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>52</td></tr><tr><td>loss</td><td>0.00153</td></tr><tr><td>mean_squared_error</td><td>0.00153</td></tr><tr><td>mean_absolute_error</td><td>0.03021</td></tr><tr><td>val_loss</td><td>0.00687</td></tr><tr><td>val_mean_squared_error</td><td>0.00687</td></tr><tr><td>val_mean_absolute_error</td><td>0.06492</td></tr><tr><td>_runtime</td><td>17</td></tr><tr><td>_timestamp</td><td>1626876641</td></tr><tr><td>_step</td><td>52</td></tr><tr><td>best_val_loss</td><td>0.00616</td></tr><tr><td>best_epoch</td><td>42</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▄▂▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▄▂▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▄▃▃▃▂▂▂▂▂▁▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">ruby-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/fivvspfb\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/fivvspfb</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: vy4s1825 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">misunderstood-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vy4s1825\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vy4s1825</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141059-vy4s1825</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 5s 83ms/step - loss: 0.2842 - mean_squared_error: 0.2842 - mean_absolute_error: 0.4601 - val_loss: 0.1516 - val_mean_squared_error: 0.1516 - val_mean_absolute_error: 0.3127\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.1470 - mean_squared_error: 0.1470 - mean_absolute_error: 0.3149 - val_loss: 0.0580 - val_mean_squared_error: 0.0580 - val_mean_absolute_error: 0.1836\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0553 - mean_squared_error: 0.0553 - mean_absolute_error: 0.1920 - val_loss: 0.0309 - val_mean_squared_error: 0.0309 - val_mean_absolute_error: 0.1460\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0257 - mean_squared_error: 0.0257 - mean_absolute_error: 0.1362 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1394\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0184 - mean_squared_error: 0.0184 - mean_absolute_error: 0.1169 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1385\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0171 - mean_squared_error: 0.0171 - mean_absolute_error: 0.1117 - val_loss: 0.0280 - val_mean_squared_error: 0.0280 - val_mean_absolute_error: 0.1373\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.1062 - val_loss: 0.0276 - val_mean_squared_error: 0.0276 - val_mean_absolute_error: 0.1356\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - mean_absolute_error: 0.1058 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1337\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.1012 - val_loss: 0.0264 - val_mean_squared_error: 0.0264 - val_mean_absolute_error: 0.1317\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0985 - val_loss: 0.0258 - val_mean_squared_error: 0.0258 - val_mean_absolute_error: 0.1298\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - mean_absolute_error: 0.0976 - val_loss: 0.0253 - val_mean_squared_error: 0.0253 - val_mean_absolute_error: 0.1282\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0938 - val_loss: 0.0248 - val_mean_squared_error: 0.0248 - val_mean_absolute_error: 0.1266\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0912 - val_loss: 0.0245 - val_mean_squared_error: 0.0245 - val_mean_absolute_error: 0.1252\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0891 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1238\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0929 - val_loss: 0.0238 - val_mean_squared_error: 0.0238 - val_mean_absolute_error: 0.1223\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0875 - val_loss: 0.0235 - val_mean_squared_error: 0.0235 - val_mean_absolute_error: 0.1211\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0854 - val_loss: 0.0232 - val_mean_squared_error: 0.0232 - val_mean_absolute_error: 0.1200\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0817 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1189\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0814 - val_loss: 0.0226 - val_mean_squared_error: 0.0226 - val_mean_absolute_error: 0.1178\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0818 - val_loss: 0.0224 - val_mean_squared_error: 0.0224 - val_mean_absolute_error: 0.1167\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0800 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1158\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0772 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1148\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0796 - val_loss: 0.0217 - val_mean_squared_error: 0.0217 - val_mean_absolute_error: 0.1140\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0734 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1131\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0743 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1123\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0722 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1113\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0755 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1106\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0725 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1100\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0726 - val_loss: 0.0207 - val_mean_squared_error: 0.0207 - val_mean_absolute_error: 0.1095\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0703 - val_loss: 0.0205 - val_mean_squared_error: 0.0205 - val_mean_absolute_error: 0.1088\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0722 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1083\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0682 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1077\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0667 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1073\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0678 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1070\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0670 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1068\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0654 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1064\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0665 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1057\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0647 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1053\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0663 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1049\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0634 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1048\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0662 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1046\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0645 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1044\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0641 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1041\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0629 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1035\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0610 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1033\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0610 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1031\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0614 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1029\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0627 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1028\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0625 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1027\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0617 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1028\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0600 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1026\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0628 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1024\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0630 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1021\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0602 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1017\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0590 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1019\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0604 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1017\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0594 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1016\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0608 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1014\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0598 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1014\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0613 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1014\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0580 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1013\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0586 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1011\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0596 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1008\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0593 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1009\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0589 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1010\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0580 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.1007\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0579 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1005\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0577 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1003\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 8ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0586 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1003\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0608 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1002\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0612 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1002\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0599 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1003\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0608 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1001\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0574 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.0999\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0604 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0996\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0604 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0994\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0578 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0994\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0570 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0995\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0582 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.0994\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0606 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0993\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0602 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0993\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0591 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0993\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0594 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0992\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0559 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0993\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0600 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0993\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0579 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0992\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0569 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.0991\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0608 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0991\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0570 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.0988\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0625 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.0987\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0580 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.0987\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0576 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0985\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0555 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0985\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0588 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.0984\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0572 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0982\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0582 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0981\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0608 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0981\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0595 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0981\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0982\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0609 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.0983\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3057<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e162551aa8eb44e899057935d0c55a7f",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.09MB of 8.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141059-vy4s1825/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141059-vy4s1825/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00566</td></tr><tr><td>mean_squared_error</td><td>0.00566</td></tr><tr><td>mean_absolute_error</td><td>0.05905</td></tr><tr><td>val_loss</td><td>0.01774</td></tr><tr><td>val_mean_squared_error</td><td>0.01774</td></tr><tr><td>val_mean_absolute_error</td><td>0.09827</td></tr><tr><td>_runtime</td><td>32</td></tr><tr><td>_timestamp</td><td>1626876691</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.01769</td></tr><tr><td>best_epoch</td><td>96</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">misunderstood-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vy4s1825\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/vy4s1825</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: azrcmsgt with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sunny-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/azrcmsgt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/azrcmsgt</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141141-azrcmsgt</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 5s 169ms/step - loss: 0.1320 - mean_squared_error: 0.1320 - mean_absolute_error: 0.2739 - val_loss: 0.0254 - val_mean_squared_error: 0.0254 - val_mean_absolute_error: 0.1207\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0615 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1041\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0584 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1051\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0585 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1070\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0566 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0934\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 25ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0514 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0881\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0514 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0958\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0494 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0787\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0448 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0792\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0453 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0751\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0705 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0790\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0541 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0842\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0463 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0713\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0400 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0763\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0863\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0463 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0804\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0378 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0711\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0387 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0763\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0386 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0931\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0637 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0863\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0453 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0686\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0375 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0668\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0369 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0649\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0499 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0661\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0484 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0667\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0448 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0647\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0364 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0666\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0341 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0691\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0389 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0740\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0356 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0706\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0373 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0663\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0373 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0853\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0514 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0731\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3412<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e4baaab6d8404e918a5017b39f1567c2",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 11.87MB of 11.87MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141141-azrcmsgt/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141141-azrcmsgt/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>32</td></tr><tr><td>loss</td><td>0.00361</td></tr><tr><td>mean_squared_error</td><td>0.00361</td></tr><tr><td>mean_absolute_error</td><td>0.0479</td></tr><tr><td>val_loss</td><td>0.00875</td></tr><tr><td>val_mean_squared_error</td><td>0.00875</td></tr><tr><td>val_mean_absolute_error</td><td>0.07311</td></tr><tr><td>_runtime</td><td>15</td></tr><tr><td>_timestamp</td><td>1626876716</td></tr><tr><td>_step</td><td>32</td></tr><tr><td>best_val_loss</td><td>0.00705</td></tr><tr><td>best_epoch</td><td>22</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▁▂▃▂▂▁▁▂▁▁▁▃▁▁▁▂▂▁▁▁▁▁▁▁▂</td></tr><tr><td>val_loss</td><td>█▆▆▆▄▄▄▃▃▂▂▃▂▂▃▂▂▂▃▃▁▁▁▁▁▁▁▁▂▁▁▃▂</td></tr><tr><td>val_mean_squared_error</td><td>█▆▆▆▄▄▄▃▃▂▂▃▂▂▃▂▂▂▃▃▁▁▁▁▁▁▁▁▂▁▁▃▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▆▆▅▄▅▃▃▂▃▃▂▂▄▃▂▂▅▄▁▁▁▁▁▁▁▂▂▂▁▄▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▄▄▄▄▄▄▅▅▅▅▅▅▅▇▇▇▇▇▇█████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▄▄▄▄▄▄▅▅▅▅▅▅▅▇▇▇▇▇▇█████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sunny-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/azrcmsgt\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/azrcmsgt</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: e4hxk50m with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">morning-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/e4hxk50m\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/e4hxk50m</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141207-e4hxk50m</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 5s 109ms/step - loss: 0.0940 - mean_squared_error: 0.0940 - mean_absolute_error: 0.1971 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0959\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0921 - val_loss: 0.0306 - val_mean_squared_error: 0.0306 - val_mean_absolute_error: 0.1390\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0957 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0903\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0841 - val_loss: 0.0436 - val_mean_squared_error: 0.0436 - val_mean_absolute_error: 0.1667\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0858 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0798\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0715 - val_loss: 0.0339 - val_mean_squared_error: 0.0339 - val_mean_absolute_error: 0.1473\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0734 - val_loss: 0.0241 - val_mean_squared_error: 0.0241 - val_mean_absolute_error: 0.1223\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0726 - val_loss: 0.0239 - val_mean_squared_error: 0.0239 - val_mean_absolute_error: 0.1238\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0572 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1050\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0817 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0710\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0618 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0723\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0569 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0706\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0485 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0725\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0447 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0705\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0449 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0734\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0510 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0686\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0433 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0766\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0446 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1042\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0644 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0677\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0528 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0726\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0527 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0719\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0458 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0853\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0472 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0757\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0567 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0927\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0511 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0658\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0451 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0644\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0454 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0791\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0418 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0673\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0386 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0657\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0436 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0645\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0392 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0637\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0420 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0752\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0446 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0652\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0443 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0616\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0432 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0614\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0419 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0642\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0405 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0634\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0365 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0908\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0431 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0618\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0419 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0606\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0387 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0633\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0418 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0633\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0427 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0641\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0378 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0616\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0390 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0637\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0365 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0593\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0384 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0744\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0417 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0633\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0377 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0617\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0411 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0660\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0418 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0602\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0737\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0383 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0665\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0384 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0714\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0431 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0588\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0404 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0811\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0443 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0599\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0412 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0642\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0380 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0641\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0391 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0773\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0607\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0389 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0725\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0417 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0572\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0421 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0613\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0360 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0607\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0592\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0359 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0633\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0438 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0567\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0354 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0572\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0354 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0624\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0444 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0561\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0401 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0582\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0352 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0561\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0356 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0622\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0362 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0638\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0393 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0594\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0639\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0446 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0597\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0394 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0585\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0334 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0560\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0373 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0548\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0559\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0332 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0559\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0336 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0581\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0340 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0549\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0326 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0618\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0372 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0549\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0320 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0568\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0577\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0332 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0568\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0329 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0562\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0348 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0592\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0357 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0560\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0341 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0631\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0337 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0553\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0357 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0669\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0366 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0576\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Processing terminal ouput (stdout)...\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Done.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3566<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "73db8e01cd5a4ad2b0786018ebd374a2",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.15MB of 8.15MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141207-e4hxk50m/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141207-e4hxk50m/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>96</td></tr><tr><td>loss</td><td>0.00205</td></tr><tr><td>mean_squared_error</td><td>0.00205</td></tr><tr><td>mean_absolute_error</td><td>0.03555</td></tr><tr><td>val_loss</td><td>0.00574</td></tr><tr><td>val_mean_squared_error</td><td>0.00574</td></tr><tr><td>val_mean_absolute_error</td><td>0.05758</td></tr><tr><td>_runtime</td><td>29</td></tr><tr><td>_timestamp</td><td>1626876756</td></tr><tr><td>_step</td><td>96</td></tr><tr><td>best_val_loss</td><td>0.00516</td></tr><tr><td>best_epoch</td><td>86</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▅▄▄▃▃▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▄▃█▂▃▂▆▂▃▂▂▂▂▁▂▁▂▂▂▂▂▁▁▃▂▁▂▁▁▂▂▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▅▄▃█▂▃▂▆▂▃▂▂▂▂▁▂▁▂▂▂▂▂▁▁▃▂▁▂▁▁▂▂▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅▅▄█▃▃▃▆▃▃▂▂▂▂▂▂▂▂▂▃▂▃▁▂▃▃▂▂▁▁▂▂▁▁▁▁▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">morning-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/e4hxk50m\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/e4hxk50m</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: mj6i14an with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">easy-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/mj6i14an\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/mj6i14an</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141302-mj6i14an</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 5s 45ms/step - loss: 0.0752 - mean_squared_error: 0.0752 - mean_absolute_error: 0.1913 - val_loss: 0.0235 - val_mean_squared_error: 0.0235 - val_mean_absolute_error: 0.1173\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0668 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0852\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0536 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0805\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0459 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0729\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0404 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0682\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0415 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0661\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0370 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0635\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0356 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0649\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0375 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0601\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0347 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0595\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0333 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0588\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0345 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0575\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0318 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0593\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0329 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0607\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0319 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0567\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0323 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0564\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0332 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0575\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0325 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0575\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0339 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0584\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0329 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0555\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0286 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0568\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0283 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0599\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0314 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0547\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0289 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0577\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0320 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0593\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0314 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0549\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0289 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0539\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0299 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0580\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0319 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0544\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0295 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0570\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0282 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0536\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0273 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0542\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0281 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0543\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0304 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0545\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0291 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0548\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0295 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0560\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0297 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0544\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0544\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0271 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0560\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0296 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0572\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0310 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0538\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0281 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0534\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0287 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0590\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0313 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0537\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0541\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0273 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0658\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0320 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0542\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0276 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0542\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0268 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0559\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0266 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0536\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0585\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0302 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0545\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0282 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0553\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0324 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0538\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0267 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0553\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0293 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0537\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0272 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0554\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0272 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0535\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0265 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0555\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0275 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0579\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0315 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0556\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0272 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0551\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0285 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0538\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0278 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0568\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0279 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0539\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0291 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0561\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0305 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0546\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0280 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0541\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3912<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2ac553c88557468881514061fc7006ee",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 11.93MB of 11.93MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141302-mj6i14an/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141302-mj6i14an/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>67</td></tr><tr><td>loss</td><td>0.00131</td></tr><tr><td>mean_squared_error</td><td>0.00131</td></tr><tr><td>mean_absolute_error</td><td>0.02805</td></tr><tr><td>val_loss</td><td>0.00495</td></tr><tr><td>val_mean_squared_error</td><td>0.00495</td></tr><tr><td>val_mean_absolute_error</td><td>0.0541</td></tr><tr><td>_runtime</td><td>33</td></tr><tr><td>_timestamp</td><td>1626876815</td></tr><tr><td>_step</td><td>67</td></tr><tr><td>best_val_loss</td><td>0.00485</td></tr><tr><td>best_epoch</td><td>57</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▂▂▂▂▂▂▁▁▂▁▁▂▁▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">easy-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/mj6i14an\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/mj6i14an</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ylt602te with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">ancient-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ylt602te\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ylt602te</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141401-ylt602te</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 5s 162ms/step - loss: 0.1108 - mean_squared_error: 0.1108 - mean_absolute_error: 0.2356 - val_loss: 0.0221 - val_mean_squared_error: 0.0221 - val_mean_absolute_error: 0.1108\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0628 - val_loss: 0.0524 - val_mean_squared_error: 0.0524 - val_mean_absolute_error: 0.1884\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0207 - mean_squared_error: 0.0207 - mean_absolute_error: 0.1152 - val_loss: 0.0307 - val_mean_squared_error: 0.0307 - val_mean_absolute_error: 0.1382\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0127 - mean_squared_error: 0.0127 - mean_absolute_error: 0.0920 - val_loss: 0.0307 - val_mean_squared_error: 0.0307 - val_mean_absolute_error: 0.1389\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0825 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1106\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0619 - val_loss: 0.0281 - val_mean_squared_error: 0.0281 - val_mean_absolute_error: 0.1332\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.1058 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1251\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0801 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1067\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0506 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0961\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0179 - mean_squared_error: 0.0179 - mean_absolute_error: 0.1026 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0824\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0575 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0967\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0802 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0764\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0494 - val_loss: 0.0381 - val_mean_squared_error: 0.0381 - val_mean_absolute_error: 0.1632\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0841 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1079\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0697 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1055\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0772 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0946\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0648 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1085\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0602 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0922\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0640 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0946\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0567 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0989\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0690 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0997\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0605 - val_loss: 0.0224 - val_mean_squared_error: 0.0224 - val_mean_absolute_error: 0.1201\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4171<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d0a0dc171f4b4952979bcdd1e03540d7",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.19MB of 8.19MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141401-ylt602te/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141401-ylt602te/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>21</td></tr><tr><td>loss</td><td>0.00551</td></tr><tr><td>mean_squared_error</td><td>0.00551</td></tr><tr><td>mean_absolute_error</td><td>0.05879</td></tr><tr><td>val_loss</td><td>0.02238</td></tr><tr><td>val_mean_squared_error</td><td>0.02238</td></tr><tr><td>val_mean_absolute_error</td><td>0.12009</td></tr><tr><td>_runtime</td><td>13</td></tr><tr><td>_timestamp</td><td>1626876854</td></tr><tr><td>_step</td><td>21</td></tr><tr><td>best_val_loss</td><td>0.01044</td></tr><tr><td>best_epoch</td><td>11</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▂▃▂▂▁▂▂▁▂▂▁▁▂▁▂▂▁▂▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▃▂▂▁▂▂▁▂▂▁▁▂▁▂▂▁▂▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▄▄▄▂▄▃▁▃▃▂▂▂▂▂▃▁▃▁▂▂</td></tr><tr><td>val_loss</td><td>▃█▄▄▃▄▃▂▂▁▂▁▆▂▂▂▂▂▂▂▂▃</td></tr><tr><td>val_mean_squared_error</td><td>▃█▄▄▃▄▃▂▂▁▂▁▆▂▂▂▂▂▂▂▂▃</td></tr><tr><td>val_mean_absolute_error</td><td>▃█▅▅▃▅▄▃▂▁▂▁▆▃▃▂▃▂▂▂▂▄</td></tr><tr><td>_runtime</td><td>▁▁▁▁▃▃▃▃▃▃▆▆▆▆▆▆▆▆████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▃▃▃▃▃▃▆▆▆▆▆▆▆▆████</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">ancient-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ylt602te\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ylt602te</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: cvjaz36f with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">swift-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/cvjaz36f\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/cvjaz36f</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141424-cvjaz36f</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 5s 45ms/step - loss: 0.0423 - mean_squared_error: 0.0423 - mean_absolute_error: 0.1391 - val_loss: 0.0501 - val_mean_squared_error: 0.0501 - val_mean_absolute_error: 0.1770\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.0890 - val_loss: 0.0358 - val_mean_squared_error: 0.0358 - val_mean_absolute_error: 0.1536\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0813 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0930\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0677 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0887\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0653 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0721\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0557 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0936\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0617 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0731\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0502 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0966\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0589 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0660\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0469 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0672\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0462 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0653\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0479 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0688\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0488 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0998\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0543 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0646\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0451 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0740\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0462 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0649\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0474 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0856\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0472 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0658\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0421 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0640\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0455 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0596\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0594\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0410 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0636\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0467 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0577\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0382 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0591\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0423 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0714\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0404 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0659\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0410 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0573\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0420 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0559\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0395 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0566\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0369 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0561\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0675\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0433 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0564\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0394 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0795\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0414 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0579\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0342 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0590\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0406 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0551\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0367 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0640\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0390 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0759\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0379 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0574\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0358 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0551\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0359 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0610\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0370 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0625\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0366 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0550\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0310 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0596\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0379 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0546\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0346 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0582\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0355 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0688\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0346 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0623\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0370 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0592\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0364 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0552\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4292<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4eee187e75684bb7b465be242422bfd0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.22MB of 8.22MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141424-cvjaz36f/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141424-cvjaz36f/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00206</td></tr><tr><td>mean_squared_error</td><td>0.00206</td></tr><tr><td>mean_absolute_error</td><td>0.03489</td></tr><tr><td>val_loss</td><td>0.00516</td></tr><tr><td>val_mean_squared_error</td><td>0.00516</td></tr><tr><td>val_mean_absolute_error</td><td>0.05523</td></tr><tr><td>_runtime</td><td>27</td></tr><tr><td>_timestamp</td><td>1626876891</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.005</td></tr><tr><td>best_epoch</td><td>44</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▄▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▄▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▅▄▃▄▃▃▃▃▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▂▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▃▂▃▂▃▁▁▁▃▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▃▂▃▂▃▁▁▁▃▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▃▃▃▂▃▂▂▂▄▂▂▃▂▂▁▁▁▁▂▁▁▁▂▁▂▁▁▂▂▁▁▁▁▁▁▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">swift-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/cvjaz36f\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/cvjaz36f</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ta3vr2cq with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">trim-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ta3vr2cq\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ta3vr2cq</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141504-ta3vr2cq</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 165ms/step - loss: 5.9261 - mean_squared_error: 5.9261 - mean_absolute_error: 1.3546 - val_loss: 0.0247 - val_mean_squared_error: 0.0247 - val_mean_absolute_error: 0.1165\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0946 - val_loss: 0.0190 - val_mean_squared_error: 0.0190 - val_mean_absolute_error: 0.1012\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.0949 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1098\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0449 - mean_squared_error: 0.0449 - mean_absolute_error: 0.1712 - val_loss: 0.0273 - val_mean_squared_error: 0.0273 - val_mean_absolute_error: 0.1317\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0556 - mean_squared_error: 0.0556 - mean_absolute_error: 0.1837 - val_loss: 0.2003 - val_mean_squared_error: 0.2003 - val_mean_absolute_error: 0.3967\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.1010 - mean_squared_error: 0.1010 - mean_absolute_error: 0.2421 - val_loss: 0.0305 - val_mean_squared_error: 0.0305 - val_mean_absolute_error: 0.1460\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0355 - mean_squared_error: 0.0355 - mean_absolute_error: 0.1560 - val_loss: 0.0348 - val_mean_squared_error: 0.0348 - val_mean_absolute_error: 0.1570\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0329 - mean_squared_error: 0.0329 - mean_absolute_error: 0.1498 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0946\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0279 - mean_squared_error: 0.0279 - mean_absolute_error: 0.1210 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1041\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0793 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0874\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0175 - mean_squared_error: 0.0175 - mean_absolute_error: 0.0993 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0887\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0758 - val_loss: 0.0512 - val_mean_squared_error: 0.0512 - val_mean_absolute_error: 0.1934\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0254 - mean_squared_error: 0.0254 - mean_absolute_error: 0.1293 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0833\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0899 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0831\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0621 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1149\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0186 - mean_squared_error: 0.0186 - mean_absolute_error: 0.1121 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0753\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0597 - val_loss: 0.0369 - val_mean_squared_error: 0.0369 - val_mean_absolute_error: 0.1589\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0273 - mean_squared_error: 0.0273 - mean_absolute_error: 0.1310 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0758\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0624 - val_loss: 0.0336 - val_mean_squared_error: 0.0336 - val_mean_absolute_error: 0.1552\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.1091 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0735\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0674 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1140\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0818 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0857\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0760 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0805\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0680 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0690\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0732 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0870\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0620 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0685\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0632 - val_loss: 0.0849 - val_mean_squared_error: 0.0849 - val_mean_absolute_error: 0.2267\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0321 - mean_squared_error: 0.0321 - mean_absolute_error: 0.1216 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0774\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0667 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0750\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0626 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0948\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0758 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0685\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0738 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0779\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0530 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0897\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0872 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0708\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0581 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0663\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0590 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0820\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0530 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0674\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0646 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0718\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0532 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1100\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0164 - mean_squared_error: 0.0164 - mean_absolute_error: 0.1011 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0700\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0534 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0766\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0698 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0696\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0588 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0712\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0748\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0698 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0653\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0513 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0864\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0674 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0644\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0541 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0714\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0572 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0646\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0558 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0876\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0611 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0668\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0544 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0682\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0546 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0899\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0786 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0639\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0470 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0698\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0594 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0659\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0584 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0676\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0522 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0662\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0598 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0707\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0542 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0635\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0507 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0808\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0634 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0631\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0477 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0831\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0580 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0612\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0487 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1068\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 58ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0810 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0633\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0461 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0743\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0583 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0666\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0514 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0609\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0405 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0825\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0625 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0688\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0483 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.1011\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0774 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0642\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0440 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0909\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0665 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0703\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0563 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0650\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0458 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0742\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0682 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0646\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0471 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0652\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4497<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3027c14f490e4ab0a64acdf31c3ce9d8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.25MB of 8.25MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141504-ta3vr2cq/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141504-ta3vr2cq/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>78</td></tr><tr><td>loss</td><td>0.00341</td></tr><tr><td>mean_squared_error</td><td>0.00341</td></tr><tr><td>mean_absolute_error</td><td>0.04519</td></tr><tr><td>val_loss</td><td>0.00707</td></tr><tr><td>val_mean_squared_error</td><td>0.00707</td></tr><tr><td>val_mean_absolute_error</td><td>0.06521</td></tr><tr><td>_runtime</td><td>20</td></tr><tr><td>_timestamp</td><td>1626876924</td></tr><tr><td>_step</td><td>78</td></tr><tr><td>best_val_loss</td><td>0.00639</td></tr><tr><td>best_epoch</td><td>68</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂▁█▂▁▁▁▂▂▂▂▁▁▄▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▂▁█▂▁▁▁▂▂▂▂▁▁▄▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▂▂█▃▂▂▁▂▃▃▂▁▂▄▁▁▂▁▁▂▁▁▁▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇█████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇█████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">trim-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ta3vr2cq\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/ta3vr2cq</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: m0s96ula with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">wandering-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/m0s96ula\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/m0s96ula</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141543-m0s96ula</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "31/31 [==============================] - 5s 50ms/step - loss: 0.1245 - mean_squared_error: 0.1245 - mean_absolute_error: 0.1974 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0930\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0630 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0765\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0598 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0727\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0448 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0712\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0440 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0756\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0476 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0693\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0458 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0853\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0480 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0684\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0517 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0668\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0452 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0755\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0389 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0800\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0670\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0560 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0659\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0437 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0648\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 0s 15ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0399 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0959\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0440 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0916\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0450 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0898\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0433 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0856\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0373 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.1002\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 0s 15ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0547 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0630\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0401 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0675\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0391 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0767\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0357 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0639\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0324 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0697\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0327 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0663\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0331 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0659\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0378 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0670\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0321 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0707\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0302 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0641\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0344 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0601\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0330 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0862\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0392 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0638\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0321 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0616\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0415 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0805\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0433 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0664\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0418 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0621\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0343 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0626\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0330 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0595\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0311 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0628\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0307 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0612\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4789<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c72cefda36d748d6a369786fb45d5469",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 12.03MB of 12.03MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141543-m0s96ula/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141543-m0s96ula/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>39</td></tr><tr><td>loss</td><td>0.00155</td></tr><tr><td>mean_squared_error</td><td>0.00155</td></tr><tr><td>mean_absolute_error</td><td>0.0304</td></tr><tr><td>val_loss</td><td>0.00642</td></tr><tr><td>val_mean_squared_error</td><td>0.00642</td></tr><tr><td>val_mean_absolute_error</td><td>0.06117</td></tr><tr><td>_runtime</td><td>28</td></tr><tr><td>_timestamp</td><td>1626876971</td></tr><tr><td>_step</td><td>39</td></tr><tr><td>best_val_loss</td><td>0.00612</td></tr><tr><td>best_epoch</td><td>29</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▃▃▃▃▂▃▂▂▂▃▂▂▂▂▂▁▂▂▁▂▁▂▁▂▁▁▂▂▁▁▂▂▂▁▂▁▁</td></tr><tr><td>val_loss</td><td>▇▄▄▃▄▃▅▂▂▄▄▂▂▂▇▆▅▅█▂▂▃▂▂▂▂▂▂▂▁▅▂▁▄▂▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▄▄▃▄▃▅▂▂▄▄▂▂▂▇▆▅▅█▂▂▃▂▂▂▂▂▂▂▁▅▂▁▄▂▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▄▃▃▄▃▅▃▂▄▅▂▂▂▇▇▆▅█▂▂▄▂▃▂▂▂▃▂▁▆▂▁▅▂▁▂▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇█████</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇█████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">wandering-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/m0s96ula\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/m0s96ula</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 8p58ozda with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">rare-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/8p58ozda\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/8p58ozda</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141623-8p58ozda</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 166ms/step - loss: 0.1022 - mean_squared_error: 0.1022 - mean_absolute_error: 0.2076 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1045\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0755 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.0962\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0876 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0947\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0630 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1088\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.1018 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0943\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0890 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.0995\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0705 - val_loss: 0.0224 - val_mean_squared_error: 0.0224 - val_mean_absolute_error: 0.1159\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0657 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1124\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0716 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1138\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0661 - val_loss: 0.0395 - val_mean_squared_error: 0.0395 - val_mean_absolute_error: 0.1631\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0861 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0786\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0683 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0804\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0623 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0889\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0775 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0784\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0581 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0796\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0640 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0884\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0736 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0737\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0554 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0759\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0695 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0751\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0437 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0951\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0793 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0726\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0469 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0725\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0611 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0703\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0411 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0880\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0811 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0711\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0436 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1019\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0618 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0774\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0543 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0804\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0463 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0937\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0561 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0920\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0517 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0817\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0442 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0917\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0557 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0836\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4964<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ce8bf42cff6741eab029b9d5db060052",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.29MB of 8.29MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141623-8p58ozda/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141623-8p58ozda/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>32</td></tr><tr><td>loss</td><td>0.00514</td></tr><tr><td>mean_squared_error</td><td>0.00514</td></tr><tr><td>mean_absolute_error</td><td>0.05686</td></tr><tr><td>val_loss</td><td>0.01177</td></tr><tr><td>val_mean_squared_error</td><td>0.01177</td></tr><tr><td>val_mean_absolute_error</td><td>0.08358</td></tr><tr><td>_runtime</td><td>15</td></tr><tr><td>_timestamp</td><td>1626876998</td></tr><tr><td>_step</td><td>32</td></tr><tr><td>best_val_loss</td><td>0.00868</td></tr><tr><td>best_epoch</td><td>22</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▃▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▃▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▅▃▄▄▄▃▃▃▃▃▂▃▂▃▂▂▃▁▃▂▂▁▃▂▂▂▁▂▂▁▂</td></tr><tr><td>val_loss</td><td>▃▃▃▃▂▃▄▄▄█▂▂▂▁▁▂▁▁▁▃▁▁▁▂▁▃▁▂▂▂▂▂▂</td></tr><tr><td>val_mean_squared_error</td><td>▃▃▃▃▂▃▄▄▄█▂▂▂▁▁▂▁▁▁▃▁▁▁▂▁▃▁▂▂▂▂▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▃▃▄▃▃▄▄▄█▂▂▂▂▂▂▁▁▁▃▁▁▁▂▁▃▂▂▃▃▂▃▂</td></tr><tr><td>_runtime</td><td>▁▂▂▂▂▂▂▄▄▄▄▄▄▄▅▅▅▅▅▅▅▇▇▇▇▇▇▇█████</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▂▂▂▄▄▄▄▄▄▄▅▅▅▅▅▅▅▇▇▇▇▇▇▇█████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">rare-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/8p58ozda\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/8p58ozda</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 1qlhmny2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">firm-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/1qlhmny2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/1qlhmny2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141653-1qlhmny2</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 5s 84ms/step - loss: 0.0744 - mean_squared_error: 0.0744 - mean_absolute_error: 0.1682 - val_loss: 0.0476 - val_mean_squared_error: 0.0476 - val_mean_absolute_error: 0.1775\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.0972 - val_loss: 0.0390 - val_mean_squared_error: 0.0390 - val_mean_absolute_error: 0.1590\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0771 - val_loss: 0.0210 - val_mean_squared_error: 0.0210 - val_mean_absolute_error: 0.1118\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0763 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0940\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0615 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0962\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0649 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0837\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0661 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0891\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0556 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0924\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0460 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0753\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0486 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0828\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0561 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0812\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0514 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0752\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0471 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0686\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0512 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0753\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0638 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0691\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0587 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0809\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0539 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0667\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0458 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0769\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0481 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0662\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0590 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0928\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0573 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0756\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0447 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0648\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0396 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0611\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0416 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0648\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0402 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0690\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0402 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0623\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0432 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0606\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0498 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0625\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0459 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0668\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0456 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0874\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0433 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0932\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0415 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0653\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0465 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0660\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0403 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0580\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0385 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0777\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0582\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0399 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0589\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0419 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0576\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0435 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0589\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 9ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0741\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0622\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0402 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0568\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0388 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0618\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0387 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0569\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0367 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0587\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0440 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0562\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0397 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0575\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0677\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0386 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0787\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0431 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0680\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0376 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0563\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0379 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0736\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0441 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0564\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0320 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0690\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0336 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0619\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0322 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0557\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0426 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0620\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0397 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0574\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0384 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0624\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0400 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0615\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0373 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0566\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0340 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0712\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0389 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0818\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0357 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0603\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0404 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0566\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0385 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0630\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5118<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "fc9d334b591d4bf0b1ff364502ce2d01",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.32MB of 8.32MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141653-1qlhmny2/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210721_141653-1qlhmny2/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>65</td></tr><tr><td>loss</td><td>0.00228</td></tr><tr><td>mean_squared_error</td><td>0.00228</td></tr><tr><td>mean_absolute_error</td><td>0.03691</td></tr><tr><td>val_loss</td><td>0.00642</td></tr><tr><td>val_mean_squared_error</td><td>0.00642</td></tr><tr><td>val_mean_absolute_error</td><td>0.06299</td></tr><tr><td>_runtime</td><td>26</td></tr><tr><td>_timestamp</td><td>1626877039</td></tr><tr><td>_step</td><td>65</td></tr><tr><td>best_val_loss</td><td>0.00539</td></tr><tr><td>best_epoch</td><td>55</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▇▆▅▅▃▄▄▃▃▃▂▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▁▂</td></tr><tr><td>val_loss</td><td>█▇▃▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▃▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▂▃▂▁▁▁▁▁▁▁▁▁▂▁▂▂▁▁▁▁▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">firm-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/1qlhmny2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/1qlhmny2</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 3kj8f2rj with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">worldly-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/sweeps/dq1qh4bn</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/3kj8f2rj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_CNN_LSTM/runs/3kj8f2rj</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210721_141733-3kj8f2rj</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 5s 84ms/step - loss: 0.0730 - mean_squared_error: 0.0730 - mean_absolute_error: 0.1658 - val_loss: 0.0494 - val_mean_squared_error: 0.0494 - val_mean_absolute_error: 0.1812\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0924 - val_loss: 0.0470 - val_mean_squared_error: 0.0470 - val_mean_absolute_error: 0.1767\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0953 - val_loss: 0.0204 - val_mean_squared_error: 0.0204 - val_mean_absolute_error: 0.1108\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0668 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1030\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0709 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0826\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0747 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1027\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0715 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0877\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0772 - val_loss: 0.0284 - val_mean_squared_error: 0.0284 - val_mean_absolute_error: 0.1379\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0724 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0735\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0560 - val_loss: 0.0181 - val_mean_squared_error: 0.0181 - val_mean_absolute_error: 0.1031\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0638 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0949\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0574 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0881\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0590 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0686\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0621 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0736\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0567 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1025\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0620 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0858\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0570 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0812\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0526 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1150\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0548 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0749\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0556 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0790\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0451 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0756\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0495 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0710\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0548 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0955\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5371<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f6e5ae10926d49389008821e36266775",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 8.34MB of 8.34MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gFTu29dbi18i"
      },
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwsO8cDJPMdj"
      },
      "source": [
        "# picking the best values\n",
        "best_config = {\n",
        "    'epochs': 200,\n",
        "    'batch_size': 32,\n",
        "    'learning_rate': 0.001,\n",
        "    'optimizer': 'adam',\n",
        "    'activation': 'selu'\n",
        "}"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4FChEjDTvFgN",
        "outputId": "7c0aa370-0197-451d-e462-d3b7872e724b"
      },
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# layer 1\n",
        "model.add(TimeDistributed(Conv1D(filters=128, kernel_size=2, activation=best_config['activation']), input_shape=(None, window_len, 1)))\n",
        "# layer 2\n",
        "model.add(TimeDistributed(MaxPooling1D(pool_size=2)))\n",
        "# layer 3\n",
        "model.add(TimeDistributed(Flatten()))\n",
        "# layer 4\n",
        "model.add(LSTM(units=128, activation='tanh', return_sequences=False))\n",
        "# layer 5\n",
        "model.add(Dropout(0.1))\n",
        "# layer 6\n",
        "model.add(Dense(1))\n",
        "\n",
        "# defining the optimiser\n",
        "if best_config['optimizer'] == 'sgd':\n",
        "  optimizer = SGD(learning_rate=best_config['learning_rate'], decay=1e-5, momentum=0.9, nesterov=True)\n",
        "elif best_config['optimizer'] == 'rmsprop':\n",
        "  optimizer = RMSprop(learning_rate=best_config['learning_rate'], decay=1e-5)\n",
        "elif best_config['optimizer'] == 'adam':\n",
        "  optimizer = Adam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "elif best_config['optimizer'] == 'nadam':\n",
        "  optimizer = Nadam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total number of trainable parameters:  984065\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5UG8j_4r7kSu",
        "outputId": "b727cecd-dced-4b41-f6e1-14deb26688d1"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "time_distributed (TimeDistri (None, None, 29, 128)     384       \n",
            "_________________________________________________________________\n",
            "time_distributed_1 (TimeDist (None, None, 14, 128)     0         \n",
            "_________________________________________________________________\n",
            "time_distributed_2 (TimeDist (None, None, 1792)        0         \n",
            "_________________________________________________________________\n",
            "lstm (LSTM)                  (None, 128)               983552    \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 128)               0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 1)                 129       \n",
            "=================================================================\n",
            "Total params: 984,065\n",
            "Trainable params: 984,065\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "37c355e9-64a8-4af4-df18-4632c4083b38"
      },
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=best_config['epochs'], batch_size=best_config['batch_size'])"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "39/39 [==============================] - 35s 4ms/step - loss: 0.0589\n",
            "Epoch 2/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0065\n",
            "Epoch 3/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0040\n",
            "Epoch 4/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0031\n",
            "Epoch 5/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0028\n",
            "Epoch 6/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0025\n",
            "Epoch 7/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0021\n",
            "Epoch 8/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0022\n",
            "Epoch 9/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0024\n",
            "Epoch 10/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0020\n",
            "Epoch 11/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0035\n",
            "Epoch 12/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0018\n",
            "Epoch 13/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0019\n",
            "Epoch 14/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0018\n",
            "Epoch 15/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0019\n",
            "Epoch 16/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 17/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0019\n",
            "Epoch 18/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0018\n",
            "Epoch 19/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0017\n",
            "Epoch 20/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 21/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0020\n",
            "Epoch 22/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 23/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 24/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0017\n",
            "Epoch 25/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0025\n",
            "Epoch 26/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0018\n",
            "Epoch 27/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 28/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 29/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 30/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0017\n",
            "Epoch 31/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0018\n",
            "Epoch 32/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 33/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 34/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 35/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 36/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 37/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0020\n",
            "Epoch 38/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 39/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 40/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 41/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 42/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 43/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0017\n",
            "Epoch 44/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 45/200\n",
            "39/39 [==============================] - 0s 3ms/step - loss: 0.0014\n",
            "Epoch 46/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 47/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 48/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 49/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 50/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 51/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 52/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 53/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 54/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 55/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 56/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 57/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 58/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 59/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 60/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 61/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 62/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 63/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 64/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 65/200\n",
            "39/39 [==============================] - 0s 3ms/step - loss: 0.0014\n",
            "Epoch 66/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0017\n",
            "Epoch 67/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 68/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 69/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 70/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 71/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 72/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 73/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 74/200\n",
            "39/39 [==============================] - 0s 3ms/step - loss: 0.0013\n",
            "Epoch 75/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0017\n",
            "Epoch 76/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 77/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 78/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 79/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 80/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 81/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 82/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 83/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 84/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 85/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 86/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 87/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 88/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 89/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 90/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 91/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 92/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 93/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 94/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 95/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 96/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 97/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 98/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 99/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 100/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 101/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 102/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 103/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 104/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 105/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 106/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 107/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 108/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 109/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 110/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 111/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 112/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 113/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 114/200\n",
            "39/39 [==============================] - 0s 3ms/step - loss: 0.0011\n",
            "Epoch 115/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 116/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 117/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 118/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 119/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 120/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 121/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 122/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 123/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 124/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 125/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 126/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 127/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 128/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 129/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 130/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 131/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0018\n",
            "Epoch 132/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 133/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 134/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 135/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 136/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0016\n",
            "Epoch 137/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 138/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 139/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 140/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 141/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 142/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0015\n",
            "Epoch 143/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 144/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 145/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 146/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 147/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 148/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 149/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 150/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 151/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 152/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 153/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 154/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 155/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 156/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 157/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0013\n",
            "Epoch 158/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 159/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 160/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 161/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 162/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 163/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 164/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 165/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 166/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 167/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 168/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 169/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 170/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 171/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 172/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 173/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 174/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 175/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 176/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 177/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 178/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 179/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 180/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 181/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 182/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0014\n",
            "Epoch 183/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 184/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 185/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 186/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 187/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 188/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0013\n",
            "Epoch 189/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 190/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0010\n",
            "Epoch 191/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 192/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 193/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 194/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 195/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 196/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 197/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n",
            "Epoch 198/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 199/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0012\n",
            "Epoch 200/200\n",
            "39/39 [==============================] - 0s 4ms/step - loss: 0.0011\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7fe6ce150ed0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rTXJN51l9Y-F"
      },
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H-D-XHyRjFMp"
      },
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "0a0d62f4-229a-4fe1-a3cc-c9268df17fb3"
      },
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str, model_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAtoAAAF6CAYAAAAnGv9AAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdd3hUVfrA8e/JZJJJmfRCCAlJ6KEklFAEAQEBCyqLiOWn4oqKa1tdUVd3FXct7LriWlEUwYooK4oFFKSDCESR3gkQSO9tksnM+f1xbnomBEgoej7PkyfJvefee+7MBN773veeI6SUaJqmaZqmaZrWstzOdQc0TdM0TdM07bdIB9qapmmapmma1gp0oK1pmqZpmqZprUAH2pqmaZqmaZrWCnSgrWmapmmapmmtQAfamqZpmqZpmtYKdKCtaZp2nhFCpAghRp0H/ZgnhHjG+PliIcTes3RcKYToeBaOM1kIsa61j3MhEkLsFEIMP9f90LQLnQ60Ne0CI4S4UQixRQhRLIRIE0IsEUIMMdZNN4KU62q1dzeWxRi/zzN+71+rTUchxEkH1RdCrBJCTHGx7nYhxB4hRJEQIkMI8a0Qwmr0r9j4sgshKmr9/qYQYrjRn0X19pdgLF/VRH88jHPeL4QoMQLUd6vO9XQIIWKFEE4hxKzT3Ue9/cUY5+HeEvtrZP8pQogy4/XMMN5f35Y+jpRyrZSySzP685sIXmu9b8W1XtuvhRCXnuu+nQ7jb9dmnEu2EOJzIUSEq/ZSyu5SylVnsYua9pukA21Nu4AIIR4C/gs8B4QD0cAbwNW1muUCTwshTE3sKhd4pgX7Nczo0w1SSivQDVgAIKW8TErpK6X0BT4C/l31u5RyqrGLLGCQECK41m5vBfad5NALgauAGwF/IAFIBkaewencAuQBk4QQnmewn7NpnPH69gH6AX+r36C1Av3fgQDjtU0AlgGLhBCTz22XTtu9xrl0BgKAl+o30J8TTWtZOtDWtAuEEMIf+Adwj5TycylliZTSLqX8Sko5rVbTpUAF8H9N7O49oJcRILeEJOBHKeUvAFLKXCnle1LKomZuXwF8AVwPYFwkTEIF5o0ySisuBa6WUm6WUlZKKQuklK9LKecYbeqUYBjZ7w+b2KdABdp/A+zAuHrrrxZCbBVCFAohDgohxjbjOGuM7/lGNnGQEKKDEGKFECLHyC5+JIQIaN5L5ZqU8jiwBOhh9EMKIe4RQuwH9hvLrjTOIV8IsUEI0atWv3sLIX427kosACy11g0XQqTW+j3KyIpmGefxmhCiG/Am6qKpWAiRb7T1FEL8Rwhx1MgMvymE8Kq1r2lC3Z05IYT4Y1PnKIS4TQix2+jjISHEXfX7KIT4ixAi09jnbbXWBwshFhvv3yagwym8tulSypeB6cC/hBButV7j6jIXUbfcpqo/j9TqzzVCiMuFEPuEELlCiMdrbTtdCPGZEOJD4/y2CyE6CyH+amx/TAgx2mg7UQiRXO+1eUgI8WUzziUX+B81n5MUIcSjQohtQIlQd8GqP9NCCJMQ4nHjM18khEgWQkQZ67oKIZYZ57JX1L2bdrkQYpexzXEhxMPNfb017bdCB9qaduEYhAp8Fp2knQT+DjwlhDC7aFOKykA/20J9+wkYI4R4WggxWJxeJvh9VJALMAbYAZxoov0oYJOU8thpHMuVIUA74BPgU1RWHQChSm3eB6ahsoFDgZRm7HOo8T3AyOL/CAjgeaAtKvsfhQrgzogR/FwO/FJr8TXAACBeCNEbeBe4CwgG3gIWG4GwB+pi5wMgCPgMmODiOCbga+AIEANEAp9IKXcDU1EXXb5SyqqLhxmoLGoi0NFo/6Sxr7HAw6iLpk6o97UpmcCVgB9wG/CSEKJPrfVtUHc3IoHbgdeFEIHGutcBGxAB/NH4OlWfA2HASctoavXHQs05v426CO4LXAz8XQgRW6v9ONR7EIh6H79D/V8dibrQfstotxiINS5uqtyM+ow2SQgRgnpva39ObgCuQH1OK+tt8pCx/nLU6/5HoFQI4YPK8n+Mek2uB94QQsQb280B7jLucvUAVpysb5r2W6MDbU27cAQD2Y38J9iAlHIxqhyj0Xpqw1tAtBDisjPtmJRyLfAHVOnCN0COEGKmaLp8pf4+NgBBQoguqID7ZAFDMJB2ml125VZgiZQyDxU8jBVChBnrbgfelVIuk1I6pZTHpZR7TucgUsoDxn7KpZRZwEzgTO4ufGFkj9cBq1EXUVWeN+4wlAF3Am9JKX+SUjqklO8B5cBA48sM/Ne4U7IQ2OzieP1RFwnTjDsrNillo3XZQghhHPdBox9FRv+uN5pcB8yVUu6QUpZwkgsOKeU3UsqDUlkNfI8KWKvYgX8Y5/AtUAx0MT6LE4AnjT7vQN3ZOVVVF39BzWxvB56VUtpRF3AhwMtSyiIp5U5gF6ospcpaKeV3xt/5Z0AoMKPW9jFCiAApZTmqPOv/AIQQ3VEXPV830ZdXjM/Jr6i/nYdqr5NSHjM+J/VNAf4mpdxrvO6/SilzUBc8KVLKucYdpV9QmfKJtc49XgjhJ6XMk1L+3LyXTNN+O3SgrWkXjhwgRDS/hvJvwBPUuv1fm/Ef9T+NrzMmpVwipRyHCkCuBibTdKDfmA+Ae4FLOHnmPgeVmWwRRinDRIxyFSPzfBRV/w0q63ywhY4VLoT4xLidXgh8iArATtc1UsoAKWV7KeWf6gVLtTP+7YG/CFU2km8EXVGooLktcFxKWfuh2CMujhcFHGnORR8qUPQGkmsdc6mxHOO4tfvo6pgACCEuE0JsNEoV8lFZ1tqvXU69fpUCvsbx3E/lWC5EGt9zm9k+R0rpMH6uel8yaq0vM/qHi3XZjWxf1f494EbjYuZm4FPj79qV+43PSaSU8ibjIq9KU3eGXH322wMD6n2ebkJl8UFd2FwOHBFCrBZCDGriGJr2m6QDbU27cPyIyj5e05zGUsplwAHgT000m4sqg/jDGfeu5rhOKeUPqNvEPU5x8w9Q/f1WSll6krbLgf5CiHZNtClBBXlV2rhqCIxH3RZ/QwiRLoRIRwVVVeUjx3Bd09vUcRobzeU5Y3lPKaUfKispmujbmah9/GOo7GpArS9vKeV8VIYz0gjaqkS72Ocx1N2Qxi766p9vNipA7F7rmP7GQ3kYx41qxjExSpL+B/wHCDdKU76lea9dFlDZ3GM1YTyqfKVqqMNSmv8Za1FSyo2o5xsuRl0QfnAmu2tinavP/jFgdb3Pk6+U8m6jf5ullFejykq+QJVjadrvig60Ne0CIaUsQNV4vm48UOUthDAbGb5/u9jsCeCRJvZZCTwFPHoKXXEXQlhqfZmFekjweiFEoFD6o0ohNp7CfpFSHja2e6IZbZdTMwpEX+MBLqsQYqqoeaBuK3C90cd+wLVN7PJWVP1yT1QtcSIwGEgQQvRE1ZveJoQYKYRwE0JECiG6NuM4WYATiKu1zIoqaSgQQkSi6r4bJYzhD0/2ejTT28BUIcQA433yEUJcIYSwoi7kKoH7jfP4A6pEpDGbUAHyDGMfFiHEYGNdBtDOqPlGSuk0jvtSVRmO8dqNMdp/CkwWQsQLIbxRn0dXPABPjKDZKHsa3ZwTN7LCnwPTjb+deGrV4J+McRfiXqN/fzXOC9R7f6NQDwyO5cxKgE7H+8BrgN1V+U4LeAf4pxCik/G56SXUCEFfA52FEDcbnxmzECJJCNFNqKE3bxJC+BtlL4WovwNN+13RgbamXUCklC+i6ir/hgo2jqFKLb5w0X49KihqSlU2s7lmoTKUVV9zUcPh3YEa2aKqFOIFKaXLUUNckVKuk1I29RBkbdeiMpoLgALUA5T9UNluUA+FdjD69zSq7roBI9gdiapPTq/1lYwqc7hVSrkJ4+E741irUbfOmzyOkZl/Flhv3F4faLTpY+znG1QA6EoUsKGZr0eTpJRbUO/Ta0ZfD6BKfJBSVqDubExGlUVMctUvI2gdh3qw8SiQarQHdSdjJ5AuhMg2lj1qHGujUSqzHONhQinlEtSQlSuMNi4fmDPqu+9HBed5qCzu4lN4Ce5FlV2kA/NQn92TyRdClADbUWUQE6WU79Za/wDqtagqm2j0b7EVfYC6c+RyNJ0WMBP1mn+P+vueA3gZ78doVL39CdTr+i/UxRCocpYU4z2finp9NO13RdQtx9M0TdPOJ0KId4DPpJTfneu+aOcf49mCTKCPlHL/ue6Ppml16UBb0zRN0y5QQk1idaWUcsS57oumaQ3pGaA0TatDCFHsYtVlUg3jp2naeUAIkYJ6ELRZD0hrmnb26Yy2pmmapmmaprWCVn0YUggRIIRYKITYI9SUuYOM5fcZy3bWHi1BqGlmDwg1jeuYWsvHGssOCCEea80+a5qmaZqmaVpLaO3SkZeBpVLKa42hnryFEJegJrNIkFKW1xruKR715HJ31AQGy4UQnY39vI6anjcV2CyEWCyl3NXKfdc0TdM0TdO009ZqgbYQwh8YSt2hoyqEEHejppMtN5ZnGptcDXxiLD8shDhAzRiuB6SUh4z9fmK0dRloh4SEyJiYmBY/J03TNE3TNE2rLTk5OVtKGdrYutbMaMeixvmdK4RIAJJR4412Bi4WQjwL2ICHpZSbUTOw1Z7cIpWaqW6P1Vs+oP7BhBB3AncCREdHs2XLlpY9G03TNE3TNE2rRwhxxNW61qzRdkdNyDBLStkbNUXxY8byIGAgaja0T+tN+XtapJSzpZT9pJT9QkMbvajQNE3TNE3TtLOmNQPtVCBVSvmT8ftCVOCdCnwulU2oKVlDgOOoGdCqtDOWuVquaZqmaZqmaeetVgu0pZTpwDEhRBdj0UhUXfUXwCUAxsOOHkA2ahrd64UQnkKIWKATaurozUAnIUSs8UDl9ZzalLuapmmapmmadta19qgj9wEfGQHyIeA2VAnJu0KIHUAFcKtUg3nvFEJ8igrGK4F7pJQOACHEvcB3gAl4V0q5s5X7rWmapmma1irsdjupqanYbLZz3RXtFFgsFtq1a4fZbG72Nr/JCWv69esn9cOQmqZpmqadjw4fPozVaiU4OJgWeExNOwuklOTk5FBUVERsbGyddUKIZCllv8a2a9UJazRN0zRN07S6bDabDrIvMEIIgoODT/kuhA60NU3TNE3TzjIdZF94Tuc904G2pmmapmna79AXX3yBEII9e/ac9j5WrVrFhg0bTtpu3rx53HvvvY0uDw0NJTExkfj4eN5+++1Gt1+8eDEzZsw47X6eKzrQ1jRN0zRN+x2aP38+Q4YMYf78+ae9j+YG2k2ZNGkSW7duZdWqVTz++ONkZGTUWV9ZWclVV13FY489dkbHORd0oK1pmqZpmvY7U1xczLp165gzZw6ffPJJ9XKHw8HDDz9Mjx496NWrF6+++ioAMTExZGdnA7BlyxaGDx9OSkoKb775Ji+99BKJiYmsXbuWr776igEDBtC7d29GjRrVIGhuSlhYGB06dODIkSNMnjyZqVOnMmDAAB555JE6GfGMjAzGjx9PQkICCQkJ1YH+hx9+SP/+/UlMTOSuu+7C4XC01Mt12lp7eD9N+03YnVbIS8v28eqNvfF0NzXd2OmElc9C9/HQpsfZ6aCmaZp2QXr6q53sOlHYovuMb+vHU+O6N9nmyy+/ZOzYsXTu3Jng4GCSk5Pp27cvs2fPJiUlha1bt+Lu7k5ubq7LfcTExDB16lR8fX15+OGHAcjLy2Pjxo0IIXjnnXf497//zYsvvtisfh86dIhDhw7RsWNHAFJTU9mwYQMmk4l58+ZVt7v//vsZNmwYixYtwuFwUFxczO7du1mwYAHr16/HbDbzpz/9iY8++ohbbrmlWcduLTrQ1rRmWLk3k+93ZXAst4yOYb5NNz68Ctb+B5A60NY0TdPOS/Pnz+eBBx4A4Prrr2f+/Pn07duX5cuXM3XqVNzdVYgYFBR0SvtNTU1l0qRJpKWlUVFR0WAovMYsWLCAdevW4enpyVtvvVV9zIkTJ2IyNUxurVixgvfffx8Ak8mEv78/H3zwAcnJySQlJQFQVlZGWFjYKfW9NehAW9Oa4UR+GQA5xeUnD7Q3GQ9ylOW3cq80TdO0C93JMs+tITc3lxUrVrB9+3aEEDgcDoQQvPDCCy63cXd3x+l0AjQ5xN19993HQw89xFVXXcWqVauYPn36SfszadIkXnvttQbLfXx8Tn4yBiklt956K88//3yztzkbdI22pjVDWr76RyW7uKLphnkpsHeJ+rksr3U7pWmapmmnYeHChdx8880cOXKElJQUjh07RmxsLGvXruXSSy/lrbfeorKyEqC6dCQmJobk5GQA/ve//1Xvy2q1UlRUVP17QUEBkZGRALz33nut0v+RI0cya9YsQNWUFxQUMHLkSBYuXEhmZmZ1v48cOdIqxz8VOtDWtGY4UaAC7ZyS8qYbbp4Dwg38o8GmM9qapmna+Wf+/PmMHz++zrIJEyYwf/58pkyZQnR0NL169SIhIYGPP/4YgKeeeooHHniAfv361SnnGDduHIsWLap+GHL69OlMnDiRvn37EhIS0ir9f/nll1m5ciU9e/akb9++7Nq1i/j4eJ555hlGjx5Nr169uPTSS0lLS2uV458KPQW7pjVD4j++J7/Uzv0jO/HQpZ0bb1RRCjO7Qdww9XNpNty56mx2U9M0TbsA7N69m27dup3rbminobH3Tk/B/ntVnAm2gnPdiwteaUUl+aV2ALKLm8ho71iostj97wSvAF06ommapmm/czrQ/q3auwReToBvp53rnlzwTuTXPPSR4yrQlhJ+mg1h3aH9YPAK1A9DapqmadrvnA60f4t+mg2f3Aj2Ujix9Vz35oKXVqBGHPF0d3P9MOTRjZCxHfrfAUKoQNtWAM5zP1i+pmmapmnnhg60f0ucDlj6OCyZBp0vgwF3Q+5BcNjPdc8uaFUjjnSL8HOd0d70Flj8odd16ndLACB16Y6maZqm/Y7pQPu3oqIUPr0FNr6uAuxJH0BEAjgrIffwue7dBe14fhlCQPe2fuQ0ltEuPAG7v4LeN4OHMeanV6D6ruu0NU3TNO13SwfavwUl2fDelbDnGxg7Ay6bAW4mCDVGx8jed277d4FLKygj1NeTCH8LReWV2Oz1ykG2zFV3E5Jur1lWFWjrIf40TdM07XdLB9oXOCklrJoB6dth0ocw8O6alSFVgfbec9O534i0AhsRAV6E+HoCkFNSK6tdWQ7Jc6HTaAiKq1muM9qapmnaecxkMpGYmEiPHj2YOHEipaWlp72vyZMns3DhQgCmTJnCrl27XLZdtWoVGzZsOOVjxMTEkJ2d3ejynj170qtXL0aPHk16enqj219++eXk55/95JcOtC9AlQ4n7647zJWvriXpmWU493ytAr1uV9Zt6GkFa1vI0hntM3E8v4y2/haCqwLt2nXau76EkiwYcGfdjbwC1Hc98oimaZp2HvLy8mLr1q3s2LEDDw8P3nzzzTrrq2aGPFXvvPMO8fHxLtefbqDdlJUrV7Jt2zb69evHc889V2edlBKn08m3335LQEBAix63OXSgfQF6a80h/vH1LgrLKoko3YtbURp0vaLxxqGddUb7DEgpScu30TbAi2BfD6DeWNqbZkNQB4gbUXdDndHWNE3TLhAXX3wxBw4cYNWqVVx88cVcddVVxMfH43A4mDZtGklJSfTq1Yu33noLUP833nvvvXTp0oVRo0ZVT3sOMHz4cKomDVy6dCl9+vQhISGBkSNHkpKSwptvvslLL71UPZNkVlYWEyZMICkpiaSkJNavXw9ATk4Oo0ePpnv37kyZMoXmTLA4dOhQDhw4QEpKCl26dOGWW26hR48eHDt2rE5G/P3336+e+fLmm28GcNmPM+XeInvRzpqCUjtvrj7IqG5h/Pf63sz95zycuOHWaUzjG4R0ga0fqXGehTi7nf0NKCizU2Z3EOFvIdTIaFcP8Xf8Z0jdDGP/BW71rlktOqOtaZqmNcOSx1T5Z0tq01M9r9UMlZWVLFmyhLFjxwLw888/s2PHDmJjY5k9ezb+/v5s3ryZ8vJyBg8ezOjRo/nll1/Yu3cvu3btIiMjg/j4eP74xz/W2W9WVhZ33HEHa9asITY2ltzcXIKCgpg6dSq+vr48/PDDANx44408+OCDDBkyhKNHjzJmzBh2797N008/zZAhQ3jyySf55ptvmDNnzknP5euvv6Znz54A7N+/n/fee4+BAwfWabNz506eeeYZNmzYQEhICLm5uQA88MADjfbjTOlA+wLz5pqDFJdX8pfRXfD1dOcKz63sc+9OV5/gxjcI6QQVxWpkDP/Is9vZ34CqyWpqZ7SrRx7Z9DaYfSDxhoYbunuodTqjrWmapp2HysrKSExMBFRG+/bbb2fDhg3079+f2NhYAL7//nu2bdtWXX9dUFDA/v37WbNmDTfccAMmk4m2bdsyYsSIBvvfuHEjQ4cOrd5XUFBQo/1Yvnx5nZruwsJCiouLWbNmDZ9//jkAV1xxBYGBgS7P5ZJLLsFkMtGrVy+eeeYZ8vPzad++fYMgG2DFihVMnDiRkJCQOv1y1Q9fX1+Xx20OHWhfQDILbcxdf5irEtrSLcIP8lKIc6Tw78pb6OSUmNwayViHdlHfs/f+JgPt5CO5RAV5E2a1tMr+dxxX42BHBXrj7eGOl9mkSkdKsmHH/6DPzWr87MZ4BepRRzRN07SmNTPz3NKqarTr8/Hxqf5ZSsmrr77KmDF175p/++23LdYPp9PJxo0bsVhO///xlStXVgfOAPn5+XXO42z1ozG6RvsC8uqKA1Q6JA+NaA/LnoQ5o5EIvqlIZH9mUeMbhVQF2vvPXkfPEiklt8zZxCs/NO/c1AMRJ6/xquJ0St5Zd4gu4VZ6RPoBEGL1UA9D/vweOMoh6Q7XO/AK1BltTdM07YI1ZswYZs2ahd2uJr7bt28fJSUlDB06lAULFuBwOEhLS2PlypUNth04cCBr1qzh8GE1l0dViYbVaqWoqCZmGT16NK+++mr171XB/9ChQ/n4448BWLJkCXl5LfP/6YgRI/jss8/Iycmp0y9X/ThTOtC+QBzNKWX+pqNMSoqi/bHFsP5liOxL5tUfc0S2IfmIiw+gbxh4WCHn4Nnt8FmQX2qnpMLBnjQXFxn1PL9kD6Nmrq4Jth2V4LCTUWjjcHZJgyB85d5M9mUUc9ewOIRR3x7s40lecRlsfhdih0FYV9cH9ArQgbamaZp2wZoyZQrx8fH06dOHHj16cNddd1FZWcn48ePp1KkT8fHx3HLLLQwaNKjBtqGhocyePZs//OEPJCQkMGnSJADGjRvHokWLqh+GfOWVV9iyZQu9evUiPj6+evSTp556ijVr1tC9e3c+//xzoqOjW+ScunfvzhNPPMGwYcNISEjgoYceAnDZjzMlmvMU54WmX79+suqJ1wudlJLi8kqeWLSD73els3raJYR//ydIWQ9/2YMEkp5dztDOocy8LrHxnbzSGyISYeLcs9r3M7E9tYB/f7eHWwfFMLJbWHWgW9vutEIue3ktVos7254a3WibKnvSC7n85bU4JSz600X0jg6Ej68H4caotLs4kFmMr6c73SKsxEf40b2tPx9vOkpWUTmrpg3HbFLXpFPe20z7jB/4e+nzMOmjhkMq1rbg/yD7ANyz8YxfD03TNO23Y/fu3XTr1u1cd0M7DY29d0KIZCllv8ba6xrt88ziX0/w7bY0sorLySyykVVUjs3uBOCuYXGEWz3h8FqIGwZCIIA+0YH87CqjDWQ5rVhy07GepXNoCesPZrN2v/oaEBvE45d3IyGq7viX6QXqQcUiWyUZheW08W+8rkpKydOLd2G1mCkur+SH3Zkq0E7dhCzNxW6/jCEdOxMX6sPOE4V8lpzKez8eAeCpcfHVQTZAiK8nl6UsBv8o6HJZ0yehS0c0TdM07XdNB9rnmddXHCCtoIwekf70iQ4kzOpJqNWTyABvxnQPV9Opl2RCzMXV2/SPDeL7XRkcyy0lKsi7zv6cTsmvue5Eux3HXlJBkI9Hs/tidzgpKLMT4GXG3XR2q4yKbHZMboLp4+L57/L9XP36esYltOWRMV2qzzG90Fbdfm9GkctA+4fdmfx4KId/XN2db7alsXx3Bg8PCYHSHARwJWsI7DKYKRermR0dTklKTglHc0u5uGNInX11dUuln9xJWeKTeLmZmj6JqkBbD62oaZqmab9Lukb7PJNfVsHlPSP4+I6BvHx9b564Ip47h3bgil4RKtg9vEY1jK0JtEd2Cwfgh90ZDfaXV1pBttOKvyzgr59va9aA7wAzv99LpyeW0O+Z5fx5Qcs8EHAqim2V+Hq6c/OgGFZNG859IzqybFc6I19czYcbVba5KqMNsD/DdZ324l9PEOLrwY39o7k0Ppw96UVkHFZjljrdvZlgWkOob80FiMlN0CHUl0u6hDW4wLim/Ets0szc0iEnPwlLgHpg0l52KqeuaZqmadpvhA60zyNSSvJK7fh7m103SlkLfu0gMLZ6UWyIDx1CffhhT2aD5hmF5eTiR7Ao5rud6Xy3M71ZfdmUkkv7YG+6RfixP6O4ZkXar2dlEpYiWyVWi7rhYrWY+cvoLqx6+BK6Rlh5d716gjmj0Eao1ZMQX0/2phuB9v7laug9g8MpWbs/i6GdQ3E3uVVflOzfmQzAifjbiXNLJ9a28+SdKjxBwL7/8VPA5byxKZ/80oqm21fNDqmH+NM0TdO03yUdaJ9HbHYnFZVOArxclHc4nZCyTmWz65UijIoPZ+OhHIps9jrLM4ps5Egr7lTSxqOcjYdym9WX9AIbvdoF0K99IBlFRub4yI8wezis/vepntopKypXGe3a2vhbGNoplKM5pdgdTtIKbLTxs9A53Jd9GUWQtQ8+mgCv9oGNb4LDzrbUfPJK7QzrHArUXJQUpu4Cdwvbo2+mRHoSfeyrk3fqx9dBOom64lFKKip5e+2hptvradg1TdM07XdNB9rnkfwylSENcJXRzt4HpTkQ07BsYVS3cOwOyZp92XWWZxWWkyvVGNAJwZUczDKy07mH4NW+KjitR0pJeqGNNn6ehPt5kl9qx1aYA5/fAdIJR9Y12r3i8koWJqdyILO42SUqrhTZ7Ak2yKsAACAASURBVPhZGr4OHcJ8qHRKjuSUklFoI9zPQudwK/szi3Hmqkw31raw9FF4cwiHNn2NEDC0U2j1Pvq1D8JafBiCO5Jm82C9swfW42ub7lBpLmyZCz0mENe5O5f3jGDe+hRyS5rIantVTcOuA21N0zRN+z3SgfZ5JL9UZaMDXQXa+ao2uXoSmlr6RAcS6G1meb067YxCG7moQDvez87BTCPQ3r8Mcg7Alncb7KuwrBKb3Um4n4UwP/WAoePbR6AoDTqNgfQdUF7cYLtPNh3l4c9+ZdTM1Vz12vpTmhymviJbJb6Whs/qdghVU6EezCrGv2A3f898kNGVqymtcJCfkaIa/d9CuP5jqLQxYce9fGx9jcCKE9X7aBfoRZQjFUdQR7KLy/lR9sRUkAJVgXpjtn8G9hIY/AAAfx7ZiVK7o+msdnVGW5eOaJqmaecXk8lEYmIi3bt3JyEhgRdffBGn03muu9XA5MmTiY2NJTExkT59+vDjjz822u7JJ59k+fLlZ7l3J6cD7fNInlHz6++qdKTIqK+2hjdYZXITXNI1jBV7Mql01PyhZBTZsHuqgK+jTxknCmyUlFfCsU2qwfZPobJuVjatUD28F+HvRbgRaHse/A4SboD+d4J0wPGG45T/mlpAuJ8ntwxqz/bjBaTklDT/5OspLq+p0a4tzgi05S8f8b7zcdqXbKNr0QYACtJTQLiBbxvoegV5k9fyQuV19K38Bd4eCZXlAET7uxElMinwiSWrqJydXr3Vzg+vdt2hgyshKA7a9ACgU7iVcb3a8t6GFDVTZGOqA+3mletomqZp2tlSNQX7zp07WbZsGUuWLOHpp58+191q1AsvvMDWrVuZMWMGd911V4P1DoeDf/zjH4waNeoc9K5pOtA+jxQYGW2XpSPFRrbat2GgDXBpt3AKyux1ZonMKCzHZFVlE9EWFUAfzi6B1M3gE6ZKUfZ/X2c/VaN5tPFXpSN+FONuL4LQLhCVBAg42nASlu2p+fSOCmRSUhQAO04UqhWHVquvU1Bka1ijDeDr6U4bPwu9D73FHhlNbkAP/GwqW12ec0wF2Sa13dqUYl6vvIa0i56G0mwoVO06mDIxCUm6RzTZxeWUWuNUucmhVY13xmFXtfFxw+ssvn9kJ2x2B7PXuMhqG4F2RXHOKZ27pmmapp1NYWFhzJ49m9deew0pJfPmzePee++tXn/llVeyatUqAHx9fZk2bRrdu3dn1KhRbNq0ieHDhxMXF8fixYsBmDdvHtdccw2XXnopMTExvPbaa8ycOZPevXszcOBAcnNzOXjwIH369Kk+xv79++v83pihQ4dy4MABAGJiYnj00Ufp06cPn332GZMnT2bhwoUAbN68mYsuuoiEhAT69+9PUVERDoeDadOmkZSURK9evXjrrbda8iV0SY+jfR7JL2tGoG0JAHfPRldf3DkUD5Mby3dnMCAuGIDMQhshfuFQCG3MKsOceiyFHvlHYNR02DgLtn5cZ4bDmkDbC2+ziSiRpVYEtAeLP4R3bxBoF5TaSckp5bqkKDqFWTGbBHuPZcCxF1R5itkHHvgVfENpjmJbJdZGarQBOoR645+ayyJnEuEhPrif+IFgHw/cS05AQGR1u9V7swj0NtMupjOsQwXaQbFEVh4DIIW2ZBWXE2K1QMBw2LdUPXDqVu/683gyVBQ1CLQ7hvlydWIk7/94hCkXxxFqrfu+HMiXREl3DqUcodvQZp22pmma9jvzr03/Yk/unhbdZ9egrjza/9FT2iYuLg6Hw0FmZsMRzGorKSlhxIgRvPDCC4wfP56//e1vLFu2jF27dnHrrbdy1VVXAbBjxw5++eUXbDYbHTt25F//+he//PILDz74IO+//z5//vOf8ff3Z+vWrSQmJjJ37lxuu+22Jo/91Vdf0bNnz+rfg4OD+fnnnwFYunQpABUVFUyaNIkFCxaQlJREYWEhXl5ezJkzB39/fzZv3kx5eTmDBw9m9OjRxMbGNnqslqIz2ueRmhrtJkpHrG1cbu/r6c7ADsH8sLvmjySjsJwgfz8w+xBIASY3QflhI0iOHgS9roP939UZEi+90IYQEGb1JMDbTKy7sS6wvbHdQJURd1RWb7P9eAEAvSID8HB3o0sbK/F7XlMPEPa5BSrLYN1LzXodbHYHFQ5no6UjAN2DBRZhJ0v64x4SB6XZdA4UeJdlgJ8KtJ1Oyep9WVzcKRSTvxF8Gxlt/5IUAPbYw8kuqiDU11MF0WW5kLG94QEPrQIExDaMlu8b0ZHySgdvrT7YYN3u9GLy8cVZoktHNE3TtN8GDw8Pxo4dC0DPnj0ZNmwYZrOZnj17kpKSUt3ukksuwWq1Ehoair+/P+PGjavepqrdlClTmDt3Lg6HgwULFnDjjTc2esxp06aRmJjI7NmzmTNnTvXySZMmNWi7d+9eIiIiSEpKAsDPzw93d3e+//573n//fRITExkwYAA5OTns37+/JV6SJumM9nkkv6wCT3c3LGYXMw4WZ7gsG6lyabcw/v7lTg5mFRMT7ENWcTlhfp7gE4x7WS7RQd54Zf4MbmaISARPP9jwqnrYb+DdgMpoh/h6Vk893s2SC3ZURhsgaiBsfgcyd0JEAgC/pqoH/npG+gPQo60/4dt3IdslIa56VWWKN78Dg+4B/0iaUmRTAbyrQDveT2Xcs6U/vuEdAOhtLSAoOxObtQ2eUrIrrZDs4nI1rJ+f6hOFxwFwy9lPugjlUIEku7icEKunmtIeVFBtnFO1gyuhbe+amuta4kJ9uaZ3JB/+dIQ7h8UR4utBWWUZJfYSthzfg/SwclQe5YefX2FM+0vpYiuDyKZvjWmapmm/H6eaeW4thw4dwmQyERYWhru7e50HI222mgnizGYzwhhi2M3NDU9Pz+qfKytrEnBVy5tqN2HCBJ5++mlGjBhB3759CQ4ObrRvL7zwAtdee22D5T4+Ps0+Pyklr776KmPGjGn2Ni1BB9rnkfwSu+uyEYCiDGg/qMl9jOgWzt+/3MnyXRmM7xOJwynVA43eIVCSTYdQH9oc3Q4RvcBsgfB4FURu/agm0C5U41NX6eCeQ3GlL75Vw9VFD1Tfj26sDkq3pxYQE+xdPdlO97Z+tN92nFL/y/EBGPYIbFsAa/4N415u8hyKy5sOtDt4qRKYYnMwlrA4SoTA5vYd97QJYEvmEswf/YBFBOMV5cPm4h7k7o0iNCAEz6xkPI78gDlvF3k+bdh5IodKpyTE11PdKQjtpgJtY2QRAGyFKns/+AHKHeUsPbyUjWkbKbYXU2ovpcReQr5bMab2eYz5/EkclCOpGW3l83YCyIHtb/P29re5pKSUbj1uIKJtP9r4tCHCJ4Jw73As7o1PH69pmqZprS0rK4upU6dy7733IoQgJiaGN954A6fTyfHjx9m0aVOrHNdisTBmzBjuvvvuOpnqM9GlSxfS0tLYvHkzSUlJFBUV4eXlxZgxY5g1axYjRozAbDazb98+IiMjTylYPx060D6P5JdVuJ6sRkooTj9pRjsywIv4CD9+2J3J4I4hAIRZLeATAsUZdIq00OnQfpzt/lhTN5R4E3z7MKRvhzY9SS+w0S7Qu3qfUSKLNBFGRyl54JOtOKTkBUsb3A5twDJAPf27LTWffjFB1dv0CoFQUcA+Uzs6gyo76Xebqte+6H4I7uDyHKom3fH1bPyiI8qsZoEst3ozI+UrvoiOpMT5IzEmExMDB2KJ6Mzn27fj7ZXDj+mr+SYlFwK9oXArrPozmIFQkHIaXl4dKRF3ALEQNxyZPA9ZUYrT3YOiiiJWJr/O+pAAsot+5uBnIykoLyDUK5RASyA+Zh8CLYG0s7ZD2GwcyXZw68AuhPn642P24b/fH2VC8ZdcTD5dHlrH+8se4IvKn1h5+Es4/GWdc7J6WLGarfh6+OJr9mVs7Fhu6HpDk++1pmmapp2usrIyEhMTsdvtuLu7c/PNN/PQQw8BMHjwYGJjY4mPj6dbt24nfUjxTNx0000sWrSI0aNHt8j+PDw8WLBgAffddx9lZWV4eXmxfPlypkyZQkpKCn369EFKSWhoKF988UWLHLMpOtA+j+Q3Nf16WR44Kpqs0a4yqlsYr608UD0tebifJ3gHQ8Yu+noew0tUkBWQQPVjiT0mwNK/wtb5MLYn6YU2kmoFzWHOdH51hGPKLmHxryewmN34gRj67VnDna+s5aKOIZwosNGrnX/1Nl3c1VCEu+xtVKANcPHD8PMHsGoGTHjbZf+LT1I6YnXk8kaAP9sD3mbnQRhrs/OHCk/65aWxuesEuvYcwaxFy5g6LI5pY7pSVllG9scTsZcXUnHFC1S8dyUr217NG7meuPv/zNsHHmbuwcdwSgfOqFCYP6DO8SIsnkR6WBkW2oOrOlxF/zb9q2+bVTmaU8qIF1dRltme2wZ2x2Z38NiJpUSY1tHRfBR/T3/us8Ry37FFVATFkTH5S9JLM0grSSOtOI0cWw4l9hKKKopIK0njuZ+e43jRcR7q9xBuQj9KoWmaprUsh8Phcp0Qgo8++qjRdcXFNfNoTJ8+vdF1kydPZvLkydXLa9du11+3bt06brvtNkymxstm582b1+jy2vus3y4pKYmNGxuOjvbcc8/x3HPPNbq/1qID7fNIQZmd9sHeja88ydB+tY2KD+eVFQdYsFmNrqFKR4KhNJtuZckA7LYk1gTa3kHQ5TLYtgDb8CfJL7XTxt8oZZCSwIp0Dju6c3CX6sO391+M5Zd9RGzYSKRbNm+vVcP49WlfU8NsyVcPB24qCuaaqoXWcBhwF6x/GYY8qMpWGlFoBNqNDe9X6azk6dQlfBHoT1ffQcwc/VeiPrwB8tRDjAds/uQeyMbhlAzvEgaAl7sXUX7t4eAPIN2hvIKSkKG8tDuY8qxRTJtQjMMtD+GwY9rwCiJ6EKYOIzC7mem/fy3x+1Ygbv+wydc8Otiba/u24+NNR5k6rAPZxeU4JZS5++Mni4w7EuohVY/cQ0SVlxHVJqnRfTmlkxmbZvDervdwE2481O+hJo+taZqmaRei8ePHc/DgQVasWHGuu9JqdKB9HskrrSChXUDjK6snqzl5RrtHW3/C/TzZlKJGuwi1eqrSkUobbdJXstsZzeYsE3XG0Ei8CXYvpmD7t4BnTY12cSbuznKOyVA2bz1BW38LsSE+iJ7DYQO8ObSS/I5XkJJTSmJUrb5n76NSmFmX5Vu3c4MfUOUjK5+F611cLRs12rWnYJdSsil9E7N+nUVyaQp/KnEw9ZbXVWY5sD1kbKcSN/aWeFG+NwurxZ3etfvj11ZdrGSrJ4x92nYBskF6cFP8JAKqRnrZ9j1kZ8L4O9XvW/4HwR1P+poD3HNJRxYmp/LGqgP0jlbH9gsKxz3XgdNWiFtxBlgj1Aybe75R45I3wk248df+f8XhdDB351wGRgzkosiLmtUHTdM0TbtQLFq06Fx3odXpe9LnkfzSJh6GrM5onzzQdnMTjOiqMt/BPh5q9BBvVa9tOpHMXu8+/HS43pBzHUeCTyju2+YD1GS0jWnfj8kwdqcVMqhDiApuw7qDhxWO/kiAt0fdIBsgez95ligySyvrLvcOgovugz1fQ2pyo/2vqtG2WtxxSic/HPmBm769iSnfT+FI4RGmi3DuNoXWlG8ExgCQ6xbMoRwbq/dlMaRjCO6mWh9vv7YgnXBkAyAIiVIFLWaTwN+r1mseNxxO/KJKdUBNUx/cqfEXup6oIG+uS4rik03HWLU3C7NJEBqm3q/ivAwoyYQ2PdXDp3u+abD99tQCtqeqYRKFEExLmkbHgI48sf4JdufsxinPv6lxNU3TNE1zTQfa5wmb3UF5pdN1jXYT06835tJ4VTYRVpWZ9gmpXlceNYStx/Kx2WvVZ5nM0GsSgakrCKSwJtDOqwq0VaHJ4I7G0Dsmd2jXD4791HgHsvdR4BODze6kvLJeHdjAu1Upy4p/Nn6qtkrAwQ/Hv+bqL67mz6v+TH55Pk8OepKlE5YyobS8bgmNMexgkUcYm1NySSuwMbxLvYlxjPG1SVkHfpGEBwXg7iYI8fWsW28dN1wF5CnroLxIZZ9DmpfRBpXVlki+3HqCuBBfvPxVPwpyMlXpiG8YdLlCTWFf9Z6ixv2++6Nk/vnNruplFncLMy6eQYm9hOu+vo5LPr2ER1Y/wuf7P+d48fFm90nTNE07/0gpT95IO6+cznvWqoG2ECJACLFQCLFHCLFbCDGo1rq/CCGkECLE+F0IIV4RQhwQQmwTQvSp1fZWIcR+4+vW1uzzuVI1WY3LUUeKM9Tsip7WZu3vog4hWMxuhFXNVmhktHFzJ6zHCCoqnfx6LL/uRgk34CYrucr0Y03pSH4KAKlGoD2oQ60xLqMHQsZOKKu3H4cd8g5T5qdGFqkaF7uapxWGPASHVqqAtp5CWzk+UZ/w9I9PYXG38MLQF/jqmq+Y2HkiniZPKMlSAWsVI6Nd4ROBza6yvkM71w+0I9T33IMQFIvJTdA2wKvBbI606wcevmqYvxxjEppmZrRBjfpSNQV95zZWLH6qH6X5VYF2OHS9QjXeu6R6u80puaTmlVFSXve16hLUhW/Gf8M/B/+Ti9pexOaMzTy14SnG/m8sl39+OU//+DTrj69vdv80TdO0c89isZCTk6OD7QuIlJKcnBwsllMbjre1a7RfBpZKKa8VQngA3gBCiChgNHC0VtvLgE7G1wBgFjBACBEEPAX0AySQLIRYLKXMa+W+nxUr92aSnJLHFb1UIBjYVEa7mdlsAIvZxDPX9KwJmH2MADmyH306RSPEHn46nFs9VXtFpZN5+7wYImO5wWMtPlUPIuYdQfqE4eb0Js7PQoS/V81BogcCElK3QKdRNctzD4OzkopAFWgXlNnVWNW1Jd0Oy56EgysgZkj1Yqd0si7/ddx8t/Nwv4e5Jf6Wuhlnp7MmYK1iBNpufpFwHLqEW+v2E2oy2gBBcQBc3jMCr/qTA5nM0H6wCrSjjevCZtZoV7nnko58/vNxEtr54xOo/hF1ZO0H6QCfMAjrpvq85xs15CHw+c8qQ11mb/gUeKh3KNd0vIZrOl6DlJJDBYfYmLaRjSc2suTwEhbuW8gzg5/h6o5Xn1I/NU3TtHOjXbt2pKamkpWVda67op0Ci8VCu3btTmmbVgu0hRD+wFBgMoCUsgKoMFa/BDwC1B5M+Grgfaku7zYa2fAIYDiwTEqZa+x3GTAWmN9afT+bFm89waJfjtOljcpUB7nbwFYAFv+6DYszmlWfXdu1fWt9GHzCwOQBHUfh722maxs/Nh3ORUrJ8t2ZPPvNLlJySvlPmxFcmz8HirPANxTyUhCB7bkoLJiekfXqsCP7gTDB0R/rBtrZ+wCQwZ0BG4Vl9oadM3up8pFaU79LKXl247Mcr1yHd8mV3Nq9kZsXZbkqYK2T0W4PgbGI6P6wm4ZlI6BmdXS3QKWtOtB+7LKujb9wccPVtPSHVgKiun1zRfh7sfaRS/D3MpOXpaZ9N+fuBWBLjhn31AJ6dLoM9+Q5UF6Ezc2bb7anAWCrcD3cEqja7Q4BHegQ0IGbut2E3WHnTz/8iekbphPuE87AiIGn1FdN0zTt7DObzcTGxp7rbmhnQWuWjsQCWcBcIcQvQoh3hBA+QoirgeNSyl/rtY8EjtX6PdVY5mp5HUKIO4UQW4QQWy6kK8TcEnXt8fU2FZB1X3cf/KcLLHkU8msl/E8xo92Apy/csVI9iAgMiA0i+UgeN8/ZxB3vb8Hd5MZ7f+zPtROMSVKObgC7TWWr2/bhnVuTeGBUp4b7bNOzYZ121m4ATKGqfWH90pEq3sFQmgOoIPvFLS/y6b5PCXdeTpjz8sa3qX4otFag7e4JD2wl8qLrGdE1jIn9GrnaFEKN+AFNTpYDqEAbYPtCCIhWM2ieomBfT9xNbgQEq376FB4A4N/r8rjm9fXcvD4EHBXMe38OT365g+LySjqF+aqMtsMOzqYD7ipmk5mZw2cS4x/D/SvuZ8nhJSffSNM0TdO0s6I1A213oA8wS0rZGygBpgOPA0+29MGklLOllP2klP1CQxvJaJ6nqgLtlXvUxYGl6IgKYDe/A6/0hs/vgoxdp5XRbqBNj+qgcWBcEGV2B9uPFzB9XDxLHriYYZ1DoW0imL0hZT0c2wiVZdBhhOt9Rg9UwbijVtb62CYI6YzVX42rXdBYRhvUA5pGoD3r11m8t+s9bux6I9aycXWG9qujifHEfTzdeXdyEh3DXNSxV5WPnCxDHdZN3QGotJ1y2Uh9ZrMHBfgQWHIIgBJzEG/+Xx/6D72MYjcr4Wkr+HRLKu2DvRnWOVQF2u+OhZnd1MQ+9evfG2H1sPL26LfpFtSNR9Y8wkvJL+m6P03TNE07D7RmoJ0KpEopq9KdC1GBdyzwqxAiBWgH/CyEaAMcB6Jqbd/OWOZq+W9CVaBd4VAP8ZkqCtRMjfdvhf53wu7FMGsQVBSfWUa7nkvj2/Dy9Ymseng4kwfHqiEAQdUoR/WHI+vh4EpwM9epoW4gaoAKxtO2qd+dDjj6E7S/qDpYbrR0BKpLR+bumMusX2cxvuN4Hu3/KCXljkYnqwFUSQs0a+KeBvzaqu9GTbdLQtRktUOa/yCkK0XCDy+HmqUzpE00Y3tE8OCY7vj2HMdlHlvZ8tdhLL5nCN6e7gTas9SIJO4WWPU8rHupWccI8QrhnTHvMLHzRN7d8S7zds47435rmqZpmnZmWi3QllKmA8eEEFWzcowEfpZShkkpY6SUMahgvI/RdjFwizH6yECgQEqZBnwHjBZCBAohAlEPUX7XWv0+23JKyqtHBrG4g7AVqHrigCgY+zw8uBOGP64yq9GDTrK35jO5Ca5OjCTQp5FRTtoPUaOJ7PpSBdKevg3bVIk2aoKPGVOdZuyE8gKIvgg/Y3xqVxlt6RXELFHIzOSZXBZzGU8Nego34UaRrRLrSTPaYY2vb0rnMdB9PHj4nLxt3HD1/Qwz2gCl7n4A2KSZDu0ialZ0vRxsBYTkJOPvbcbLbGKoybhguXGBKnUxMv7NYXYz87eBf2NszFhmJs9kzvY55JQ1f3tN0zRN01pWa486ch/wkTHiyCHgtibafgtcDhwASqvaSilzhRD/BDYb7f5R9WDkha60ohKb3clNA9oyZ91hoiwVUIkKtKt4B8HwR9XX2RIzGJCQdxh639R0W7+2qo756I8w6B71HaD9ICxmEx7ubhTaagJtW6WNlMIUDuUfYrVtP99aPbkqbhzTBz+NyU2NAFJsq8RqcZXRzgB3LzUE36nqea36ao7OY9UFR1NlM81Ubg4AO2TJAHpG1XrItcMIlbne+y3EDcPL7MZQt19x+kbgFtpVDYNYXnRKx3ITbjw75FkKKwr578//5ZVfXqFPWB9GtR/FqOhRhPu03F0RTdM0TdOa1qqBtpRyK2pYPlfrY2r9LIF7XLR7F3i3pft3rlWVjXQO96V7Wz/CKo5DMWBxMQ372dK2D5g8wVHevEAzepAqM5FSzbzoH6WCb9Q06rsL13DfD29wsOAgqUWpSFT9sAnBlPwC7k/8M8JNZbCdTklxRSVWl6UjxqQvtYf8aw0+wXBbw9kbT4fdMwBKIRt/ekbWCrQ9fFTmfM+3MHYG3u6SIW47KGt/NT5CnFagDeBh8uDNUW+yL28fy48uZ1nKMmZsmsGMTTNICE1g+qDpdAw880y9pmmapmlNa+2MttaEqkA7yMeTZ8f3xO14OSylbkb7XDBboF0SZO6EiMSTt48aANsWqCD76I8QOwwAh9OBKfhrfrH9QFRBFPHB8YyLG0dsQCwd/DvQ/mgyHovuUkP2WVUpSHFFJVLSeOmIlGpEE2tEw3XnMWlR72euCKBXSL1MfNcrYN9SSN9Om5Jj+ItS0iOH4gOnHWiDGgawS1AXugR14Z7EezhUcIjlR5bz4a4P+eu6v/LxFR9jdnNRnqNpmqZpWovQgfY5lFMdaHuQGBUANmOkiHMdaANc9i9VH+xmOnnbblfB+pfhg/EqC95+EKX2Uh5b+xil3isJcV7C4mtm4u5W7+OWZzzTWlozlnaxMRSgb2OlI4fXQPp2uLJ5DwieL4S3mhTI4R2Gya1eJr7zWEDAzkVEZ+bhlIK88MG0ARVoF2e2SB/i/OO4s9edxPnH8eCqB/lg1wf8sccfW2TfmqZpmqY1rlWnYNealltcE2gDUGZMdnk+BNptekDcsOa19Q2F25dBaGcAMsK7cevSW1mdupp2zhvxK7muYZANNdPC15q0pmq69kZrtNfNVKONJNx4Sqdyrrn7qkDbI6CR4Rl9w9QoL+tmErNvLj/LTpSYjOEJPf1OO6Ptyqj2oxgRNYI3tr7BscJjJ99A0zRN07TTpgPtcyiv9DwOtE+VNRxuW0rezYu4I/l5jhUd4/WRr9PJMtb1ONpGprf2yBrF5aptg+H9UpPVtOiD7j2tCWTOJU8/dUHhH9JgniVl7PNwyRMcHPYqUyserJmG3dMK5YUt3p/HBzyO2c3M0xuf1uNta5qmaVor0oH2OZRTUoHZJPCryt5WTU5Sf/r1C0SJm+Du3bM5UXyC10e+zpDIIfh5uTc9MyTUCbQLqzPa9eqH181UD4n2a2rgmvNTbLQaBr5bJxczUkb2hWGPUNb5arLxp6yidqBdpGrTW1C4Tzh/7vNnfkr7icUHF7fovjVN0zRNq6ED7XMot7iCQG8PRNUIGmV5qlzAdOGVzjulk8fWPMae3D28OOxF+ob3BdSoI4Vl9sYzp+4e4OlfJ9BOyS4BINzPs6Zd5m7Y8zUMuEsFnxcYj5iLYPADWLqMarKdl4eqh6+T0ZZOsJe2eJ8mdplI77DevLDlBfJseS2+f03TNE3TdKB9TuWUVNSUjYAKtL3O8dB+p+m1X15jVeoqHkl6hGFRNbXd/l5mKp2S0qosbX3eQXVqtNfsyyI2xId2gd41bda9BGYfGDC1tbrfuswWuPQfJ71IsJhVoG2rvDEiXwAAIABJREFUHWhDi9dpgxpv+8mBT1JUUcQ7299p8f1rmqZpmqYD7XMqr7SCYN/6gfaFVZ+9M2cnf1n1F97e/jZ/6PQHbuh6Q531VbND1p60pg6fkOpRR2x2Bz8eymFop5Ca9XkpsH2hKhnxDmqNUzhveBmBdk3piJpRsjUCbYCOgR0ZFzeOT/Z8QnrJ/7N33/FRlVkDx3/PlCST3hMIafTepCmKiICsigjYu666q65b1Nd1V1fdd9dddV13195dewMLiKJiwRfpvbckhPTey0xm5nn/uHeSEFIGyJQkz/fzyWeSO3PvPQENJ2fOc55Cj9xDURRFUfoylWj7UHmd1jrSrIck2lJK1uav5eavb+aKz69gXf46bhlzC/dPvb+lDUYX0cU27ATHNLeObD5SQWOTk7OHxbU8/9NTIAzarpO9XHOi3eTUDjRXtLt/QaTL7eNvx4mTF3a84LF7KIqiKEpf1fOagXuRslorMW1bRyI6mEzhJ74/+j3P73iefeX7iLPEcddpd3Hp0EsJ7WBL9HB9UWN1w/ELIu0OJ6bgWCjYCcCPh0oIMBqYNlBfJFlTCNvehvFXaVu993KBJu33Xm+0jrj0D+3PZUMv44MDH3DdqOsYGDHQY/dSFEVRlL5GVbR9pMnhpLrRTnRIq0V/DRW+3369E8szlvPr739Ng72BP5/xZ1YuXsmNo2/sMMkGCLdov8tVt6loHy2rZ9rfv2NTsdBaR6Rk9YES5g+oI/jt+XB0A6x7FpxNMP03Hv2+/IXBIAgyG1oSbdefqwcTbYBfjPsFFpOFJzc/6dH7KIqiKEpfoxJtH2meoe3q0ZYSGiv9tnVkXf46HvzpQaYkTmHpRUtZNGQRAcaALs9rr3XEandwx7tbKa21suqoHRw2dmXmcaCohktDdsDRtfDmRbDpFRi1EGI6GIvXC1nMxmOnjoDHE+3ooGhuHXsrq3NXsy5/nUfvpSiKoih9iUq0faRc3369uXXEVgtOu18m2mUNZdyz+h7SItL41zn/civBdmluHWm1GPLvX+xnV14V/758PELfHfK3r60iPiyQccZMCE+ChNFgb4Qzf9e934yfs5iNXlsM2drVI64mKTSJv234G5mVmR6/n6IoiqL0BSrR9hHX9uvNiyH9eFfIf27+J/X2ep44+wnCA8JP6FzXVuquHu2Vuwv479oj3DQ9nYsnJHHJ2RMAmJVqYuVvZ2Ap3gnJU+GGFXDHRkgc073fjJ8LCmhd0Xa1jnhuMaRLgDGAh05/iLLGMhYvW8w/Nv2DWlutx++rKIqiKL2ZW4m2EMIihBjm6WD6kjJXRTvUvxPtDQUbWJ65nBtH3cigyBNv4TAZDYQGmqhqaCKnvJ7/WbKTcQMiuO9nwwEYnJoKwB/PjiWaaqg6Cv0naLOnY4d06/fSE1jMxpYebVMgGAO9UtEGOL3/6Xy+8HMWDF7AW3vf4sJPLmRZxjKc0umV+yuKoihKb9Nloi2EmA9sB1bqX48XQqh9m09Rc492iP8m2g6ng0c3PsqA0AHcOvbWk75OeJCJsjorv3p3KwDPXDWRAH3CBiFa64ioyoH87dqx/hNOKe6e7JgebWjZht1LooOiefiMh3nvgvdICkvi/jX3c92X15FRmeG1GBRFURSlt3Cnov0wMAWoBJBSbgfSPRhTn1BU3YjRIIjUFwu2JNr+M3Xk6+yvOVx5mN9M/A1BpqCTvk64xcznOwvYkVvFPy4ZS3J0q10fI1Mhdhhsfxfyt2nH+o07xch7LktAqx5t8Hqi7TIqdhRv/ewt/jr9rxytPso9q+9BSun1OBRFURSlJ3Mn0W6SUla1Oab+xT1FGcV1pMYEYzLqfwV+VtF2OB08v+N5BkcOZm7a3FO6VrjFjMMpueGMNOaN7nfsk0LAlFsgfytsfxtihkDQifWB9yZBZmPLhjXgs0QbtG3aFwxewN2T7uZw5WHW5q/1SRyKoiiK0lO5k2jvEUJcBRiFEEOEEE8D6l/cU5RRUsvguFbzpxsqtUc/SbS/PPIlWVVZ3DbuNgzi1NbMjuofzqTUKP5w/vD2XzDuCggI07Zb78NtI6Al2o3HtI6E+yzRdjk//XziLfG8secNn8ahKIqiKD2NOxnUncAowAq8C1QBv/VkUL2d3eHkSFkdg+JbJ9oVYAoCs8V3gensTjsv7niRoVFDmZ06+5Sv99D8UXz0y9MJNBnbf0FgGIy/Uvu8jyfaFrPBL1pHWjMbzVw54krWFazjQPkBn8aiKIqiKD1Jl4m2lLJeSnm/lHKy/vGAlLLRG8H1Vtnl9TQ5ZJuKdoXfVLO/yPqCI9VHuH3c7adczXYRQnT+gqm/hLjhMPjUE/uezGI20mj3r0Qb4NKhl2IxWXhz75u+DkVRFEVRegx3po58I4SIbPV1lBDiK8+G1btlFGvziY+raPvB9ut2p50XdrzAiOgRzEqZ5b0bxwyCOzZA3FDv3dMPBfnJYsi2IgIjWDRkEV9kfkFRXZGvw1EURVGUHsGdcmWslLLS9YWUsgKI91xIvd/hEj3RjgtpOVhTAGEJPopIY3PYeGbbM+TU5HDbuNu6rkIr3c5iNmK1O3E69fXGfpJoA1wz4hqcOHl3/7u+DkVRFEVRegR3Em2nECLF9YUQIhU1deSUZBTXkRAeSJi+PTkAVXkQPsAn8Tilk+UZy5n/yXxe3f0qc1LnMDN5pk9i6essZq2Pvbl9JDAMHFawW30YlWZA2ABmp8zmo4MfUddU5+twFEVRFMXvuZNo3w+sEUK8JYR4G/gR+INnw+rdDpfUMrh124jdBrVFEJHk1TiklKzJW8Nlyy/jj2v+SERgBC/OeZEnZz6pqtk+YgnQEu3m9pFAfdSh1T+2Q79+1PXU2Gr45NAnvg5FURRFUfyeqasXSClXCiEmAtP0Q7+VUpZ6NqzeS0pJZnEtCye2SqprCgAJ4d5LtKtt1dz9w92sL1hPUmgSj531GPPS53Xb4kfl5ATpFe3m3SEDw7RHazWExPgoqhZj48YyMX4ib+97myuGX4HJ0OWPEEVRFEXpszrMqoQQw/XHiUAKkK9/pOjHlJNQXGOlxmo/tqJdnac9erGi/cH+D1hfsJ57J9/L8ouXc/7A81WS7QeaW0eOS7T9o08btKp2Xm0eq46u8nUoiqIoiuLXOitH3QXcCvyzneck4MWRFL1H88SR1qP9qvRE20s92g6ngw8PfsjUxKlcO/Jar9xTcY8r0W6w6btDuptolx6C4n0w8iIPRqeZmTyT1PBU3tj9BuelnqfajBRFURSlAx2WMKWUtwohDMADUspz2nyoJPsk7S2oBmBIQuuKdq726KWK9urc1RTWFXLF8Cu8cj/Ffc092ida0V7/PHx6mwcja2EQBq4beR27y3azrXibV+6pKIqiKD1Rp70CUkon8IyXYukTNmaVkxIdTHxYUMvBqjwIjGhJqjzs/f3vkxCcoCaL+KHje7RdiyG7SLQbq8BWC00NHoyuxfxB8wkzh7H00FKv3E9RFEVReiJ3mnK/FUIsFur94VMmpWTTkXKmpEcf+0R1nteq2dnV2awrWMclQy9RC9n8UJBZ+1+yZepIq8WQnXE9X1/mociOZTFZmJc+j6+PfE2tzT8moiiKoiiKv3En0f4F8BFgE0JUCyFqhBBd/KuvtOdwcS0V9U1MSWuTaFflem3iyNJDSzEKI4uHLPbK/ZQTc9xiSEskGMxQcaTzE10Vby8l2gAXD76YRkcjXx1RG8UqiqIoSnu6TLSllGFSSoOU0iylDNe/DvdGcL3NhqxyAJ9VtJscTXx2+DNmDJhBXHCcx++nnDhXj3Zzom0KhKTTIHtt5ye6Eu06703eHBM7hkERg/jksJqprSiKoijtcWuemxBikRDiSSHEP4UQF3s6qN5q05Fy4sICSY0JbjnY1KBVIb0wceSH3B8obyznkqGXePxeysmxtO3RBkg7E/K3dd6n3ehqHSn3YHTHEkJw8eCL2VGygy+zvkRKtWGsoiiKorTWZaIthHgO+CWwC9gN/FII8aynA+ttpJRszNL6s49pd6/O1x69UNFecnAJCcEJTO8/3eP3Uk7OcYshAdKmg3RAzoaOT/Ryj7bLwiELGRE9gnt/vJdff/9rCusKvXp/RVEURfFn7lS0ZwHnSSlfl1K+DpyPmqF9wnIrGiioamRq27aRKn20n4d7tPNq81iXv46FQxZiNBg9ei/l5AWaDAgBjbZWiXbyVDCY4Mia9k+SslWPtnc3bY0IjODdC97l7tPuZn3+ei7+7GLe3fcuDqej65MVRVEUpZdzJ9E+jLYzpEuyfkw5ARv1/uzJbRdCNu8K6dnWkY8PfQzAosGLPHof5dQIIbCYjcdWtANCoP9EOPJT+yc11WsVb/B6RRvAZDBxw+gb+HjBx4yNHcvfN/6d61Zex6GKQ16PRVEURVH8iTuJdhiwTwjxgxDie2AvEC6EWCaEWObZ8HqPTUfKCQ8yMSyhzazs5l0h+3vs3nannU8Pfcr0pOn0C+3nsfso3eO4RBv0Pu2tYKs7/oTGVkOAfJBouySHJfPinBf525l/I6c6h8uWX8ZTW5/C6rD6LCZFURRF8SV3Bik/6PEo+oCNWeVMTovGYGgzjrwmHyzRYLZ47N5r8tZQ3FDMH4f80WP3ULpPkNnYvAW7wym568Pt3J48lmFOu9anPahN51brRZJ1vku0QavIzx80nzOTzuQfm/7By7teZmvxVl4/73W1VbuiKIrS53SZaEspV3sjkN6spMZKZmkdl09OPv7J+jIIifXo/ZceXEpMUAwzkmd49D5K9wgLMlHd2ARAUXUjn23PJ68omI+EEXHkp3YSbb2ibQryaUW7taigKP521t8YFj2MJzY/wa7SXYyNG+vrsBRFURR/5bBD1mrt37heVJhxa7yfcmo2HdH7s9suhARtHJulnePdJKsqi9W5q1k0ZBFmg9lj91G6T1xYIMXVjYCWaANsLrBTFTW6/QWRrkQ7Ks3riyG7csnQSwg2BfPhgQ99HYqiKIrizza/Cm8vgrwtvo6kW6lE2ws2ZpVjMRsZ3T/i+CcbKiDYc4n2K7teIdAYyNUjrvbYPZTulRgeRFG11tdcXKM9WsxGVtUPRuZtAVv9sSe4Wkei0rVf3JxOb4bbqRBzCBcMvICVR1ZSZa3ydTiKoiiKP5ISNr6sfV64y7exdLMTSrSFEFFCCPX+7wnamFXOhJRIAkzt/HF7sKKdU5PDiswVXDrsUmIsMR65h9L9EsKDKKm14nDK5sr2necO5vPqQQhnE+RuPPYE12LI6HRt+oifJbSXDr0Uq8PK8ozlvg5FURRF8SW7Ddob/5r5A5Tpk6qK97l9OSklRdWNOJz+u2GaOxvW/CCECBdCRANbgZeFEE96PrTeoaqhiX2F1cdvu+7SUAHBUd1+X7vTztNbn8YojNw46sZuv77iOQnhgTickrI6K0XVVowGwc/PTKcwYjwODMi27SOtK9rg8wWRbY2IGcHY2LF8ePBDtXukoihKHyZfPgf57V+Of2LjyxAcA4ljoHgv1Y1NNDY5jvs3w+GU7Mmv4vWfsrj9nS1MfuRbpv7tW97dkO2l7+DEuTN1JEJKWS2EuBl4U0r5kBBip6cD6y22ZlcgJe0n2k0NYG/o9op2ZlUmD6x5gF2lu7h17K3EBcd16/UVz4oPDwKgqMpKUXUjcaGBBJqM3HTuWHYtSyN13/dEzXqg5YTmHu1U7bG+DBjs3aC7cOmwS/nTT39ic9FmJidO9nU4iqIoirdZaxBFu8mvg/5zHm45XpkDB7+E6b+BulIa937B2Ie/BsBoEAQHGAkJMBESaKS42kqN1Q5AUqSFMwfH8N3+Ynbm+tc7ua25k2ibhBD9gMuA+0/k4kKISOAVYDQggZuARcB8wAZkADdKKSv11/8B+DngAH4tpfxKPz4P+A9gBF6RUj56InH40oascsxGwYTkdqrW9doiye7q0XZKJ2/vfZuntj1FkCmIf8z4B/PS53XLtRXvSXQl2tWNFNVYSQgPBGDhhCSWrBzDqJIVSFs9IiBYO8FaA+YQCI3XvvaTySOtzUubx+ObHuejAx+pRFtRFKUPqsvfRwgQXXtIW0tk0JsqNr+mPU66CfYtJ2jbWwwNbeTiM8dRb3VQa7VTb7NTZ3UwbaCZyWnRTE6PJilSG4v8x2feILPYf4c9uJNo/y/wFfCTlHKTEGIg4O6Wb/8BVkopLxFCBADBwDfAH6SUdiHEY8AfgN8LIUYCVwCjgP7AKiHEUP06zwJzgFxgkxBimZRyr5sx+NSmI+WMSYrAEtDOtucNeqJtOfXWkZyaHP7005/YUrSFmQNm8tAZDxFr8ezYQMUzElyJdk0jxdWNJEdrCbXZaGDA+LmYN3/G1nXfMPHsBdoJjVUQGAbB+t+3n00eAQgyBbFg0ALeP/A+ZQ1las2AoihKH1OcuYt0IAgrsjwTETsY7FbY+iYMnQeRKThih2MELkmu4daZbrwzu+1t/lb6a1ZyBlKe45f7NXTZoy2l/EhKOVZKeZv+daaUcnFX5wkhIoAZwKv6eTYpZaWU8msppV1/2XrAtff4AuB9KaVVSpmFts37FP3jsH5fG/C+/lq/12BzsDO3sv2xftBS0T7F1pF1+etYvGwxB8oP8Nfpf+WpWU+pJLsHiw0NQAgoqmqkqLqxuaINMO2cC3Bg4MD6lS29a9YaPdHWk1c/rGiD1j5id9r59PCnvg5FURRF8bL6/JZFjhVZW7VP9nyqFYem3ALA7qYkAKaHF3d9wUPfwLJf02COYh5rqdn7TbfH3B3cWQw5VAjxrRBit/71WCHEA12dB6QDJcDrQohtQohXhBAhbV5zE/Cl/nkSkNPquVz9WEfH/d62nAqaHJKpHS6E7J7WkWe2P0NMUAyfLPiEBYMX+OVvdIr7TEYDsaGB5FQ0UFHfREJYUPNz5pAoqiKGk163jR8OlGgHrdUQFA4BwWAOhjr/q2gDDIwYyMT4iXye+bmvQ1EURVE86Nt9RVz0zBrGPPwVt765GQBD6UFynHHYpYHqrG3aCze9DDGDIX0mAKtyoEKGMviYtK8deVvgw+sgYRRbL/ySI84EzF/dq1XI/Yw74/1eRmvvaAKQUu5Ea/HoigmYCDwvpZwA1AH3uZ4UQtwP2IF3TjDmdgkhbhVCbBZCbC4pKemOS56yTVkVCAGnpXquon2w4iA7S3Zy5fArSQxJPOnrKP4lMTyIXXna4g5XK4lLxIhzmGA4zLOr9mhVbVdFG7Sqtuu/Kz80N20uhysPk1mV6etQFEVRFA95/ocMCqoaGRQXyqp9RVQ1NBFel0mWeRCZsh8U7Yb8bZC7CSbf3Nyv/eOhUvID0ggsP9jxxcsz4Z3LtF21r15CSnIqD9lvwFKdBVve8NJ36D53Eu1gKWWbwb3Y233lsXKBXCnlBv3rJWiJN0KIG4ALgatly+yWPKD1HuUD9GMdHT+GlPIlKeUkKeWkuDj/mLKx8UgZwxPDibB00KTfDRXtpQeXYjaYuWjQRSd9DcX/JIQHklFSC0B8q9YRAGP6WQTShCFvCz8cLNET7XDtyeBov20dAZidMhuAb47451t8iqIoyqkpq7Wy5WgFV01J4f4LRuCUsP5QAQn2fOxRg8kyDSS86gBsfEV7F3bclQCU19nYmVeFI3aENku7ofL4i9eWwFuLtD0jrvkYwhJIirSw3jCBJYP/Dqfd4N1v1g3uJNqlQohBaFNDEEJcAhR0dZKUshDIEUIM0w+dC+zVJ4jcC1wkpWy9xd0y4AohRKAQIh0YAmwENgFDhBDp+oLKK/TX+rUmh5Ot2ZVMSetkoWN9hTYtwhTY8Ws60WhvZHnmcmanziYyKPIkI1X8UXx4EK5fQePDjq1ok3I6EsHckEP8Z9UhZGN1q0Q71i8XQ7okhCQwIX4CX2d/7etQFEVRFA/4/kAJUsKckQmMT44kNNDET5s2Y8KBIX4YleFDibYXwa6PYOxlYIkkp7yeW97cjJQQPWSKtvHaY2nw/HRYcTfsWgJlGfDuZVBTAFd9CLFDADAYBOmxIXxhnwymAN9+8+1wZ+rIHcBLwHAhRB6QBbi7n/edwDt6gpwJ3IiWOAcC3+i9xOullL+UUu4RQnwI7EWrmN8hpXQACCF+hTb5xAi8JqXc4+436FUf3wpxw+Gsu8gpr6ehycGYAZ0kwKe4/fo32d9QY6vh0qGXnvQ1FP/Uui87oU1FG0skInEMFzZl8decShyhVZiC9EQ7IgkKdngx0hM3J3UOj296nCNVR0iLSPN1OIqiKEo3WrW3iMTwIEb1D0cIwemDYig6sA7MEJEymiJ7KFQCDitMvoXPtufxwCe7AXjqygkMGPMzSB8BR9dB9lrY8T5sekW7uDDA5e9A8pRj7jkoPpQ9ef45S7vTRFsIYQRul1LO1hcyGqSUNe5eXEq5HZjU5nCH81qklI8Aj7Rz/AvgC3fv6zMFO6BJK9Jnl2uPqTHBHb++oRwsJ1+JXnJwCanhqUxKaPtHrPR0iRFacm02CqKC2/kNPe1MEja/RnqEAZO1DhkQigDtF72tb2oLIkP8c/KMK9F+e9/b3D/1frV4V1EUpZdobHLw46ESFk5Iav7ZPmNILAUHtI7fAUPGke+IgoNQmzCFB1fb+XjbdialRvGvy8c3j7Ml/SztA8Bhh6JdcHQDxA+HgTOPu++guFC+3FWA1e4g0NTOOGUf6rR1RK8on6l/XnciSXafZIlu7ik6WqYn2tGdJNr15Se9EDKjMoOtxVtZPGSxSlR6IdfukPFhQRgM7fz9pk5H2Bu5b7g2AqlKaoP7iRuuPRbvO/4cP5EYksiVw6/kgwMf8MLOF3wdjqIoitJN1meWUW9zMHtkQvOxs4bEMciQTyExxEZHk5qazvP2+dycP59Pt+fx29lDeP/WaS1JdltGE/SfANN+2W6SDTAoLgSnhOyy+naf9yV3Wke2CSGWAR+hTQ4BQEr5scei6qksUVBxBND+si1mI3FhnfRfN5RDxJiTutXSQ0sxGUxqEWQv5WodabsQslnqGYBgknU9ANm1RiIB4kdoz5fsb6kG+KH7ptxHfVM9z21/jkBjIDeNvsnXISmKoiinaNW+IoIDjJw+sGVTstSYYBrMhRSbU0kUgsEJYVxmuIao4AA+vGI8k9JOfXfsQXGhAGSW1DI0IeyUr9ed3Em0g4AyYFarYxJQiXZbwVHauBrgaHkdKdHBnVebT7KibXVYWZaxjFnJs9QOe72Uqy87oe1CSJfgaEgYRXTudwAcqjIwDiCsHwRG+HVFG8AgDPz5jD9jc9j415Z/EWgM5OoR7i79UBRFUfyNlJJv9xVz1pBYgswt7RtCOhkmcqkefi0AQWYjK38zg+jQAEID3UlDu5YeG8LVU1NIjLB0y/W6U5ffoZTyRm8E0itYoppH9mWX1ZMW23Z/nlacTmisPKnFkN8d/Y4qaxWLh3a5QafSQ0WHBBBkNpAY0UGiDZB2JmKD1nqxt0wfUSKE1sNWst8LUZ4ao8HII2c9gs1p49GNjxJgDFALexVFUXqoPfnVFFQ18rs5Q499ouIIBkcjkWnjmw+ldLZ+7SSEBJp4ZOHJdQh4WpeJthDidfTRfq1JKdV7vW1ZosHeiNNaz9Hyes4e2sk878ZKkM6Tqmgvz1hOQnAC0/pNO4VgFX8mhODV6yczMK6TX9ZSp4OeaO8uk9jsTgJMBq1Pe99ykFJLvP2Y2WDm8RmP85vvf8Nf1v2FIGMQ8wfN93VYiqIoygn6dl8xQsCs4fHHPlGkD4qLH+n9oPyAO3O0PwdW6B/fAuFArSeD6rEs2szs0pJCrHZnFxNHKrTHE6xolzWUsTZ/LRcMvACDcOevT+mppg+OpV9nb4OlTm/+tNwRxL6Cau2L+BHaOyt1/rFDalcCjAH8a+a/mJI4hQd+eoAD5Qd8HZKiKIrSAbvDSYPNgdXu0A9Ywelk1b4iJqZEERvaZm1R8V5AtCzW72PcaR1Z2vprIcR7wBqPRdST6UlzYVE+ACkxnVQjT3L79ZVHVuKQDuYPVFW/Pi8kRqsQFO+lVlrYdrSCccmRLT/MSvZDaHzn1/ATQaYgnjj7CWZ+OJOVR1YyLHpY1ycpiqIoXtVgc3DW499RWmvDIODjxRGMX3EREnjNGYIhJA5e76f9+5RyhjYppGgPRKdDQPe2i/QUJ1MSHQL0jH+9vU2vaJeVFAFdjPZzVbQtnewc2Y7lGcsZHj2cwVEdjiNX+pK0MwGwhEWxLUffrtY1eaTY//u0W4sMimRy4mRWZa9CyuO61RRFURQfO1peT2mtjUUTkggwGcjYvRGkg0MDFvGNYxKBCUO1ttjczbDyPqjK0xbn99G2EXCvR7uGY3u0C4HfeyyinkyvTleXF2M0pJIU1cnb/vqiyRNpHcmsymRP2R7umXTPqUSp9CZn3Alxwxm2vz/bjuqJdmgCBEVCiX9PHmnP7JTZ/HXDX8mozFC/TCqKoviZ3AptTvU1p6dSWmejpCAbgH9zNbvD4crrZmprg8oy4OmJsO1tKM+A0Yt8GLVvdVnRllKGSSnDW30MbdtOouj06nR9VQn9I4MwGzv5421uHXG/ov15xucYhIHz088/lSiV3iQyBSb/nJH9wzlaXk+DzaH9kEuaCPu/gEb/3JK2I7NSZiEQfHP0G1+HoiiKorSRV9kAwIAoC2cNjsVYV4zTFMSqrAZmj0hoGWkcMwgGTIZ1z2gVbtc7rX1Ql4m2EOJbd44pNFenm2pKSY3upD8boCILzMFa5dENTulkReYKpvWbRlxwJ9NMlD4pXR8lmVWq7yk16wGoLYLv/urDqE5cXHAc4+PH8222+hGjKIrib3IrGgg0GYgLDeTMIbHEiUpKicJml8we2aareOzlYHUt0h/l/WD9RIeJthAiSAgRDcQKIaKEENH6RxqQ5K0AexSzBWkKwllf3vWMyKPrIek0MLjXJr+teBv5dflcOPB6tW8gAAAgAElEQVTCbghU6W1cYwCbE+2k02DKLbDxZcjbcuyLpYSsH8Hp8HKU7pmdMpsDFQfIqc7xdSiKoihKK7kV9SRFWRBCMCwhjCRTNdm2MMKCTExuu8PjqEVgMIExEKIH+iZgP9BZlvcLYAswHNiqf74F+Ax4xvOh9Ux1xnAs9hrmjkzo+EXWGijaDSmnu33d5RnLsZgsnJtybjdEqfQ2rop2ZkmryZuzHtD6tZf/Fhz2luNZq+GN+XDoay9H6Z5zU7X/xlcdXeXjSBRFUZTWcisaGBClFRINBkGyuZoSGck5w+KPb5cNiYGRF0PyFDB2zw6QPVGHibaU8j9SynTgHillequPcVJKlWi3o6TGSn5jEEPCbMwcFAnvXw2bXtUqiK3lbtZ6llKmunfd+hK+zv6ac1POJdjcN8fjKJ0LDjDRPyKITFdFGyAoAn72KBTuhI0vtRzf97n2WOmfFeOk0CRGxoxkVbZKtBVFUfyJlmi3DHqIdlZQLCM5d0QHw+gWvgDXfOyl6PyTO30LVUKI69p+eDyyHugfX+2nXIYyItKhzTDe/zmsuAuW/QqaGltemLMBENpCgS4crDjIVV9chd1p55oR13gueKXHGxgX2lzRfmzlfp79/rBWTRg8B75/RBuzJCUc+EI7oabAh9F2bnbKbHaW7qSwrtDXoSiKoihAvc1OeZ2tJdFuaiDAXsOY4UP52eh+7Z9kNIMpwHtB+iF3Eu3JrT7OAh4GLvJgTD2Sze7kcHEtkTHxWOxVWqINMPYKbbzN6z+Dqlzt2NH1kDBaqzh2Yk3eGq778jqcTif/nfdfRsX23cUEStcGxoWQWVpHY5OD19ZksXRLrjaB5IIntH7slb+Hgu1QnaedUFvk24A74Wof+e7odz6ORFEURQHIq9AmjiRF6om2/m/IaaNGEGBSO1V3xJ3xfne2+rgFmAiEej60niXAZGDJL89gSFqKthlN8T5tEcBFT8Pl70DpIXjxbMhcDbmbumwbeX//+9zx7R0khyXzzgXvMDKm7w57V9yTHhtCTaOd5TvysdqdZJXVUW+zQ1QanH0v7FsOX94HwgCRqVDjv9XigREDGRQxSPVpK4qi+IncCtdoP72FtUYv1oQm+iiinuFkfgWpA9K7O5DewGAQGIOjtRnZJfshepD2lsmIC+GW77SZ2W9eBLZaSJ7W7jUcTgePbXyMRzY8woykGbwx7w0SQ9R/xErXBsZpv/++uiYL0LpEDhbpiyPPuBPiRkDOeu2/vYRRfp1og1bV3lK0hfLGcl+HoiiK0ue5NqtJdrWO1Or/hoR1MvxBcWuO9nIhxDL943PgAPCJ50ProYKjwdmkjVSLH95yPG6olmwPuwBMFkib3u7pD697mLf3vc01I67h3+f8Wy1+VNw2UJ88sr+whmEJYQDsK9BnmBrNMP/fgICRC7RpJLX+nWjPSZ2DUzr5/uj3vg5FURSlz8utaCDAZCA2NFA7oCrabulw3ooQIlBKaQWeaHXYDmRLKXM9HllP5drpsbZIqyC2FhQOV7yjDXBvpz87ozKDTw9/yvUjr+eeyWqbdeXEJEVaCDQZsNqdXDMthcdWHmC/K9EGSJkGd27R2kb+759QXwZ2m98uVBkWNYyk0CRWHV3F4qGLfR2OoihKn5Zb0cCASAsGg777Y20hCCMEx/g2MD/XWUV7nf54s5Rytf7xk0qyu2BpNbC9dUXbRYgOF0G+tvs1LCYLPx/zcw8Fp/RmBoNonqd9zvB4hiWGsa+g5tgXxQzS5pm63urz4wWRQgjmpM5hfcF6qm3VXZ+gKIqieExuZQNJrUb7UVsEofFub7zXV3X2pxMghLgKOEMIsajth7cC7HFcFW2AuHYS7Q4U1hXyReYXLBqyiKigqK5PUJR2jE+OZHxyJAOighnRL4x9hdXItnPcAcL0UUw1hezMreSXb23Bave/nSLPTTkXu9POj7k/+joURVGUPktKSW55/TEztKkp0toQlU51tlXPL4GrgUhgfpvnJNC3J5B3JFivaBtM2mJIN72x5w0kkutGqhHlysn7y8WjcTi1xHp4YjhvNx4lr7JlJ69mrh+OtYU8usbB2owyDhXVMjqp85GT3jY2bizxlni+zf6WCwde6OtwFEVR+qQjZfWU1dkY2S+85WBtIYQn+S6oHqLDRFtKuQZYI4TYLKV81Ysx9WyuinbMYLd7XysbK1l6aCnnp59P/9D+HgxO6e3MRgNmo/b5CP0H4r6CmuMTbb2inZeTxdoM7Y2tvOxDjC7LgjGXaC1OfsAgDMxKmcWnhz+lvqleLQ5WFEXxgdUHigE4e2irHSBriqD/RB9F1HO4M0dbJdknwpVon0DbyHsH3qPB3sCNo2/0UFBKXzQsUZs8csyCSJeQWBAGdu7bT1iQCaNBELnnTfj4Zm03U6fTy9F2bHbqbBodjazNX+vrUBRFUfqkHw+VkhYTTEqMXuxw2KGuBMLUxJGuqA727mYKhLSzYOh5br28vqmed/e9y4wBMxgSNcTDwSl9SWigidSYYPYVtpNoG4zYg+OpLs3j2mmppEYHI6vztc1sNr8Gn9wKjibvB92O0xJOIzIwkm+yv/F1KIqiKH2O1e5gXUYZM4bGtRysKwGkthhS6ZRKtD3hhs9h/FVuvfSTw59Qaa3k56PVpBGl+41IDGd/28kjuhpTDAlUsGhiEoPiQwmoL4ak0+Dch2DXR/DBtdDU6OWIj2cymDgn+Rx+zP0Rm8Pm63B6p8JdsOJucPrfglhFUXxr85EKGpocnO1KtKWE1Y9qnyeM9l1gPYRbibYQYqwQ4iI1daR7WR1WXtv1GhPjJzIxQfU5Kd1veL+wlq3Y26g0RhMvKhkQFcyguFDC7KU4QxLgrLvggn/CwZXwziVgbT9R96bZqbOpbaplfcF6X4fSO+37HDa9AiUHfB2Joih+ZvXBEsxGwbSB+rzsjS/Blv/Cmb/T9mdQOuXOzpCvAa8Bi9Gmj8wH1PL/brDk4BKKG4q5ffztvg5F6aVG9As/div2VoqJItFQQZDZyOD4UOKpoCYgVnty8s2w6CXIXgtvXATV+V6O/FjT+k0j1Byq2kc8pU5b6ETeFt/GoSiK3/nxYAmTUqMJCTSBtRa++iMMnQezHvR1aD2COxXtaVLKSVLK66WUN+ofN3k8sl6u0d7IK7teYVLCJKYkTvF1OEovNSLRNXnk+D7tPHs40VSDo4nBUUYiRD0lstUM97GXweVvQ9EeeHIEPJYGO973UuTHCjAGcF7aeXx2+DNWZK7wSQy9Wq0r0d7s2zgURfEr5XU29hfWMH2wXs2uLwOnHUbMVxvVuMmdP6V1QoiRHo+kj3lv/3uUNpRy+/jbEX4ySk3pfQZEWQgNNLU7eSTLqs9DrS1mULBW8T7aFH7si4afD7d8B3Mf0WbD7/ddkvv7Kb9nUuIk7l9zv6psn4TDxTXY7B1Mk6kr0R5VRVtRlFY2ZpUDMNXVNtJYpT12sMO1cjx3Eu030ZLtA0KInUKIXUKInZ4OrDcrqS/hhR0vcFbSWUxOnOzrcJRezGAQ7W7FLqXkYH2o9kV1HmG2MgAON4Ydf5HE0XDGr7R5qeVZng65QxaThWdmPcOY2DHc++O9rM5Z7bNYepoGm4Pzn1rDE1930IPtqmgX7QVbvfcCUxTFr23IKiPQZGDsAD2xVon2CXMn0X4VuBaYR0t/dtudIpUT8OSWJ2lyNnHflPt8HYrSB7S3FXt5nY0Ddn13yNKDUFMAwJ5qS3uX0EQPhPJMbcW5jwSbg3lu9nMMixrG7374nZqt7abSWis2u5P3Nhyl1nr8wljqSiEyFaQDClUdRVEUzYbMciamRBFo0ndCcyXageEdn6Qcw51Eu0RKuUxKmSWlzHZ9eDyyXqi8sZzndzzP55mfc8OoG0gJT/F1SEofMDwxnJpGO3mVDc3H8iobyJHxOA1mbdJETREAW8oDqWsvEQMt0W6qa6l++khYQBgvznmR9Ih0fvPdb9hUuMmn8fQEZXXaWMQaq50PN+Uc+2RTA9hqYNjPtK9V+4iiKEBVfRP7CquZOjC65aCqaJ8wdxLtbUKId4UQV6rxfidnf/l+/vTTn5jz0Rye2/4cMwbM4OYxN/s6LKWPaL0Vu0teRQMOjNgiBjZXtJ0GM/k2C/d9vOuY6nez6HTtscJ37SMuEYERvDz3ZfqH9ueOb+9gT+keX4fk18pqrQBEBpt5fW0WDmerv1/XL04JoyF8gEq0FUUBYNORcqSEqekxLQet+noflWi7zZ1E2wJYgbmo8X4n5MfcH7n+y+u5dPmlfHXkKxYOWcinCz7l2XOfJdgc7OvwlD6iva3YXdVtQ/wwraJdW4QhLJG75w5n+Y583lh75PgLRQ/UHsszPR2yW6KDonll7iuEmEN4attTvg7Hr5XVahXt22cOIqe8gVX7ilqedC2EDI2HAadBrpo8oiiK1p8dYDQwISWy5aBqHTlhpq5eIKW80RuB9DY7S3Zyx7d3kBSaxD2T7mHhkIWEB6j/MBXva28r9tyKBkICjJgThsPBzyEsEUITuO3sQWw7WsFfV+xjzIBITkttNe4vIlnbot1PEm2AuOA4rhh2Bc9sf4asqizSI9J9HZJfKq3TKtpXTknhjbXZvLomi/NGJWpPuiraIXEQOwz2Ldd2iDQYfRStoij+YENWOeOTIwkyt/pZ0FgFAaFg7DJ9VHQdVrSFEMFCiHuFEP8jhAgSQlwvhFgmhHhcCBHqzSB7oqe2PUV0UDQfX/Qx14+6XiXZik+13Yo9r7KBpCgLIn44SKfWLhCWiMEg+Odl4+kfaeGOd7ZSqrccAGAK0JJtH04eac8lQy/BbDDz3v73vHK/dzZkM//pNV65V3cpr7URHGAkLMjMjdPT2JhVzu48vTLl2qwmNF77kE5tVq6iKH1WTWMTu/Oqju3PBi3RVm0jJ6Sz1pH/AglAOrACmAz8AxDA8x6PrAfbULCBDQUbuHnMzapFRPELbbdiz69sICnSolUwARw2raoNRFjMPH/NRCrqbdz57jbsjlazl12TR/xIjCWGeWnz+OzwZ9Tajt8Bs7ttP1rJrrwqqhqaPH6v7lJWZyMmNACAyyYnExJg5NU1+i9MtXrrSEiclmgD1Ba1cxVFUfqKzdkVONv2Z4NKtE9CZ4n2UCnl3cAdwCjgTinl/wH3AuO8EVxP5HA6eGrrUyQEJ3DZsMt8HY6iAMdvxe6qaBMzWGsHgeZEG2BU/wgeWTiGdZllPPnNwZYLRaf7XaINcNWIq6i317M8c7nH7+Wa4JFTrs+b3vASbHjR4/c9FaW1VqJDAgEIDzJz6aRklu/Ip6i6UatoB0aAKRBC9ZGPKtFWlD5tQ2Y5JoNgYmrksU+oRPuEdbkYUmrjB77QH11f+26Qrp97Zdcr7CzdyW8m/oZAY6Cvw1EU4Nit2Ousdirrm+gfaQFzkDY/GSA08ZhzLjltAFdOSeG5HzJYtVdPvKIHQmMl1Jd7M/wujY4dzYjoESw9uLT9iSndyDXBI7dCT7S3vgnrnvXoPU9VWa2N2JCA5q9vnJ6GQ0reWpet9WiHxmlPNFe0S3wQpaIo/mJDVhljB0QQHNCmF1sl2iess0R7s6sXW0p5k+ugEGIQUNPhWX3Y5sLNPLfjOc5PP58LB6rBLIr/aL0Ve1ZpHYDWOgIQp7ePhPU77ryH5o9kYFwIL/2fXsV2TR7xgxF/bS0espgDFQfYW77Xo/dpqWjrc8lri6AyGxoqPXrfU1FWZ21uHQFIjQlh9ogE3tmQjbO2GEL0BDtEtY4oSl9Xb7OzK7eqZdv11hqr1MSRE9Rhoi2lvFlKeVzDo5QyAzjLo1H1QFaHlT+s+QMDQgfw4OkPIoTwdUiK0qz1VuxLtuRiNgpOd/0QjR2qPYYlHHdekNnIjCFx7M6r0mYvR+lTPb66H/41BnL8Z7OY8weeT5AxiKUHl3r0Pq5ReTkV9eCwt4zHK9rt0fueLCkl5XU2YkKPfYft52emU1HfRE1ZQUtFOzAUzCE+35RIURTf2ZJdgd0pmZoeffyT1mpV0T5B7szRPo709HuzPVCgMZA/n/5nnjj7CULMIb4OR1GOM6JfGHsLqvlocw7zx/YnPjxIe2LgTAhPgqi0ds8bnxxJvc3BoeIa7TXmEMjbClVHIX+rl6LvWlhAGHPT5vJF1hfUN9V75B71NjsNTQ5A79GuL6W5k67AP7cur2600+SQxLRqHQGYmh7NqP7hiLoSpKuSDVrSXddxoi2l5NNtec0tNIqi9C4bMssxGgST0tok2lL6detIaUOpr0No10kl2kr7zkg6gxExI3wdhqK0a3hiOLVWO3U2BzdObzVvevC5cNdeCAxr97xxydpimB05lRAQDHesh3sOaE82VHg67BOyeMhi6prq+OrIVx65vquaDZBT0QA1hS1PFvpnou1KiFu3jgAIIbh+Sn/CqaWUVm8FhyZ02jqy9Wglv/1gO0u35nokXkVRfGtDVhmj+4cTGtimP9tWq43/9MNEO6cmh7lL5vLJoU98HcpxOk20hSbZW8EoiuI5rq3YJ6dFMWaA+z8o02KCCQ8ysT1Hn7scmQKWKO2HrZ8l2hPiJ5AWnsbHhz72yPVd/dkD40LIrahHuhJSS7TfVLSf/f4wT3x1oPlrV8wxIccvzh4TpY0oLHK0TrTjO20dWbbxAPMNa6koV7O2FaW3aWxysCOnk/5s8MtE+4UdL2AQBqYnTfd1KMfpNNF2TRw52YsLISKFEEuEEPuFEPuEEKcLIaKFEN8IIQ7pj1H6a4UQ4ikhxGEhxE4hxMRW17lef/0hIcT1JxuPovRlo/qHMyk1it/NHnpC5wkhGJccqVW0W7NE+V2iLYRg8ZDFbC/ZTkZlRrdf31UdHj8gksYmJzWlelV38LlQsh+aGrv9nidCSskba4/w1vrs5ukrrpj7OfKhLAPsLS0fyYHauvZcW6s9yELisVcX8cOBNsl2bTFNX/+Zu3Yv4umAZ5iQ/ZpnvxlFUbxu69EKbA5n+/3ZzYm2fy2GzKrK4vPMz7l82OXEB8d3fYKXudM6slUIMfkkr/8fYKWUcjja7O19wH3At1LKIcC3+tcAPwOG6B+3om+KI4SIBh4CpgJTgIdcybmiKO4LMhtZctsZnDE49oTPHZ8cyYGiGhpsjpaDfphoA8wfNB+TwcTSQ92/KNLVOjI+RWunqSnN154YPAekA0r2dfs9T8TR8nqKa6xUNTQ1T5eR+dt5w/woQz6YAU9PhL8mwBPD4JXZhH73IABZDS0baxXLCEzWCv64RO+/L8uA5b+Ff43GtPZfrHWOZA8DGVO9WuvZVBSl19iQWY4QHN+fDdBYrT36UUVbSsmz258l0BjITaNv6voEH3An0Z4KrBNCZOiV5l1CiC7fIxVCRAAzgFcBpJQ2KWUlsAB4Q3/ZG8DF+ucLgDelZj0QKYToB5wHfCOlLJdSVgDfAPNO4HtUFOUUjRsQicMp2ZNf1XLQTxPtGEsM5ySfw/KM5dgctq5POAGldXpFW+9bt1bkQ1AkDJikvaCz9hFbXbfG0p4NWS3zzbcdrQSnk5kbf8loQxb2mQ/Agudg5n0wZDaYg6G2kCJDAlvqtF++8isbeG27FqejpoTGbx+Fp0+D7e/C+Cu5K/4VHg2/n53xC7QKebFnRykqiuJdG7LKGNkvnAiL+fgn/ax1JLs6m9tW3cZXR77i2pHXEmNpp93FD7iTaJ8HDAJmAfOBC/XHrqQDJcDrQohtQohXhBAhQIKUskB/TSHaNu8ASUBOq/Nz9WMdHT+GEOJWIcRmIcTmkhK12YKidKexydoP1u2t20f8NNEGWDRkEZXWSr7P+b5br1tWayM4wMiQeG3hqLOmUFs8GJUOAWGwe0n7fyaHV8Hfk6FoT7fG09amrHIig82EBprYllMBldlY7JU8I67ENPN/YMLVWqK94Fm4fhn8ehuPDfuQvRVGAJ774TBHbdr3liAqMG18AdJnwG93cfSMv/PJUQuXTBxAQb/ZOKVA7v3Mo9+PoijeY7U72Ha08vht112aE+3I9p/3kgZ7A09ve5qFny1ke8l2fj/599w27jafxtQZd3aGzAaSgVn65/XunAeYgInA81LKCUAdLW0irmt32y6TUsqXpJSTpJST4uLiuuOSiqLo4sOCiAsL5GBRq72q/DjRPr3f6cQHx7MsY1m3XlebRx2AJcBIbGggpvpiCEugtL6JbxJuxHnkJ3h2KuxtdV8p4fu/a60lR37q1nja2niknMlp0YxLjtAq2nrFucgyuMNzUmNCyK9qpLHJweYjFcT3TwFgumEPJmsFjLsCwhJYsjUXIWDxaQMIjenHJjkM595lsPMjeHOB2k3SG6SE/O2+jkLppXbkVGG1O5k6sJ22EfCLivYPOT+w8LOFvLTzJeakzmH5xcu5ZuQ1mAymrk/2kS4TZiHEQ8DvgT/oh8zA225cOxfIlVJu0L9egpZ4F+ktIeiPrhU3eWgJvcsA/VhHxxVF8aJ+EUEUVbeanexKtJ1O3wXVAaPByEWDLuKnvJ8oqe++BLC01kq0Pr0jOdpCQEMpOyuDOOcfP3DLoWlcKf+GIzgePrwWPrgWaoogazXkbdYukL+t22Jpq6i6keyyeqamRzMhOYr9hTU05e/CiaAmrONEOy1W68/eW1DNgaIaUpJTAZhvWqe9IHU6Tqdk6ZZczhwcS/9IC/FhQax0TMZYsg8+vhkyf4DD33jse1N0uZvhpbP9aqMopffYdERrPZvSXn82gFVPtH2wM+ThisPcvup27vzuToKMQbx23ms8NuMx4oL9v7DqTmV6IXARWkUaKWU+0P7A3VaklIVAjhBC39+Zc4G9wDLANTnkesD13uMy4Dp9+sg0oEpvMfkKmCuEiNIXQc7VjymK4kXxYUEUVbeaqmGJ0maqWqt9F1QnLhp0EQ7pYEXmim67ZlmtjVh945eRiWFEOcvZUmZm6sAYnrt6IhutyTyR+jyc+xAc/AqenQwr7oHQREg/26OJ9ka9P3tKejQTUrSe+prs7RQYEggO67gClRqjbbD12bY8pIRhgwZp35/IptSUCFGprM0oI6+ygUsnaTWP+PBAPnecTm30aJjzv9o/vLkq+fM410ZCVTmdv05RTkJeZQMxIQFEtdncqlljFZgsYOrgeQ8oqS/h4bUPs3j5YrYXb+fu0+7mo4s+YnLiyc7o8D53au02KaUUQkgAvc/aXXcC7wghAoBM4Ea05P5DIcTPgWzgMv21XwDnA4fR2lNuBJBSlgsh/gK4for/r5SyZcWPoihekRAeyNajrVpFLPrwn4YKsPi2Z6896RHpjIsbx6eHP+22txbL6qyMTtKqOQ/PS8G808YNc6dx43RtMeTCCUm8ui6Xa+65jaQR82HZr+HoWpj7CFhr4MfHwVqrbXXezdZmlBISYGRkv3CqIrX52I25O9ljTyYu7PgZ2i5pMVpFe/nOAoSAsemJWuJsrWYzI5kHfLg5h/AgE3NHaktq4sOCKCGSb2d8yILxSZDxvUq0vcGm73har2aYK92vqqGJiOB2FkG6eHFXyPqmev6757/8d89/aXI2cdXwq/jF2F8Q6eP+8JPhTkX7QyHEi2hTQG4BVgEvu3NxKeV2vW96rJTyYillhZSyTEp5rpRyiJRytitp1qeN3CGlHCSlHCOl3NzqOq9JKQfrH6+fzDeqKMqpSQgPorzOhtWuj/hrnWj7qcuHXU5GVQbXfnEthyoOndK1pJR6j7aWtJr1lhQRmtD8mrvnam/gPfn1QYgdAjesgJ+vgmm3Q/8J2jsAhbtOKY72VDU08dn2fM4bnYjJaCAmNJARsSYS7PnURQ7n1rMGdXhuZHAAERYz5XU2hiWEERZk1jatAb5tHEpprZWv9hSyYHwSQWZt0WRCuPZn0PwOx4BJ2kJPL0xW6dNstdqjSrQVD6iqb2p/2oiLlxLtHSU7uOCTC3h+x/OclXQWyxYs4/dTft8jk2xwbzHkE2j91UuBocCDUsqnPR2Yoij+JTE8CIBiV5+2Re/j8+NE+8KBF/LE2U+QX5fPZZ9fxos7XqTJ2dTh67NK6yittbb7XHWjnSaHJMb1tqprV8iwlkQ7KdLCDWek8fG2XPYVVIPBAMmTtcf+47UXeaB95KPNOdTbHNw0Pb352OsXhGEUkoXz5pISE9zJ2S1V7Qkp+i9PIVqivc4xgme+O4zV7uSySS1LZUIDTVjMxpb/FgZM1n6JUAv1TtmHm3OO3yzIxfWLTF2p9wJSjpFdVseXuwq6fmEPVNXQRGSXibZn+7Prm+q578f7CDAE8NbP3uKfM/9JcnjP3qDcnYo2wC7g/4Af9c8VRelj4vUqZnGNXsXsARVtIQTnpZ3HJws+YU7qHJ7Z/gxXrbiKfWXHbyzTYHMw798/MvmRVSx4Zg2fbMvF4WwZiuTaYTEmtE2i3aqiDXD7zEGEBZp4bOX+Y28Qlghh/bs90XY4Jf9de4QpadGMTmqpNiU26DtjJozq8hquPu3TUvW/0+h0rBEDyZVxvLMhm+GJYc0tM6D9uSaEB1JUoyfaSfoccdU+csqe+e4wz35/uP0nXYm2qmj7zOs/HeFX723DZve/ReCnqrLB1kVFu9rjFe1/b/03ubW5PHLmI4yPH+/Re3mLO1NHbgY2AouAS4D1Qgj/3H5HURSPSdAr2s2TR3pAou0SHRTN4zMe5z/n/IfShlKuWnEVb+5585jX5FTUY7U7mTMigcYmJ7/7YAfn/+f/+HpPIVJKyuq0zW+Gl66CNy+Gwt3aiW0S7cjgAO44ZzA/HChhbUabymP/Cd2eaH+zt4jcigZuOjPt2CeK92qb0kSlt3tea66K9kR9x0vO+xuO65YD0OSQXHLaAIQQx5wTHxZEsat1JCQGogeqRLsb1Nvs7MmvPuaXvGZNrkRbVbR9paCqAYdTklfZ4OtQul1VfRORwZ0sdPRQ64iUkt2lu3lo7UO8t/89roaXzfAAACAASURBVBlxDZMSJ3X7fXzFndVB/wNMkFKWAQghYoC1wGueDExRFP/iSrQLq1wVbT0pa6js4Az/MytlFqclnMYDPz3AP7f8k/Hx4xkbNxaA3Aptodkvzh7EhORIVuwq4MlvDnLrW1sYnxzJlHStVSb18JtQtAUyvweDueUXjlauPyONN9Ye4dEv9/Pp7dMxGPQktf8EOLBCrwx1z1uwr/2UxYAoC3NGJh77RNFuiB+hta104fIpKUSHBJAeq691t0QSbImkf8QBimusLJxw3B5hRITVsa3mA+789l2aZBP26BCCqrcx88BHzEmbS0Sgf+we19PUWu00NjnJLKllSEKbAV/NFW01D8BXCvVCQ3ZZXcv/L72AwympbrQT7sUe7bqmOlZkrmDJwSXsK9+HxWTh0qGX8uuJv+62e/gDd1pHyoBWu1RQox9TFKUPiQo2E2A0UORqHTGatd0QW1W0pZQUVzey+mAJL67O4HcfbOfF1Rk+irh9EYER/P3MvxNnieOhtQ/R5NB6tnMrtApVcrQFg0Ewf1x/vv7dDB5dNIai6kZe+jGTKKqxFG2FwbPBGKi1g7Sp9AIEmY3cNXcYO3OrWNG6nzNOn3ZacaRbvpfdeVVszCrn+tPTMBpaxeFogrytWmLvhqRICzdMTz+uaj1vdD+umZbavADUZUfJDrY7/kxj4BYK6wupaqzCGmAh0+Dkz+v/l1kfzuLe1feyNn8tTtn73mL3FIdT0tik/Xntyqs6/gWqR9vnXO/iHC2vb/8FJQd6VPHBpaZR+znYYY+20wmNld2SaDucDh7f9DjnfHgOf1n/F5zSyQNTH+C7S7/jwdMfxGKynPI9/Ik7Fe3DwAYhxGdouzguAHYKIe4CkFI+6cH4FEXxE0II4sMDWxbAAdISSU5eLv9dvpf9hdXsL6yhXG+xADAbBWsOB/CLszueeuELoQGhPHj6g9zx7R28uPNFfjXhV+SU1xNoMvD/7J15eFNl2ofvk6VJ0ybd94VSCmXfNwERUAFFRcUFRUXEfdfR0VFnUOdzZlxwGx13REFUREVFQMGFfUfWAqUtLV3ovjdpkjbn++NNmnRvgZaC576uXEnPeU/ynjRtnvO8v+f3hHgElVq1ipkjY7lySBSLt2ZgPPot0nEZJjwF4+0tZhavGhLFhxvSePmnI0zpF46XRgUmZ2a4PAciBrZrzrIsszGlkDE9guuC6o83pWPwUnPdiAbFQjl/CIeK7uPb9RoN+cflfalx1HC4+DB78/eyp2APe/L3kFWZhUkTRlHKHD6+8RZ8dRo4sgr585kkXb+A78uTWZG2glXpq4jwieDKhCuZnjCdKN/GmXEFN1W2mrrH+7PLuHpodP0Bnq4jstzkRZ5Cx1HrkMmvqMYLOxlFTQTauQfg/QniAnzmZxAxqNPneLKUmkWg3axGu7oUHDV1hdKnwht/vMGipEVcFn8ZN/S+gQHBAxpd5J9LtCXQTnXeXLgazLTatEZBQeHcIsxUv2lNpcpIcvpxPk8/Tq9wI5P7htE73EjvCBO9w418uOEY76xLxeGQ3fKJLsL46PFc0eMKPtj/AedFnkdWCUQHeDf5D1+vVXP7+fGQfwgMwSJT3IokQ62SeHxKInM/2clvR/KZ0i8cTJFiZ3n7m9v+uP8E9y/5g5euGch1w2MoqLDyw94cZo6MafzleGyduI87v92v46LcVs5L219iTcYazDUiqAj2DmZwyGBm9p6JxjySp/enkV9ejW+IL/iEIgH9VAb6jfobjw5/lN+O/8a3Kd/y7t53eXfvu8zqM4snRj5x0nM616myugPtAy1ltB120SjqDLbC/jNSVGlljvQjt+p+4vnCJfV31tph+T3idyI74KMpwt4zetiZmWw7KbU4M9rN+WhXOp1wfE8t0F6RtoKPD3zM9YnX88zoZ07puc4WWg20ZVl+DkCSJJP4Ua5o5RAFBYVzlDCTjsO57n8BRbU+BEhl7Hz6Inx0jf+dBPt6UeuQKTE7/aeX3gLhA2H8Y5057WaJYxYBXjt5csOTaEr+QnRAM62HARy1kLIWek1tk+4ZYKjTLs8lS8E3FCS1yGi3A1mWeed3ke/4fk8O1w2P4bNtGdhqHdw6Jq7xAcfWQ/gAMLRwPi2wI3cHT218ikJzIVf2vJLhYcMZHDqYSJ/IuguRTSmFQBp55VbiQ3zdX8BONxadWsfU7lOZ2n0qOZU5vLfvPRYfWkyvgF5c1fOqk5rXuU6VVXjUB/l41RVE1pME2TyyqOYiJdDuZPLKrfRVZRAtFaIr2AeMcu/c8Crk7oPrFkHMKJjfC1LWnDWBdpmllYy2qyupz8m3PD9QeIB5m+YxPGz4n+qCuy2uI8MlSdoP7AP2S5K0V5Kks+OTo6CgcFoRThNu6UiOTU+o1tJkkA0Q7OxIWFhpE7rkpO/gwDedMdU2sXhLHtrCWyi0FJKl+ZjogOY7KJK+UejRe05u8/P7G7R4aVRudw6VGowR7Q60N6YUcjCnnB4hPmxOLSS71MLirRlM6h0qglxP7NVwfBvEtV82Yq+189qu15j701x0ah2LLl3EvPPmMS1+GlG+UfWy/bGBwqnkYI4z81oXaBc0et5I30j+MfofjAofxQvbXuBI8ZF2z+3PgCujPTo+CLOtlrSCyvoDbFWgdrpCVCmlUp1Nbnk14Qi5WFzFLmTZ6QyTu190fe1/DfS9Qnjrewe4s8CdwNa0IpZsO37Sx5eaheSv9Yx2WNP7W6HAXMBDvz5EsHcw8yfMR6tqoejyHKMtaZkFwL2yLMfJshwH3Aco3RkVFP6EhPvpqbTWOJ0Rakmv0hEoVTY9uCKXUXv+xmvatymsqIZDwi6OgkOiDXkXoMxiJzXbn3sGPAKGJHKkHxoPKkqF7+6DxVeLDGKPSW1+fpffdK6H3AZTZLulI+/8nkqYScebNwzBIcMDS3ZTWGljzti4xoOztkOttV367Cp7FR/u/5Cp30xlwYEFXN3zapZetpT+wf2bPSYm0EDvcCOrDuSKDRod6P3d/uINUKvUvDj+RYxeRv6x+R9KkWQTuDTao+LFSkSjgkhbJfg5dduKl3an4HDIHHGu4uWWVxMmieLvkfJ+8iusbsmIdyBc+rL7QJ9Qdxa4E/j3ykO88GOSO/g/8A2k/trm48udGe1mXUeqnBfQJyEdsdZaefj3h6mwV/DmpDcJ1J/cStvZSlsC7VpZlje4fpBleSNQ08J4BQWFcxRX6+388mr2ZpZSLPvgXVshCrNcOGph+wfw1ghC0pZzlXqTsMJL+k5k42RHh3RHbC8Oh0y5xY5DBlXFOOylw9hZ9iXfpTjLUHIPwFdz4K3hsH8ZDL8N7t7ktjVsI+ENdO0i0G57Rrugwsrm1CJuGtWNfpF+9A43svt4KT1DfRmXEOwxMBm2vgs7PhTylG5j2vT8O3J3MOP7Gbyx+w3i/eJ57+L3eHbMsxi0LXeTBJg2IIJdGSWcKHNJY8KaDbQBgryD+Mvwv5BUlMTylOVtmt+fCZd0ZGC0P95adROBdhX4dxOPFS/tTuGXw/lMeX09R3IryC+zEC6JjPYI1RGO55fAhvkio3356/WlWr6hTa7udASZxWb2ZpVRZaulxFnUyOon4fsHxf/jNtBqMWRlPqg04mK6HciyzD+3/JN9Bft4YdwLJAYmtuv4c4G2BNrrJEl6T5KkCZIkXSBJ0v+A3yVJGipJ0tCOnqCCgkLXIczo9NIur2b7sWJKZV9Uco3bDeHEPvjoYlj5GEQNpeK2jWTLQfTd92/RzGTEHWJcF2hsUmGtwdUT5Ie9OVTnXklf/6E8s+kZ3lx8IZb3xsHRn2HMA/DwfpGt8m9/K+BQk97d5AeE80h5Tv2LkxZwLenGOT17pw8Wzh1zPO34amvgy5tg9RPigib2vBZ9umVZZnPOZh749QHm/jQXlaTi00s+5YPJHzAmsm0BOsClAyMAWLXfmdX2DW11uXxa92kMDhnMG7vfoMKmlPx44pKOmPQa+kaaGhdE2s3gHyseKxntTuFYofjftjOjmNKSInwkK5bI0eglO9rdH8P6l2HAddB7Wv0DfUI6LaO96oDbQvR4sVnYP1bmQVkmpP7Wpucos9jx1qrRadRND6jKF+fUxvoUF0sOL+G71O+4e9DdXNzt4nYde67QlndsENALmAc8C/QBhgDzgVc6bGYKCgpdjlBn05r8civb04vxNjkzqmVZ8NPTwtqq9Dhc/QHcvBzfmP6867iKgKo0MW74HNFBMHvXmTkBD1xLpQB7s8pA1vLfgY8wwwof1OZzXlws1/QdybM+KpblrOdw8WHsDnsLz9g0rox23ZKuKUJ0+KtuwlWiqXk6/W2NeqGDnzU6licv6c2MYR5WebsXQuERuPpDePAPuPHLJp+r0lbJkkNLuGL5Fdy15i72FezjjoF3sOzyZQwJbZvntic9QnzpHW5kpcsr3De0xYw2CDnNk6OepKS6hPk757f7Nc9lXNIRX52GAVF+HMj26BDpcIiMtm+Y8HBXvLQ7hZxSsRq1N7MUW6mQfGkHXUutLDEo6SUwBMElLzY+sBMz2j/uz63TVh8vNkPeQffOXW1T+pZa7M3rs0GcSzsLITPKM3ht12uMjx7PPYPuadex5xJtcR2Z2BkTUVBQ6PqE+4lA+5Wfj1BQYWVqzwg4BiyYIgLHobPhomfrllAlYJ33xRTLKwgMCITgnhA1XLhinGEfYFeVfZCPF0VVNoxeEPL1dcyTHUye/Ay7HBUcKDzAmow1fH30awACdAH85/z/MCaq7VnfMJMOs62WCmsNJr3WbfFXcaJNMpTyahF8GfXiS9Ck13K3py95dRn89m/oNg4GXNPke2qttfLm7jdZlrwMc42Z/kH9+de4fzElbgpe6hZaLreBSwdE8OqaZHLLqgn3DXNrOVugX1A/5vSfw4IDCxgdOZqpcVNPaQ7nCq6MtsEZaC/cnO7uEFljAWTw8hHBndIdskkKK60E+Xg1adO5aGsGO9OLeWNm2y8qXZ1w92aWMdQuLig1YX1IUiXQVz4Kl73etLuPTwjYKsBuAW3HNWDJKjGzN7OUBycl8OavKWQWm8HsDLQH3QD7lkJFrvD2boEyi7152QiIC+h26LMdsoN5m+fhpfJi3nnzUEnty4SfS7QaaEuS5IfIZrsqa9YBz8uy3LZ0jIKCwjmDr07Dy9cM5Pu9OZSZ7fRN7C0CbWMk3LgUYkc3Osbf5Mu/tC/yyrXOBi3Rw2H/UlEQ6BfdaHxn4Qq0L0gM4Zvd2fT1syNV5MGlrzBm0K24QmlZlsmsyGR/4X4+OvARd6+9m8viL6PcVk6NXENiQCLnRZ7HqPBRTX65h9WtAlQ7A21X05ps0SK9IbV2cSES2gdMkVRUu+UETbLhVSEjmPJCk0F2gbmAh357iP2F+5kWP41ZvWcxIGRA+96sFri4bxivrklmY0oh1/iGChmRtRJ0vi0ed/+Q+9mZt5PnNj9Hr4BexPvFn7Y5na1UOjXaBq2aAdHCum9/dpkItF0e2l4+4BOkaLSbICW/ksmvreOSARG8fM1ADF7uvxmHQ+ad31LIKavm3gkJJIa3rRXICWd9RXJ+BUO1uUIHYIrgx8Cb2WZJZ07vS5s+sM6FJx8Cup3KabXIzwfFCtKMYdEs2X5cBNqagyLQP/8x2Ps5/LG4VUvVMnMrgXZVAYT2bdOc8qry+GD/B+zK28XzY54n1HDqTW7OZtrqOlIBXOe8laO4jigo/Gm5dngMi+aOYv9zUxgyeiLc8Svctb7JIBsg2FdHUnWQkIyAyGjDGddpuwLtSb3Fl0Ci0dnR0ie43jhJkog1xTItfhqLL1nMtPhp/HL8F3Kqcig0F/Jp0qfc8fMdXLfiOj7c/yHrs9aTU5lTJxVxBdp55VYcDplVGeLf7serNmOv9XDeKEqFtc/Ca/2Ew8kPDwPu1shNugGUpMPW/4nMVeTgRruTipK44ccbSClN4fWJr/Of8/9zWoNsgMQwI/4GLVvTitzWX23QpmpVWl4a/xJeai/mrJ7DwaKDrR5zrmO21uDjpUalkugR4lu/INJVB+HlK5omKRrtRhzMKcMhw4/7TnDNO1vIKnH7ju9ILybHmZ1evqftrj8nSi2EmXTIMgTUOi9ujBGoEqfyz5KLOFZY1fSBrg6KbVjhORWO5lcQ7OtFtyAfogMMbulIaF8IThBNq3Z/KqRHLdBiRluWxXn4tiwdOVR0iL9t+BtTv57KV8lfcU2va7gy4cqTPbVzhrZ0huwhy/IMj5+fkyRpT0dNSEFB4SwjqmVb/WBfr/pFXeEDhMb0+Fbod+Yal7gC7SGxAUT66ennXwY5iGX5ZjBoDfz7/H/X22attbIybSWfJn3KG7vfqNvuo/Whh38PIvTdUXlHkls2iGW7s3j6xxMc0UuU5qazLimbi+StsPsTSN8Akgp6ThF+20dWQWVBXUbb2FRGe+1zwmHkwr832rX62Gr+vunv+Ov9WXTJog6r9lepJEZ1DxSB9hCPLF5g6xnqKN8oPpn6CXetuYvbVt/G9b2v58qEK/+02e0qWw0Gpye9WiXRN9LE/ixXoO0MGr0M4jNakn5mJtmFSc2vRCXBuzcN4y9f7eWKtzbxv1lDGR0fxPI92Ri81AyI8uP7PTk8Pjmx1W619loHBZVWbh7djU+3ZBAulWDTmvDSenPzed14b30a769P5d9XD2x8sCso7WAv7awSC1EBwiEoNtDA3uOFYD8Ew+eKAcNuha/nwrHfG1uTOmohZw9ED6PUYmOQoZkGSNWlUGtrtv36+qz1LDy4kB25OzBoDMzsPZNZfWYRbTxzK5ZdibZktC2SJI1z/SBJ0ljA0nFTUlBQOJcIMeooqrLhcBV1abwg/gIRSLbReaMjcNlZBRi0rHp4PFf3ceooWwi0m0Kn1nFVz6v4dvq3bJy5kU+mfsLfR/+dK3pcgV6tZ2PuL/jEvcMHKU+w9ug+/I0+SL6hdPcqQ/fTY/DN7cIdYNLf4ZGDcOMXMPFpkGvh4DdUVNtRqyS8tQ3cADK3w8FvYOyDbt03UGQp4rF1j/H4+sdJDEzk82mfd7il1qjuQWSVWMhzOJ1O2hFcxPnFsejSRYyKGMWnBz9l+vLp3LTyJpYlL6PS1jX81juLKmstvh7NnwZE+dV1iKwvHQlWNNpNkFpQRWyggcn9wvnuvrH4G7Tc9OE2Fmw8xo/7TjClXzg3jIwlu9TCjnSP968kvX7XTSf5FVZkGfpGmIgNNBAuFWM3CK1zqFHPdcOj+XpXdn37ThftWN05FbJKLEQHiP9dsYEGtGUZUFMNYf3EgD6XC4/vXQsbH5z0HXw4CQpTWs5oVzbvof1D6g/c98t9ZFZk8tjwx1h77VqeGPmEEmR70JaM9t3Ap06tNkAJcGuHzUhBQeGcIthXR61DptRiJ9DHWXjXe5qwzss7COHNN0XpSMosdrRqEcAavCSodn7xtjPQ9sRP58fQsKEMDXM7n5rtZkb99/8oCP6NbMczdIu5CnN1BOfXJONfkYl5yG0Yrphf3zYrrK/I/O/9goqwsRj1mvr6b1mG1X8D33AY86Bzk8zKYyv5z/b/UGWv4oEhDzCn/5xO6cA2Ol68ZzsKtFwGrTqPNCTUEMqbk96k0FLIitQVfJvyLc9teY4Xt7/IFT2u4ImRT5xy0ebZQJW1BoOX+4KqXkFkPelIEFjLoMYmLlwVAEgtqKSHs1NqfIgvy+8by8Nf7OH5FUkAXDkkihFxARi81Cz/I5tRVb/BlrchZzeMvLN+wxmEbAREEfigGH/CDpWAyW3xeef5PViy7TgfbTzGU5c2qLdwOXR0oPOIwyGTXWJhcj8R1McEetMTZ3dIV6Ct0cHgG2Hbu+IC2DNYLhAdWm0FKVTbHfgbmvksNdN+vcpexau7XmVg8EAWXrLwT9XtsT20xXVkLzBIkiST8+fyDp+VgoLCOUOwr2hyU1BhdQfavS4BHoYjK89ooO3nrXUHsK4Moffp7Vpm0BoIZwq+5vEcqvmYDONXTNBJjDaZMfgGk2WvZfCu+eg1erw13ujVevQaPQk9JzBww3/R61Ix6usXbln2fUFawV7SRt9OyoEPSC1NJaU0hezKbAYGD+T5sc/Tw79HMzM6/fQON+LnrWV9tsxlkuqkl8uDvYO5tf+tzO43m/2F+/nm6DcsTV5KgaWA+RfMR6s+t7/IK601+HhmtD0LIvUeGW3XxaC5SNhFKlDrkDlWWMX5Pd01Fia9lg9uGc4ba5PZk1XG2B5BaNQqxnfTMfnwM7B/nVPL3KvJLoonnJruSH9vxvYIIuJwCV4B59Xtjw0ycNnASD7bmsF9ExLw87TH0+hEJ9kOzGgXVFqx1TqIdkpHYgIN9FYdR5ZUSCEeq1hDZ8OWt2DPEhj3sHt7yTEAqouOA1HNd4Wsa79eP6P93r73KLQU8ubEN5UguwWaDbQlSXoUKJNl+SNwB9iSJM0FjLIsv945U1RQUDibcQXahZVWEnEGjMYwiB4Bh1fABX89I/Mqt9jrf7GYi0Bn6pAMYZhJz6bUSmT5Zp69wUTy4f+w05ZGsdqHsortHDq0hRrZikx9KU1gbBTDzAvx1T0EwLGyY3yw5x1WHltJbVQEZP6IJltDnCmOAcEDuK3/bczoOQO1qpmmEx1EnU47vUwU6rUzo90QSZIYGDKQgSEDSQxM5F/b/sXtP9/OtPhpTIqdRLB3cOtPchZittUSYtTV/exZEHl1rEuj7eO2k7MUK4G2k5xSC9YaR11G24VaJfHoZI+gs6qQf+Q/Sqg9HSY9A+Meha3vwM9PQ/mJeu+ny9ov3E/PdUMjkFaVIflH1Xv+eyb04Pu9OSzams79k3rWn5RP6w2cTgVXsWe0v1s6UiFlUmGIxeRpKRjSC7qNFbUgYx50r54Vi/4G9mIRaPu31n7dQ6N9sOggi5IWMb3H9NNeYH2u0VJGexbQlI3AImAnoATaCgoKrRJiFIFrYaW1/o7e02DtPCjNPKmOi6dKI02iufCUZCMtEWbSI8ugVau4su9Y9PLNsPZZjlz9DX9dlcXezFJCjF7MHRfDFUNCkFQ2/sj/gx9+fYI1hhT0+heZ8f1/SS5JRq/Scn15JcNG3EdCnxnEmGK6RDZpZPdAfk7KoyYmBE3D4KKqELa/D5FDIbF9ntk39L4BrUrL+/ve559b/8nru17n2THPMjlu8mmcfdegylpDtyBD3c9qlUQ/V0FkuFM6ovVxt8G2lJ6BWXZNUgvE+9MjtAVbycoC+PQKQmxZ3MtTvD/+cbE9bqy4z9gkvOidnCirxsdLjVGnQSrPAdnR6MKmT4SJiYkhLNiUztxx8Xh7SH/wDe1Q15GsEiFtcWm0I/y8qZTyyPOKo1Ff2GG3wjd3iKLr+AvEtmKR0ZbLsoBW2q9LqroLvLyqPB785UFCvEN4dPijp/OUzklaKobUyLLcqA2aLMs2RB8KBQUFhVbxlI7Uo/dl4v7IytP/orIMhUdbHNI40C7qwEBbvAf9Iv3Qa9Uw+AZ49BCJ8d1Yfu8YPrt9FD1DjfxnVSrTXt/FV9squSBqMv/zGcCTBQ5Q1RCgC+DhoQ+zOmEOfysuYXK/m4j3j+8SQTZQl4m1eXu0njYXwy/Pw+sDYd2LworwJLim1zX8NOMnll2+jDi/OP6y7i+8sPUF7LXt79TZlamy1dQrhgTo7yyIdFg9pCOuRkfVSqDtIrVAvD/xwT7ND1r5FyhOY3nf11hj7esu0A4fKFaz0jfUG36izEKEv7eQl1Xkio3GSBpyz4QEiqtsLN2ZWX+HT0gHZ7RFoB3lDLTVEsSqCsiSm7Dh63OFuEBzFUVWl9d5savKcwCa7wxZlS9WqlRqiixF3P/r/VTaK3nrwrcI1J9eqd25SEuBtkqSpLCGG5vapqCgoNAcft5atGqJwkpb/R3BCRCcKOQjp5uUtfDWcMhLanZIqcVWf6m0AwNtV0fNYd0C3Budy7eSJDE2IZgld4zmm3vHMKxbAK+uSea1NclIYf2YWZnDJN3/8eGUD5k7YC5BroDLp2vJJ1yuKFZdEJRlw+8vwhuDYMN86DUFIgaD9eRLfCRJIjEwkU8u+YTZfWfzxZEvuP3n20kpSXG3tz/LqbLW1tNogyiItNhrKSlx1hBoDeDt/BwpGe060goq8Tdo3XUgDSlJh0M/wOh7KAsfgyxDhbMTJyo1dBsD6RvrHXKirJoI598uFSIYbUqqM7J7IMO7BfD++rT63vi+oR2q0c4qsRDk4+VuzGMpwUA1ydYmgl+tXvjtH14hVpic+my0BryqxLm16DriG0ZSURIzf5zJsbJjvHLBK/QK6NUBZ3Xu0VKg/TLwoyRJF0iSZHTeJgArgFc6ZXYKCgpnPZIkEeyra5zRBiEfSd90+q3KsneL+9z9zQ5p1AnNXNxhgXaoUXxZD40NaHHc0NgAPpw9gv5RJrEUHtoHNQ6649Fgo6pABFpdrDDQ9WVv0QVDZS78/i/oPh7u2QzXfgzBPU9LYKhVaXlsxGP85/z/cLDoIFd9fxUTl07k8XWPs/TIUo6VHTsrA29ZlqmyiYY1nrgKIotKS4VsRKXykI6UdPY0uywux5GmurMCsO09IX8YeWddbUa5xWNFJG4cFKUInbaT3LJqwp0NpyhMFvdNZLRBaLWzSy38sDfHvdEnFKrLoKaJ/32ngawSc51sBKjzVt9VbqzrE1CPobcIP+yD39bJRrKMg/Ayn0DCQXDBVlg8A5bOhu8fhJ//DutfgfwkVvrouWXVLQB8esmnnB99foec07lIsxptWZY/lSSpAHge6A/IwEHgH7Isr+qk+SkoKJwDBPvqKGio0QYhH9n4KhxdA4OuP30vmO/MZBc1LR9xOGQqrDVNSEc6Zhl0fK9gHpyUUNeFsjVCjXryyqtxhPRFBXSrSXfvrCpoZLPVFfD2EnmbE9GXEKk1w4i5EDnEPUDvJ4KO08S0+GkMCxvGpuxN7MjbLQXHowAAIABJREFUwY4TO1idvhoQdoFz+s3h+sTrzxqnEou9FlmmUUbbVRBZXlYqmtWAkDkgKdIRILPYjK3WQWpBFRN6NfN3UV0OuxeJBlmmSEx6IQMpr24QaEOdTrum1kF+RTUR/t4iUN7+IcSe12x3xImJoSSGGXl3XSpXDo4SzXBcY6sKwO/0+0pnl1joE+Ghxi4V1n5ZjhB2HCvmor71BQjHNXHoNZEYDv6Eb0+hS1+SF8NftVtYeF08XntfpPj4ZvL9IsivNZNfayFfkknTavhJlhkaNJRXJ7xKkHfHJCTOVVq093MG1EpQraCgcEp0D/Zh27EiZFmun3GKHALGCLGc6Qy0s0stfLA+jaen9UGrbktPrSbIPyTum9FpV1TXIMsebc1tZrCbOyyjbfDS1Hc+aIUwk459WWVU+cbiJWuItB1z76wq7JqBtlZ8nRT49obRbzUe4Aq0ZRmayzq2k3CfcGb0msGMXjOQZZnjFcfZkbuD1cdW8+KOF/ns0Gc8NPQhpsRNaT7T2UWodMoYDA0CbVdBpLmsDLyd+mOVSui0/+TSkVqHzKVvbKiTgNQrhLRXQ+Y2OLYOkn8GWwWMvhcAk7d4j8stNe7xnjrtAdeQX2HFISOkI3uWCOnI9CY+105UKol7JvTg4S/3sPZQHpP7hbub1lTmn/ZA2+GQySq1cLFnMF2aAUCuOpytaUVM7B1MibWEIksRu7IyeHntLkZ5h1Nr3c+B1BRscTHY5e18IcXgOHAjtbIDooIBO6B13iBQ58+s7pfyl+GPnTUXrl2JtjSsUVBQUDglhnUL4Pu9OeSUVRPl77HUqVJB4iWw90uwW0DrzXd7slm4OZ3rR8TUz9Y0w+7jJXyzO4tdGaU8P70fI6J9xBIwuO8b4FpWrctoW069Wc3pJMSop6jKSqkVKuQoQiyp7p2V+e5mFF0Il9uCxV7b9AC9n+h2aasCXQvOECeJJEl0M3Wjm6kb1/S6hs3Zm5m/az6Pr3+cxYcW88bEN7p0Js5sFe+br66xNWP/KD9suRXIfj5uJwK9/58+o11YaaXCWsPVQ6LoEerLNUMiYPN/RTOs49ug1gqSGqKGwqWviHuEvzY0yGg30GlvOCrcQmL8NLDqVeGY07CFeQMuGxjBm78cZd73BxkRF0iAyw6vjXaXK/ef4PcjQtN9/YgYhnVrfoWtsNKKrcZRXzpSehz0/nQL1LI872m+WpyGQ/bQjAfBJiDBBtMqq3BIJtba+nG19DuqhIvQJ6/BJ3Eaof1mEGoIJdQ7lGDvYCW4PkWUQFtBQaHDcWmTd2WU1A+0Qei0dy6AtHWQOJWkHFEwl19hpU8rFsFlZjsz39uKRi1R45BZuiOTEXq1COiMkVCUCg5H/a6LNBFom4vEfRcJtMNMOmQZ0gqrKJJjuKTS44Khi0pHXB0NzbYWAm0QWe0OCLQbMiZqDKMiRvF96vd1PtwfTv6wywbbroy2j1fjr+UBUX7od1iolryp++vx9v/Ta7RdDWWmDYzgwj5hkL0Lfn4GgnoK6VL3C0TwrK9/we7XlEYbhHwkeTVHU48y7/sURnUP5Lza3SKAnfqfVldiNGoVb8wcwtXvbOLxZfv44LoEJI03JK8WCYVWePmnI+SWVVPjcFBmsfPezc0H2pkNHEcAKMngl8BwMvQvYKtxcHPibCqqfFi2rYwwn2DmzxjH44sO8pX1DjSyne2mQeyqmcHD5u+gqAjKyqHfbOh2XjOvqnAynOS6rIKCgkLb6R1hxFurZndGE4FB3HixZOt0H3EF2k0WTzZgU2ohtloHn9w2kin9wvntSAGOvINiZ98roMYC5VmNjiu1CAeUupbDVcLmqqsE2q7iydT8SpId0XhbckVQVWMTWcwuGGjrna4jllYD7c7LwqpVaq7qeRVvX/g2WRVZ3P7z7Zjt5k57/fZQ5Qq0dU0E2tF+GCQrFbUejhp6RTri2SIdcFvwzfgApv5beLbrG6+KuTPaNfV3OHXany/9HJNey39vHIK68LDY1/2CNs1pQLQfT17Sh7WH8vgh2Qz9Z8C+r4ROvAVsNQ6OF5u5/fzuXNArlGOFVc2OlWWZbcdEcsDVFRJgTWUaf9GZifbtRlXaQ2SlTeSzNdH08x/Hd7ffxPCoXvibQjnkJbrxZjhC0RlDQKOHYxtE9j9iYJvOU6HtNBtoS5L0usfjhxrsW9iBc1JQUDjH0KpVDIrxY/fxJgJtjRf0vBiSV1NlsXKsSHzB5FeIbBXJP4ksVROsTy7AqNcwJMafiYkhFFZaKUzbAyot9HI2Rmmo064uo9cvc3lJ855HRrtrSUdcvtspBZUclp3NfPIPuzPvXczaD9wZ7eYDbZf38+kriGwrIyNG8sakN0grS+PZLc92SVcS10pAU4F2tyADPlgp8wy0vQP+9NIRV0Y7ws+Z1XV5Vvu0XHTsq3dptOtntOWwAVhUPiSY9/D2rKHigrcoVayOtWMV5raxcQQYtGxOKYQRt4G9CvZ92eIxx4urqHXIxIf40CPEh/QiM7Uun2+Pz2tWiZnbP9nJS6uPMCjGn+5O3/DVaav4q97GAG0AC6d+hJYgftibw6TEUBbPHVWXVAg36dnEYACS7aGE+unBFCVWAUP7Cp92hdNKSxnt8R6PZzfYp1zyKCgotIuhsQEk5ZQ3HYj1ngZVBWTuX1/3nZJf7sxo7/sStrwtsrkeyLLMuuQCxiUEo1GruKBXCJIEVZn7hZVcaF8x0FOnXZEHH08jLHcd09Wb8Nc4n7OLSUfqZ7RdgfZBtyevb9vcSzoTrVqFRiW1rNGGMxJoA4yJHMP9g+9n1bFVvLfvPSw1ljMyj+ZwSUea0mjrNGqMaiulNZ6BtpLRzi2vRqdREeBqtFIXaLe84qNWSRh1mvoabeD9jRlstvfiUmMqI+Kcso2ioxDUo13zkiSJAdH+7M0qg6hhwkN+x0f1AuaGpOSLBEOPEF/iQ3yw1TjILrEIT/rX+lOzaxHvrUvl4lfXszm1iKcu7c2yu8+j3FbCs5uf5fENf6W/1cb/4q4l0GDk1jFx3Da2O+/dPKxet8owk56vq0dA1HB+tSSI/zV+zrbyTg27wumlpUBbauaxgoKCQrsZ1i2AGofMvqwmgoOEi0GlpTbpBwB8dRq3dKQ0U7Q+LqvfdS0lv5ITZdWMd1p6BfnqGBTtj6E0mWOqWCa+m4TDy+jOaBenwYLJUJzK7pjZ6KQa/At2iH3mIkByd9w7wwT7eiFJwhs4hyAcWh8oSHa3c+6C0hEQBZFt0mifIeYOmMvEmIm8vedtJnw5gac3Ps2WnC3UOpqZcyfiko4YmtBoA/hKVgpsHkVpeqdGuwtm5zuLnFILEX56t6NMVb7I9GuaaVrjgclbW891ZEtqES+uPkxZ2Ej8zeluGUpRCgQltHtuA6P8SM6roNpeC8Nvg4JDcGJvs+PTCkUL+fgQX7oHi+x5amEl1s1vsteaz8pfnuHdrW8Rm/A7l05azx7bfK7+fjoTlk7gm6PfcFvsJSw4kYcxqCcAT13ah39c3hdNA+emUJOOo1Z/8q//kVRbgFg9MzkdUaKGtfs8FVqntc6QAZIkBXk8DpQkKRBofMmtoKCg0AJDXAWRTclH9CaIv4DwnLX4e2voG2lyS0dcAXbxsXqHrEsWQed4D+/cyT18CHPksSzTxLEiM2WGbiIjdWIffDRFBHmzf+CX8DlUy1q80n8TB7o8tFVd41+bRq0iyEfn7KYpQXAvKDzi1pJ31UBbqxaBRVOcQemIC5Wk4vWJr7NgygKmdp/Kr8d/5c41dzJ52WTm75zPkeIjZ2xuVS1IRwD0cjX51R6fT+8Ap4tLZWdMr0uSW1bt1meDyGi3IhtxYfLW1hVF55VX88DnfxAX7MPUy64VA9I3CkmZpeTkAu1oP2odMgdzyiFmpNjYjAsSQGp+FWEmHb46DfEhPkjqSl7f8wjn5f3ITZHhPB1moiZ8LXnSavYUbKPQUkh3v+48PPRhvrr8Kx4JHinM+AK6tTgvVwOe/dni7zDUpHNbDyoZ7Q6hJdcRP2AX7mz2bo99f95LaAUFhZMi0MeLHiE+bEkt4t4JTXxx9Z5GUMpapoQWU2UM4UB2mZCLuDJLxWn1hq9LLiAh1Leei8m0CPHlEZ04FF2yiixVFAHZW2HhNNAZ4dYVEJJI8fZ9/KHqy3mpnoF215CNuAgz6SistKJRSUihiZC23iOj3fU02iB02s1ntJ1FaWcw0AYRbI8IH8GI8BE8Neopfs/8nRVpK1ictJiFBxfSM6An/xz7T/oFdZCForkY0n6DflfXc7GoK4b0auJiz1GLl2ylxK6l1GwTelvX6oulVHy2/4ScKKtmVHcPZ47K/DbLqkx6t3TkL0v3YrbV8PkdozAEezv9tDeCf6wYHNyz3XMbGC1+P/uzShk2XMi/rEXpLN2SzrXDY+qKh124OlsC2CnGN+59Mi2F3FhewXcVM3mpr43E/Qvxv2Epqp4XN37Bg6KYvG7OzRDWINAOM+oh/HKxGuCS2ymcVprNaMuyHCfLcrwsy92buMV35iQVFBTODS7qE8aW1KIm2wPX9LoMm6zman4j1Kgnv8LqdAxxXteXuDPa1fZath8rZnzP+pndbrWiYcMNl02ld7iRQ/YwsJaBMRzm/gwhomlMqdnOXq+hIktcltUlA+1QoyiINHlrkYITRcOMolRQ65ydAbseeq26eY22WitaiHchXbFOrWNK3BT+O+m//Hrdrzwz6hnKrGU8vu7xU3In+fVwXvOuObsWwrLbIO9Avc1Vthp0GlWjpX5AeI8DVehJL3LOq26FoOu8n51JrUMmr7xBRruqHYG2t5Zyix17rYMtaUXcfF43eoYZQa0RHSDTN7oz0CeR0Q730xNqFI2n0PmCdwBpRw/z9+8OcstH2+v9D5RlmbSCSuJDfMgoz+DW1bei0ZbwZm4xU2z9MDsuYtS0fxMYEI9q5eOi54AnjlpI/U1k81spZnQVWu/P8shoRwyEy9/oMit65xotuY4MbenWmZNUUFA4N5jcL5wah8xvh/Mb7duSJ/GTYwRDSlYR4SNcGCwF6e4BHtKRrWlFWGscjO/VILOblwRaA/h3o1+UHx9VjEIedTfc9lPd8ugfx0v4/UgBJ0JEC2JSf+2SgbYr82TUa+ouEMjYJGQjXbTLocFL3bzrCIgs7BnOaDdHgD6A63tfz0vjXyKrIouXdrx0Us9jranl9k928ujSPU27mxQ45SmHV9bbXGWtwbcZ2Ygr0DajJ8PpyuPOaJdAVRHk7j+p+Z6tFFVaqXHIokW6i/ZIR/RaKqprOFFaTa1Dpkewh6tI3DghOUvfBCpNq1ni5hgY7cc+Z+YY/1goO47BS80fmSVc/94W8sqFPK6w0kZ5dQ1GUx6zV83GYi1l4YkTdKs28Ez1LMYmBKPy0sO0V0XCYcP8+i+05h+io+WEJ1udU6jz/8q+OumIvqXhCqeBljTaO4GFwCvO23yP2ysdPjMFBYVzjiEx/oQadfx0MLduW355NY9/tZdbFmznR+1UvOzlDK5cD0BFnjO4DutfTzqyPrkQnUbF6PgGwXF+EoT0BpWKfpEmjlQHkDVqntBfAyn5FcxZuIMQo477rrtMtH///gFxnKH55hBnAldGWwTavcXGwuQuKxsBUcjXbEYbnG3Yu3YGdljYMG7rfxtfH/2a9Vnr2318qdmOQ4YNRwtZk9RER8BCZ6B95Md6m6ustRiacBxBlmHvEgDK8HH7K3uLmgcspfD7v+HDi/5UDWxc1n5RPpJoSmWrEnr1Nme0NZRb7GSWiBWCmEC3H7XLT5uD30BAnFiNOQkGRvuTWlApHGX8YjCYcxjZPZCPbx1JZrGZq/+3mbSCSjZlHEIXsYwlmX9BI6lZmJVNmFcPrqh+lr2V/ozr6fybj78ABl4PG193X7DtWwpb3oIRd4gmPa1g1GkweKkpqLCi16owNndxp3DaaCnQfhQoByzAx8DlsixPdN5a7kOqoKCg0AQqlcTFfcP4/UgBZRY7b/+WwsRXfmf5nmzuPD+elx6/FwLj6ZW1DABbYTogiS++knTxhQqsP1rAyO6BjXSO5B+q0xn2jxQuFwecmZsTZRZu+Wg7GpWKRXNHEmryhus+hYlPw8g7YdiczngL2owr02TUacG/G6idTgpdtBAShHSkWY02OAPtrpnR9uS+wfeR4J/Ac1ueo8JW0a5jS81CEqBWSfzfj4ew1ni8H7IsXHC0BuFAUeZuplRlrWncFbLGCt/dD788D32uIMl3LBlNSUdO7IWaajjwdbvP9WzlRJkFFQ7OX3UhbHvHbe3XZo22lgprTd2FS0ygR2Y8fKCQZ9nNosvkSTIg2g9ZFjKNGlM0wbX59A03Mq5nMPNnRVDlvYrpy6/m77tuRmv6g8vjr+XLiEuIt1SQMuJZShASsXEJHhfXk18Q8pAVj4r6lZWPQcxo0bmyDUiSVLdaFmbycGxR6DBa0mi/LsvyOOABIAb4RZKkpZIkDe602SkoKJxzTO0fjsVey/iXfuPln44wJiGYNY9cwN8u7YPJWwdDb8EvfwcxUh6O0kyhrw7uBbVWqDhBdqmFlPxKLujVIOCsKnQW9PQBIDHciFolcTCnnFKzjVs+2k55dQ0L54ygW5BTxxgzEi74K1z6cperuK8nHVFr3DrRLuih7UJIR2qaH3CWBNpatZbnxzxPoaWQ13a91q5jS8zCm/3O8fEcLzbzwJI/3HKa8hyRdR3qbE1xZFXdcRXVNeJ37aKyAD6dDnsWw/i/wrWfEBniT3pT0pH8Q+LxH5+1+1zPVk6UVRMj5aM15wuJR12hcNs12gBJJ8rRqCR30xtw6rRHi8ft9ND2ZGhMAGqVxMaUAgpUodjVdnIdX3Ll8it5fOtNOPx/Qo031bmXUZPxJM+P+RtBfyyB6BEE9xJOJfEhPkR6ymN8Q+Di5yBjIyyYIvTa098Sc24jrtUy171Cx9Lqb0aW5TRJkr4DvIGbgV7Ano6emIKCwrnJ6PggIv30GPVa/jdrKGMTGkghel8Ga59lvGo/moos8IuBQGf9dXEa6wtE0NIo0HYFG85AW69V0zPUl50ZxWxJKyKjyMzC20bQP8qvI0/vtOGWjjiXrUMShcSlC0tHvFsqhgQRaOcntft5F2w8xu7jJbx1Y+ddDA0IGcDNfW7mk6RPOD/qfCbGTmzTca6M9rQBEYQadTy/IomZ72/hg9nDCXXJRnpPg5Q1yHuWIKm9QHYwoCgDOVy0xibvICyZKS4cr1kg2ngD3YJ8WLX/hBjj5StaZufuB1uFWMnJ2e1c1elzWt+LrkKtQ+afK5II9PGiylpDosb5XuQdOImMtgh/DmaXER3gjVrVILMbNw6O/nxShZAu/AxaRsQF8MuhfEJizSyOCqeg8BuGhQ/n+t7Xc2HshVBjYs7CHQQGe6E69jsUp8KEJ4kL8kGrlhoVfAMw5BbYswQyt8GkZ9rtiuK6iFf02Z1Ds4G2JEnxwExgOpAJfAH8S5blrtVOS0FB4axCq1bx62MT8FKrUDX8cgMISkA2RTO+9ADe5hyIGg2B3cW+kmOsTzYQ4acnIbRBS2RXoB3mtmXrF+nH17uzkCR4+8ahjOnRdYPUhtTLaAMEOwsiu7B0pMWGNSDkDieR0d6SVsTGo4XIstypS933D7mfHXk7eHLDkyy+dDE9A1oPaMosIqPtb9AyZ2x3ogMMPPj5H1z19ma+HbaPUICQRLYbLmBk5kciOAaeAsgAFn0GmdtFID1nZb0mInFBBkrMdsrMdvwMWqHTTt8kdk76Oyy9Gf5YDFNeOK3vQ1fA4ZD52zf7WLpTyG2iA7yZpc8HO1Ca4XYIaYfrCMCh3Ir6FoEuek2FdS9DzKhTmvek3sG8sv1/zC//hVhZ5rM+d9N/5L31xqy4IAd57+fw7UEwBEPf6eg1ar64c3Sd5V89VCq4+n3YvwzGPtTuObmcWpSMdufQkkY7BbgOWA1sAWKBeyRJelSSpEc7Y3IKCgrnJnqtuukgG0CSkHpM5DzVQYzWPJHRNkWDSoOjKI2NKYXOdusNjs9PEoGHb1jdpsGxYnn9n9P7c+mAiI46nQ4h2NcLHy+1274spJe47+KBdrMNa8ApHSmv09q3leIqGxZ7bb1Ofp2BXqPnzYlvYtAauP+X+9mcvblpJxEPSpwZ7QCD0NRf3DeMpXedh63Wwa8bN1HjZWJHgZobUyYw0Tqf0rv+oOTufUyyvsLuHvdB9m6Robzzt0ad+uKckqdNqc7GRd7+wvYRRAa211TY9yXUNrbP7Iq0+FnxQJZlnl+RxNKdWdw7oQe9w41klVjo7cpoA6T9Lu7b+Pdhcq4U2Woc9QshXYQkwlNZEHby3tLF1cX8XvZ/6ELWQnk/lmbn0r+2wedn75dI396JqixTSNmufg80IgAe1i1QeKY3RUAcjH/spAo13dIRJaPdGbQUaD8PfAs4AF/A6HFr4hJLQUFB4TTRYyImqtBQA/4xQn/o343S7CNUVNfU6wZZR36SWD73CMCvGx7Njw+O46bRLXdL64po1CpWPHg+s8+LExtiRouLjoiuWyZj0Kqx18rYa5sJpPV+gCykDu2gpEpkiU+UOxdUj63vNDu7MJ8w/jvpvwDctfYu5v48l70FzbfSLjXb0aolDB6NZwZE+7H8vrH00Z5gX3UY93y2G0ml4ZgcQXpNINm1/qTJkRQMfRAeOwq3/wKmyEbPPTYhmN7hRh75cg8bjxa6CyL9YkVDoCE3C63y0Z9P75vQAWxNK2LoP9fw1c5M98bCpjsnvvLzERZuTmfuuO48PiWR12cOxkutojvZEOBc7crYDN6BbQ48/bzd42KbCrRPkYzyDG5aeRPJZQcxVd5ERc4sNJIeSj3O98gqWH4PxJ0Pd2+CmZ9BwkWnfS4NcRdDKhntzqClYshnZVl+rqkbwo1EQUFBoWPoPgGHqymtn7s7myFzAzPU6xkb32CpV5ab1KbqNGr6RZ4dmuym6B7sg7crYPOLgkcOQGjvMzupFnDNtVmdtt75u2infKTIFWg7Ld344SFYM++k5ngy9A/uzw9X/cCTI58ktTSVm1bexAO/PsDRkqONxpZZROfGhisuUf7eDNDlUWGMp9Rs5/npQo99vNhMTqm4gIj08waNV7ONQ3x0GpbcMZruwT7c/ukOrFrn++nKuiZcJFZ0unhR5J7MUuYu3IHZVsueTKfdY9o6eGsYHN9ab+z/fk/h7d9SuWFkLM9M64MkSfQON7Hs7tHEOrKgx0Txuaq1tqtQ2OTtVs6e7kB7fdZ6Zq2cRaWtko+mfMTl8dMBCYshCsqcgfaxDbB0NkQMghs+B23nZZddsrsmZSkKp52WMtot0SbpiCRJ6ZIk7ZckaY8kSTud2wZLkrTVtU2SpJHO7ZIkSW9KkpQiSdI+z6Y4kiTNliTpqPM2+yTnrKCgcLbgE8QJbyGV2FxkEF3MLnqW41IE87Xv4vfZVDi+zT0+6TuwlosvLYUzRl2g3Wwb9vYH2vZaR10XvdyyanFRVX7C7SPcSXipvZjVZxarrl7FA0MeYGfuTmZ8P4M3d79Zb1xJlR1/7yayqpYSVFX5nH/eWLb87UKuHBwFQKZnoO3ferAV6OPFq9cNptruINfmHO9qna3WCJ/loz8J15IuyKET5cxesJ0gXx09Q31Jya8UO1J/EfcZm+vGfrI5nZdWH2H64Ej+78r+9S5eBvrbUFnLRO1C2ACxsR2yKpPH7ygm4NQD7QpbBeuz1jNv8zzu++U+wg3hLL50MYNCBjF9cCTBvl54BXUTevKcP+DzG4T8Y9Yy0BlP+fXbQ58IE9ufvpBBMf6d+rp/Vk420G5PNcpEWZYHy7I83PnzS8BzsiwPBv7h/BngEqCn83Yn8A6AJEmBwDxgFDASmCdJUsBJzltBQeEsISdkHDZZze3f5XHl/zaxKs+fqVX/4KeezwqbtAWTYdlckQn77n6IGg4DZ57paf+p8da2MdBuRxt2l4sHwIlSC1groMYC5VnicSdj0Bq4c+CdrJ6xmslxk/nowEccLz/unq/FVqfPrkehyH6rQhIJMerw9lITYtRxvMhMTlk1Oo2KQJ9m9LgN6BNhJNhXR4bZGSx6FAAz5CZw1AitdhcjtaCSmz/ahsFLzWe3j2JobACpBc5A21XUmb0LgHXJBcz7/iAX9w3jlWsHNXYFcTm4hPRyn79HfUZr+Hpp6lRmJ5PRttZaWZe5jld2vML1K65n3BfjuO+X+/gh9Qdm9ZnFZ9M+I9YkVuP6RJjY+czFGELioCgNFs8Q9SQ3fws+Z6YjraLP7jxONtBuuRqk9WNNzsd+gLOSg+nAp7JgK+AvSVIEMAVYI8tysSzLJcAaYOopvL6CgsJZQK9r5rH9oq/49O6JdAsycN+S3ThkFWHj58ADu2D843B4BXx6hcjkXbtQLLsrnDFcuuRmnUdc3s/tyGgXO2Uj4JSOuGzcQHTKPEP46fx4YsQTaCQNCw8urNte6nIEaUiBR2DoJDbQUCcdifT3brOjiiRJjEsIIrnMKTEJ9SjYC0kUF517PhPZ/y5CZrGZmz4Uq1CLbx9FTKCBHqE+FFbaKC0tFlleEMWgwObUQrzUKt66cQhadROhiuv9DE4Ely1iO6QjKpWEUafBpNc0/ftqAWutldt+uo37f72fzw9/jkFj4K6Bd/HR5I/YfMNmnhz5JDp1E/pn/1iwV4GkgluWCzmYwjlPs4G2JEkVkiSVN3GrABpXaTSNDPwsSdIuSZLudG57GHhZkqRMRCv3vzm3RyFsBF1kObc1t11BQeEcxs/kx7jzL2R4XCDv3jQMnUaNv0HLgCg/0PkK/9j7d4iujtd/JoomFc4ork6dbdVoOxwyL64+XCedaIqiKisgalxzy6uhMte9s5PlIw0JMYQwPWE6y1OWU2AWUo1SczPSkcIjoNaJLp9OPAPtCL/2ZRjHJgSzztqTqohRbC0P5LXDqoqoAAAgAElEQVQ1ye4i1CE3ieJgV/B6hskrr2bWh9sw22pZNHdUnTbYpRXOT1oPci30nCxcVMpzyC+3EmrSodM0rVen8KiwQDRFQpgz0G6nI4/JW9u040gLyLLMvM3z2Fewj+fHPM/mGzfz8dSPuXfwvYyMGIle08LvMfY80Xzrpm9OqRGOwtlFS8WQRlmWTU3cjLIst7UF0ThZlociZCH3SZI0HrgHeESW5RjgEeCjUz4LQJKkO52a750FBV1Tm6agoHBy9AozsuDWEbx8TYMlZP9Y0dUxbuyZm5xCHQZnC/G2arQzis2883sqy/dkN/ucJVVCOtI9yMeZ0c5z7yw4fOqTPkVu7XcrtXIti5IWAU7pSFMSkMKjovmJR6FjTKCBE2UWjheb63f/awPn9wxhg2Mgr0W9zt2f7+ONX45y32e7Rcv3/leDxltktUFIdRxts9LrCB74/A+KKq18cttI+kSY6ra7Au6a1I2i+c7oe8SO7N3kllUT3lJDlcIjwgZRkkSg3e9q6Hlxu+bVM9SXIbFt1ykXWYp4ZtMz/Jj2I/cPvp+rel7VdOa6OWJHieRAxMB2zVPh7OZkpSNtQpblbOd9PsIqcCQwG/jGOeQr5zaAbESrdxfRzm3NbW/4Wu/LsjxcluXhISFd12dWQUHh5DivRxAX9227BlOh8zG05jqicwZZzkDb1a48Ja+y2ecsdma0+0SaRDFkhTPQNkZAwZmTjriINcUyNW4qXxz5gpyKAqrtjnrWcXUUHKknGwGR0XbIUFhpI7KdGe1wZ9OmDzceo9peyz0TevBzUh53fLoLi8oX+lwO+78ShcKv9IIN80/lNE+anenFbD9WzGNTEhncoPguOsCAl0aFMW8bRA4WGV+VBrJ3kVdeXWdD1yQFR9xNnDRecO3HED6gXXNbcOsInr+if5vGLk9ZzmXfXsbKtJXM7T+XOwfe2fpBCgp0YKAtSZKPJElG12NgMnAAocm+wDlsEuDyR/oeuMXpPjIaKJNl+QTwEzBZkqQAZxHkZOc2BQUFBYUuhEs6YrY101hGpRbBdrUohix1BdoFzQTah1YweucjgEzfCBOV1hqsZSdApRUd+9qS0a6xdrjE5O5Bd2OttfL+3g8BGhdD2quF24QrMHTiWYTX3ow2wLgE0en06Wl9eWJqb16aMZANRwuY/fF2LP1niguapbdArZXapB947oeDpDX3XncQ765LJcCg5foRjaVdapVEnyA1EZVJ0G0saL1FYWNrgba5GCpOnFIzGRBa92YbZzmpsFUwb/M8/r7p7/QJ6sM307/h4WEPd2qHUoWzm7ZKQE6GMOBb54dRAyyRZXm1JEmVwBuSJGmAaoTDCMBK4FJER0ozMAdAluViSZL+CexwjnteluXiDpy3goKCgsJJ4Mpot9jxzxAIVaKzYbFTFpKSX4nDITcOenYtpGfRr/TUX1enpbUW56DzDROe6Unfgd0iArTm2PYu/Pp/ohGMd8fYmXX3685l8Zfx/bFlSJo4/BsW1xWnguwQUgcPPAPtiJMItO8YH0+PUF9uGiXcLa4bEYPeS80jX+7hhjVGvg7ug9rgjy18KJrt/2N5xj5CjDrunZDQ/pM8CZLzKlh7KJ+HLuxZJytqyEzdZtGYyiX7iBqGvP8rzDY74X7NyDLyDor7sLZlo9uC2W6mxFpCsaVY3FcXk1KSwtdHv6bSXsmdA+/k3kH3om7G41xBoTk6LNCWZTkNaGRqK8vyRmBYE9tl4L5mnmsBsOB0z1FBQUFB4fThrW3FdQSE5KNCFDS6MtpmWy0nyquJ8gw2a2x1nsrD9Nl1xYI15blgDBPuGshC+9yS5jVrB9TaRFY7dtTJn1wr3D3oblak/YgufDlG/aT6O+scR+pntEONOrw0Kmw1DqLa4KHdkCh/b25u0PX0ikGR6DUq7l/yB1eF/IvLe3Tj4I5feB2Z8zVJ5JW1T15xKny2NQO9VsXsMXFND6ixMa10CbsdCfSNGoMeIGo40s4F9JKyCDMNbfq4Uwy0ZVlmfdZ6FhxYQEppCpYaC3ZH47b1EhKT4yYzt/9c+gT1aeKZFBRapyMz2goKCgoKfyK8W7P3AzCGw4l9gFujDXA0r6J+oJ29S1ihAf01mXWFcaqqfIhMcMswCpMbBdqV1hp8dc6vtxPOdukFhzs00I4xxnBZ1J18L7/DF8deYWzCi6gklXuOSKIY0gOVSiImwJvUgioi/Nqf0W6Oyf3C+WD2cO5atJMXVh0mMSQBu9bIVO1hlru6a3YCWSUW4oN9m/cH37MYky2P12tu5aliM7FBGrTdxqAFxqkOEGa6runj8vaDIbiRnZ/dYSezPBO9Ro+/zh+Dtr6jSI2jhrUZa/lg/wcklyQT5RvFpd0vxaA1YPIyEagPJFAfSIA+gAB9AEH6oEbPoaDQXpRAW0FBQUHhtKDTqJCkVqQjxghI/hlkmRKzvS6jm5JfyYREj8Dp2DpAolQy0UtO///2zjs8rupY4L9Rr5ZsybZc5N4N2GAwYIrpEEqA0PLoaSS09EDgBVIhBUiFkJBCSB4lJPQSWgimNxMDBuNu427LtixZXda8P+astJYlW7Il7Wp3ft+33+49t+iM7r3nzJkzZ6bZXzejdgPkzbDwaJIKa9+Dvc9sPu3x91Zz5b3/5fErD2Vy4TYoD8lkeiAU4F75J/OPDYt4kaf4xguNfP+Q79Mno48p2oXD2nRxGdYvh7Kt9eRmdm13PHNcf1686kjqG5sY2jcH7pvJAQvf4vdb2g+l2NVsrq6nb247Maq3NcJLP6d6wH68+PFkCub8mlnr7kdRBgwbxsGb36Iwp5044Os+MF/u4Cf9+prXuXPunfx3/X+paWyRLys1i8KsQvpm9kVRlpQvob6pnpEFI7nh0Bv4xMhPkJ7SuRjajtNZXNF2HMdxugQRISc9ddcW7YYqqKukvLqe0r7ZlFc3tKTijrBkFgyawrtr05nYuJSMtBQG5qaS1VAOeSWQlgljjoF3/gqHfROyLCrJtQ++jyosXLeVybWLQsVSeyQUYHl1A/VlR3HVcftw25xfcdajZ3HuxHM5pGweo4vHtZlS+ZwDhrH/iH7dUp/tsv+NOoL+Hz1OWsUy4DBUlRWbahhW1H0W2/KahvYt9WvmwJYV1JxyFdn8hRfWLeKUUadQml/Ki/+9m0eKt/DEs8eSl55Hdlp21CeLJtZQkVYPj5xOkzaxZMsSBuQM4FNjP8Wkokk0NjWyuXYz5XXlbK7dzOa6zWxr2saBEw5k2sBpHD70cPe1dnoMV7Qdx3GcLiM7I7X98H5gFm2ArevYVGXpyovyMlkYrWjXV8HKt9CDLuO9lSs4TGdDQw0T8mtJKdcWl4Ejr4E7joDXb6fp8Kv45j/epT4kbVm9pQaqg9vIqCN6xKJdXlNPRloqn9v7IqYP2o/vv/Z9bn77Zm7OhoG6nBmvXM+MITM4eNDBFGRaTPET9irp9noB1Iw4hI8z0jm69mEat53HWwtW8Ke/3cV5F3yRIyd2T9jM8uqGHReGRljyAptSUrh05cOk5SxlfOrnuPGwrwJQ8C5cvfp6nj/wQqpz+lLTWNPyqdlEalMTw3JKkD7DqN9Wz1njzuKs8Wd1Lqa14/QQrmg7juM4XUZ2Rmr7CWvALNoAlWsor7ZYygP7ZPL4e2tQVQubtvw1aGqguvRQ5m57hZTUJlj/IQcNbIRy2JTaj34Ag/eFCSfDa7dxj57Ay4vKuPH0vfnJv+ZZzO2Gd6HPUEtotPjfUFsBWX3ar9seUl7VQN+cdESEffrvwwOffIA1q97klftO49VRB/Pc8ud4aNFDZKVm8Y39v8E548/Z4zBxG2s28ujiR3m/7P0d9qkqW+q3sLZqLau2rqJpyCBgAQ/fO4OxVdVMG7CZO/6zkLk102loaqChqYH6bfWkpqRSlFXExKKJHDL4kN2y/jY1KeXV9Tso2mur1jJnwxzmLH2Q/5SWsqlyBWP0Sqo2tsQYf0Mnck5dI1O1EA76zvYX/uAhmP0UfPJ6i73tOHGOK9qO4zhOl5GdvitFO1i0K9eyubof+wwtYMyAPLbUNLBha525OyydBSnplBXuy0e6wo5fO5ezxhXCfPjnR/VcEglIccQ18NHjVPznFxw94XL+Z3opd726zLJIbnkXBk2B/hPs2LKFMHSHoFddRnlNPYXZ2y/8G1RVzpmVVZw57Vs0Dt2fuWVz+d17v+OGN27glVWv8NPDf7pbC+6qG6q5bc5t3PPRPTQ2NTK8z/A2/Y37ZPRhctFkTh51MjWVhZS/+QtqstYzNzOLF/sWAnP44P13yUjNICMlg/TUdBqaGqisrwRgcO5gjhp2FKMKR7H/wP0ZWTCy3To1aROrt64mLSWN+sYUmqhH0zZw//z3eHvd28xZP4c1VWsAyG5S9s4s5sdH/5wn38rib4uXN4d4XFaVzuKMCYxb+AxMuwhyB0B6cINZ94G5AkXuqePEOa5oO47jOF1GdkYa1Tt1HTGLtlasYXN1Pn1zMhg7IB+A219YzNUnTCBr6SwonU5ZfRof6wAa03JJWzeX4hDO7Z4P6jhlSw2DCrKpL57Ea+mHcXHDvzj7EzcgIpQUZLG5fBNsWmQLJSNK2YaPLMReQ/UOESu6gvLqBgpau0qUBZeV4nGkpaQxdcBUbj/6du6edzc3vX0TX3jmC9x29G0UZnU8xvcba97ge69+j5VbV3LG2DO4cNKFjCoctcvzPlxdwTlPpPPQ1Lf55Yb9+VrZvUyvfY3PFd3NA1ccuZ11vW5bHS+tfIn75t/HPxf8k9ptFq1kbN+xjC4YTZ+MPuRn5Dd/qhqq+OeCf/Jx5cfN18ifAH9bCayEAdkDmDpgKhdOupB9G5oY99CVpJ97CwzcjwUDPqausYlV5TWU9sthfUUtiwsPZtzaP8EvQzjCrALIGwjVGy0eeXrnwyE6TixwRdtxHMfpMrLTU6jdmUU7Mx8y8mjcspr6xjEU5mRw0Kh+nLHfUO58ZRlvzVvMY9XvIUdcw+aqepQU6vqNJ23Nu2bZBNZrATc8MY9ff3pffvncAp7e+kmey3yFnHdvh+N+xODCLNavmg+oWbQLh0NqpoX6e/MOi1Qy9jiY9hlLlNJFC+PKqxsYUdzKOr1hPuT2t0Q9ARHh/EnnMyhvEFfNuooLn7qQ246+jdL8HbMnRlNRX8HP3/45Dyx8gOF9hnPn8Xeyf8n+Ha5fSUEWleTw4tAv8erCRexfegJ9l/2bPmte5YUFe3FkVNSXzNRMjhl+DMcMP4YmbWJV5SpeXPUiz3/8PPM2zaOyvpKKugoatSUL6JT+U7hg0gWkpaSxdGM5f3hpAecfOIGL9z2G0vzSFkX+ue9bqvXhMwAYPSAPsMRFgwuzWV9Zx7ypF/GJY0+0DJBb18HW9bB1rX1PPr3DMjtOrHFF23Ecx+kycjLSWF+5i1jN+SU0lK8GoG9OOmmpKdxy9hTO2G8IT//zDgTlF4sHkaHmvtA44kh48xYoXwFZhVx2+CRufmYBVXWNzFqwgbOmHYSknA1v/hEOvoKSPtmU1r2JpqciQ6ZBappZQd/6g2VonHo+LHoWFjxlPtz7XQj7XQB9Bu+R7OU19RRkF2xfWLYQise1efzRw47md8f+jq+98DXOfeJcfnzYjzlk8CHbWZabtImymjLeWf8ON715E2W1ZXxmr89w2ZTLyErrnFW3b046GWkpzFtTwaaqeppGHo6u6cOZqbP51XMLOWJc/5a/3VgHTdsgI4cUSaG0Tynn9TmP8yae13w9VaWmsYbK+kqatIlBeYOa981asIHbNr3JicMPZlifVlFVls6CIdNs0AWM6W+K9uINW5k8uA/bmpT+hQUwdoecd47T63BF23Ecx+kydrkYEiB/EFphvrqFOS0+zTPGFDN90gbq383hD0v6Ur3Q3C7SjrwaalbA+/dD/wlcfuQY6hqb+M3zixjWL4frTpkEVVfD+/+Al37OkKIvMTP1BWpGHENOxEWk/3hYNxcO+Soc+33Y1gDzn4S374QXboRZP4FxJ8D+n7WwgbuxSHFrbSP5WVGuI6rmOjLptHbPOaDkAO4+8W6u+PcVXPrcpUwqmsTYwrGsrVrL6qrVrK1a25y1cFzfcfz6qF8zuXhyp+sGZkkv6ZPFq4s3AjByYD9k/IkcO+9JvrqijFkLNrTEMn/4MvOH/uKLkNZ2whkL55jTpo95JOvnDlFHasph9X8tJGOgb24G/XIzWLR+K+sq6gCa46Y7Tm/HFW3HcRyny9jlYkiA/BJSyl4H2CFrYNryF2HUoTx23JFc/8hc1lfUkZOVAaf/zvx0c/ohInz92HGMHZjP5MF9LAtk5ijY9zyYfSf7Ti2mv1Tw0cizaV4yN/VcyO4LR11n26npMOlU+2xaArPvgv/+nynfp91ux3eCpialqn7b9olnqsqgZvMOqddbM7zPcP5xyj94bMlj3DPvHl5d/SqD8gYxuWgyxww/hsG5gxmaP5QDSw4kPXXPEqyUFGTx5tJNAIzunweTTiXzvfs4JX8xv/p3MTMjVu1Vs2HzUnO1mXFFp//OlhobHBS0WhzK8ldsVmHUzO2Kx/TPY/GGrRaWEVe0ncTBFW3HcRyny8jZVRxtgPwSMqrXA0rfaIvnllWwcRFM+wyj++dx9+cPatknqXDSzS2bInxySitXj8O/BXPuZdTsG1mlRczPn96iaI85xj5t0W+UWbmPuAZuKIFNSzsqbjORBaB5mVH+3mUL7Lt47C7Pz0rLsnjQ487q9N/uDJFU9hlpKQzpmw19joKMPC4bOJdjF47nxYVlzByZD+XL7X8+66ewz9mdXjy6ucoU7R0s2ktmQVo2DD1gu+LRA3J58v21/OLZBRTmpDOqf+7uC+k4cURKrCvgOI7jJA7Zu8oMCZA/iNSmOvpQtZ3riKVdZwdrZ4cpHAbTLkJQ/t54JKu3NPDh6gp+8NiHNDW1k847mvQsyCmCqg2d/tNVdbYocDuLdnPEkZ1btHuSQQWmaI8syiU1RUzmcScwZuMsSvuk86vnFqCbFpvV+fBvWYSWF2/q9N8pr6knLzON9NRWasbSWbYIMm375DKj+1uIx/nrKvnlOVO3d8FxnF6MK9qO4zhOl5GbmUZdYxMVtQ3tHxRC/A2U8u0tnktmmaI7YPd8kAGY+W3Y93weTj+BtVtquH3WYv78ylLWVOxigWaEvAHbKdqry2s6dNrWoGjnRSvaGxZAei4UDO1w9bubiEvG6AFRFuNJpyLVZVw/ZQvvfFzOvPdnW/mEE2H0UbDslU7/nTazQlautRCLbQykJg6yREJfOXpsi5+44yQArmg7juM4XcZRE0xJuvv1j9s/KCStGZlR0WLxVIWlL8KIwyBlD7qmvP5w6m1kFQxg6cZq/j1vHQDLy6o6dn5ufwshB7y2eCMzfvI8C9ZV7vK0Zot2RrRFe4G5jexh9seuJGLRHlWc11I45hhIz+GoptcYXJDF+3PetPKiMTBwL7PMN9Z36u+UV9dzUPoi+ODhlsKlL9r3yB0V7Rmji3jg0hl8+ahdu9k4Tm/CFW3HcRyny9hrSAGHjS3mTy8vpbY9X+1g0R6RWdFStnERVK7efbeRVpQUZPPywg3NbizLNlZ37MTc/s0W7beW2aLBpR1Q0re26TqyoN3QfrFiUGE2AGMGRCnaGTkw9jhS5z/Op/YtIWvLErSgFDJyYeBkaGps8Tdvgzkrypnx43+zobKuuWxrdTXfrroJHrnCwgSCzVhk94WSfXa4hogwbXhfUlLiZ1DiOF2BK9qO4zhOl3LpEaMp21rHA++sbPuAPFO0x6eubilb8oJ9t2Ht3B0GF2TRpC2xo5dv7KBFO8p15MPVNhAo21rX9rFLX4T5TwFQVRdZDBkU7foq2LIC+seXoj1laAE3nbkPJ+xVsv2OSafC1nXMyFjMKFnF1vyQaTJk42TdB+1e8/F3V7N6Sy3vrypvLpu55TGKt62H+kpzF1E1/+w9nbFwnF6GP+2O4zhOl3LwqCKmlBby+1lLaNzWtOMBGTm8lnEwJ9U+DiGeNktnQUGpRQDpAkqCi8QJe5UwvF8OyzqqaOf2h/qtUF/NB2u2AGxnqW1GFR77Cjz3XaDFdSQnEnWkcq19F+w822NPIyKctX8pWemtsmGOPQ7Sspi0+XlGyxrWpod6F42B1AyLQd4OLy8qA2DJhvA/rqvk3Pr7WZ85wrZXvGkhFLes6LIZC8fpLbii7TiO43QpIsJlR4zm403VPDl3bZvH/EIuII1t8Nz3zLVg6Utmze4if+bBwUXixL0HMbwol+WdcR0BKjatYcUmWwjZpqK9bq4pj1WmZO6wGLIuuMVk9tlNCXqYzDwYcwwF8/9JjtSxqClkeUxNg/4T2rVob6is46O15sO+JLjYNL39F/pRwbPjrrfFrSvfaokoM/KI7pbEceIKV7Qdx3GcLufYiQMZ3T+X219YjOqOofU+rC3mtQH/A+/dBzePg9ryLrV2nrT3IH5+9hQOHVPMiCKzaLdVjx0I8aKXL1vWXNSmoh1Z5FezCZqadgzvVxcWUIY0472CSaci9Vbvd6qjIn+U7N2uRfvVxTbQyM9KY2mwaG9b/gZLmwZSM2Bfi5e94k3zz+4zBIpGd68MjhNnuKLtOI7jdDkpKcKXZo5m3poKXliwfVzq9ZW1bK1rZP64S2Dy6TD+BDjxZvMT7iJyM9P41H5DERGGF+dS29DUnN575yeaRXvN6uUATCjJZ0NrH21V+DAo2toENZtbXEciLhm1waKd1Uss2gDjjjc3EeClzX1bygdOhq3rYOuO8cVfXbSRgux0jpk4kCVlW61w/YfM12EWI33oAbBxISx+vktnLBynt+CKtuM4jtMtnDp1CIMLsrj9hcXblT/7oYXcO3TycDjrL3DqbTD9CzskMekqRhTlAHTMTzso2pvXr2ZAfiYTB/XZ0aK97gOLkjL8ENuuLmNr3TZyM1Jbomb0Rot2VgGMPoratAI+2prdsgh0YIhrvn579xFV5eVFZRw8qogxA/JYV1FHVdVW0rYsZb4OtayfpdPt4LoK9892khJXtB3HcZxuISMthc8fNoo3l25i9vJNzeVPf7CO4UU5jB/YM0roiCJLztKhyCNB0a7ZvIbJg/vQPz+TDZV127udfPgISApMu9i2qzdSVde4fWi/ZkW7F1m0AU66hQVH/xEQ5gff6/YijyzfWM2q8hoOGVvMyGL7H69Z9C6iTSxoKrWENYP3s/8VdFlEGcfpTbii7TiO43Qbn55eSt+c9GardkVtA68tLuP4ySVID7kRDCrIIj1VOhZLOz0LzewD1WVMHlxA/7xM6hqbqAyuIc1uI8MPsUWCAFVlbK1v3D4rZPNiyF5k0QYoGMqQvU0hnrcmyJBbbP7VH7++3aGRaCOHjilmVH9TtCs+fg+Aj7TUXEcy80xRLx4PfQb1kBCOEz+k7foQx3Ecx9k9cjLSuHjGSH7x3ALmr63ko7UVNGxTjp88sMfqkJaaQmnfnA5ZtFWVTRRQRDlDSwubo4lsqKyjT1Y6rJ9nyVsO/KIpoADVZVTVlbSyaFdAama3ucN0J0V5mfTPz2yxaAOM/wTMucfig2eYUv3KojKGFGYzoiiHusYmRKBp7Ydsk3SW60AKs0MK9tN+a77sjpOEuEXbcRzH6VYumjGcnIxULvnb2/zm+UX0z89k39K+uz6xCxlelMOysl1btH/29HwW1+QwuaCOoycOoH++KcrNftofPgwITDjFQtcBVEVcR6JiU9dV9j5rdhSTB/fhP/PXs7rcQhwy6VRoqIaFzwKwrUl5bclGZowuQkTISk9lcEE22eUL2Jg9nEbSKIgo2iV7w6ApMZLEcWKLK9qO4zhOt1KYk8Evz5lKSZ8slpVVceqUwT2eattiae88xN9LCzdw+wuLyek7iJHZNYhIG4r2I+Y2kj/QrNXBzaSqblsr15HerWh/+xMTqGto4rN/eYuK2gYYNgNyik1+LGtmeXUDh44tbj5nVP9ciqoW81ZVCfsOKyQt1VUMx3HXEcdxHKfbOW5yCcdNLqG2YRsZMVDARhTlUFW/jbKt9c3KczTbmpQbnphHab9sJo4ZhXxovsb986IU7fUfWTrxE29uOTGnCKrKqKpvYzFkbwrt14oJJX24/fxpXHznm1z38Fx+9el9YeLJ8N4/oKGGlxeVkU81h+cshzmzoK6SfQrGU7JiA0tTj+XWc/eLtQiOExe4ou04juP0GDuk/u4hhhe3RB5pS9F+YPZKPlpbya3n7kvqpjctEc22Bgqy00lPFYulHXEbmXhKy4k5RW1HHamt6H0RR1px6NhiPnvoSP708lKuOmECQyadBrP/An86jk+vX8mlWZvgnpbjr8iyJDfHH3kUQ0JmTsdJdnxex3Ecx0l4IiH+2oo8UlXXyM3PzGe/YYWctPeg5hB/VG8kJUUozrMQf3zwMAw7GPJLWk7OLQ5xtFtHHendriMRLpoxAoC/vrYMRhwGIw6jKSWd5xv35rkhl8Gn74ErZsO595OFudeM3Wt6zOrrOPGGK9qO4zhOwjO0bzapKdJm5JE7XlzC+so6/vekSRZyMKJob10PQP/8TNI2LYAN82DyadufnFOMVm2ktqGJnIzoxZAVCaFoDynM5vjJA7n3jY+p3gZc/DivH3U/36j/IimHfRUmnATFY2Dc8cgls+DMP0Pf4bGutuPEDa5oO47jOAlPemoKQ/tm72DRXldRyx0vLuGkfQYxbXiIhJJnLhBsXgaYn/bkzf/B3EY+uf2Fc4ugugzQNizavdt1JMJnDxlJRW0jD76zCrD42WkpwvSRRdsf2G8k7HVGDGroOPGLK9qO4zhOUhCJPBLNLc/MZ1uTcvXxE1oKB062BC2Pfw02LKB/fiYH1b4Eww7aMelKTjGyrZ48alp8tFUTxqINMG14XyYN6sP9b68ALH721NLC7QcWjuO0iSvajuM4TlIwoiiHpZm2w4EAACAASURBVGUtIf4+XF3BP2av5KIZwxlWlNNyYGY+XPgoiMBdJ3PuupsZy8c0TTx1x4uGpDX9pLJF0W6shabGhFG0RYQzpg3lvZVbmL18E++v2sIhY4p3faLjOK5oO47jOMnB8KJcKmsbKa9uQFW58cl5FGSnc8WRY3c8uHgMXPgI9BvNxI3PUq2ZLB94zI7HhaQ1/agkL5Kwpi5kVEwQRRvgk1MGk5oiXPPg+zQp28XPdhynfVzRdhzHcZKCEcFqvWxjFS/M38DLi8r4ytFjKchJb/uEgZPhs/9iwxWLOFT/yHee37hjwpuciEW7gtyMYNGOKNpZBd0hRkzon5/JzHH9WbBuK7kZqUwtLYx1lRynV+CKtuM4jpMUDA8h/hZvqOLGJ+cxsjiX8w7cdYSMwX1z+cZJU3hl0UbufXPF9jtzzaJdJBUtriO1W+w7gSzaAJ/abwgA00f2I92zPjpOh/A3xXEcx0kKSvtlIwK3Pr+Qheu3cvUJE8hI61g3eO70YcwYXcQNT3zIys1RkUsiFm0qWxYHJqDrCMAxEwcyoSSf0/YdEuuqOE6vwRVtx3EcJynITEtlcIGF+Js+oh/HTx7Y4XNFhJ+esQ8KXPPg+y0uJBm5NKZkmuvIDop2YoT3i5CVnspTXz2cU6e6ou04HcUVbcdxHCdpGFFsftrfOXmiJafpBKX9crjmxIm8tLCMv78VXEhEqEkvpEgS36LtOE7ncUXbcRzHSRounjGS75w0kX2G7t5ivvOmD+PgUUX86Il5rC6vAaAqrS/FsoWs9NCl1lXYd4JZtB3H6TyuaDuO4zhJw7GTBvL5w0bt9vkpKcLPztyHJtVmF5LNaQMYmrKxxULerGi7Rdtxkh1XtB3HcRynE5T2y+Hbn5jArAUb+MfslWxIHchgyiwjJJjrSFoWpGXEtqKO48QcV7Qdx3Ecp5Ocf+BwDhzZjx8+/iGL6vuSQy3UbLaddZVuzXYcB3BF23Ecx3E6TcSFpHGb8sYmi89N+XL7rq1wRdtxHMAVbcdxHMfZLYYX5XL1CeNZqf2toDxEInGLtuM4gW5VtEVkmYi8LyJzROTtqPIrReQjEflARH4WVX6NiCwSkfkicnxU+QmhbJGIfLs76+w4juM4HeXCg0cwdtxE29gSrWh7xBHHcSCtB/7GkapaFtkQkSOBU4EpqlonIgNC+STg08BkYDDwnIiMC6fdBhwLrATeEpFHVfXDHqi74ziO47RLSorwy4uPhB/nQfnHVlhXCYXDYlsxx3Higp5QtFtzKfATVa0DUNX1ofxU4L5QvlREFgHTw75FqroEQETuC8e6ou04juPEHhEoKI1yHdniriOO4wDd76OtwDMiMltELgll44DDROQNEZklIgeE8iHAiqhzV4ay9sq3Q0QuEZG3ReTtDRs2dLkgjuM4jtMuhcNgS5RFO8tdRxzH6X6L9qGquiq4hzwrIh+Fv9kPOAg4ALhfRHY/e0BAVe8A7gDYf//9dU+v5ziO4zgdprAUVrxusbR9MaTjOIFuVbRVdVX4Xi8iD2GuICuBB1VVgTdFpAkoBlYBpVGnDw1l7KTccRzHcWJPQSnUboGFz0BTIxSP2/U5juMkPN3mOiIiuSKSH/kNHAfMBR4Gjgzl44AMoAx4FPi0iGSKyEhgLPAm8BYwVkRGikgGtmDy0e6qt+M4juN0msjix//cCBn5MPGU2NbHcZy4oDst2gOBh0Qk8nfuUdWngrL8ZxGZC9QDFwXr9gcicj+2yLERuFxVtwGIyBXA00Aq8GdV/aAb6+04juM4nSOiaK+ZA/tdBBm5sa2P4zhxQbcp2iFKyJQ2yuuB89s55wbghjbKnwSe7Oo6Oo7jOE6XUBDl4bjfhbGrh+M4cUUswvs5juM4TmKR2x9SM6HfSBgyLda1cRwnTnBF23Ecx3H2lJQUmHkVDJpicbUdx3FwRdtxHMdxuobDvxnrGjiOE2d0d8Iax3Ecx3Ecx0lKXNF2HMdxHMdxnG7AFW3HcRzHcRzH6QZc0XYcx3Ecx3GcbsAVbcdxHMdxHMfpBlzRdhzHcRzHcZxuwBVtx3Ecx3Ecx+kGXNF2HMdxHMdxnG7AFW3HcRzHcRzH6QZc0XYcx3Ecx3GcbsAVbcdxHMdxHMfpBkRVY12HLkdENgDLd3JIMVDWQ9XpKRJRpvZIBlmTQcYIySBrMsgIySMnJIesySBjhGSQNRlkjNDTsg5X1f5t7UhIRXtXiMjbqrp/rOvRlSSiTO2RDLImg4wRkkHWZJARkkdOSA5Zk0HGCMkgazLIGCGeZHXXEcdxHMdxHMfpBlzRdhzHcRzHcZxuIFkV7TtiXYFuIBFlao9kkDUZZIyQDLImg4yQPHJCcsiaDDJGSAZZk0HGCHEja1L6aDuO4ziO4zhOd5OsFm3HcRzHcRzH6VZc0XYcx3Ecx3GcbsAVbcdxnD1ERIaJyMBY18NxHMeJLxJW0RaR1FjXoauRQKzr0ROISMI+m61J5HuaDPdRRHKALwM/iHVdeoJkuKeQmH1Ia0QkW0SKYl2PniKR21qwdzPRZYzQm+RMqAZTRLJEZCiAqm4TkbSofb3mprSFiIgGRGQfERkb6zp1F0HWpvB7WKQstrXqGlorKSLyKeDCtvb1dkQkJeo+Zsa6Pl1N1DNZA/wDGCAih8WwSt1KRPGMuqdpOz+jdxIxaKjqtrA9NHKvE+kdDTIdDxwmIiNE5PREvacRQv85TkQOgMTpV6ClvQ0yDhORNrMUJgJB1l4TySNhGo3AD4FrRSRDRL4OPCMi3xGRAb3pprRFeHkyROQrwB+AibGuU3cRZB0uIn8Ffhspi3G1uoSIkhJFPnBRO/t6NaraJCK5IvIb4PciclCs69SVRD2TJar6BvAa8IUYVqlbiVI8p4vI9cBxMa5StxBl0BgqIs8B9wH3i0hpIryjEatneH43AT8GngNmqGpjbGvXIxwD/AgSp1+B5vY2W0R+D9xJAuoIkYFRkDVPRH4qImeISEnYH5c6bVxWqjME40Nkiu83wDjgOmAqcC0wEvhjjKq327Rh+cwCPgt8BbhcVR+NScW6gdZTtCIyDrgX2KSqJ8emVl1HRL7QwRWKyM9EZErY/R9gQSL694rITOCvwDpgLvALEUmoxl9E9gbeF5Fc4B4gS0TOj3G1ugURKRWRZ4DvAhdjltCEsJpFv6Ph+6uYnI+o6qHYM3xr7GrYNURmC8NAYj+gEvgYU7T/N7a16zqi7mPk+1NRu+cCs0WkMBZ16yra0BEE+BZQDxyvqi/GpGLdSGRgJCKHYHGyhwAzMeNj3BqrerWiLSKpwfiwTUTSVfVj4AHgdOA5VX1dVT8HjBSRk8M5cS+ziKRFTc8eLiKjgDrgaWARcETY16unvaJGpxFL2T4ikg8sAeYDe4XyXukrGTXVvk1EsoFUVS0HqoDLReQyYBswWlXXxbCqXYqIDBGRdOB/gHGq+iNVvRmYA3xKRApiW8POIyKfFJHjw++0oHSKqr4PPAX8UFVXAo8CZ4pIn1jWt5s4D3hPVU/CjBh9gaNjW6U9o3UbBOSG7ybgcGBB2H8FMFZEPhF9Xm8h0u9FuRU8jFmyq4AvAmnAaSKSF8Nq7jHB8NbsshaleP0gzG6XABsx6315zCq6h0QGTOF3UdQMxSTgFVVtFJGM2NZyz4ncz1ZlJwN/Buar6vnAN4GBInJe2B93Ol7cVWhXhE6uPzQrMOkiciNwk4gco6q3AwuB3KhG44+EKd14HfGIyCgR+QxAeEmGi8iDwI2Y9eg3qroUuBsYIyKjQ6PZq+5hdAcVNTo9QETeBn4BPAOMwKxHW0Tk2HCfe42cEWt11ADiK8BbWGN/iap+H/gl8Bls5mVUGKH3eoKFdw7Wcf8JWCYiJ4bddwDTgf16k6ISrNUzgRlBgb4SuAlTNMFm0E4TkQnYQH8tZlnqdbS+L2J+u5eEzWzsvoL5pK8AjhSRET1WwS4i3NPoNuhEEXkB+KGIXKGqvwY+BPqHwT/YjMWR0efFM6Fv/KKITAMGhLI07Pl9TVWPV9UFqroMeA84BHNlo7cNhqPvZ3ArGC0id4nI/4rIgcBhQCbWxywCakXkpBhWebeIGhiqiIwUkX8BvwKuE5sVXQKoiGSran04p9fOOkXdz5GRWQlVfRx4CciPkvPHhDY3HnW8XqO8AIjIBcBHwAlhuxj4N1ANPAbcIiJHAr8HTiE0ikB/TIGLZx4GfiUix4bt44CHwrRlLnBOUFgeAMqBsyE+H6r2EJHhwKio7YwwuPghcJOqHg28jimgacC/6EX+y2KuIbOAx0UkYo3/OrAvZvlbAXxbRPZV1Q+BbwBTsOezt3VsO7PwPgN8X1XfAl4EjhORPFX9L9YRnAzkxKzynSDIVIW9n32xDvuOyG+xmbSlwJPA9apag7VFmdJLFoC2M/iNGCkagS+LyCCs7d0iIpPDIHIOcCBm+e0VBAXsQeBLEWUyvKtfwhTQfwNXi8g+mJ/rxcD/iM0qHou5esU9oa+cBxwFXAY8KiJTsT7/YGw9QSRiDsDfgHTgpyKyEpjR45XeTUTkUMyIMSpsTwUeAj4A1mDGqRGqeh2wAXNLLMcGjnFPaF8PCM9reigbgimXtwOXAldjfcw67P5eEI77IfCN3tQWicgpIjIpbKeJyI+AR4ATReRmsYAXt2H96lgAVX0IqBKR78aq7jsj7hXt8I8vFZEFmIJ9vqr+LeweiXWAt2O+y0uBxar6FLAce/n+glmj4k7RFnMniPA3bJR2SXgp7gJeE5GXsPt0LfADVd2KNZJ7iciYnq7z7iIig4HHgf8TW0yVEkaiTZi1JdIQ/AyzaOdhrjL9gjIe94TBwFvY1OSXQvG9wBXY/TsLeAG4ORz/oqreiHXee0N8Tnu1pgMW3u9g7hNjsAYyA4j4LV+PKaRVPVvrzhFtOQrfLwHLMLetdOAvmEwl4ZSFwNkiMlNVn1DVq1S1roer3WnaGPymi8hnMUU0XVUfw6ydnwPeAVIxq+/ewDlYOzu552veeUTki9gg6B1stiVyf6Zjbe/+WIjGW1T1vbAOZgF2n68HnlXVf/V4xTtJUMLOAz6lqucE98nngc9j7+0TtCgo1eG0auCqsO+0XiJnxDVCAcEWOQIMBZ5Q1Z+p6p+x9vZPAKr6ZeBlzBAX94N9EbkYeBe4Bhs8/CbsUuzZHBzK7wP+julCzwMnicirQCnw497QFgUKsLbmkHB/ZwBbVXUf7B09G7g0GG3eAC6Mmn05B5spjj9UtVd8gAZg3/B7FPBJYAzmY/YmcHbUsUWYr9IjwD6xrnsrOQQYjlmDbooqvxb4NvAT4Fuh7FPAjeH3ftgo/NqwPTDWsuyG7K9iA54bgWtCWWHYvgoYEMpuBb4bfk8DcmNd93buYypmjT8/lKVi01dXYwOls0L5ycDfwu8JmNXh3KhrnYZ17jGXqyNyh+/DgF8DJ2EzLk8DpwLpYf9tUTJfifnRpQMpoSwl1rK0IduFwDFtlKeF772whvxzYfsu4BZsBu1PwKmtzos7GVvVbzDwPjZwnx51b76ITbEfEbZHYAOJKVhHeANmwT8LOAi4O9aydEDWdGzQO7WNfYcBteE+5oayImAYtrj+P8DBvei+Hg3cF37nhO8S4KfhXbwc+B02c9gH83f9Uazr3UHZJDyPr0b6iFB+AaaEjgbOxFxjwGZG0zAlbUrUszAg1rLsQsZSTJH+P2BaKN8L0xu+iw2UXsJmfadHnTspfBcCg2MtSyfljrQ/Z2KLG/cL29nYAOJpzIB1N2bw6I8ZAaa1dZ14+vQG61nEJ/DLwD0ichXwT6wBXA08CDypqveH428ALlbVD1X1VFV9Lxb1bg81lmPW+EtE5Lzg4/hvzGL/L+BwsUUbQzEn/wMxF4pbsAcL7UWL56RlMePfsdH5PcD5wedqKybzNCw049Tw+20AVZ2tqlXR09vxgNobPRBbqX+ziByFKdrLsFH4fcC5YVQ+HpvCBLMovUCwKIXpzu8S7mu80o6FdyntW3jnY1PuhwC/V9WbVbVBd1ykFHNEZKKI/BeziF0pIl8TkclhX5qGkGeqOhd7LqeKyHjga5hVBeA6VX0knNMcgqqHRekUqroaizpRiQ32rg67HsAMGNPFQqMuwxTtX6nqFlX9X8wIUIkpp6/G2/vZBqmYG8zhIrKXiHxFRK4WkQuxEHe3AxtCW3M41sccoaoLsCgVn5Pgqx3v9xXzs54MZrEO7k9rsXdyH0yxfhIzVv0bWKGq34lVZTtD6D+XYXJ8V0S+JeZrfT/Wl3xKVf8J9BWRz4Z3dyIWWWVeuEaDqq6PjQS7Jsi4AtMRfqOqs0UkK7Q/F2OuIlXYzMwrwHoRyRGRf2CuiWmqWh7e77indXsZ7l8NcLRYMqUBwCi1NQW/w2Z/vxiOOV1VZ0dfLx7fz7hTtKUlzFLknx/p5G4HNgMXqup+oeOuxizAF4rIr8QW1I3EQorFJVEDh89jjX815i7RCDyLWa0/xKZP/oApM7cDVar6Q7WFAHFPK7/PyIr+RmB1aDB+h1mybwhK2xuYtfd6rEN/Ivp6EQUvXhCLeLMam4nIxmYpfopZvz4GtgBlwKexmZUSEXkfi4jzNbUFkWBuJqer6l09LMIuEZELReQY2P7/H/UMP4sp2Weo6r3Ys/xVsTiuU0L5K9qyKCfu2pvATODfqnohpjyPAS4QkQy1hckzROQWsbCTz2AK5klArarer6pfVNXVEhXZIVaCdJRdDH7LsUgqo4AzxPyVVwEfS8vCwMMwi+jnVfW2eJS5lfLfiMl6PubCNh6T4QTg69i7e6SI3I+5Qf1JVSP9yPcwq31lD1W9Q7TuK6N4DCgXkbPDdsRFYhYmc7aaW8z5wFGqGpd+rW0R1fZ8FntOX8Fm1k7AFiHnici+Yf/ZInIvZhWeHWmH4p0oGa/EDBioam1QoOdgluxI+MkUbPbwZWCuql6ovSAWuoh8RsIi+Xb6lvuxwdRUYCVwkIicJSJfAxYDd6rqVlVd3MNV3z2622Te0Q/mwP8HbIo5P6o8FcgMvw8F1kftywjfw7AG5MBYy9GGXKnhW9rY91/gEkz5eids52G+gi8Ch4bjcmItRwdl3dXU+2lBzmuxRXHXYNPWP8cU0h9jsxGR8+JuCogW1wmJKluNWYeux6a37sWsSp/AlNHScNy06OvEo3yhbhPDs/hXbJDwNWBy9L2MOvZ8bMp2PNAP86H7PVHTlm09+zGWLwcojNo+F5uBiLi9/A5Txs4Kcs1v9VyeHmQcFs/Pahtyt9UGXY4N/MA69o+An4bt48L9nwucEOv6d1DGHdqgVu/qyNDGFoXtgzAFPAtbJzKy1bmpsZapDRl31ldGpt8vBv7b6rxzgZtjXf9Oyrqz/nNueEcnYUrn/PDu/hgzAGRhmS9LYi3HHsj4HvDl8DviBnQpFkktct4woF+s5eigrIOwRar3YTrO9cBeYV/rvuU6zAjZJ9zHB8O7Gtf3s025Y12B8A+dCczG4u7+PLwox7U6Ji98/x2bit7hxsTTZxeNYWTgcASwNur3bzF3kZzQKI6NtRwdlLVDihlm+Z2LWQUHhrIR2Kr4dGxB663YNFHM5Yqqd3sDiMh9vBx4K/y+CrOyDMUWB/4EOLbVeXHXebeq35ciHTJm1bwtyBEZ2M7A3JjGYdN6N2JWwZxW14k75RNbqLkUuDKq7ADM7++28Cz+K3QA38SUr/RW18jGrEpx3+Dv5Nnd2eD3VUxhKQH6tDovLp/dXbRB6VHHSavzvoVZr1tfL17l7EhfmY0tQP4btrjxWixSzlzglFjL0EE5O9p/bqBlgHwd5sNcTzBSxfOngzLOxGY9s6L23wZcFOv676bMJwB3hN9jQntzc6u+5ftY3zkqvM9nhn25UdeJu75lZ594mcqdhgVZvxdLjToQ8+8cCCAiPwDuDivkrwS+ICLjNE6nSMQy4t2Krf4djPkeHwfmRqGqdWLhzl4AXhKRW8Pvb6vqSlWtVtV7VHVhrGToJB2Zev9pOG4W8FVVXRf2L1PV36pqA+YXeZOqLomZJFF0wHe3DkBVbwMyRORLqvozbGHOGmxq8zuq+mz0dbXFlSYuCP590VnSKoChIerEEqzh3ws4Nfgm3wm8rxaDdz0WaWU8UBx1zeakEfGCWBSUsZgiNlBEDg673sY66WWYb+tnMOvYVFWtU9UG2T5p0leA9cDWePVN7qjfOTYDk4EpLQer6o8xJW4uUKGqFeGc5uRLPStJh9lZG9QQ2qCbsBjug0TkNBF5GrPa39b6YnEs5676yh9iM2pDsdnSWzAjxmosmMBjMal1J+hk//k8ZqACG3SchM0+vdzzNe84nZBxFpa18wfhvDuwsHavx6bmnUNE+orIQSISiUi1BVv7kamqi7D1ShmYm88B2PqBpaq6OfQ9b2Fh/VI1RKqKx75lV8RE0Q7/+HFRRfOBQhEZrKqbsEUNGVgSiHFYo/l1VV0eOvaLgMp47eTo3MDhcuCyMHCoiFmNO8FuKGZ/AeaphV08CIvtikb5zIWXZ5XaQtF4oSMDiF+IhS68DPhl5H8QGksNx8Xrc4qIfAebyrsgqnghlrHyl2LZK4djkX2GY8roXqr6l6jjn8Kmb5vvZ7w0hGKJDkoAQsP+VcwfNx0LIZUX7tMSzIp/udrCsWrMF5Bw7rao+3izqp6h5iMYd77JgT0Z/C5X1Vu1JfRb3Cmeuzk4/EBt4VQaZjm7X1WPVdV3err+HWU3+srRwDdCG1Sjqs+r6vdV9XvBmNEb6Kzh7XMiMl5VG0Mfck/Mat5xOirjMELUJhFZhA3wZ6rq/BjVu8OIyLcx95CvAI+JLfyfjfUl54TD3gufMZiP/aRWfctd2NqtyNqQuOlbOkOPKtoiUigiT2B+q2dLS1KEBVhD+RcReQALbTMHm05ZoKrnquriiKO8qv5NVdfESyeXBAOHZnZTMZsc9fKch01Lb0c8vDy72Xm/q6qrVfUVzCJ/QOvrxstz2ppEtfCKkSYikUyjPxOR6wGCpWQN5h5RSlSyFVVVsZj9f8Cm5V+Kvm7kPmoczqR10+A35veyLbpgcLhSLc75n8L1op/luKAL+sp4ma3eJV3Uf1bE6/MKeyTjx0HGM4BPqOp34nnAFNreFBE5HbO8n6yq/4O9i9eF9uVVLNnXkGClLsd0hBVqWSCjF/leiz3ztTERqIvo6ZcxEm/3yvD7cAA1F4mvY1M//1DV07GG9IjIicHiGVcdXKIOHNqjKxQzVf0oWNTiqiPYk8470sCr6vmq+mqPVryTJIOFN9RhFKZYTsOmXfcXyzAW4VksrNuBrTrowVhUkX1V9bkeqvIe0Y2D35jfy9Z0URuk4VqR9zaurPWBPe0rY2642BXJ0H92oYwPaZy7korISGztVRNmub5WW2ao/4W5jYAp2mUEdxgsSldzAr/I+xju5w2qerGq9mpFW7r72RSLU7ocWwFdISJZmIL/LSzywh3aRrzH0HmUq+qt3VrBPUAsA9cZ2AszHnhJVZ8M+zKAQ7AH7z6xUDaXqerJYX9vaQxHAjVB2ULM1yoLU9A2AL9Ty1YZSVcd6cROAfbXXhA6KnTe12HhI7diWcVeCx3xSOwej8CS08zEFhSdH85Nje6oo/8H8UKQIxULW3YyFullkar+IOqYUzGr5tORZziUl2ILA4/AMnLFrfIpIkdgizNfxlxZTlPVK8K+MZi/36Rg0UbMZ/lcbFpyP+CTwboUud529zYe6eJnNy7bpGRogyCx+8q2SJL+M6FlbKdvWaCqPwr7U4NR5pvA3qp6USgvwGK5r8L6nctV9e+xkKEn6BarYpg+GCQi/8Gmdc4DbheRYlWtVfP9ew5bWXpUq3MPFZHZWLi+uIsZLRZbeKaI9FHVVdhq7vuxqY3pYv66qGq9qv5HVe8Lp+6H+bIS9sftCxTuX5dPvccTXWnZjb5uvCnZkPgWXhEpEYuXewu2qv0PmBXwBBHpB833+P+wjIcRqrEwaEdhSsymiOxBYYtLJbsbn924aZOSoQ2CxO4r2yJJ+s+ElzFCO33LdLHEgWBKOOGYB6PO24Ip5j8ARiSykg3doGiHEYxiVqJVqno0FvdxE/bAAaDm07oMmCAiBSKSG3YtwXx5jlfLABVzkq0xTFTFLFk67wgicoSInB0a9mHAfFWtCMrZ14HLRWQQWAY5zMc8DfiViLwsIv1U9Q1V/bqqbpU49GUNHIKFyZymqp/FpiUVeBiLdx3hp0C/YGUCi93+f6q6l4bkJJGBUrwNmJLt2U3UNiiaROwr2yIZ+s9kkDGaDvQtl4nIIG1Z85EDvC0ix4rIQ2JrRzar6tw471u6Bu26+IipWDzdyEr2U4C7ovanYKtKZ0aV5QG/xHwH1wFDu6o+XSlX+B6HdcoRWX8DPNjq2K9hK4gLCDEfsUb/xFjL0UFZj8ASjgzGwoLdGrVvDDY9PSiqbDJwA5aZ62VaBc0nDmPRhvv4LBYEfwzwKPCjqP05WPKD77N9oosDMUUlL9YydEDGEizE12wsXNITwKnAouh7FJ7h+6K2R2JTeXOxDKxE/gfR/4t4+2CdV3QCms9iIdsysbBmR4byYZi1OxJ3N/r+xt2z2oacyfDsJkMblJB9ZXuyhu+E7T+TQcao+ne6b8HCvm7B/LSfB86OtRw9/ekSi7ZYTMjZWIe3CPMHbMBS2k6H5mmQ74VPhJOwsGjvYv47K7uiPl2BiKSKyI3AjUG+8djiItSmXL8CzAj7IvwBaxCfBZaIyFC1iBRPEsck+tR7Ell2IyS8hTcaNctIeVTRAcBitTjn3wYuFZFbsAQeGVHnNS+Ki5dntTXJ8uwmehsUIRH7yrZIhv4zGWRsg93pW0qxtQdPqepRqnp/T1c65nSFto5NeVwQtf1bbArsYmB2KEvBRkP3Yz45YCOhw2M92mhDnpnYCuDbgS9gsSBPwFbHTo867kvAf6K2z8FiCf8BGBBrlz7FmQAABZtJREFUOToh7xnAL6K278JSit+MrWyPlA/Fpq2HhO1rCOma4/FDkll2o+qfFBbeNuSOZBe7j2ANxJTO8Zgl6dxY17ETsiTVs5uobVAbciZUX9mOjAnffyaDjO3I3Zm+5Y/hdzatMl/GWo6e/nSVj/Zs4P4oa8krwDC18FGpInKl2ih9KLBNgz+Zqj6iqi92UR26kibgFlW9VFX/gHVaI7HoC7eDrQjGRnEbRGREOK8WS3f8BbXYl72F57Hp5gizgOOB/8UWVx0ZylOwkWlEtp+o6tUQn7FoSTLLbgRNYAvvztAWf0ABVonINcAfgQ2q+gsNiSzi9FltTbI9u4naBrUm0frKtkiG/jMZZNyBTvYt6WKRVepUtVIsvnav7Fv2lC5RtNVShtdF/QOPxcIugcUznSgij2MWmncgfpMhBJKhMWwmgRWzZOm82yQ0cmBWiNnh9z1YOLiVwO9V9SJtlQAhzhWynSIi+2Npte/BQvxdpyFkX6TNidNntTVJ9ewmcBu0HQnYV7ZFMvSfySBju3Sib6kP/wdUtak39y17QlpXXiw8dIqlE300FFdi2X32wnLYr4L47sw1KvVw4FgsTShYY/iF0BiOJ6wODw193MrUEcTSL9ez48vzBnAiNrW5Q3rbeJVbVTe3KjoAWKiqdWLpYS8VkZOB/bFV/ZHzelXn3R7tWHjHYxnHmv1cpRfEi+4EW7F39Vq1aA3N8Wjj9Tlti2R9dhOtDWqPROkr2yIZ+s9kkHFnJGnfstt0qaKNTadkYNOc+4jIL4GNwJWq+nIX/61uJ5Ebw7ZI1JcnWTrvtoiy8I7EMuVdG23hVaPX3MsOsEBVmxcfSS9I+rAzku3ZTdQ2qA0Sqq9si2ToP5NBxvZIwr5lt+lSRVtVVUT2xWJIjgTuVNU/deXf6GESvjFsTSK+PEnUebdFQlh4O0pEqY7cy96sZENyPruJ2Aa1JgH7yrZIhv4zGWRsj6TqW/aELk/BLiJDgQuAn6v51/VqROQgLBHEqyRmY7gdIjIBW2y1w8sT25rtGaHzfhZYSEvnvSLsS5gpvda0vneJcC+TjWR7dhO1DWpNovWVbZEM/WcyyNgW3rd0nC5XtBONZGgMo0nUlydZOu/2SCSLZ7KRbM9uorZByUgy9J/JIOPO8L5l17ii7bRJor083nk7vZVkfXYTrQ1yHCc5cUXbSSq883Z6K/7sOo7j9D5c0XYcx3Ecx3GcbqCrMkM6juM4juM4jhOFK9qO4ziO4ziO0w24ou04juM4juM43YAr2o7jOAmMiGwTkTki8oGIvCsi3xCRnbb9IjJCRM7tqTo6juMkKq5oO47jJDY1qjpVVScDxwKfAL67i3NGAK5oO47j7CEedcRxHCeBEZGtqpoXtT0KeAsoBoYDfwNyw+4rVPVVEXkdmAgsBe4Cfg38BDgCyARuU9Xf95gQjuM4vRRXtB3HcRKY1op2KCsHxgOVQJOq1orIWOBeVd1fRI4AvqmqJ4fjLwEGqOqPRCQTeAU4S1WX9qgwjuM4vYy0WFfAcRzHiRnpwK0iMhXYBoxr57jjgH1E5MywXQCMxSzejuM4Tju4ou04jpNEBNeRbcB6zFd7HTAFW7NT295pwJWq+nSPVNJxHCdB8MWQjuM4SYKI9Ad+B9yq5jdYAKxR1SbgAiA1HFoJ5Eed+jRwqYikh+uME5FcHMdxnJ3iFm3HcZzEJltE5mBuIo3Y4sefh32/BR4QkQuBp4CqUP4esE1E3gX+AvwKi0TyjogIsAE4racEcBzH6a34YkjHcRzHcRzH6QbcdcRxHMdxHMdxugFXtB3HcRzHcRynG3BF23Ecx3Ecx3G6AVe0HcdxHMdxHKcbcEXbcRzHcRzHcboBV7Qdx3Ecx3EcpxtwRdtxHMdxHMdxugFXtB3HcRzHcRynG/h/L4gAJipaA5oAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "outputId": "0205b0a3-baa5-4b0f-a42b-d2c5e3a5f54f"
      },
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "86689840-aac7-4387-a9db-3bac188c2b37"
      },
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "d_mse = mean_squared_error(y_true, y_dummy)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "d_rmse = mean_squared_error(y_true, y_dummy, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "d_mae = mean_absolute_error(y_true, y_dummy)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)\n",
        "print('Dummy MSE: ', d_mse)\n",
        "print('Dummy RMSE: ', d_rmse)\n",
        "print('Dummy MAE: ', d_mae)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MSE:  0.00584186773878084\n",
            "RMSE:  0.07643211196075142\n",
            "MAE:  0.05943159368464673\n",
            "Dummy MSE:  0.02889885289047612\n",
            "Dummy RMSE:  0.16999662611497945\n",
            "Dummy MAE:  0.13217330779902475\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cb9b920b-f1cf-4d90-d429-f643f2c00fbb"
      },
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE: '+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n'+\n",
        "                 'Dummy MSE: '+str(d_mse)+'\\n'+'Dummy RMSE: '+str(d_rmse)+'\\n'+'Dummy MAE: '+str(d_mae))\n",
        "error_file.close()"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive/\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:absl:Found untraced functions such as lstm_cell_layer_call_fn, lstm_cell_layer_call_and_return_conditional_losses, lstm_cell_layer_call_fn, lstm_cell_layer_call_and_return_conditional_losses, lstm_cell_layer_call_and_return_conditional_losses while saving (showing 5 of 5). These functions will not be directly callable after loading.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/CNN_LSTM_Cu/assets\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/CNN_LSTM_Cu/assets\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}