{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "LSTM_GRU_Amazon.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMg6jd7Jf0EMlb35A+rbLDi",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "60ec3a1270454181b36c7286686b68a5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b82f6cb6424b4248b1fabd45b642181e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_73467084b6724c31a7f7c5e19b1bd72f",
              "IPY_MODEL_31e5d4d8c1c446a4b5e411dd09ed9678"
            ]
          }
        },
        "b82f6cb6424b4248b1fabd45b642181e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "73467084b6724c31a7f7c5e19b1bd72f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_965e7a8f17a94318be5ed94b5b49a0af",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.61MB of 0.61MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e7944b406a8f4c95a4ade9a486d0a525"
          }
        },
        "31e5d4d8c1c446a4b5e411dd09ed9678": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e3d5dd6e0e13409a8f72d3bc2a80dc75",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d8d01580a5b44b3d8f7aa3d137c2ca05"
          }
        },
        "965e7a8f17a94318be5ed94b5b49a0af": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e7944b406a8f4c95a4ade9a486d0a525": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e3d5dd6e0e13409a8f72d3bc2a80dc75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d8d01580a5b44b3d8f7aa3d137c2ca05": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4daf22e5c052460fb98731515a50519a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_fc7204333a0c4deab96b0009fb8819ae",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_41e36520da254d44b93e998f3a377d96",
              "IPY_MODEL_c9ada407f6e64a0bba5a179d315f8c02"
            ]
          }
        },
        "fc7204333a0c4deab96b0009fb8819ae": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "41e36520da254d44b93e998f3a377d96": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ce9de4f617634c07845122944306262b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.83MB of 0.83MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d1382eb297d34f5b85c89c11153b4115"
          }
        },
        "c9ada407f6e64a0bba5a179d315f8c02": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_76a303e2734543f4873deeda1aa2f4a0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dd14db2b024c4b0baa48cbfaede7009a"
          }
        },
        "ce9de4f617634c07845122944306262b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d1382eb297d34f5b85c89c11153b4115": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "76a303e2734543f4873deeda1aa2f4a0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dd14db2b024c4b0baa48cbfaede7009a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2083d13fe2454e868c049e7e52a47ed0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a2b18707de9b43ff9f02f236eb30533a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6c6e6b8887634908b7165e23270d1eec",
              "IPY_MODEL_cfcf2d5afea34056ad08e20a03733561"
            ]
          }
        },
        "a2b18707de9b43ff9f02f236eb30533a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6c6e6b8887634908b7165e23270d1eec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2ca2c443d6f743afb35a3af2d00370d6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.81MB of 0.81MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_fe8c0432567840788cc9e17c721dc6b3"
          }
        },
        "cfcf2d5afea34056ad08e20a03733561": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b8e69c01a2e54638b58168084a1597bc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_bb43da1e46fb45e6a31ac385df51c140"
          }
        },
        "2ca2c443d6f743afb35a3af2d00370d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "fe8c0432567840788cc9e17c721dc6b3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b8e69c01a2e54638b58168084a1597bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "bb43da1e46fb45e6a31ac385df51c140": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9cd50f3f20054971b33b5d56269be63d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ec631f8afc0449b9a8702243b08c2884",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_c31acebf42df433ba5667fb61ab33d7f",
              "IPY_MODEL_aff53d05200b43bdb3f5f8f6c7107e66"
            ]
          }
        },
        "ec631f8afc0449b9a8702243b08c2884": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c31acebf42df433ba5667fb61ab33d7f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8d669a2551b742b7b12564e512e55620",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.93MB of 0.93MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1883e54b82864cfa955181b78a95cbeb"
          }
        },
        "aff53d05200b43bdb3f5f8f6c7107e66": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d3e65dbca1504a2bb9244df72d9c1155",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_439c7bced07f4a8990431563db4915f8"
          }
        },
        "8d669a2551b742b7b12564e512e55620": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1883e54b82864cfa955181b78a95cbeb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d3e65dbca1504a2bb9244df72d9c1155": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "439c7bced07f4a8990431563db4915f8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc7e4fc315c74fdbaa94d6779e82f60b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f1459c5150f84ae59a761810ad5f8b8a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_07e71bb256e648b580bfe44879baf702",
              "IPY_MODEL_76ad949c224a4b0baa949a13fd0c2ded"
            ]
          }
        },
        "f1459c5150f84ae59a761810ad5f8b8a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "07e71bb256e648b580bfe44879baf702": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2eb507a6c51b4d829701699b9528ce66",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.75MB of 0.75MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4a3d21689a8e4b25ba6f98ba1c0579a2"
          }
        },
        "76ad949c224a4b0baa949a13fd0c2ded": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_20b72e18f8e140998ff3451baf7405ed",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c03763b01053476e8800dc0455336d29"
          }
        },
        "2eb507a6c51b4d829701699b9528ce66": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4a3d21689a8e4b25ba6f98ba1c0579a2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "20b72e18f8e140998ff3451baf7405ed": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c03763b01053476e8800dc0455336d29": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3db2ad6ee7bb457ba70c1eda709fe2d2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_71bedc90cfa94517bae2967a861c1fe9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_42982784e8fa4cab90f1777f241b7dc1",
              "IPY_MODEL_e5a4a31580a34130b571df82b9daf96b"
            ]
          }
        },
        "71bedc90cfa94517bae2967a861c1fe9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "42982784e8fa4cab90f1777f241b7dc1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_aa3c635b80674afba5699dfa5e62ec58",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.81MB of 0.81MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1ca71aca566f432cbab6f3e2a0f2cea2"
          }
        },
        "e5a4a31580a34130b571df82b9daf96b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5bc06485d96d47d8b8270b0bbf5b1821",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a17f88b9f29342d68293772bc8cd122f"
          }
        },
        "aa3c635b80674afba5699dfa5e62ec58": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1ca71aca566f432cbab6f3e2a0f2cea2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5bc06485d96d47d8b8270b0bbf5b1821": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a17f88b9f29342d68293772bc8cd122f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f5d3ac28e1094e558ebdbca1d052ee8a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_95e5780a82e84368a3d6b1dbd7caccd9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_67f4fb4ff8c44a7aafe5427d60769947",
              "IPY_MODEL_7f3136ad3c834781a211a1fea0473ace"
            ]
          }
        },
        "95e5780a82e84368a3d6b1dbd7caccd9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "67f4fb4ff8c44a7aafe5427d60769947": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8fb8a6959ed940f4875d6fba92c98115",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.99MB of 0.99MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8a206515e08c412fb6a09042ee78da4d"
          }
        },
        "7f3136ad3c834781a211a1fea0473ace": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e49303d755ef4132a20aa045eb0cb45c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_92eb4474ef2a4b00925d1d6bd76fed63"
          }
        },
        "8fb8a6959ed940f4875d6fba92c98115": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8a206515e08c412fb6a09042ee78da4d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e49303d755ef4132a20aa045eb0cb45c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "92eb4474ef2a4b00925d1d6bd76fed63": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4d4f59afae0647188d0064d67c6e1693": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0f8a5856a6dc43b8be509ec41a2e5ecb",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_599787a28d1b4140aebe08f50ac05f1c",
              "IPY_MODEL_5557943d1446486d972275fc13f5a87c"
            ]
          }
        },
        "0f8a5856a6dc43b8be509ec41a2e5ecb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "599787a28d1b4140aebe08f50ac05f1c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ca772dd5599248059bd83d2831183a5a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.84MB of 0.84MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9cac540344f7470aa77a5b0ba0e9514f"
          }
        },
        "5557943d1446486d972275fc13f5a87c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2aa7ef1d38414facbaa25dc5511ec60e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0fc20d1ba5164762bf165d01f30ce92b"
          }
        },
        "ca772dd5599248059bd83d2831183a5a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9cac540344f7470aa77a5b0ba0e9514f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2aa7ef1d38414facbaa25dc5511ec60e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0fc20d1ba5164762bf165d01f30ce92b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6b2787400ea447edb92b2d9868d2a16b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_383a9fce4bba45438fa866d976cd190d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_94e91e7ca4fe4f03bfabcb71eba463e9",
              "IPY_MODEL_60f3111bd4334fb4b5636ffac3af27b1"
            ]
          }
        },
        "383a9fce4bba45438fa866d976cd190d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "94e91e7ca4fe4f03bfabcb71eba463e9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_bb9077c03cc243929ab4e9cfe7538ab8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.06MB of 1.06MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_12ac217d75004715b2ca500d0048cf5d"
          }
        },
        "60f3111bd4334fb4b5636ffac3af27b1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c9f6bbb9067f481a96b9be82f5f14eec",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9729f1c121b448cfb3e4769356bb3d7c"
          }
        },
        "bb9077c03cc243929ab4e9cfe7538ab8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "12ac217d75004715b2ca500d0048cf5d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c9f6bbb9067f481a96b9be82f5f14eec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9729f1c121b448cfb3e4769356bb3d7c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9b1da05c97844e2c969899ef2f5a7236": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c88eab3c21b24dc9b6681cc6e6fc2dd8",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_31c61a0caf7f4982a8d1c94d9284176c",
              "IPY_MODEL_087aefb9a74c4b85a8eb5e14f038d177"
            ]
          }
        },
        "c88eab3c21b24dc9b6681cc6e6fc2dd8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "31c61a0caf7f4982a8d1c94d9284176c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_02ec515a4053480280f3f5175ce591a8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.90MB of 0.90MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_43f6b6cc2dfd425cb9cbf68b28c33525"
          }
        },
        "087aefb9a74c4b85a8eb5e14f038d177": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_09a490b91e024ec5a56744c4358a98b5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_81d6b8ceb69745abb18a1d1bfb05b480"
          }
        },
        "02ec515a4053480280f3f5175ce591a8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "43f6b6cc2dfd425cb9cbf68b28c33525": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "09a490b91e024ec5a56744c4358a98b5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "81d6b8ceb69745abb18a1d1bfb05b480": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "70e4d3f08815401a9ca90f998774695a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_fc09b1b3973f4725a21f45c7b831d939",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_46cf161cda3c4c17b897af1bd107c6c5",
              "IPY_MODEL_9f3b2d3cdaeb4553b7ee1071dec623c4"
            ]
          }
        },
        "fc09b1b3973f4725a21f45c7b831d939": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "46cf161cda3c4c17b897af1bd107c6c5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_562faaacb37b4f5f945f96f93dfa61fd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.12MB of 1.12MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a7883559f7644420a6dbbd3dd97cef9a"
          }
        },
        "9f3b2d3cdaeb4553b7ee1071dec623c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_93b4647826e84fd1b7f8ed321ba7092b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a92625b8ee124ad0850d596e7519a66b"
          }
        },
        "562faaacb37b4f5f945f96f93dfa61fd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a7883559f7644420a6dbbd3dd97cef9a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "93b4647826e84fd1b7f8ed321ba7092b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a92625b8ee124ad0850d596e7519a66b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "90f3b5a675074d90a3bb3f5119065c18": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f68e7fe0949a4d1eace43fd0946af2f6",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_facb5596eae645f3835e69e7cb3b18e6",
              "IPY_MODEL_b41d87c256834d76a3c2677a630d365b"
            ]
          }
        },
        "f68e7fe0949a4d1eace43fd0946af2f6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "facb5596eae645f3835e69e7cb3b18e6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9b6b5476eecb4319ab62646807309437",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.96MB of 0.96MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_104b26bf5dc3454e8eccf031d657220a"
          }
        },
        "b41d87c256834d76a3c2677a630d365b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_56f203937c1246a38dbc2456632d2abe",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a61443a6a6b44ee2bd1cfda986a29a9e"
          }
        },
        "9b6b5476eecb4319ab62646807309437": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "104b26bf5dc3454e8eccf031d657220a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "56f203937c1246a38dbc2456632d2abe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a61443a6a6b44ee2bd1cfda986a29a9e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4804658b9c5a43ebb78e65f3669852a0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b0944b50efd74896b16a1b0d40e9a353",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_36fcbca3119b4a89ac4ee01183a2eabf",
              "IPY_MODEL_ef2986ae76944c2da051604a2fb25a7f"
            ]
          }
        },
        "b0944b50efd74896b16a1b0d40e9a353": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "36fcbca3119b4a89ac4ee01183a2eabf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_aaa5dc4f881a47b0a2c0408694f35982",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.13MB of 1.13MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_178aa21e85e84372b216acd3bd080ffa"
          }
        },
        "ef2986ae76944c2da051604a2fb25a7f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_898c6a2470884a34a164099a96fbdda3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e4573b26a1c1438fbe2bd0e6d109a38a"
          }
        },
        "aaa5dc4f881a47b0a2c0408694f35982": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "178aa21e85e84372b216acd3bd080ffa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "898c6a2470884a34a164099a96fbdda3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e4573b26a1c1438fbe2bd0e6d109a38a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "801bf1c9822c470a880ea82259faa8b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7c6988f19ac04972bfa1f226c8a240f0",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_340e65fae0bb481d9de788e567717c50",
              "IPY_MODEL_87f6144626c7458bbc5bcbf905d2bc75"
            ]
          }
        },
        "7c6988f19ac04972bfa1f226c8a240f0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "340e65fae0bb481d9de788e567717c50": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_feb52fcaa67743b99281bd5dd2e6d3d3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.22MB of 1.22MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_29be6750ac2149349cdc40300c5c74c1"
          }
        },
        "87f6144626c7458bbc5bcbf905d2bc75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3abe54ef215f47629ae7d680c0fce3e8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2cafee73811e44c2a4835bfba99baa73"
          }
        },
        "feb52fcaa67743b99281bd5dd2e6d3d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "29be6750ac2149349cdc40300c5c74c1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3abe54ef215f47629ae7d680c0fce3e8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2cafee73811e44c2a4835bfba99baa73": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ae79ec8d5927433cb84f1e44108956f6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_53439b37160f401a9443b1c10433acc4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f924ba9595cd49968c02a7fe5620aca1",
              "IPY_MODEL_e4f4e12362dd4d0487336fc72b9671d2"
            ]
          }
        },
        "53439b37160f401a9443b1c10433acc4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f924ba9595cd49968c02a7fe5620aca1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ac848f0e70a84274939f72af52454540",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.25MB of 1.25MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1be8cc2cabab487db207c808456db8ed"
          }
        },
        "e4f4e12362dd4d0487336fc72b9671d2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2b72e611df73442c89d309c35214e1f6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a712301814294a0da76e2784e5439679"
          }
        },
        "ac848f0e70a84274939f72af52454540": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1be8cc2cabab487db207c808456db8ed": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2b72e611df73442c89d309c35214e1f6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a712301814294a0da76e2784e5439679": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d17331159f114cb3bb8735f4573a7fa5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_108b959b008140789e7cb3c6565d3bb4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_09ea5c57a9c14b249df21114a4594c0e",
              "IPY_MODEL_ea51e504c88146149042ffa57ea6c38c"
            ]
          }
        },
        "108b959b008140789e7cb3c6565d3bb4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "09ea5c57a9c14b249df21114a4594c0e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6a23c1bc54284c2c912a859cd124ce1a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.25MB of 1.25MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_58b4f22353dc44e398e71541b77980ba"
          }
        },
        "ea51e504c88146149042ffa57ea6c38c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5935bce3b894432e9b2ab6ea9d823a7e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4e026959251746349b7240103c945069"
          }
        },
        "6a23c1bc54284c2c912a859cd124ce1a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "58b4f22353dc44e398e71541b77980ba": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5935bce3b894432e9b2ab6ea9d823a7e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4e026959251746349b7240103c945069": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "146493fe4ab449338ae17eb4a19283d8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_fc69346a1cd7402c8d29dfbb7b7064b3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_98edb8c81aab402f97a25176a5d0ce01",
              "IPY_MODEL_d4f9dee977af4ac7ad90852776b90687"
            ]
          }
        },
        "fc69346a1cd7402c8d29dfbb7b7064b3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "98edb8c81aab402f97a25176a5d0ce01": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_29bb9e4ec45d4a3b838ea71e5b540c45",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.30MB of 1.30MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_44819f214ba24417b5122de31e08def1"
          }
        },
        "d4f9dee977af4ac7ad90852776b90687": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c8b9f6a7c57645e588fa0dd1df621299",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e94a8fac47a4492190ceb9d91fdf3543"
          }
        },
        "29bb9e4ec45d4a3b838ea71e5b540c45": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "44819f214ba24417b5122de31e08def1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c8b9f6a7c57645e588fa0dd1df621299": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e94a8fac47a4492190ceb9d91fdf3543": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/LSTM_GRU/LSTM_GRU_Amazon.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5F7GfFTgUo3"
      },
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f9b12dd5-b3c0-4a65-ea35-b773b0fb9dad"
      },
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 147, done.\u001b[K\n",
            "remote: Counting objects: 100% (147/147), done.\u001b[K\n",
            "remote: Compressing objects: 100% (142/142), done.\u001b[K\n",
            "remote: Total 147 (delta 71), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (147/147), 120.19 KiB | 12.02 MiB/s, done.\n",
            "Resolving deltas: 100% (71/71), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4b29575a-aa1a-455d-8049-7a848dc3cc64"
      },
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/feeder_repo\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4fbb47a7-d19c-401d-9ef1-a29958236d3c"
      },
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRqkwo6kZUz_"
      },
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzVhwND1HAlw"
      },
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "927130de-64f6-4933-f8ec-89bb90252aa1"
      },
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mon Jul 19 11:38:12 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   41C    P0    28W / 250W |      0MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WB9wD4Aahs8_"
      },
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vBlKerL-c4-3"
      },
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'Amazon'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'LSTM_GRU'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfQJbuBk0vW0"
      },
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X53Fp1Gwh88_"
      },
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "1f65d201-43f6-4e8f-c856-fd3542678d28"
      },
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8MB 8.6MB/s \n",
            "\u001b[K     |████████████████████████████████| 174kB 42.5MB/s \n",
            "\u001b[K     |████████████████████████████████| 102kB 10.6MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 43.7MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 40.8MB/s \n",
            "\u001b[K     |████████████████████████████████| 71kB 9.2MB/s \n",
            "\u001b[?25h  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "\u001b[31mERROR: requests 2.23.0 has requirement urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1, but you'll have urllib3 1.26.6 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pbgZaoQDiIKX"
      },
      "source": [
        "!pip install wandb -qq"
      ],
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "24fc12b6-2c88-4631-f6f2-8308abec9aeb"
      },
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/requests/__init__.py:91: RequestsDependencyWarning: urllib3 (1.26.6) or chardet (3.0.4) doesn't match a supported version!\n",
            "  RequestsDependencyWarning)\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j91IBGuSid5w"
      },
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.1, 0.2, 0.3]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'rmsprop']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu', 'selu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0Sr9HsorH4E"
      },
      "source": [
        "# wandb calls this training function to run through the hyperparameter search\n",
        "def train():\n",
        "    # default values for searching\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "\n",
        "    # setting keras model to sequential mode\n",
        "    model = Sequential()\n",
        "\n",
        "    # layer 1\n",
        "    model.add(LSTM(units=64, activation=config.activation, return_sequences=True, input_shape=(window_len, 1)))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 2\n",
        "    model.add(GRU(units=64, activation=config.activation))\n",
        "    model.add(Dropout(0.1))\n",
        "    # layer 3\n",
        "    model.add(Dense(1))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "8822a6ac-4ae1-4c54-a946-2710f114bb0e"
      },
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Create sweep with ID: 4tzz6xsk\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "60ec3a1270454181b36c7286686b68a5",
            "b82f6cb6424b4248b1fabd45b642181e",
            "73467084b6724c31a7f7c5e19b1bd72f",
            "31e5d4d8c1c446a4b5e411dd09ed9678",
            "965e7a8f17a94318be5ed94b5b49a0af",
            "e7944b406a8f4c95a4ade9a486d0a525",
            "e3d5dd6e0e13409a8f72d3bc2a80dc75",
            "d8d01580a5b44b3d8f7aa3d137c2ca05",
            "4daf22e5c052460fb98731515a50519a",
            "fc7204333a0c4deab96b0009fb8819ae",
            "41e36520da254d44b93e998f3a377d96",
            "c9ada407f6e64a0bba5a179d315f8c02",
            "ce9de4f617634c07845122944306262b",
            "d1382eb297d34f5b85c89c11153b4115",
            "76a303e2734543f4873deeda1aa2f4a0",
            "dd14db2b024c4b0baa48cbfaede7009a",
            "2083d13fe2454e868c049e7e52a47ed0",
            "a2b18707de9b43ff9f02f236eb30533a",
            "6c6e6b8887634908b7165e23270d1eec",
            "cfcf2d5afea34056ad08e20a03733561",
            "2ca2c443d6f743afb35a3af2d00370d6",
            "fe8c0432567840788cc9e17c721dc6b3",
            "b8e69c01a2e54638b58168084a1597bc",
            "bb43da1e46fb45e6a31ac385df51c140",
            "9cd50f3f20054971b33b5d56269be63d",
            "ec631f8afc0449b9a8702243b08c2884",
            "c31acebf42df433ba5667fb61ab33d7f",
            "aff53d05200b43bdb3f5f8f6c7107e66",
            "8d669a2551b742b7b12564e512e55620",
            "1883e54b82864cfa955181b78a95cbeb",
            "d3e65dbca1504a2bb9244df72d9c1155",
            "439c7bced07f4a8990431563db4915f8",
            "dc7e4fc315c74fdbaa94d6779e82f60b",
            "f1459c5150f84ae59a761810ad5f8b8a",
            "07e71bb256e648b580bfe44879baf702",
            "76ad949c224a4b0baa949a13fd0c2ded",
            "2eb507a6c51b4d829701699b9528ce66",
            "4a3d21689a8e4b25ba6f98ba1c0579a2",
            "20b72e18f8e140998ff3451baf7405ed",
            "c03763b01053476e8800dc0455336d29",
            "3db2ad6ee7bb457ba70c1eda709fe2d2",
            "71bedc90cfa94517bae2967a861c1fe9",
            "42982784e8fa4cab90f1777f241b7dc1",
            "e5a4a31580a34130b571df82b9daf96b",
            "aa3c635b80674afba5699dfa5e62ec58",
            "1ca71aca566f432cbab6f3e2a0f2cea2",
            "5bc06485d96d47d8b8270b0bbf5b1821",
            "a17f88b9f29342d68293772bc8cd122f",
            "f5d3ac28e1094e558ebdbca1d052ee8a",
            "95e5780a82e84368a3d6b1dbd7caccd9",
            "67f4fb4ff8c44a7aafe5427d60769947",
            "7f3136ad3c834781a211a1fea0473ace",
            "8fb8a6959ed940f4875d6fba92c98115",
            "8a206515e08c412fb6a09042ee78da4d",
            "e49303d755ef4132a20aa045eb0cb45c",
            "92eb4474ef2a4b00925d1d6bd76fed63",
            "4d4f59afae0647188d0064d67c6e1693",
            "0f8a5856a6dc43b8be509ec41a2e5ecb",
            "599787a28d1b4140aebe08f50ac05f1c",
            "5557943d1446486d972275fc13f5a87c",
            "ca772dd5599248059bd83d2831183a5a",
            "9cac540344f7470aa77a5b0ba0e9514f",
            "2aa7ef1d38414facbaa25dc5511ec60e",
            "0fc20d1ba5164762bf165d01f30ce92b",
            "6b2787400ea447edb92b2d9868d2a16b",
            "383a9fce4bba45438fa866d976cd190d",
            "94e91e7ca4fe4f03bfabcb71eba463e9",
            "60f3111bd4334fb4b5636ffac3af27b1",
            "bb9077c03cc243929ab4e9cfe7538ab8",
            "12ac217d75004715b2ca500d0048cf5d",
            "c9f6bbb9067f481a96b9be82f5f14eec",
            "9729f1c121b448cfb3e4769356bb3d7c",
            "9b1da05c97844e2c969899ef2f5a7236",
            "c88eab3c21b24dc9b6681cc6e6fc2dd8",
            "31c61a0caf7f4982a8d1c94d9284176c",
            "087aefb9a74c4b85a8eb5e14f038d177",
            "02ec515a4053480280f3f5175ce591a8",
            "43f6b6cc2dfd425cb9cbf68b28c33525",
            "09a490b91e024ec5a56744c4358a98b5",
            "81d6b8ceb69745abb18a1d1bfb05b480",
            "70e4d3f08815401a9ca90f998774695a",
            "fc09b1b3973f4725a21f45c7b831d939",
            "46cf161cda3c4c17b897af1bd107c6c5",
            "9f3b2d3cdaeb4553b7ee1071dec623c4",
            "562faaacb37b4f5f945f96f93dfa61fd",
            "a7883559f7644420a6dbbd3dd97cef9a",
            "93b4647826e84fd1b7f8ed321ba7092b",
            "a92625b8ee124ad0850d596e7519a66b",
            "90f3b5a675074d90a3bb3f5119065c18",
            "f68e7fe0949a4d1eace43fd0946af2f6",
            "facb5596eae645f3835e69e7cb3b18e6",
            "b41d87c256834d76a3c2677a630d365b",
            "9b6b5476eecb4319ab62646807309437",
            "104b26bf5dc3454e8eccf031d657220a",
            "56f203937c1246a38dbc2456632d2abe",
            "a61443a6a6b44ee2bd1cfda986a29a9e",
            "4804658b9c5a43ebb78e65f3669852a0",
            "b0944b50efd74896b16a1b0d40e9a353",
            "36fcbca3119b4a89ac4ee01183a2eabf",
            "ef2986ae76944c2da051604a2fb25a7f",
            "aaa5dc4f881a47b0a2c0408694f35982",
            "178aa21e85e84372b216acd3bd080ffa",
            "898c6a2470884a34a164099a96fbdda3",
            "e4573b26a1c1438fbe2bd0e6d109a38a",
            "801bf1c9822c470a880ea82259faa8b0",
            "7c6988f19ac04972bfa1f226c8a240f0",
            "340e65fae0bb481d9de788e567717c50",
            "87f6144626c7458bbc5bcbf905d2bc75",
            "feb52fcaa67743b99281bd5dd2e6d3d3",
            "29be6750ac2149349cdc40300c5c74c1",
            "3abe54ef215f47629ae7d680c0fce3e8",
            "2cafee73811e44c2a4835bfba99baa73",
            "ae79ec8d5927433cb84f1e44108956f6",
            "53439b37160f401a9443b1c10433acc4",
            "f924ba9595cd49968c02a7fe5620aca1",
            "e4f4e12362dd4d0487336fc72b9671d2",
            "ac848f0e70a84274939f72af52454540",
            "1be8cc2cabab487db207c808456db8ed",
            "2b72e611df73442c89d309c35214e1f6",
            "a712301814294a0da76e2784e5439679",
            "d17331159f114cb3bb8735f4573a7fa5",
            "108b959b008140789e7cb3c6565d3bb4",
            "09ea5c57a9c14b249df21114a4594c0e",
            "ea51e504c88146149042ffa57ea6c38c",
            "6a23c1bc54284c2c912a859cd124ce1a",
            "58b4f22353dc44e398e71541b77980ba",
            "5935bce3b894432e9b2ab6ea9d823a7e",
            "4e026959251746349b7240103c945069",
            "146493fe4ab449338ae17eb4a19283d8",
            "fc69346a1cd7402c8d29dfbb7b7064b3",
            "98edb8c81aab402f97a25176a5d0ce01",
            "d4f9dee977af4ac7ad90852776b90687",
            "29bb9e4ec45d4a3b838ea71e5b540c45",
            "44819f214ba24417b5122de31e08def1",
            "c8b9f6a7c57645e588fa0dd1df621299",
            "e94a8fac47a4492190ceb9d91fdf3543"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "14a88c3d-cb1f-4740-efda-9995e8180225"
      },
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_'+model_str)"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: vzv8w590 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">prime-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vzv8w590\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vzv8w590</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_123058-vzv8w590</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 5s 75ms/step - loss: 0.0580 - mean_squared_error: 0.0580 - mean_absolute_error: 0.1490 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0678\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0456 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0650\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0400 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0661\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0373 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.1059\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0498 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0938\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0368 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0654\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0301 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0561\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0282 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.1058\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0350 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0881\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0341 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0535\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0345 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.1044\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0424 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0623\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0361 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0559\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0337 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0704\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0357 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0518\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0274 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0538\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0321 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0528\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0282 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0897\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0322 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0607\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0326 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0579\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0337 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0514\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0266 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.1002\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0376 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0569\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0306 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0624\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0326 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0502\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0499\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0499\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0262 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0522\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0330 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0475\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0601\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 32ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0287 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0696\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0364 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0585\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0318 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0503\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0258 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0542\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0262 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0490\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0493\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0227 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0560\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0471\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0504\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0478\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0292 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0578\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0302 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0549\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0257 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0517\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0276 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0495\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0617\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0740\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0463\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0476\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0474\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0223 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0463\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 8.4190e-04 - mean_squared_error: 8.4190e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1120\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0338 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0442\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0226 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0495\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0443\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0237 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0436\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 9.9253e-04 - mean_squared_error: 9.9253e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0563\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0469\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 8.9488e-04 - mean_squared_error: 8.9488e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0604\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0451\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0223 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0453\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0449\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 9.8446e-04 - mean_squared_error: 9.8446e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0510\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0310 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0452\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0249 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0666\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0437\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0428\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0262 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0581\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0252 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0419\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0588\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0414\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 7.2992e-04 - mean_squared_error: 7.2992e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0416\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0545\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 8.7125e-04 - mean_squared_error: 8.7125e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0438\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 8.9822e-04 - mean_squared_error: 8.9822e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0413\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 9.9291e-04 - mean_squared_error: 9.9291e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0414\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0444\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 9.1820e-04 - mean_squared_error: 9.1820e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0716\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0410\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0426\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 9.6209e-04 - mean_squared_error: 9.6209e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0614\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0715\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0276 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0411\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0247 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0675\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0407\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 7.2321e-04 - mean_squared_error: 7.2321e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0398\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 8.9905e-04 - mean_squared_error: 8.9905e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0409\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0589\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0266 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0514\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0254 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0587\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0396\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 8.6662e-04 - mean_squared_error: 8.6662e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0493\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0254 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0442\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 8.2543e-04 - mean_squared_error: 8.2543e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0412\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0399\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 8.5566e-04 - mean_squared_error: 8.5566e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0389\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 7.2825e-04 - mean_squared_error: 7.2825e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0391\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3825<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "60ec3a1270454181b36c7286686b68a5",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.57MB of 0.57MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_123058-vzv8w590/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_123058-vzv8w590/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00088</td></tr><tr><td>mean_squared_error</td><td>0.00088</td></tr><tr><td>mean_absolute_error</td><td>0.02159</td></tr><tr><td>val_loss</td><td>0.0029</td></tr><tr><td>val_mean_squared_error</td><td>0.0029</td></tr><tr><td>val_mean_absolute_error</td><td>0.03913</td></tr><tr><td>_runtime</td><td>30</td></tr><tr><td>_timestamp</td><td>1626697889</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00282</td></tr><tr><td>best_epoch</td><td>97</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▃▃▆█▃▂▅▂▂▂▂▃▂▂▁▁▂▁▂▁█▁▁▂▁▁▁▁▁▁▁▁▃▃▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▃▃▃▆█▃▂▅▂▂▂▂▃▂▂▁▁▂▁▂▁█▁▁▂▁▁▁▁▁▁▁▁▃▃▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▄▄▄▇▇▃▂▆▂▃▂▂▄▂▂▂▂▃▂▂▂█▂▁▂▂▂▁▁▁▁▁▁▃▄▁▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">prime-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vzv8w590\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vzv8w590</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: z8dbmk8r with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">true-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/z8dbmk8r\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/z8dbmk8r</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_123136-z8dbmk8r</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "31/31 [==============================] - 12s 218ms/step - loss: 0.0529 - mean_squared_error: 0.0529 - mean_absolute_error: 0.1526 - val_loss: 0.0251 - val_mean_squared_error: 0.0251 - val_mean_absolute_error: 0.1393\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0544 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0646\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0429 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0729\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 5s 172ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0568 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0675\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0422 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0720\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0412 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0727\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0363 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0734\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0460 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0647\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 6s 178ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0361 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0630\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0320 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0619\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0675\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0368 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0617\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0367 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0659\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 5s 166ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0361 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0623\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0346 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0628\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0306 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0602\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0710\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 5s 168ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0601\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0316 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1023\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0490 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0575\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 5s 169ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0307 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0602\n",
            "Epoch 22/100\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0305 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0568\n",
            "Epoch 23/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0259 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0617\n",
            "Epoch 24/100\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0327 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0644\n",
            "Epoch 25/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0541\n",
            "Epoch 26/100\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0285 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0544\n",
            "Epoch 27/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0588\n",
            "Epoch 28/100\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0278 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0555\n",
            "Epoch 29/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0292 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0630\n",
            "Epoch 30/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0270 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0603\n",
            "Epoch 31/100\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0271 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0534\n",
            "Epoch 32/100\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0265 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0595\n",
            "Epoch 33/100\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0260 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0537\n",
            "Epoch 34/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0258 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0521\n",
            "Epoch 35/100\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0257 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0510\n",
            "Epoch 36/100\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0542\n",
            "Epoch 37/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0256 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0567\n",
            "Epoch 38/100\n",
            "31/31 [==============================] - 6s 197ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0504\n",
            "Epoch 39/100\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0268 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0506\n",
            "Epoch 40/100\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0268 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0511\n",
            "Epoch 41/100\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0262 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0557\n",
            "Epoch 42/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0529\n",
            "Epoch 43/100\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0245 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0588\n",
            "Epoch 44/100\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0280 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0502\n",
            "Epoch 45/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0331 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0483\n",
            "Epoch 46/100\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0257 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0483\n",
            "Epoch 47/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0525\n",
            "Epoch 48/100\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0510\n",
            "Epoch 49/100\n",
            "31/31 [==============================] - 5s 170ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0525\n",
            "Epoch 50/100\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0254 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0865\n",
            "Epoch 51/100\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0359 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0496\n",
            "Epoch 52/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 9.5169e-04 - mean_squared_error: 9.5169e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0682\n",
            "Epoch 53/100\n",
            "31/31 [==============================] - 5s 176ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0289 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 54/100\n",
            "31/31 [==============================] - 5s 172ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0244 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0474\n",
            "Epoch 55/100\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 9.6438e-04 - mean_squared_error: 9.6438e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0476\n",
            "Epoch 56/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0242 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0467\n",
            "Epoch 57/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 9.5727e-04 - mean_squared_error: 9.5727e-04 - mean_absolute_error: 0.0234 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0487\n",
            "Epoch 58/100\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0529\n",
            "Epoch 59/100\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 9.5879e-04 - mean_squared_error: 9.5879e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 60/100\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0242 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 61/100\n",
            "31/31 [==============================] - 6s 197ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0689\n",
            "Epoch 62/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0287 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0566\n",
            "Epoch 63/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0278 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0467\n",
            "Epoch 64/100\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 8.6097e-04 - mean_squared_error: 8.6097e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0533\n",
            "Epoch 65/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0569\n",
            "Epoch 66/100\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0472\n",
            "Epoch 67/100\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 9.6542e-04 - mean_squared_error: 9.6542e-04 - mean_absolute_error: 0.0231 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0498\n",
            "Epoch 68/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0537\n",
            "Epoch 69/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0268 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0454\n",
            "Epoch 70/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0250 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0451\n",
            "Epoch 71/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0237 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0473\n",
            "Epoch 72/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 9.5300e-04 - mean_squared_error: 9.5300e-04 - mean_absolute_error: 0.0237 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0486\n",
            "Epoch 73/100\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0449\n",
            "Epoch 74/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 9.4185e-04 - mean_squared_error: 9.4185e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0449\n",
            "Epoch 75/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0254 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0437\n",
            "Epoch 76/100\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0238 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0460\n",
            "Epoch 77/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0494\n",
            "Epoch 78/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0267 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0447\n",
            "Epoch 79/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0232 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0476\n",
            "Epoch 80/100\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 8.7895e-04 - mean_squared_error: 8.7895e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0521\n",
            "Epoch 81/100\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0248 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0440\n",
            "Epoch 82/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 9.9037e-04 - mean_squared_error: 9.9037e-04 - mean_absolute_error: 0.0240 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0443\n",
            "Epoch 83/100\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0247 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0439\n",
            "Epoch 84/100\n",
            "31/31 [==============================] - 6s 200ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0242 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0459\n",
            "Epoch 85/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0263 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0484\n",
            "Epoch 86/100\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 8.9188e-04 - mean_squared_error: 8.9188e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0442\n",
            "Epoch 87/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0435\n",
            "Epoch 88/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0238 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0427\n",
            "Epoch 89/100\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 9.8102e-04 - mean_squared_error: 9.8102e-04 - mean_absolute_error: 0.0235 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0441\n",
            "Epoch 90/100\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 8.4974e-04 - mean_squared_error: 8.4974e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0441\n",
            "Epoch 91/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 9.6830e-04 - mean_squared_error: 9.6830e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0428\n",
            "Epoch 92/100\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 8.9686e-04 - mean_squared_error: 8.9686e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0452\n",
            "Epoch 93/100\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0252 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0424\n",
            "Epoch 94/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0239 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0427\n",
            "Epoch 95/100\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0435\n",
            "Epoch 96/100\n",
            "31/31 [==============================] - 6s 196ms/step - loss: 8.6727e-04 - mean_squared_error: 8.6727e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0507\n",
            "Epoch 97/100\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 8.9832e-04 - mean_squared_error: 8.9832e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0480\n",
            "Epoch 98/100\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 8.2690e-04 - mean_squared_error: 8.2690e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0438\n",
            "Epoch 99/100\n",
            "31/31 [==============================] - 6s 197ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0413\n",
            "Epoch 100/100\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 9.0064e-04 - mean_squared_error: 9.0064e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0446\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4182<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4daf22e5c052460fb98731515a50519a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.77MB of 0.77MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_123136-z8dbmk8r/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_123136-z8dbmk8r/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00089</td></tr><tr><td>mean_squared_error</td><td>0.00089</td></tr><tr><td>mean_absolute_error</td><td>0.02266</td></tr><tr><td>val_loss</td><td>0.00405</td></tr><tr><td>val_mean_squared_error</td><td>0.00405</td></tr><tr><td>val_mean_absolute_error</td><td>0.04456</td></tr><tr><td>_runtime</td><td>588</td></tr><tr><td>_timestamp</td><td>1626698484</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00328</td></tr><tr><td>best_epoch</td><td>93</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▃▂▂▃▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▃▂▂▃▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">true-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/z8dbmk8r\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/z8dbmk8r</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: oya582sr with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">royal-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/oya582sr\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/oya582sr</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_124132-oya582sr</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 11s 214ms/step - loss: 0.0805 - mean_squared_error: 0.0805 - mean_absolute_error: 0.1982 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0849\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 5s 175ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0436 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0588\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0315 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0611\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0301 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0616\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0307 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0620\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0305 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0646\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0303 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0616\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0291 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0623\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0298 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0635\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0661\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 5s 173ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0308 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0641\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0315 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0600\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4537<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2083d13fe2454e868c049e7e52a47ed0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.78MB of 0.78MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_124132-oya582sr/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_124132-oya582sr/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>11</td></tr><tr><td>loss</td><td>0.00176</td></tr><tr><td>mean_squared_error</td><td>0.00176</td></tr><tr><td>mean_absolute_error</td><td>0.02993</td></tr><tr><td>val_loss</td><td>0.00682</td></tr><tr><td>val_mean_squared_error</td><td>0.00682</td></tr><tr><td>val_mean_absolute_error</td><td>0.05999</td></tr><tr><td>_runtime</td><td>77</td></tr><tr><td>_timestamp</td><td>1626698569</td></tr><tr><td>_step</td><td>11</td></tr><tr><td>best_val_loss</td><td>0.0063</td></tr><tr><td>best_epoch</td><td>1</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▂▃▂▃▃▃▆▂▂</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▂▃▂▃▃▃▆▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▂▂▂▃▂▂▂▃▂▁</td></tr><tr><td>_runtime</td><td>▁▂▂▃▄▄▅▆▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▄▄▅▆▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▄▄▅▅▆▇▇█</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">royal-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/oya582sr\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/oya582sr</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: qavwhbej with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">treasured-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/qavwhbej\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/qavwhbej</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_124256-qavwhbej</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 11s 219ms/step - loss: 0.0986 - mean_squared_error: 0.0986 - mean_absolute_error: 0.1817 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0665\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 5s 166ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0383 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0593\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0328 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0585\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0317 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0600\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0279 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0606\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0308 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0572\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0590\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0606\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0561\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0274 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0626\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0548\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0254 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0555\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 5s 166ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0553\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0543\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0250 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0573\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0542\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0554\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0260 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0553\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 6s 178ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0537\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0532\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0528\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 9.2702e-04 - mean_squared_error: 9.2702e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0520\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 9.8538e-04 - mean_squared_error: 9.8538e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0528\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0253 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0518\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 9.5704e-04 - mean_squared_error: 9.5704e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0504\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0507\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0600\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0245 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0511\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0496\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0508\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 9.1613e-04 - mean_squared_error: 9.1613e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0518\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0498\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 9.1485e-04 - mean_squared_error: 9.1485e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0503\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 6s 196ms/step - loss: 8.9309e-04 - mean_squared_error: 8.9309e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0486\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 9.5026e-04 - mean_squared_error: 9.5026e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0492\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 6s 178ms/step - loss: 8.5288e-04 - mean_squared_error: 8.5288e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0485\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0470\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 8.9758e-04 - mean_squared_error: 8.9758e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0557\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0492\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 9.2292e-04 - mean_squared_error: 9.2292e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 9.3927e-04 - mean_squared_error: 9.3927e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0472\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 9.6465e-04 - mean_squared_error: 9.6465e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0492\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 9.0770e-04 - mean_squared_error: 9.0770e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0525\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 8.3635e-04 - mean_squared_error: 8.3635e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0512\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 8.6664e-04 - mean_squared_error: 8.6664e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0533\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 9.1604e-04 - mean_squared_error: 9.1604e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0471\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 8.1373e-04 - mean_squared_error: 8.1373e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0481\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 7.6665e-04 - mean_squared_error: 7.6665e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0514\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 5s 173ms/step - loss: 8.8291e-04 - mean_squared_error: 8.8291e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0461\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 5s 161ms/step - loss: 8.6945e-04 - mean_squared_error: 8.6945e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0455\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 7.3469e-04 - mean_squared_error: 7.3469e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0446\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 7.9807e-04 - mean_squared_error: 7.9807e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0446\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 7.6525e-04 - mean_squared_error: 7.6525e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0458\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 7.7041e-04 - mean_squared_error: 7.7041e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0452\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 6.3806e-04 - mean_squared_error: 6.3806e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0459\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 7.3065e-04 - mean_squared_error: 7.3065e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0453\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 8.2299e-04 - mean_squared_error: 8.2299e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0490\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 9.3112e-04 - mean_squared_error: 9.3112e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0450\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 7.2408e-04 - mean_squared_error: 7.2408e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0448\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 8.6574e-04 - mean_squared_error: 8.6574e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0489\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0226 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0451\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 9.6672e-04 - mean_squared_error: 9.6672e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0425\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 7.3070e-04 - mean_squared_error: 7.3070e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0427\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 8.2554e-04 - mean_squared_error: 8.2554e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0450\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 5s 165ms/step - loss: 8.8717e-04 - mean_squared_error: 8.8717e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0436\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 7.1165e-04 - mean_squared_error: 7.1165e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0474\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 9.6524e-04 - mean_squared_error: 9.6524e-04 - mean_absolute_error: 0.0231 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 6s 201ms/step - loss: 8.4711e-04 - mean_squared_error: 8.4711e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0455\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 9.2839e-04 - mean_squared_error: 9.2839e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0435\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 5.9205e-04 - mean_squared_error: 5.9205e-04 - mean_absolute_error: 0.0179 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0420\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 7.7774e-04 - mean_squared_error: 7.7774e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0438\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 8.4897e-04 - mean_squared_error: 8.4897e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0427\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.8728e-04 - mean_squared_error: 6.8728e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0427\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 9.0270e-04 - mean_squared_error: 9.0270e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0416\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 8.1965e-04 - mean_squared_error: 8.1965e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0430\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 7.1511e-04 - mean_squared_error: 7.1511e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0424\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 7.1814e-04 - mean_squared_error: 7.1814e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0418\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 5s 176ms/step - loss: 7.1248e-04 - mean_squared_error: 7.1248e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0431\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 7.5949e-04 - mean_squared_error: 7.5949e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0411\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 7.9606e-04 - mean_squared_error: 7.9606e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0424\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 7.5463e-04 - mean_squared_error: 7.5463e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0427\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 7.0516e-04 - mean_squared_error: 7.0516e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0413\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 6.4427e-04 - mean_squared_error: 6.4427e-04 - mean_absolute_error: 0.0180 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0405\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 5s 177ms/step - loss: 6.7480e-04 - mean_squared_error: 6.7480e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0403\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 7.9487e-04 - mean_squared_error: 7.9487e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0407\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 8.0212e-04 - mean_squared_error: 8.0212e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0413\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 8.2897e-04 - mean_squared_error: 8.2897e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0418\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 9.3388e-04 - mean_squared_error: 9.3388e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 7.0175e-04 - mean_squared_error: 7.0175e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 90/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 7.7296e-04 - mean_squared_error: 7.7296e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0390\n",
            "Epoch 91/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 6.4974e-04 - mean_squared_error: 6.4974e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0415\n",
            "Epoch 92/200\n",
            "31/31 [==============================] - 5s 167ms/step - loss: 6.5479e-04 - mean_squared_error: 6.5479e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0395\n",
            "Epoch 93/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 5.7034e-04 - mean_squared_error: 5.7034e-04 - mean_absolute_error: 0.0172 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 94/200\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 6.9614e-04 - mean_squared_error: 6.9614e-04 - mean_absolute_error: 0.0178 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 95/200\n",
            "31/31 [==============================] - 5s 176ms/step - loss: 7.5150e-04 - mean_squared_error: 7.5150e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 96/200\n",
            "31/31 [==============================] - 5s 166ms/step - loss: 9.2207e-04 - mean_squared_error: 9.2207e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0397\n",
            "Epoch 97/200\n",
            "31/31 [==============================] - 6s 196ms/step - loss: 6.8599e-04 - mean_squared_error: 6.8599e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0394\n",
            "Epoch 98/200\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 6.5158e-04 - mean_squared_error: 6.5158e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0429\n",
            "Epoch 99/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 6.4103e-04 - mean_squared_error: 6.4103e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 100/200\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 6.6868e-04 - mean_squared_error: 6.6868e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0380\n",
            "Epoch 101/200\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 7.5045e-04 - mean_squared_error: 7.5045e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0399\n",
            "Epoch 102/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 6.5155e-04 - mean_squared_error: 6.5155e-04 - mean_absolute_error: 0.0183 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0388\n",
            "Epoch 103/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 7.3021e-04 - mean_squared_error: 7.3021e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0395\n",
            "Epoch 104/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.9363e-04 - mean_squared_error: 6.9363e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n",
            "Epoch 105/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 5.6716e-04 - mean_squared_error: 5.6716e-04 - mean_absolute_error: 0.0172 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0400\n",
            "Epoch 106/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.8883e-04 - mean_squared_error: 6.8883e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0404\n",
            "Epoch 107/200\n",
            "31/31 [==============================] - 5s 176ms/step - loss: 6.9674e-04 - mean_squared_error: 6.9674e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0423\n",
            "Epoch 108/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 7.2345e-04 - mean_squared_error: 7.2345e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0380\n",
            "Epoch 109/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 5.8878e-04 - mean_squared_error: 5.8878e-04 - mean_absolute_error: 0.0180 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0383\n",
            "Epoch 110/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 6.4257e-04 - mean_squared_error: 6.4257e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0459\n",
            "Epoch 111/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 7.7209e-04 - mean_squared_error: 7.7209e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 112/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 7.4902e-04 - mean_squared_error: 7.4902e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0386\n",
            "Epoch 113/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 6.9824e-04 - mean_squared_error: 6.9824e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n",
            "Epoch 114/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 5.6969e-04 - mean_squared_error: 5.6969e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0396\n",
            "Epoch 115/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 6.3107e-04 - mean_squared_error: 6.3107e-04 - mean_absolute_error: 0.0183 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0370\n",
            "Epoch 116/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 6.0867e-04 - mean_squared_error: 6.0867e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0372\n",
            "Epoch 117/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 5.4910e-04 - mean_squared_error: 5.4910e-04 - mean_absolute_error: 0.0174 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0377\n",
            "Epoch 118/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 7.9815e-04 - mean_squared_error: 7.9815e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0370\n",
            "Epoch 119/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 5.6939e-04 - mean_squared_error: 5.6939e-04 - mean_absolute_error: 0.0169 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0408\n",
            "Epoch 120/200\n",
            "31/31 [==============================] - 6s 200ms/step - loss: 6.6142e-04 - mean_squared_error: 6.6142e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 121/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.4214e-04 - mean_squared_error: 6.4214e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0370\n",
            "Epoch 122/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 6.7057e-04 - mean_squared_error: 6.7057e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0389\n",
            "Epoch 123/200\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 6.5540e-04 - mean_squared_error: 6.5540e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0368\n",
            "Epoch 124/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 5.3069e-04 - mean_squared_error: 5.3069e-04 - mean_absolute_error: 0.0163 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0367\n",
            "Epoch 125/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 5.1627e-04 - mean_squared_error: 5.1627e-04 - mean_absolute_error: 0.0160 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0372\n",
            "Epoch 126/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 6.7274e-04 - mean_squared_error: 6.7274e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0380\n",
            "Epoch 127/200\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 6.8585e-04 - mean_squared_error: 6.8585e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0370\n",
            "Epoch 128/200\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 6.1759e-04 - mean_squared_error: 6.1759e-04 - mean_absolute_error: 0.0179 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0391\n",
            "Epoch 129/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 5.1120e-04 - mean_squared_error: 5.1120e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0370\n",
            "Epoch 130/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 5.6137e-04 - mean_squared_error: 5.6137e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0386\n",
            "Epoch 131/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 5.1816e-04 - mean_squared_error: 5.1816e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0366\n",
            "Epoch 132/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 6.0233e-04 - mean_squared_error: 6.0233e-04 - mean_absolute_error: 0.0176 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0357\n",
            "Epoch 133/200\n",
            "31/31 [==============================] - 6s 197ms/step - loss: 5.8076e-04 - mean_squared_error: 5.8076e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0370\n",
            "Epoch 134/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 5.3217e-04 - mean_squared_error: 5.3217e-04 - mean_absolute_error: 0.0174 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0358\n",
            "Epoch 135/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 5.5272e-04 - mean_squared_error: 5.5272e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0363\n",
            "Epoch 136/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 5.3193e-04 - mean_squared_error: 5.3193e-04 - mean_absolute_error: 0.0169 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0361\n",
            "Epoch 137/200\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 5.0112e-04 - mean_squared_error: 5.0112e-04 - mean_absolute_error: 0.0168 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0364\n",
            "Epoch 138/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 5.5010e-04 - mean_squared_error: 5.5010e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0379\n",
            "Epoch 139/200\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 6.2395e-04 - mean_squared_error: 6.2395e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0376\n",
            "Epoch 140/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 5.6210e-04 - mean_squared_error: 5.6210e-04 - mean_absolute_error: 0.0172 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0369\n",
            "Epoch 141/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 5.6230e-04 - mean_squared_error: 5.6230e-04 - mean_absolute_error: 0.0168 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0351\n",
            "Epoch 142/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 5.9850e-04 - mean_squared_error: 5.9850e-04 - mean_absolute_error: 0.0182 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0377\n",
            "Epoch 143/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 5.8523e-04 - mean_squared_error: 5.8523e-04 - mean_absolute_error: 0.0179 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0369\n",
            "Epoch 144/200\n",
            "31/31 [==============================] - 5s 168ms/step - loss: 6.5299e-04 - mean_squared_error: 6.5299e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0370\n",
            "Epoch 145/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 6.2840e-04 - mean_squared_error: 6.2840e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0356\n",
            "Epoch 146/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 5.8881e-04 - mean_squared_error: 5.8881e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0355\n",
            "Epoch 147/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.3778e-04 - mean_squared_error: 6.3778e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0351\n",
            "Epoch 148/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 5.3572e-04 - mean_squared_error: 5.3572e-04 - mean_absolute_error: 0.0172 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0343\n",
            "Epoch 149/200\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 5.2078e-04 - mean_squared_error: 5.2078e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0345\n",
            "Epoch 150/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 6.6137e-04 - mean_squared_error: 6.6137e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0357\n",
            "Epoch 151/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.1019e-04 - mean_squared_error: 6.1019e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 152/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 5.4134e-04 - mean_squared_error: 5.4134e-04 - mean_absolute_error: 0.0171 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 153/200\n",
            "31/31 [==============================] - 5s 175ms/step - loss: 5.9941e-04 - mean_squared_error: 5.9941e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 154/200\n",
            "31/31 [==============================] - 5s 164ms/step - loss: 5.7325e-04 - mean_squared_error: 5.7325e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0366\n",
            "Epoch 155/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 5.3849e-04 - mean_squared_error: 5.3849e-04 - mean_absolute_error: 0.0167 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0398\n",
            "Epoch 156/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 5.0977e-04 - mean_squared_error: 5.0977e-04 - mean_absolute_error: 0.0167 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0363\n",
            "Epoch 157/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 5.6301e-04 - mean_squared_error: 5.6301e-04 - mean_absolute_error: 0.0172 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0352\n",
            "Epoch 158/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 5.9758e-04 - mean_squared_error: 5.9758e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0351\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4628<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9cd50f3f20054971b33b5d56269be63d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.83MB of 0.83MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_124256-qavwhbej/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_124256-qavwhbej/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>157</td></tr><tr><td>loss</td><td>0.00054</td></tr><tr><td>mean_squared_error</td><td>0.00054</td></tr><tr><td>mean_absolute_error</td><td>0.01682</td></tr><tr><td>val_loss</td><td>0.00237</td></tr><tr><td>val_mean_squared_error</td><td>0.00237</td></tr><tr><td>val_mean_absolute_error</td><td>0.03509</td></tr><tr><td>_runtime</td><td>917</td></tr><tr><td>_timestamp</td><td>1626699493</td></tr><tr><td>_step</td><td>157</td></tr><tr><td>best_val_loss</td><td>0.00231</td></tr><tr><td>best_epoch</td><td>147</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▄▄▃▃▃▃▂▂▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▄▄▃▃▃▃▂▂▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▅▄▄▃▃▃▃▃▃▃▃▂▃▃▂▂▂▂▂▂▂▂▂▁▂▂▂▂▂▁▁▁▂▁▁▂▁▁</td></tr><tr><td>val_loss</td><td>█▇▇▆▆▅▅▄▄▅▄▄▄▃▃▃▄▃▂▂▃▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▇▆▆▅▅▄▄▅▄▄▄▃▃▃▄▃▂▂▃▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▇█▆▆▅▅▅▄▆▅▄▄▄▄▃▄▃▃▃▃▃▂▃▃▂▂▄▂▁▂▂▂▁▂▂▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">treasured-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/qavwhbej\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/qavwhbej</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 37d1sc4j with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">logical-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/37d1sc4j\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/37d1sc4j</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_125821-37d1sc4j</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 6s 259ms/step - loss: 0.0663 - mean_squared_error: 0.0663 - mean_absolute_error: 0.1697 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0680\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0565 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0912\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0568 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0687\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0343 - val_loss: 0.0385 - val_mean_squared_error: 0.0385 - val_mean_absolute_error: 0.1643\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0705 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0719\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0313 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1126\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0625 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0791\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0479 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0797\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0454 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0706\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0353 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1112\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0494 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0649\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0391 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0621\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0314 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0992\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0473 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0789\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0418 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0711\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0385 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0590\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0313 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0870\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0404 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0586\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0274 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0862\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0432 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0656\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0386 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0608\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0251 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0748\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0432 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0633\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0304 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0845\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0369 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0547\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0302 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0577\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0283 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0718\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0390 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0738\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0284 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0754\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0434 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0684\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0392 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0570\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0236 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0688\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0420 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0639\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0315 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0635\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0316 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0643\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0398 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0562\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0269 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0702\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0449 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0521\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0722\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0379 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0664\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0336 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0707\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0323 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0530\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0309 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0625\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0306 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0591\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0283 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0695\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0334 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0656\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0311 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0511\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0255 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0502\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0560\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0742\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0308 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0552\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0271 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0719\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0301 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0683\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0332 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0649\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0298 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0534\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0328 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0647\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0244 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0488\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0302 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0479\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0253 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0513\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0237 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0580\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0378 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0479\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 7.9358e-04 - mean_squared_error: 7.9358e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0545\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0323 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0627\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0330 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0556\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0746\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0351 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0490\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0300 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0474\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0734\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0354 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0506\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0587\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0617\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0726\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0354 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0642\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0274 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0626\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0260 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0638\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0317 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0492\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 9.3115e-04 - mean_squared_error: 9.3115e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0917\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0355 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0590\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0288 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0553\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0266 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0630\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0254 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0733\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0270 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0490\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0321 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0503\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0513\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0461\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0594\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0265 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0628\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0341 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0474\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0224 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0714\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0469\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0550\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0528\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0307 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0473\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 8.6823e-04 - mean_squared_error: 8.6823e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0487\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0285 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0453\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 8.4047e-04 - mean_squared_error: 8.4047e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0660\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0352 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0567\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0295 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0448\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0459\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0253 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0481\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5157<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "dc7e4fc315c74fdbaa94d6779e82f60b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.71MB of 0.71MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_125821-37d1sc4j/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_125821-37d1sc4j/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00122</td></tr><tr><td>mean_squared_error</td><td>0.00122</td></tr><tr><td>mean_absolute_error</td><td>0.02508</td></tr><tr><td>val_loss</td><td>0.00371</td></tr><tr><td>val_mean_squared_error</td><td>0.00371</td></tr><tr><td>val_mean_absolute_error</td><td>0.04811</td></tr><tr><td>_runtime</td><td>27</td></tr><tr><td>_timestamp</td><td>1626699528</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00371</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▂▁</td></tr><tr><td>val_loss</td><td>▄▃█▄▃▆▂▂▂▂▃▃▂▂▂▃▃▂▂▂▂▂▂▂▁▂▁▁▃▂▅▁▂▂▂▃▁▂▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▄▃█▄▃▆▂▂▂▂▃▃▂▂▂▃▃▂▂▂▂▂▂▂▁▂▁▁▃▂▅▁▂▂▂▃▁▂▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▃▃█▄▃▇▂▂▂▃▂▄▂▃▂▄▄▂▃▂▂▃▃▁▁▂▁▁▄▃▆▂▁▁▃▄▂▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▃▃▃▃▃▃▃▃▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▃▃▃▃▃▃▃▃▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">logical-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/37d1sc4j\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/37d1sc4j</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ia75scc5 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">hearty-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/ia75scc5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/ia75scc5</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_125901-ia75scc5</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 6s 178ms/step - loss: 0.1027 - mean_squared_error: 0.1027 - mean_absolute_error: 0.2254 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0731\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0575 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0813\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0412 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0736\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0376 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.0899\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0421 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0726\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0406 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0718\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0325 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0737\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0421 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0713\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0339 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0885\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0713\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0298 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1113\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0490 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0673\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0322 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0741\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0295 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0837\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0385 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0728\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0292 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0915\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0372 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0679\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0262 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0677\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0328 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0654\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0675\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0646\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0364 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0614\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0805\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0393 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0621\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0270 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0667\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0345 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0671\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0307 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0704\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0318 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0614\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0616\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0368 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0611\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0293 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0630\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0579\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0575\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0254 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0639\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0291 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0580\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0566\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0248 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0719\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0320 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0563\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0559\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0629\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0337 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0611\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0256 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0610\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0332 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0554\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0738\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0354 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0563\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0711\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0307 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0572\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0269 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0640\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0297 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0556\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0241 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0574\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0541\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0583\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0782\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0303 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0535\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0226 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0690\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0310 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0575\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0544\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0528\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0606\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0603\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0571\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0255 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0729\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0269 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0529\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 9.2906e-04 - mean_squared_error: 9.2906e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0843\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0322 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0536\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0565\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0555\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 9.0742e-04 - mean_squared_error: 9.0742e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0670\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0328 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0584\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0640\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0232 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0525\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0541\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0535\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0622\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0526\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0250 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0592\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0521\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0527\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0530\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0551\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 8.8548e-04 - mean_squared_error: 8.8548e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0581\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0576\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0254 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0511\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 54ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0522\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 30ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0511\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0232 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0547\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0291 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0514\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 9.5157e-04 - mean_squared_error: 9.5157e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0593\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0507\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 8.4917e-04 - mean_squared_error: 8.4917e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0572\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0546\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0223 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0534\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0284 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0519\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.5056e-04 - mean_squared_error: 9.5056e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0578\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0548\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.7860e-04 - mean_squared_error: 9.7860e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0514\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0520\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0269 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0500\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 9.0245e-04 - mean_squared_error: 9.0245e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0504\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.8911e-04 - mean_squared_error: 9.8911e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0499\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0502\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0219 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0504\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0242 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0514\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 8.1272e-04 - mean_squared_error: 8.1272e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0500\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.5601e-04 - mean_squared_error: 9.5601e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0570\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0250 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0513\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.1260e-04 - mean_squared_error: 9.1260e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0497\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0244 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0507\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.9112e-04 - mean_squared_error: 9.9112e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0496\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0535\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0508\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0491\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 8.2827e-04 - mean_squared_error: 8.2827e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0510\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0269 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0505\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 8.7382e-04 - mean_squared_error: 8.7382e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0505\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0514\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0645\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0494\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 9.5854e-04 - mean_squared_error: 9.5854e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0565\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0537\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.5766e-04 - mean_squared_error: 9.5766e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0494\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 8.9667e-04 - mean_squared_error: 8.9667e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0584\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0271 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0496\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.2274e-04 - mean_squared_error: 9.2274e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0512\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0244 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0491\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 7.4568e-04 - mean_squared_error: 7.4568e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0604\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0263 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0500\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 7.7183e-04 - mean_squared_error: 7.7183e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0531\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0501\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 9.4188e-04 - mean_squared_error: 9.4188e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0494\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 8.9741e-04 - mean_squared_error: 8.9741e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0596\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0485\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.7100e-04 - mean_squared_error: 9.7100e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0507\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0226 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0548\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0257 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0493\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 8.5866e-04 - mean_squared_error: 8.5866e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0648\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0491\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0488\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0481\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 9.0324e-04 - mean_squared_error: 9.0324e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0486\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 8.9907e-04 - mean_squared_error: 8.9907e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0485\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0249 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0493\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0479\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0217 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0506\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0484\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 7.7050e-04 - mean_squared_error: 7.7050e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0619\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0253 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0475\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.0910e-04 - mean_squared_error: 9.0910e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0489\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 7.8870e-04 - mean_squared_error: 7.8870e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0606\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0482\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0238 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0563\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0544\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0257 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0478\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.2649e-04 - mean_squared_error: 9.2649e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0498\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0473\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.5097e-04 - mean_squared_error: 9.5097e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0472\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 8.1611e-04 - mean_squared_error: 8.1611e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0472\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.0329e-04 - mean_squared_error: 9.0329e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0479\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 7.2767e-04 - mean_squared_error: 7.2767e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0472\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0237 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0476\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 7.6878e-04 - mean_squared_error: 7.6878e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0476\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0232 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0478\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 8.6566e-04 - mean_squared_error: 8.6566e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0494\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0221 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0523\n",
            "Epoch 165/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 8.3937e-04 - mean_squared_error: 8.3937e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0493\n",
            "Epoch 166/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0470\n",
            "Epoch 167/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 9.0132e-04 - mean_squared_error: 9.0132e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0511\n",
            "Epoch 168/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0220 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0505\n",
            "Epoch 169/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 8.1062e-04 - mean_squared_error: 8.1062e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0578\n",
            "Epoch 170/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0244 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0547\n",
            "Epoch 171/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 8.1133e-04 - mean_squared_error: 8.1133e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0481\n",
            "Epoch 172/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 9.2062e-04 - mean_squared_error: 9.2062e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0626\n",
            "Epoch 173/200\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0543\n",
            "Epoch 174/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.7438e-04 - mean_squared_error: 9.7438e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0464\n",
            "Epoch 175/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 9.3535e-04 - mean_squared_error: 9.3535e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0477\n",
            "Epoch 176/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 7.6212e-04 - mean_squared_error: 7.6212e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0532\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5512<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3db2ad6ee7bb457ba70c1eda709fe2d2",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.76MB of 0.76MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_125901-ia75scc5/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_125901-ia75scc5/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>175</td></tr><tr><td>loss</td><td>0.00081</td></tr><tr><td>mean_squared_error</td><td>0.00081</td></tr><tr><td>mean_absolute_error</td><td>0.02001</td></tr><tr><td>val_loss</td><td>0.00539</td></tr><tr><td>val_mean_squared_error</td><td>0.00539</td></tr><tr><td>val_mean_absolute_error</td><td>0.05318</td></tr><tr><td>_runtime</td><td>35</td></tr><tr><td>_timestamp</td><td>1626699576</td></tr><tr><td>_step</td><td>175</td></tr><tr><td>best_val_loss</td><td>0.00391</td></tr><tr><td>best_epoch</td><td>165</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▇▃▃▂▄▃▂▃▂▂▃▂▁▂▂▃▂▂▂▁▁▁▁▂▂▁▁▁▁▁▁▂▁▁▂▂▂▂▁</td></tr><tr><td>mean_squared_error</td><td>█▇▃▃▂▄▃▂▃▂▂▃▂▁▂▂▃▂▂▂▁▁▁▁▂▂▁▁▁▁▁▁▂▁▁▂▂▂▂▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▃▃▂▄▃▃▄▂▃▃▂▁▂▂▃▂▃▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▂▂▂▂▁</td></tr><tr><td>val_loss</td><td>█▇▆█▅▅▄▄▄▃▅▄▃▃█▆▃▃▄▄▂▂▂▂▂▂▂▄▃▁▂▂▂▁▂▂▂▁▂▃</td></tr><tr><td>val_mean_squared_error</td><td>█▇▆█▅▅▄▄▄▃▅▄▃▃█▆▃▃▄▄▂▂▂▂▂▂▂▄▃▁▂▂▂▁▂▂▂▁▂▃</td></tr><tr><td>val_mean_absolute_error</td><td>▇▆▆█▅▄▄▃▃▄▆▃▂▃█▅▂▃▃▂▃▃▂▂▂▁▁▃▄▁▂▁▂▁▂▁▁▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">hearty-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/ia75scc5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/ia75scc5</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: yjvjutam with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">wobbly-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/yjvjutam\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/yjvjutam</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_125956-yjvjutam</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 8s 365ms/step - loss: 0.1137 - mean_squared_error: 0.1137 - mean_absolute_error: 0.2596 - val_loss: 0.0314 - val_mean_squared_error: 0.0314 - val_mean_absolute_error: 0.1545\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 2s 205ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0831 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0641\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 181ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0512 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0670\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 180ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0405 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0666\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0374 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0675\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0385 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0674\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 2s 187ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0368 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0630\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0319 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0617\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0347 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0627\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 163ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0328 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0640\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 154ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0281 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0824\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0344 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0665\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0798\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0341 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0669\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0616\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 2s 212ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0623\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 2s 205ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0288 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0645\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0297 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0611\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0295 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0736\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 184ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0381 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0676\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0331 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0607\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 187ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0312 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0609\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0303 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0605\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0302 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0604\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0323 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0652\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 1s 173ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0287 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0608\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 2s 194ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0293 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0685\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0400 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0613\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 2s 191ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0338 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0607\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0614\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0271 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0596\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 1s 190ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0602\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0668\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 184ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0284 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0612\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0267 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0609\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0266 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0642\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0611\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0653\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 2s 191ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0283 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0610\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0651\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0670\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0594\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 2s 189ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0279 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0632\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0309 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0606\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0595\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 2s 186ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0666\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0592\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 1s 181ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0597\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 1s 179ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0604\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0670\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0328 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0588\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 1s 157ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0595\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0587\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 2s 189ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0604\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 1s 168ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0254 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0594\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 1s 173ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0318 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0598\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 1s 188ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0262 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0683\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0378 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0639\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0590\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 1s 192ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0608\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0616\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 1s 179ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0596\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0250 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0623\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0265 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0613\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0653\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 2s 189ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0304 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0595\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0252 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0584\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0244 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0580\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 1s 181ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0597\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0601\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0582\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0592\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 2s 188ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0599\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0278 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0585\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0262 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0578\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0269 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0586\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 1s 173ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0590\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 1s 175ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0270 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0580\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 1s 184ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0262 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0640\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0261 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0578\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 1s 181ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0295 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0579\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 1s 167ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0274 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0591\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 1s 179ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0664\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0285 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0607\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 2s 206ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0254 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0576\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 1s 188ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0578\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 1s 182ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0612\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0576\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 2s 206ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0568\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 2s 187ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0622\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0341 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0611\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0585\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0576\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 1s 182ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0589\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0275 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0657\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0253 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0584\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 1s 190ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0590\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 1s 188ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0244 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0570\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0238 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0566\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0561\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6095<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f5d3ac28e1094e558ebdbca1d052ee8a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.96MB of 0.96MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_125956-yjvjutam/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_125956-yjvjutam/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00122</td></tr><tr><td>mean_squared_error</td><td>0.00122</td></tr><tr><td>mean_absolute_error</td><td>0.02433</td></tr><tr><td>val_loss</td><td>0.00592</td></tr><tr><td>val_mean_squared_error</td><td>0.00592</td></tr><tr><td>val_mean_absolute_error</td><td>0.05614</td></tr><tr><td>_runtime</td><td>165</td></tr><tr><td>_timestamp</td><td>1626699761</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00587</td></tr><tr><td>best_epoch</td><td>98</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▁▃▃▁▁▁▁▁▁▁▁▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">wobbly-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/yjvjutam\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/yjvjutam</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: dapij437 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">electric-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/dapij437\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/dapij437</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_130249-dapij437</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "31/31 [==============================] - 6s 46ms/step - loss: 0.1372 - mean_squared_error: 0.1372 - mean_absolute_error: 0.2408 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0633\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0594 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1367\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0842 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0586\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0640 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1132\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0674 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1046\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0609 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0598\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0431 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0473\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0477 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.1052\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0588 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0456\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0402 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0472\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0376 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0695\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0481 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0431\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0374 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0629\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0407 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0693\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0432 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.1044\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0416 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0575\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0432 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0379 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0372 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0408\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0406 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0676\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0396 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0723\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0417 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0438\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0386 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0535\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0392\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0530\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0334 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0511\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0326 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.1031\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0314 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0492\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 0s 12ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0326 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0463\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6450<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4d4f59afae0647188d0064d67c6e1693",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.81MB of 0.81MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_130249-dapij437/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_130249-dapij437/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>28</td></tr><tr><td>loss</td><td>0.00184</td></tr><tr><td>mean_squared_error</td><td>0.00184</td></tr><tr><td>mean_absolute_error</td><td>0.0313</td></tr><tr><td>val_loss</td><td>0.00404</td></tr><tr><td>val_mean_squared_error</td><td>0.00404</td></tr><tr><td>val_mean_absolute_error</td><td>0.04635</td></tr><tr><td>_runtime</td><td>21</td></tr><tr><td>_timestamp</td><td>1626699790</td></tr><tr><td>_step</td><td>28</td></tr><tr><td>best_val_loss</td><td>0.00304</td></tr><tr><td>best_epoch</td><td>18</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▄▃▃▃▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂█▂▆▅▂▂▅▁▁▃▁▂▃▅▂▁▁▁▃▂▁▁▁▁▁▅▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▂█▂▆▅▂▂▅▁▁▃▁▂▃▅▂▁▁▁▃▂▁▁▁▁▁▅▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▃█▂▆▆▂▂▆▁▂▃▁▃▃▆▂▂▂▁▃▃▁▂▁▂▂▆▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">electric-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/dapij437\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/dapij437</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: v73crks0 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">absurd-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/v73crks0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/v73crks0</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_130320-v73crks0</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 11s 206ms/step - loss: 0.1217 - mean_squared_error: 0.1217 - mean_absolute_error: 0.2059 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0617\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0558 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0589\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0407 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0550\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0328 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0540\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0321 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0579\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0301 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0561\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0379 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0678\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0419 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0650\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0278 - val_loss: 0.0232 - val_mean_squared_error: 0.0232 - val_mean_absolute_error: 0.1379\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0514 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0562\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0309 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0533\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0301 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0528\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0240 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0658\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 6s 200ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0283 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0751\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 6s 197ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0406 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0479\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0295 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0526\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0320 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0645\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0354 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0909\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0369 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0274 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0606\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 6s 199ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0266 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0561\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0267 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0496\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0289 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0309 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0519\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0475\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0270 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0454\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0261 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0553\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0245 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0505\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0284 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0557\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0298 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0476\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0257 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0786\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0309 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0454\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 9.9987e-04 - mean_squared_error: 9.9987e-04 - mean_absolute_error: 0.0233 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0447\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 9.6853e-04 - mean_squared_error: 9.6853e-04 - mean_absolute_error: 0.0240 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0486\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0858\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0298 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0504\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0286 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0427\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0479\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0259 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0428\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 5s 170ms/step - loss: 9.1834e-04 - mean_squared_error: 9.1834e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0580\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 5s 171ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0267 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0450\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 7.8932e-04 - mean_squared_error: 7.8932e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0528\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 5s 177ms/step - loss: 8.3984e-04 - mean_squared_error: 8.3984e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0431\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 5s 172ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0234 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0418\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 5s 172ms/step - loss: 7.0328e-04 - mean_squared_error: 7.0328e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0786\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 5s 176ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0287 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0448\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 8.1117e-04 - mean_squared_error: 8.1117e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0410\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 9.0889e-04 - mean_squared_error: 9.0889e-04 - mean_absolute_error: 0.0236 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0429\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 8.7206e-04 - mean_squared_error: 8.7206e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0426\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0427\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 7.6838e-04 - mean_squared_error: 7.6838e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0532\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 6s 178ms/step - loss: 8.6750e-04 - mean_squared_error: 8.6750e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0412\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 9.1881e-04 - mean_squared_error: 9.1881e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0424\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 6s 197ms/step - loss: 7.6341e-04 - mean_squared_error: 7.6341e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0480\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 6s 196ms/step - loss: 7.9382e-04 - mean_squared_error: 7.9382e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0411\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 9.8240e-04 - mean_squared_error: 9.8240e-04 - mean_absolute_error: 0.0239 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0565\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 8.2028e-04 - mean_squared_error: 8.2028e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0408\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 8.5730e-04 - mean_squared_error: 8.5730e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 7.2419e-04 - mean_squared_error: 7.2419e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0405\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 7.5376e-04 - mean_squared_error: 7.5376e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0528\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 6s 199ms/step - loss: 7.5888e-04 - mean_squared_error: 7.5888e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0411\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0234 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0429\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0261 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0410\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 9.6416e-04 - mean_squared_error: 9.6416e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 6.7906e-04 - mean_squared_error: 6.7906e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 6s 178ms/step - loss: 7.6318e-04 - mean_squared_error: 7.6318e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0441\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 7.4508e-04 - mean_squared_error: 7.4508e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0493\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0247 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0482\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.7640e-04 - mean_squared_error: 6.7640e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 5.3316e-04 - mean_squared_error: 5.3316e-04 - mean_absolute_error: 0.0179 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0395\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 6.8888e-04 - mean_squared_error: 6.8888e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0404\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 7.5663e-04 - mean_squared_error: 7.5663e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0401\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 6.7315e-04 - mean_squared_error: 6.7315e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0638\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0373\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 6.1390e-04 - mean_squared_error: 6.1390e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0393\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 7.7147e-04 - mean_squared_error: 7.7147e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0379\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 7.1920e-04 - mean_squared_error: 7.1920e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0390\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 7.8179e-04 - mean_squared_error: 7.8179e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0383\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 7.5158e-04 - mean_squared_error: 7.5158e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0365\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 6.0444e-04 - mean_squared_error: 6.0444e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 7.5641e-04 - mean_squared_error: 7.5641e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0391\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 6.3851e-04 - mean_squared_error: 6.3851e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0467\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 6.9267e-04 - mean_squared_error: 6.9267e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0392\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 6.9063e-04 - mean_squared_error: 6.9063e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0405\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 6.8439e-04 - mean_squared_error: 6.8439e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0478\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0375\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 6.7451e-04 - mean_squared_error: 6.7451e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 5s 173ms/step - loss: 8.0299e-04 - mean_squared_error: 8.0299e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0484\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0250 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0379\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6592<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "6b2787400ea447edb92b2d9868d2a16b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.01MB of 1.01MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_130320-v73crks0/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_130320-v73crks0/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>88</td></tr><tr><td>loss</td><td>0.00085</td></tr><tr><td>mean_squared_error</td><td>0.00085</td></tr><tr><td>mean_absolute_error</td><td>0.02145</td></tr><tr><td>val_loss</td><td>0.00259</td></tr><tr><td>val_mean_squared_error</td><td>0.00259</td></tr><tr><td>val_mean_absolute_error</td><td>0.03787</td></tr><tr><td>_runtime</td><td>526</td></tr><tr><td>_timestamp</td><td>1626700327</td></tr><tr><td>_step</td><td>88</td></tr><tr><td>best_val_loss</td><td>0.00256</td></tr><tr><td>best_epoch</td><td>78</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▃▃▃▂▂▂▂▂▂▁▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅▄▄▅▃▃█▃▃▃▂▃▃▂▂▃▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▁▅▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▅▄▄▅▃▃█▃▃▃▂▃▃▂▂▃▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▁▅▁▁▁▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆▄▅▇▅▄█▄▃▅▃▃▄▃▃▃▂▂▃▂▂▂▂▂▂▂▂▂▃▂▃▂▆▁▁▁▃▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">absurd-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/v73crks0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/v73crks0</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: do0oeuqj with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">youthful-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/do0oeuqj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/do0oeuqj</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_131258-do0oeuqj</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 12s 226ms/step - loss: 0.0285 - mean_squared_error: 0.0285 - mean_absolute_error: 0.1022 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.1093\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0632 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.1091\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0506 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0588\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0371 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0644\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0361 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0551\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 6s 180ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0356 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0743\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0374 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0688\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0335 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0510\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0319 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0573\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0304 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0518\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0684\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0318 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0571\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0500\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0538\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0559\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0284 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0476\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0256 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0304 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0490\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 6s 177ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0258 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 5s 169ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0271 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0566\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0271 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0472\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0664\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0307 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0509\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 6s 189ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0280 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0527\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0522\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0260 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0452\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 6s 199ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0269 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0535\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0266 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0446\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 6s 196ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0238 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0445\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0264 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0631\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 6s 205ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0258 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0441\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0455\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0273 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0443\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0460\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 6s 198ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0500\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 6s 200ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0500\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 6s 198ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0439\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 6s 200ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0430\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 9.6033e-04 - mean_squared_error: 9.6033e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0491\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0427\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 9.8434e-04 - mean_squared_error: 9.8434e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0496\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0421\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0428\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 5s 175ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0427\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0414\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 9.5532e-04 - mean_squared_error: 9.5532e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0480\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 9.9353e-04 - mean_squared_error: 9.9353e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0414\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0434\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0516\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0412\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6922<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9b1da05c97844e2c969899ef2f5a7236",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.87MB of 0.87MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_131258-do0oeuqj/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_131258-do0oeuqj/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00102</td></tr><tr><td>mean_squared_error</td><td>0.00102</td></tr><tr><td>mean_absolute_error</td><td>0.02236</td></tr><tr><td>val_loss</td><td>0.00307</td></tr><tr><td>val_mean_squared_error</td><td>0.00307</td></tr><tr><td>val_mean_absolute_error</td><td>0.04123</td></tr><tr><td>_runtime</td><td>303</td></tr><tr><td>_timestamp</td><td>1626700681</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00307</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>██▃▃▄▃▂▂▄▂▂▂▂▂▂▂▁▃▂▂▂▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>██▃▃▄▃▂▂▄▂▂▂▂▂▂▂▁▃▂▂▂▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▃▃▄▄▂▃▄▃▂▂▂▂▂▂▂▄▂▂▁▂▁▁▁▁▁▁▂▁▁▂▂▁▁▁▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">youthful-sweep-21</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/do0oeuqj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/do0oeuqj</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: hd6vusmc with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">celestial-sweep-22</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/hd6vusmc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/hd6vusmc</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_131844-hd6vusmc</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 8s 262ms/step - loss: 0.0511 - mean_squared_error: 0.0511 - mean_absolute_error: 0.1545 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.0990\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 3s 186ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0601 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0739\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 3s 186ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0470 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0747\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0373 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0698\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0353 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0680\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0320 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0639\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 3s 209ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0316 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0620\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 3s 194ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0326 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0662\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 3s 183ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0330 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0600\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 3s 178ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0318 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0592\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 3s 189ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0287 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0584\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0573\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 3s 191ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0284 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0578\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0600\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0579\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0566\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 3s 196ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0548\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 3s 196ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0271 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0577\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 3s 189ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0290 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0540\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 3s 197ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0253 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0547\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 3s 193ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0251 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0553\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0548\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0250 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0564\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 3s 192ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0540\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 3s 194ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0541\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0544\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0554\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 3s 204ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0533\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 3s 192ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0527\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0257 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0533\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 3s 204ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0238 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0527\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0544\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 3s 205ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0529\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 3s 191ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0607\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0267 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0563\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 3s 197ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0546\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0248 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0535\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 3s 200ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0515\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 3s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0513\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0552\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 3s 191ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0521\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 3s 178ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0520\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 3s 170ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0505\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 3s 175ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0221 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0508\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 3s 184ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0242 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0505\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 3s 186ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0218 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0509\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 3s 181ms/step - loss: 9.5799e-04 - mean_squared_error: 9.5799e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0502\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 3s 179ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0219 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0514\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 3s 178ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0593\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 3s 181ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0235 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0504\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 3s 194ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0523\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0520\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0216 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 3s 186ms/step - loss: 8.3574e-04 - mean_squared_error: 8.3574e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 3s 175ms/step - loss: 8.3937e-04 - mean_squared_error: 8.3937e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0533\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 3s 180ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 8.6047e-04 - mean_squared_error: 8.6047e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0511\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 3s 179ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0516\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0488\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 3s 191ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0217 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0491\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 9.1866e-04 - mean_squared_error: 9.1866e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0489\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 3s 175ms/step - loss: 9.9506e-04 - mean_squared_error: 9.9506e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0498\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 3s 181ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0484\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 3s 184ms/step - loss: 8.9460e-04 - mean_squared_error: 8.9460e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0484\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 3s 186ms/step - loss: 8.1427e-04 - mean_squared_error: 8.1427e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0482\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 3s 192ms/step - loss: 9.4850e-04 - mean_squared_error: 9.4850e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0530\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 3s 165ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0492\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 3s 181ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0226 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0484\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 3s 184ms/step - loss: 8.4470e-04 - mean_squared_error: 8.4470e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0500\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 3s 178ms/step - loss: 9.8317e-04 - mean_squared_error: 9.8317e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0477\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 3s 191ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0228 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0506\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 3s 202ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0480\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 3s 195ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0475\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 3s 197ms/step - loss: 9.3819e-04 - mean_squared_error: 9.3819e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0473\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0497\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 3s 180ms/step - loss: 7.4715e-04 - mean_squared_error: 7.4715e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0475\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0478\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 3s 180ms/step - loss: 9.2874e-04 - mean_squared_error: 9.2874e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0477\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 3s 182ms/step - loss: 8.0713e-04 - mean_squared_error: 8.0713e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0481\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 3s 191ms/step - loss: 9.7274e-04 - mean_squared_error: 9.7274e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0471\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 8.5367e-04 - mean_squared_error: 8.5367e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0480\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 8.1038e-04 - mean_squared_error: 8.1038e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0467\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 3s 179ms/step - loss: 8.6766e-04 - mean_squared_error: 8.6766e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0470\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 3s 175ms/step - loss: 8.4843e-04 - mean_squared_error: 8.4843e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0459\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 9.4723e-04 - mean_squared_error: 9.4723e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0511\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 3s 182ms/step - loss: 8.9851e-04 - mean_squared_error: 8.9851e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0460\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 3s 192ms/step - loss: 8.6179e-04 - mean_squared_error: 8.6179e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0471\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 3s 166ms/step - loss: 7.9742e-04 - mean_squared_error: 7.9742e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0467\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 3s 179ms/step - loss: 7.7693e-04 - mean_squared_error: 7.7693e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0475\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 3s 183ms/step - loss: 7.0456e-04 - mean_squared_error: 7.0456e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0486\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 9.3841e-04 - mean_squared_error: 9.3841e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0462\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 3s 187ms/step - loss: 8.0758e-04 - mean_squared_error: 8.0758e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0455\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 3s 193ms/step - loss: 8.1414e-04 - mean_squared_error: 8.1414e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0512\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 9.6149e-04 - mean_squared_error: 9.6149e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0492\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 3s 179ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0215 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0452\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 7.8721e-04 - mean_squared_error: 7.8721e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0492\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 3s 177ms/step - loss: 8.6080e-04 - mean_squared_error: 8.6080e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0463\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 3s 168ms/step - loss: 8.6060e-04 - mean_squared_error: 8.6060e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0450\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0219 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0478\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 3s 183ms/step - loss: 8.6660e-04 - mean_squared_error: 8.6660e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0484\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7153<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "70e4d3f08815401a9ca90f998774695a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.07MB of 1.07MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_131844-hd6vusmc/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_131844-hd6vusmc/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00087</td></tr><tr><td>mean_squared_error</td><td>0.00087</td></tr><tr><td>mean_absolute_error</td><td>0.02094</td></tr><tr><td>val_loss</td><td>0.00465</td></tr><tr><td>val_mean_squared_error</td><td>0.00465</td></tr><tr><td>val_mean_absolute_error</td><td>0.0484</td></tr><tr><td>_runtime</td><td>313</td></tr><tr><td>_timestamp</td><td>1626701037</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00369</td></tr><tr><td>best_epoch</td><td>97</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▃▄▃▃▂▃▂▂▂▂▂▃▂▂▂▂▂▃▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">celestial-sweep-22</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/hd6vusmc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/hd6vusmc</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 6mkxc8sg with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">icy-sweep-23</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6mkxc8sg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6mkxc8sg</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_132407-6mkxc8sg</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 11s 230ms/step - loss: 0.0277 - mean_squared_error: 0.0277 - mean_absolute_error: 0.0971 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0596\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0514 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0771\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 5s 159ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0424 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1260\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 5s 171ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0419 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0532\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0358 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0700\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0342 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0513\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0309 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0658\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0302 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0531\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 5s 177ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0301 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0540\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0330 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0504\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0313 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0706\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0302 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0540\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0283 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0627\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0299 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0541\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0283 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0519\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 5s 171ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0247 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0512\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0267 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0674\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 5s 175ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0291 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0527\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 6s 177ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0278 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0477\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 5s 165ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0289 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0666\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0304 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0708\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0812\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0298 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0631\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0541\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0585\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0279 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0550\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0292 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0507\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0244 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0579\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0253 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0496\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0251 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0693\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 5s 177ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0278 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0464\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 5s 166ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0271 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0505\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0253 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0460\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 6s 177ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0475\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0500\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 5s 169ms/step - loss: 9.7305e-04 - mean_squared_error: 9.7305e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0463\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0442\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 5s 176ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0537\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 5s 167ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0263 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0467\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 9.2676e-04 - mean_squared_error: 9.2676e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0489\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 9.8144e-04 - mean_squared_error: 9.8144e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0487\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 5s 174ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0226 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0468\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0506\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 9.9555e-04 - mean_squared_error: 9.9555e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0456\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0461\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 9.1586e-04 - mean_squared_error: 9.1586e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0435\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0649\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 5s 173ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0539\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7510<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "90f3b5a675074d90a3bb3f5119065c18",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.93MB of 0.93MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_132407-6mkxc8sg/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_132407-6mkxc8sg/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00108</td></tr><tr><td>mean_squared_error</td><td>0.00108</td></tr><tr><td>mean_absolute_error</td><td>0.02326</td></tr><tr><td>val_loss</td><td>0.0053</td></tr><tr><td>val_mean_squared_error</td><td>0.0053</td></tr><tr><td>val_mean_absolute_error</td><td>0.05388</td></tr><tr><td>_runtime</td><td>291</td></tr><tr><td>_timestamp</td><td>1626701338</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00353</td></tr><tr><td>best_epoch</td><td>46</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂▃█▂▂▂▂▂▃▁▃▁▁▃▁▁▂▄▁▃▂▂▁▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>▂▃█▂▂▂▂▂▃▁▃▁▁▃▁▁▂▄▁▃▂▂▁▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>▂▄█▂▂▃▂▂▃▂▃▂▂▃▂▁▃▄▁▃▂▂▂▂▃▁▂▁▂▁▁▂▁▁▁▁▁▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">icy-sweep-23</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6mkxc8sg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6mkxc8sg</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: rnx4kdv8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">twilight-sweep-24</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/rnx4kdv8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/rnx4kdv8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_132907-rnx4kdv8</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 5s 156ms/step - loss: 0.1223 - mean_squared_error: 0.1223 - mean_absolute_error: 0.2590 - val_loss: 0.0351 - val_mean_squared_error: 0.0351 - val_mean_absolute_error: 0.1634\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.1092 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0911\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0594 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0885\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0506 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0723\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0406 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0484\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0334 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0496\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0301 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0554\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0501\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0254 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0514\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0546\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0278 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0511\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0515\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0528\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0255 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0521\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0550\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0536\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7717<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4804658b9c5a43ebb78e65f3669852a0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.11MB of 1.11MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_132907-rnx4kdv8/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_132907-rnx4kdv8/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>15</td></tr><tr><td>loss</td><td>0.00126</td></tr><tr><td>mean_squared_error</td><td>0.00126</td></tr><tr><td>mean_absolute_error</td><td>0.02481</td></tr><tr><td>val_loss</td><td>0.00511</td></tr><tr><td>val_mean_squared_error</td><td>0.00511</td></tr><tr><td>val_mean_absolute_error</td><td>0.05358</td></tr><tr><td>_runtime</td><td>12</td></tr><tr><td>_timestamp</td><td>1626701359</td></tr><tr><td>_step</td><td>15</td></tr><tr><td>best_val_loss</td><td>0.0047</td></tr><tr><td>best_epoch</td><td>5</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▃▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▃▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▅▅▅▅▅▅▅█████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▅▅▅▅▅▅▅█████</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▄▄▅▅▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">twilight-sweep-24</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/rnx4kdv8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/rnx4kdv8</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 18246lv2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">splendid-sweep-25</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/18246lv2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/18246lv2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_132931-18246lv2</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "16/16 [==============================] - 9s 258ms/step - loss: 0.0898 - mean_squared_error: 0.0898 - mean_absolute_error: 0.1832 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0748\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 3s 185ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0444 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0701\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 3s 180ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0379 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0806\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 3s 195ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0419 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0655\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 3s 192ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0279 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0634\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 3s 188ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0297 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0719\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 3s 182ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0407 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0633\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0336 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0584\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 3s 195ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0303 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0595\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 3s 196ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0283 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0585\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 4s 240ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0655\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0351 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0569\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 3s 177ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0678\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 3s 193ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0292 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0599\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 3s 181ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0330 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0558\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 3s 195ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0560\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 3s 187ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0562\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 3s 189ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0249 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0764\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 3s 181ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0563\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0541\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 3s 184ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0224 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0583\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 3s 183ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0294 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0569\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 3s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0560\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 3s 196ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0636\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 3s 194ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0633\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0532\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 3s 204ms/step - loss: 9.9340e-04 - mean_squared_error: 9.9340e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0570\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0539\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 3s 200ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0525\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 3s 215ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0656\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 3s 200ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0533\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 3s 209ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0663\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 3s 213ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0299 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0528\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 3s 213ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0598\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 3s 214ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0514\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 3s 212ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0528\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 3s 195ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0682\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 3s 200ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0361 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0649\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0266 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0548\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 9.5153e-04 - mean_squared_error: 9.5153e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0601\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0505\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 9.8431e-04 - mean_squared_error: 9.8431e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0495\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 3s 208ms/step - loss: 8.9795e-04 - mean_squared_error: 8.9795e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0645\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 3s 205ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0506\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 7.5804e-04 - mean_squared_error: 7.5804e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0514\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 8.8164e-04 - mean_squared_error: 8.8164e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0491\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 3s 215ms/step - loss: 8.9203e-04 - mean_squared_error: 8.9203e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0595\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 3s 200ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0587\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 3s 210ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0524\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0517\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 9.0451e-04 - mean_squared_error: 9.0451e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0666\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 3s 210ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0290 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0496\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 3s 184ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0528\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 3s 202ms/step - loss: 9.1229e-04 - mean_squared_error: 9.1229e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0474\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 3s 209ms/step - loss: 8.3994e-04 - mean_squared_error: 8.3994e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0473\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 3s 217ms/step - loss: 8.9889e-04 - mean_squared_error: 8.9889e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0516\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 9.2933e-04 - mean_squared_error: 9.2933e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0512\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 3s 202ms/step - loss: 8.3472e-04 - mean_squared_error: 8.3472e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0611\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 3s 205ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0464\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 8.7458e-04 - mean_squared_error: 8.7458e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0470\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 3s 198ms/step - loss: 8.8974e-04 - mean_squared_error: 8.8974e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0462\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 3s 214ms/step - loss: 9.4329e-04 - mean_squared_error: 9.4329e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0487\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0653\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 3s 202ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0250 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0463\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 3s 194ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0217 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0452\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 3s 202ms/step - loss: 7.8789e-04 - mean_squared_error: 7.8789e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0462\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 8.0142e-04 - mean_squared_error: 8.0142e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0451\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 3s 198ms/step - loss: 7.7881e-04 - mean_squared_error: 7.7881e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0490\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 3s 204ms/step - loss: 9.7944e-04 - mean_squared_error: 9.7944e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0452\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 3s 179ms/step - loss: 8.6520e-04 - mean_squared_error: 8.6520e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0481\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 3s 220ms/step - loss: 7.4956e-04 - mean_squared_error: 7.4956e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0638\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 3s 213ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0274 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0512\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 8.5481e-04 - mean_squared_error: 8.5481e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0523\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 9.5370e-04 - mean_squared_error: 9.5370e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0627\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 3s 202ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0443\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 3s 210ms/step - loss: 7.2382e-04 - mean_squared_error: 7.2382e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0441\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 3s 211ms/step - loss: 8.6027e-04 - mean_squared_error: 8.6027e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0441\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 9.0835e-04 - mean_squared_error: 9.0835e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0440\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 8.4446e-04 - mean_squared_error: 8.4446e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0437\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 6.7551e-04 - mean_squared_error: 6.7551e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0435\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 3s 210ms/step - loss: 7.3317e-04 - mean_squared_error: 7.3317e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0434\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 3s 212ms/step - loss: 9.7016e-04 - mean_squared_error: 9.7016e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0450\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 8.2493e-04 - mean_squared_error: 8.2493e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0441\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 8.2573e-04 - mean_squared_error: 8.2573e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0542\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 3s 215ms/step - loss: 7.5238e-04 - mean_squared_error: 7.5238e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0478\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 9.2802e-04 - mean_squared_error: 9.2802e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0434\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 7.7180e-04 - mean_squared_error: 7.7180e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0474\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 8.7723e-04 - mean_squared_error: 8.7723e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0570\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 3s 213ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0458\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 3s 205ms/step - loss: 7.2034e-04 - mean_squared_error: 7.2034e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0423\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 3s 203ms/step - loss: 7.3841e-04 - mean_squared_error: 7.3841e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0422\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 3s 198ms/step - loss: 7.9757e-04 - mean_squared_error: 7.9757e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0496\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 3s 208ms/step - loss: 8.9266e-04 - mean_squared_error: 8.9266e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0417\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 3s 192ms/step - loss: 8.5877e-04 - mean_squared_error: 8.5877e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0436\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 3s 203ms/step - loss: 6.5963e-04 - mean_squared_error: 6.5963e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0461\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 3s 217ms/step - loss: 7.0858e-04 - mean_squared_error: 7.0858e-04 - mean_absolute_error: 0.0190 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0429\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 3s 190ms/step - loss: 6.5034e-04 - mean_squared_error: 6.5034e-04 - mean_absolute_error: 0.0184 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 3s 179ms/step - loss: 9.7146e-04 - mean_squared_error: 9.7146e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 3s 184ms/step - loss: 7.2966e-04 - mean_squared_error: 7.2966e-04 - mean_absolute_error: 0.0195 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0441\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 3s 211ms/step - loss: 7.1039e-04 - mean_squared_error: 7.1039e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0440\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 3s 187ms/step - loss: 6.4113e-04 - mean_squared_error: 6.4113e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0414\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 3s 203ms/step - loss: 7.6495e-04 - mean_squared_error: 7.6495e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 3s 209ms/step - loss: 9.6384e-04 - mean_squared_error: 9.6384e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0437\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 3s 209ms/step - loss: 7.4343e-04 - mean_squared_error: 7.4343e-04 - mean_absolute_error: 0.0186 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0417\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 5.7979e-04 - mean_squared_error: 5.7979e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0529\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 3s 210ms/step - loss: 9.8427e-04 - mean_squared_error: 9.8427e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0415\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 3s 200ms/step - loss: 7.4133e-04 - mean_squared_error: 7.4133e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0403\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 3s 203ms/step - loss: 6.8351e-04 - mean_squared_error: 6.8351e-04 - mean_absolute_error: 0.0191 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0426\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 3s 206ms/step - loss: 7.3503e-04 - mean_squared_error: 7.3503e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0410\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 3s 197ms/step - loss: 6.9233e-04 - mean_squared_error: 6.9233e-04 - mean_absolute_error: 0.0188 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0403\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 3s 187ms/step - loss: 7.8063e-04 - mean_squared_error: 7.8063e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0399\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 3s 216ms/step - loss: 7.6455e-04 - mean_squared_error: 7.6455e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0407\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 3s 205ms/step - loss: 9.0193e-04 - mean_squared_error: 9.0193e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0420\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 3s 203ms/step - loss: 7.4565e-04 - mean_squared_error: 7.4565e-04 - mean_absolute_error: 0.0196 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0400\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 7.4503e-04 - mean_squared_error: 7.4503e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0515\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 3s 213ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0228 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0404\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 3s 203ms/step - loss: 5.4980e-04 - mean_squared_error: 5.4980e-04 - mean_absolute_error: 0.0173 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0756\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 3s 191ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0351 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0565\n",
            "Epoch 119/200\n",
            "16/16 [==============================] - 3s 193ms/step - loss: 8.1716e-04 - mean_squared_error: 8.1716e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0435\n",
            "Epoch 120/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 7.7570e-04 - mean_squared_error: 7.7570e-04 - mean_absolute_error: 0.0193 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0445\n",
            "Epoch 121/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 7.3996e-04 - mean_squared_error: 7.3996e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0408\n",
            "Epoch 122/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 9.2916e-04 - mean_squared_error: 9.2916e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0416\n",
            "Epoch 123/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 9.0051e-04 - mean_squared_error: 9.0051e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0403\n",
            "Epoch 124/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 6.7824e-04 - mean_squared_error: 6.7824e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0400\n",
            "Epoch 125/200\n",
            "16/16 [==============================] - 3s 209ms/step - loss: 7.7111e-04 - mean_squared_error: 7.7111e-04 - mean_absolute_error: 0.0189 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0399\n",
            "Epoch 126/200\n",
            "16/16 [==============================] - 3s 216ms/step - loss: 6.5808e-04 - mean_squared_error: 6.5808e-04 - mean_absolute_error: 0.0181 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0401\n",
            "Epoch 127/200\n",
            "16/16 [==============================] - 3s 218ms/step - loss: 6.8061e-04 - mean_squared_error: 6.8061e-04 - mean_absolute_error: 0.0182 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0425\n",
            "Epoch 128/200\n",
            "16/16 [==============================] - 3s 198ms/step - loss: 6.7541e-04 - mean_squared_error: 6.7541e-04 - mean_absolute_error: 0.0185 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0396\n",
            "Epoch 129/200\n",
            "16/16 [==============================] - 3s 214ms/step - loss: 5.5121e-04 - mean_squared_error: 5.5121e-04 - mean_absolute_error: 0.0172 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0428\n",
            "Epoch 130/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 7.8661e-04 - mean_squared_error: 7.8661e-04 - mean_absolute_error: 0.0192 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0421\n",
            "Epoch 131/200\n",
            "16/16 [==============================] - 3s 201ms/step - loss: 6.6323e-04 - mean_squared_error: 6.6323e-04 - mean_absolute_error: 0.0183 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0418\n",
            "Epoch 132/200\n",
            "16/16 [==============================] - 3s 210ms/step - loss: 6.0698e-04 - mean_squared_error: 6.0698e-04 - mean_absolute_error: 0.0170 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0404\n",
            "Epoch 133/200\n",
            "16/16 [==============================] - 3s 199ms/step - loss: 5.4375e-04 - mean_squared_error: 5.4375e-04 - mean_absolute_error: 0.0168 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0401\n",
            "Epoch 134/200\n",
            "16/16 [==============================] - 3s 207ms/step - loss: 5.6702e-04 - mean_squared_error: 5.6702e-04 - mean_absolute_error: 0.0170 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0384\n",
            "Epoch 135/200\n",
            "16/16 [==============================] - 3s 211ms/step - loss: 5.7444e-04 - mean_squared_error: 5.7444e-04 - mean_absolute_error: 0.0168 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0390\n",
            "Epoch 136/200\n",
            "16/16 [==============================] - 3s 208ms/step - loss: 9.9725e-04 - mean_squared_error: 9.9725e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0410\n",
            "Epoch 137/200\n",
            "16/16 [==============================] - 3s 214ms/step - loss: 6.9671e-04 - mean_squared_error: 6.9671e-04 - mean_absolute_error: 0.0187 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0487\n",
            "Epoch 138/200\n",
            "16/16 [==============================] - 3s 219ms/step - loss: 7.3352e-04 - mean_squared_error: 7.3352e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7820<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "801bf1c9822c470a880ea82259faa8b0",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.15MB of 1.15MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_132931-18246lv2/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_132931-18246lv2/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>137</td></tr><tr><td>loss</td><td>0.00074</td></tr><tr><td>mean_squared_error</td><td>0.00074</td></tr><tr><td>mean_absolute_error</td><td>0.01942</td></tr><tr><td>val_loss</td><td>0.00321</td></tr><tr><td>val_mean_squared_error</td><td>0.00321</td></tr><tr><td>val_mean_absolute_error</td><td>0.04574</td></tr><tr><td>_runtime</td><td>459</td></tr><tr><td>_timestamp</td><td>1626701830</td></tr><tr><td>_step</td><td>137</td></tr><tr><td>best_val_loss</td><td>0.0028</td></tr><tr><td>best_epoch</td><td>127</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▇▅▄▄▂▄▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▃▂▂▂▁▂▂▂▁▂▂▂▁▂▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▇▅▄▄▂▄▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▃▂▂▂▁▂▂▂▁▂▂▂▁▂▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>██▆▅▅▃▄▃▃▃▃▂▂▂▃▂▂▂▃▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂</td></tr><tr><td>val_loss</td><td>▇▆▄▄▄█▃▃▄▄▃▅▃▃▂▂▂▂▂▂▂▃▂▂▂▄▃▁▁▂▂▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▆▄▄▄█▃▃▄▄▃▅▃▃▂▂▂▂▂▂▂▃▂▂▂▄▃▁▁▂▂▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▆▅▄▅█▄▄▄▆▄▅▃▃▃▃▃▃▂▃▃▅▂▂▄▄▃▂▂▃▂▁▁▁▂▁▁▂▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">splendid-sweep-25</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/18246lv2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/18246lv2</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: vln35eu0 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">major-sweep-26</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vln35eu0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vln35eu0</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_133809-vln35eu0</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 8s 389ms/step - loss: 0.1051 - mean_squared_error: 0.1051 - mean_absolute_error: 0.2299 - val_loss: 0.0186 - val_mean_squared_error: 0.0186 - val_mean_absolute_error: 0.0959\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 2s 211ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0742 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0836\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 2s 213ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0576 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0747\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0486 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0824\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0464 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0738\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 2s 221ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0415 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0749\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 2s 218ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0386 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0679\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0344 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0698\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0359 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0668\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 2s 218ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0354 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0676\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0345 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0658\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 2s 220ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0319 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0651\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 2s 214ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0312 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0661\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 2s 218ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0644\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0645\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0306 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0636\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 2s 191ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0306 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0636\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0626\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0317 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0623\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0292 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0620\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 2s 209ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0305 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0615\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0300 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0620\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 2s 219ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0605\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0295 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0604\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0283 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0603\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0601\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0603\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0288 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0600\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 2s 189ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0597\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0594\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 2s 214ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0585\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0266 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0584\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0584\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 191ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0266 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0591\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0605\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 2s 214ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0267 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0599\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0582\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0249 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0583\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0579\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0575\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0571\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0574\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 2s 212ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0571\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 2s 221ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0576\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 2s 225ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0257 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0580\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0263 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0571\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 2s 206ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0565\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 2s 212ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0568\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0246 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0564\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 2s 218ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0252 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0565\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0565\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0566\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 2s 223ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0562\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0559\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0562\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0232 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0558\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 2s 212ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0580\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0274 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0573\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0253 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0559\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0560\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0557\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0566\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 169ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0553\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 186ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0553\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 187ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0236 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0563\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0556\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 2s 222ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0556\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 2s 233ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0242 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0552\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 2s 222ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0550\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0236 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0560\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0552\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0555\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 2s 211ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0237 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0547\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0544\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0547\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 2s 194ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0226 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0556\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0547\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 2s 227ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0224 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0547\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0556\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0546\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 2s 186ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0236 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0541\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 2s 205ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0545\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0229 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0544\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0544\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0227 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0553\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 2s 211ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0232 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0547\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0543\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0541\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 9.5697e-04 - mean_squared_error: 9.5697e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0541\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0548\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0227 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0534\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 2s 230ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0533\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0532\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 9.9144e-04 - mean_squared_error: 9.9144e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0547\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0532\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0232 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0533\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 188ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0548\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0226 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0541\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0539\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 2s 223ms/step - loss: 8.8207e-04 - mean_squared_error: 8.8207e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0535\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 2s 222ms/step - loss: 9.6990e-04 - mean_squared_error: 9.6990e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0539\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 9.7619e-04 - mean_squared_error: 9.7619e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0531\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 9.7578e-04 - mean_squared_error: 9.7578e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0534\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 2s 205ms/step - loss: 9.3027e-04 - mean_squared_error: 9.3027e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0528\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 2s 221ms/step - loss: 9.4122e-04 - mean_squared_error: 9.4122e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0528\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 2s 205ms/step - loss: 9.9338e-04 - mean_squared_error: 9.9338e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0537\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 2s 216ms/step - loss: 9.7550e-04 - mean_squared_error: 9.7550e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0526\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 9.5029e-04 - mean_squared_error: 9.5029e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0542\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 180ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0525\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 8.7955e-04 - mean_squared_error: 8.7955e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0524\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 2s 220ms/step - loss: 9.2311e-04 - mean_squared_error: 9.2311e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0525\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 2s 209ms/step - loss: 9.2542e-04 - mean_squared_error: 9.2542e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0520\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 9.8917e-04 - mean_squared_error: 9.8917e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0525\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 2s 206ms/step - loss: 9.8123e-04 - mean_squared_error: 9.8123e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0528\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 2s 218ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0225 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0525\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 7.9702e-04 - mean_squared_error: 7.9702e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0524\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 2s 209ms/step - loss: 8.7148e-04 - mean_squared_error: 8.7148e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0523\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 2s 216ms/step - loss: 9.2442e-04 - mean_squared_error: 9.2442e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0524\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 2s 214ms/step - loss: 9.2058e-04 - mean_squared_error: 9.2058e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0516\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 9.1784e-04 - mean_squared_error: 9.1784e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0516\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 8.2876e-04 - mean_squared_error: 8.2876e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0523\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 2s 214ms/step - loss: 9.0370e-04 - mean_squared_error: 9.0370e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0518\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 2s 213ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0521\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 2s 218ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0517\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0218 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0520\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 2s 217ms/step - loss: 9.2493e-04 - mean_squared_error: 9.2493e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0518\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 2s 215ms/step - loss: 7.9502e-04 - mean_squared_error: 7.9502e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0520\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 9.6631e-04 - mean_squared_error: 9.6631e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0517\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 9.4937e-04 - mean_squared_error: 9.4937e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0515\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 9.2117e-04 - mean_squared_error: 9.2117e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0516\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 2s 213ms/step - loss: 9.4943e-04 - mean_squared_error: 9.4943e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0517\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 2s 220ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0221 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0511\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 2s 203ms/step - loss: 9.1833e-04 - mean_squared_error: 9.1833e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0513\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 9.6629e-04 - mean_squared_error: 9.6629e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0513\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 2s 213ms/step - loss: 8.2710e-04 - mean_squared_error: 8.2710e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0511\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 9.2061e-04 - mean_squared_error: 9.2061e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0511\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 8.1849e-04 - mean_squared_error: 8.1849e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0511\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0220 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0509\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 2s 208ms/step - loss: 9.2455e-04 - mean_squared_error: 9.2455e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0510\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 2s 210ms/step - loss: 9.1066e-04 - mean_squared_error: 9.1066e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0516\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 2s 219ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0517\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 8289<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ae79ec8d5927433cb84f1e44108956f6",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.20MB of 1.20MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_133809-vln35eu0/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_133809-vln35eu0/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>140</td></tr><tr><td>loss</td><td>0.00097</td></tr><tr><td>mean_squared_error</td><td>0.00097</td></tr><tr><td>mean_absolute_error</td><td>0.02226</td></tr><tr><td>val_loss</td><td>0.0052</td></tr><tr><td>val_mean_squared_error</td><td>0.0052</td></tr><tr><td>val_mean_absolute_error</td><td>0.0517</td></tr><tr><td>_runtime</td><td>249</td></tr><tr><td>_timestamp</td><td>1626702138</td></tr><tr><td>_step</td><td>140</td></tr><tr><td>best_val_loss</td><td>0.0047</td></tr><tr><td>best_epoch</td><td>130</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>██▅▅▅▄▄▄▃▃▄▃▃▃▂▂▃▂▂▂▂▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>██▅▅▅▄▄▄▃▃▄▃▃▃▂▂▃▂▂▂▂▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▅▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">major-sweep-26</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vln35eu0\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/vln35eu0</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 6ijvfg06 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">electric-sweep-27</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6ijvfg06\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6ijvfg06</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_134229-6ijvfg06</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 12s 244ms/step - loss: 0.1117 - mean_squared_error: 0.1117 - mean_absolute_error: 0.2492 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0987\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 6s 207ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0857 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0756\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 6s 198ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0400 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0644\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 6s 196ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0378 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0641\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 6s 198ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0343 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0632\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 6s 199ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0325 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0642\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0315 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0628\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 6s 205ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0312 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0682\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 6s 209ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0344 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0625\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 6s 196ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0312 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0663\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 6s 195ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0317 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0641\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 6s 202ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0624\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0320 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0677\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 6s 178ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0296 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0620\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 5s 175ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0619\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0623\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0311 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0652\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 6s 177ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0316 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0619\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0306 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0612\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0278 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0614\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0674\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0320 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0607\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0294 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0603\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0626\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0302 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0605\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0305 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0603\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 6s 193ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0279 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0606\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0628\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0287 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0597\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 6s 186ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0297 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0593\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0271 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0607\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0594\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0261 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0591\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0585\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 6s 178ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0604\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0604\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 6s 187ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0275 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0581\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 6s 190ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0293 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0602\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 6s 188ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0264 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0608\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 6s 184ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0579\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 6s 181ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0575\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 6s 192ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0269 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0580\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 6s 179ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0265 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0588\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 6s 182ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0268 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0574\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 5s 167ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0566\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 6s 183ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0572\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 5s 166ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0244 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0584\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 6s 194ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0596\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 6s 191ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0561\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 6s 185ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0566\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 8767<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d17331159f114cb3bb8735f4573a7fa5",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.22MB of 1.22MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_134229-6ijvfg06/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_134229-6ijvfg06/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00131</td></tr><tr><td>mean_squared_error</td><td>0.00131</td></tr><tr><td>mean_absolute_error</td><td>0.02561</td></tr><tr><td>val_loss</td><td>0.00578</td></tr><tr><td>val_mean_squared_error</td><td>0.00578</td></tr><tr><td>val_mean_absolute_error</td><td>0.05662</td></tr><tr><td>_runtime</td><td>304</td></tr><tr><td>_timestamp</td><td>1626702453</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00578</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▂▂▂▂▃▂▂▂▃▂▂▂▂▂▃▂▂▂▂▂▂▂▂▁▁▁▂▁▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">electric-sweep-27</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6ijvfg06\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/6ijvfg06</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: wzvxvnoc with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">morning-sweep-28</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/sweeps/4tzz6xsk</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/wzvxvnoc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/wzvxvnoc</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_134744-wzvxvnoc</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 8s 343ms/step - loss: 0.0586 - mean_squared_error: 0.0586 - mean_absolute_error: 0.1754 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1203\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 178ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0681 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0754\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 187ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0593 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0674\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0507 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0691\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 2s 211ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0443 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0680\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0408 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0680\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0411 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0681\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 2s 194ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0355 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0672\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 2s 205ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0340 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0674\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 183ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0371 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0654\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 191ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0345 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0645\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0350 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0638\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0340 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0647\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0326 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0630\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 182ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0300 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0594\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0306 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0600\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0302 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0590\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0301 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0602\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0304 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0607\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0312 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0603\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0286 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0627\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 2s 205ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0287 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0626\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0314 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0578\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0597\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0289 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0579\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 2s 209ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0571\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 2s 191ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0572\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0262 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0564\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0261 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0573\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 1s 187ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0561\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0569\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0264 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0580\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0274 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0597\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 188ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0607\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0271 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0569\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0268 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0547\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 1s 187ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0553\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0566\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0547\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0254 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0541\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0238 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0543\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0543\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0537\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 1s 190ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0548\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 1s 186ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0544\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 1s 190ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0560\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 1s 187ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0540\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 1s 176ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0247 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0535\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0539\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 1s 179ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0534\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0242 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0547\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0545\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0549\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 2s 191ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0252 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0532\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 1s 191ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0538\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0532\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 1s 183ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0525\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0521\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 2s 188ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0522\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 9.2589e-04 - mean_squared_error: 9.2589e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0533\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0244 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0521\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 2s 204ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0525\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0517\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0527\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 2s 207ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0524\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 2s 202ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0518\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 1s 190ms/step - loss: 8.7592e-04 - mean_squared_error: 8.7592e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0523\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 2s 200ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0521\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 2s 195ms/step - loss: 9.9806e-04 - mean_squared_error: 9.9806e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0526\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 2s 194ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0521\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0520\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 1s 173ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0535\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 1s 164ms/step - loss: 9.6310e-04 - mean_squared_error: 9.6310e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0528\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 1s 178ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0226 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0522\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0236 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0545\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 1s 187ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0562\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 2s 194ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0560\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0247 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0531\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 2s 190ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0229 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0523\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 2s 199ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0520\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 9.3304e-04 - mean_squared_error: 9.3304e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0512\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 2s 191ms/step - loss: 9.5794e-04 - mean_squared_error: 9.5794e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0507\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 8.9493e-04 - mean_squared_error: 8.9493e-04 - mean_absolute_error: 0.0204 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0506\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 9.1959e-04 - mean_squared_error: 9.1959e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0507\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 1s 167ms/step - loss: 8.9836e-04 - mean_squared_error: 8.9836e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0508\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 1s 158ms/step - loss: 9.8952e-04 - mean_squared_error: 9.8952e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0541\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 1s 162ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0546\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 2s 189ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0552\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 2s 192ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0531\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 9.6605e-04 - mean_squared_error: 9.6605e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0513\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 9.5083e-04 - mean_squared_error: 9.5083e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0522\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 2s 193ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 2s 194ms/step - loss: 8.4479e-04 - mean_squared_error: 8.4479e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0495\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 2s 201ms/step - loss: 8.6753e-04 - mean_squared_error: 8.6753e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0511\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 2s 191ms/step - loss: 8.2415e-04 - mean_squared_error: 8.2415e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0499\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 2s 196ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 2s 194ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0227 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0498\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 1s 191ms/step - loss: 8.4976e-04 - mean_squared_error: 8.4976e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0501\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 2s 197ms/step - loss: 8.8933e-04 - mean_squared_error: 8.8933e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 2s 198ms/step - loss: 9.3942e-04 - mean_squared_error: 9.3942e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0508\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 8974<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "146493fe4ab449338ae17eb4a19283d8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.26MB of 1.26MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_134744-wzvxvnoc/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_134744-wzvxvnoc/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00096</td></tr><tr><td>mean_squared_error</td><td>0.00096</td></tr><tr><td>mean_absolute_error</td><td>0.02143</td></tr><tr><td>val_loss</td><td>0.00437</td></tr><tr><td>val_mean_squared_error</td><td>0.00437</td></tr><tr><td>val_mean_absolute_error</td><td>0.05076</td></tr><tr><td>_runtime</td><td>167</td></tr><tr><td>_timestamp</td><td>1626702631</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00437</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▂▁▂▁▁▁▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">morning-sweep-28</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/wzvxvnoc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_LSTM_GRU/runs/wzvxvnoc</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: axlkrj89 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gFTu29dbi18i"
      },
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwsO8cDJPMdj"
      },
      "source": [
        "# picking the best values\n",
        "best_config = {\n",
        "    'epochs': 200,\n",
        "    'batch_size': 32,\n",
        "    'learning_rate': 0.001,\n",
        "    'dropout': 0.2,\n",
        "    'optimizer': 'adam',\n",
        "    'activation': 'tanh'\n",
        "}"
      ],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "7ceffc9e-0802-4eec-f902-7f369065a443"
      },
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# layer 1\n",
        "model.add(LSTM(units=64, activation=best_config['activation'], return_sequences=True, input_shape=(window_len, 1)))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 2\n",
        "model.add(GRU(units=64, activation=best_config['activation']))\n",
        "model.add(Dropout(0.1))\n",
        "# layer 3\n",
        "model.add(Dense(1))\n",
        "\n",
        "# defining the optimiser\n",
        "if best_config['optimizer'] == 'sgd':\n",
        "  optimizer = SGD(learning_rate=best_config['learning_rate'], decay=1e-5, momentum=0.9, nesterov=True)\n",
        "elif best_config['optimizer'] == 'rmsprop':\n",
        "  optimizer = RMSprop(learning_rate=best_config['learning_rate'], decay=1e-5)\n",
        "elif best_config['optimizer'] == 'adam':\n",
        "  optimizer = Adam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "elif best_config['optimizer'] == 'nadam':\n",
        "  optimizer = Nadam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total number of trainable parameters:  41921\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5UG8j_4r7kSu",
        "outputId": "a534aefc-ada4-44a9-dafe-8873ddf2669e"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "lstm (LSTM)                  (None, 30, 64)            16896     \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "gru (GRU)                    (None, 64)                24960     \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 1)                 65        \n",
            "=================================================================\n",
            "Total params: 41,921\n",
            "Trainable params: 41,921\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "683866ae-f441-4fbf-c081-039d31651ffc"
      },
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=best_config['epochs'], batch_size=best_config['batch_size'])"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "39/39 [==============================] - 4s 7ms/step - loss: 0.0471\n",
            "Epoch 2/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 0.0021\n",
            "Epoch 3/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 4/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 5/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0014\n",
            "Epoch 6/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0016\n",
            "Epoch 7/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 8/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 9/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 10/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 9.2326e-04\n",
            "Epoch 11/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 12/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 9.0720e-04\n",
            "Epoch 13/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 9.2197e-04\n",
            "Epoch 14/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 8.6034e-04\n",
            "Epoch 15/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 9.8570e-04\n",
            "Epoch 16/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 17/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0014\n",
            "Epoch 18/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.3486e-04\n",
            "Epoch 19/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 8.2603e-04\n",
            "Epoch 20/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 9.5793e-04\n",
            "Epoch 21/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 22/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 8.5482e-04\n",
            "Epoch 23/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 8.2497e-04\n",
            "Epoch 24/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 8.4754e-04\n",
            "Epoch 25/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 7.5435e-04\n",
            "Epoch 26/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 8.6641e-04\n",
            "Epoch 27/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.0266e-04\n",
            "Epoch 28/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.1196e-04\n",
            "Epoch 29/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 7.4664e-04\n",
            "Epoch 30/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 8.5836e-04\n",
            "Epoch 31/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 6.4268e-04\n",
            "Epoch 32/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 8.8116e-04\n",
            "Epoch 33/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 8.3767e-04\n",
            "Epoch 34/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.5846e-04\n",
            "Epoch 35/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.6407e-04\n",
            "Epoch 36/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 9.1087e-04\n",
            "Epoch 37/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 7.5899e-04\n",
            "Epoch 38/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 7.4596e-04\n",
            "Epoch 39/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 8.7937e-04\n",
            "Epoch 40/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.0224e-04\n",
            "Epoch 41/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.5632e-04\n",
            "Epoch 42/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.2450e-04\n",
            "Epoch 43/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.0707e-04\n",
            "Epoch 44/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.1796e-04\n",
            "Epoch 45/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.6183e-04\n",
            "Epoch 46/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.5545e-04\n",
            "Epoch 47/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3993e-04\n",
            "Epoch 48/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.4428e-04\n",
            "Epoch 49/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.7954e-04\n",
            "Epoch 50/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 8.2138e-04\n",
            "Epoch 51/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.4850e-04\n",
            "Epoch 52/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 5.8472e-04\n",
            "Epoch 53/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.9078e-04\n",
            "Epoch 54/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.7464e-04\n",
            "Epoch 55/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.3544e-04\n",
            "Epoch 56/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.2628e-04\n",
            "Epoch 57/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.6655e-04\n",
            "Epoch 58/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.1327e-04\n",
            "Epoch 59/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.5899e-04\n",
            "Epoch 60/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.6992e-04\n",
            "Epoch 61/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.0998e-04\n",
            "Epoch 62/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.4585e-04\n",
            "Epoch 63/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.7072e-04\n",
            "Epoch 64/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 8.7418e-04\n",
            "Epoch 65/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.1236e-04\n",
            "Epoch 66/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 5.8917e-04\n",
            "Epoch 67/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.4767e-04\n",
            "Epoch 68/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.2391e-04\n",
            "Epoch 69/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3842e-04\n",
            "Epoch 70/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.6365e-04\n",
            "Epoch 71/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 7.0251e-04\n",
            "Epoch 72/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.8063e-04\n",
            "Epoch 73/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.3046e-04\n",
            "Epoch 74/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.8815e-04\n",
            "Epoch 75/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.2674e-04\n",
            "Epoch 76/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.2287e-04\n",
            "Epoch 77/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.5092e-04\n",
            "Epoch 78/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.7031e-04\n",
            "Epoch 79/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5997e-04\n",
            "Epoch 80/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.2858e-04\n",
            "Epoch 81/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.8708e-04\n",
            "Epoch 82/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.0563e-04\n",
            "Epoch 83/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3068e-04\n",
            "Epoch 84/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.4107e-04\n",
            "Epoch 85/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.5914e-04\n",
            "Epoch 86/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.7693e-04\n",
            "Epoch 87/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.6198e-04\n",
            "Epoch 88/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.9593e-04\n",
            "Epoch 89/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 4.2420e-04\n",
            "Epoch 90/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6659e-04\n",
            "Epoch 91/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3089e-04\n",
            "Epoch 92/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.4188e-04\n",
            "Epoch 93/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5963e-04\n",
            "Epoch 94/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.4051e-04\n",
            "Epoch 95/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.6592e-04\n",
            "Epoch 96/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.0854e-04\n",
            "Epoch 97/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.4328e-04\n",
            "Epoch 98/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3231e-04\n",
            "Epoch 99/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 4.7733e-04\n",
            "Epoch 100/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.7337e-04\n",
            "Epoch 101/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 4.6698e-04\n",
            "Epoch 102/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.5551e-04\n",
            "Epoch 103/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6564e-04\n",
            "Epoch 104/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.4324e-04\n",
            "Epoch 105/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6052e-04\n",
            "Epoch 106/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.1403e-04\n",
            "Epoch 107/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.9996e-04\n",
            "Epoch 108/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6685e-04\n",
            "Epoch 109/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.1029e-04\n",
            "Epoch 110/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.6692e-04\n",
            "Epoch 111/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6931e-04\n",
            "Epoch 112/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3622e-04\n",
            "Epoch 113/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.8025e-04\n",
            "Epoch 114/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5444e-04\n",
            "Epoch 115/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.1728e-04\n",
            "Epoch 116/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.5524e-04\n",
            "Epoch 117/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.0186e-04\n",
            "Epoch 118/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5950e-04\n",
            "Epoch 119/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 6.1613e-04\n",
            "Epoch 120/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.9486e-04\n",
            "Epoch 121/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6602e-04\n",
            "Epoch 122/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.4646e-04\n",
            "Epoch 123/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.1332e-04\n",
            "Epoch 124/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.1778e-04\n",
            "Epoch 125/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.7142e-04\n",
            "Epoch 126/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.2543e-04\n",
            "Epoch 127/200\n",
            "39/39 [==============================] - 0s 7ms/step - loss: 4.1453e-04\n",
            "Epoch 128/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.5021e-04\n",
            "Epoch 129/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3677e-04\n",
            "Epoch 130/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.3101e-04\n",
            "Epoch 131/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.2020e-04\n",
            "Epoch 132/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.9372e-04\n",
            "Epoch 133/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.8008e-04\n",
            "Epoch 134/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.7563e-04\n",
            "Epoch 135/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.0161e-04\n",
            "Epoch 136/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.2841e-04\n",
            "Epoch 137/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.6418e-04\n",
            "Epoch 138/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.1099e-04\n",
            "Epoch 139/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.8976e-04\n",
            "Epoch 140/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.7989e-04\n",
            "Epoch 141/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.1544e-04\n",
            "Epoch 142/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.0203e-04\n",
            "Epoch 143/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.1418e-04\n",
            "Epoch 144/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.1420e-04\n",
            "Epoch 145/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.1373e-04\n",
            "Epoch 146/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.1930e-04\n",
            "Epoch 147/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.4735e-04\n",
            "Epoch 148/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5732e-04\n",
            "Epoch 149/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.4615e-04\n",
            "Epoch 150/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.6391e-04\n",
            "Epoch 151/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.9760e-04\n",
            "Epoch 152/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.4248e-04\n",
            "Epoch 153/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.3604e-04\n",
            "Epoch 154/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5596e-04\n",
            "Epoch 155/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.1250e-04\n",
            "Epoch 156/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.7672e-04\n",
            "Epoch 157/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.1813e-04\n",
            "Epoch 158/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.9541e-04\n",
            "Epoch 159/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.5906e-04\n",
            "Epoch 160/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.3463e-04\n",
            "Epoch 161/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.4307e-04\n",
            "Epoch 162/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.2079e-04\n",
            "Epoch 163/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.9905e-04\n",
            "Epoch 164/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.3045e-04\n",
            "Epoch 165/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.0381e-04\n",
            "Epoch 166/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6197e-04\n",
            "Epoch 167/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.6763e-04\n",
            "Epoch 168/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.2208e-04\n",
            "Epoch 169/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.0818e-04\n",
            "Epoch 170/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.7638e-04\n",
            "Epoch 171/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 6.3427e-04\n",
            "Epoch 172/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6802e-04\n",
            "Epoch 173/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.1657e-04\n",
            "Epoch 174/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.2697e-04\n",
            "Epoch 175/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6551e-04\n",
            "Epoch 176/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6581e-04\n",
            "Epoch 177/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.7345e-04\n",
            "Epoch 178/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.1430e-04\n",
            "Epoch 179/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.7390e-04\n",
            "Epoch 180/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.9325e-04\n",
            "Epoch 181/200\n",
            "39/39 [==============================] - 0s 9ms/step - loss: 3.7758e-04\n",
            "Epoch 182/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.2377e-04\n",
            "Epoch 183/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.0623e-04\n",
            "Epoch 184/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.7931e-04\n",
            "Epoch 185/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.8221e-04\n",
            "Epoch 186/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.0577e-04\n",
            "Epoch 187/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.7185e-04\n",
            "Epoch 188/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.0804e-04\n",
            "Epoch 189/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.4038e-04\n",
            "Epoch 190/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.3311e-04\n",
            "Epoch 191/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.0934e-04\n",
            "Epoch 192/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.6866e-04\n",
            "Epoch 193/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5453e-04\n",
            "Epoch 194/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.5520e-04\n",
            "Epoch 195/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.5185e-04\n",
            "Epoch 196/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.6542e-04\n",
            "Epoch 197/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 5.2259e-04\n",
            "Epoch 198/200\n",
            "39/39 [==============================] - 0s 9ms/step - loss: 4.1749e-04\n",
            "Epoch 199/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 4.3705e-04\n",
            "Epoch 200/200\n",
            "39/39 [==============================] - 0s 8ms/step - loss: 3.6842e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f337d3073d0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rTXJN51l9Y-F"
      },
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H-D-XHyRjFMp"
      },
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "ef10c2c2-0a9c-46be-d74f-fd59d9d6f296"
      },
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str, model_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 644
        },
        "outputId": "b1977428-bf55-40c7-efb8-054bc6b56232"
      },
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "2f8dc81b-eb57-4b85-8177-9a8a0c09b52f"
      },
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "d_mse = mean_squared_error(y_true, y_dummy)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "d_rmse = mean_squared_error(y_true, y_dummy, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "d_mae = mean_absolute_error(y_true, y_dummy)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)\n",
        "print('Dummy MSE: ', d_mse)\n",
        "print('Dummy RMSE: ', d_rmse)\n",
        "print('Dummy MAE: ', d_mae)"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MSE:  0.017689826154282585\n",
            "RMSE:  0.13300310580690433\n",
            "MAE:  0.11534865460360916\n",
            "Dummy MSE:  0.03412892153519778\n",
            "Dummy RMSE:  0.18474014597590255\n",
            "Dummy MAE:  0.1546333417475681\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "34b54236-dee3-4593-c20a-3dc50025f24e"
      },
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE: '+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n'+\n",
        "                 'Dummy MSE: '+str(d_mse)+'\\n'+'Dummy RMSE: '+str(d_rmse)+'\\n'+'Dummy MAE: '+str(d_mae))\n",
        "error_file.close()"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive/\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:absl:Found untraced functions such as lstm_cell_layer_call_fn, lstm_cell_layer_call_and_return_conditional_losses, gru_cell_layer_call_fn, gru_cell_layer_call_and_return_conditional_losses, lstm_cell_layer_call_fn while saving (showing 5 of 10). These functions will not be directly callable after loading.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/LSTM_GRU_Amazon/assets\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/LSTM_GRU_Amazon/assets\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}