{
  "nbformat": 4,
  "nbformat_minor": 2,
  "metadata": {
    "colab": {
      "name": "GRU_Amazon.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNrU2Hf0pCwN7ljtn7gZ7hP",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "eb6daa3b488e4732a44178d180cdcc44": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_040fe9ae56774bfdb043c0385e82b39a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_761a1111ed694d79b0bb47d5246ac7b0",
              "IPY_MODEL_1c973a992856407c8d8cbb96cf2dae77"
            ]
          }
        },
        "040fe9ae56774bfdb043c0385e82b39a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "761a1111ed694d79b0bb47d5246ac7b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6db89fd25afe46df9bf78a7a5d683f94",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.72MB of 0.72MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2a80b881cb1e4d54b12dbdd79d7a114a"
          }
        },
        "1c973a992856407c8d8cbb96cf2dae77": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2cfa8a35c1634cc59f553462862f6b3b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8bf75daf2eec4e13ac8ea6fc0abb82f6"
          }
        },
        "6db89fd25afe46df9bf78a7a5d683f94": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2a80b881cb1e4d54b12dbdd79d7a114a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2cfa8a35c1634cc59f553462862f6b3b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8bf75daf2eec4e13ac8ea6fc0abb82f6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "04ce877ac8ab409aa55c4af243facda9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d2e661bdadaf48f2887bc00e9c55d6a2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7e4e4ad9357f4bd598758b0bdb4bf1d4",
              "IPY_MODEL_10634ebc60c648e88a0143ca7ebd4494"
            ]
          }
        },
        "d2e661bdadaf48f2887bc00e9c55d6a2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7e4e4ad9357f4bd598758b0bdb4bf1d4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_406a13929ba34aedaa5e1760d20ae0d4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.35MB of 0.35MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_34410add117a4345b3cf70c3af09a8af"
          }
        },
        "10634ebc60c648e88a0143ca7ebd4494": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_65c4855500fa4d919269b3ef9c00aa75",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9ba698c2ca36428a8f4a64372b70c413"
          }
        },
        "406a13929ba34aedaa5e1760d20ae0d4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "34410add117a4345b3cf70c3af09a8af": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "65c4855500fa4d919269b3ef9c00aa75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9ba698c2ca36428a8f4a64372b70c413": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "02ba3a0edca942a49d2a5a503a0d6298": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1da719ff4b3c4c989a19d7e8e6d9b430",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_429018bda68545e69709c1dfff3a59de",
              "IPY_MODEL_881b2d46783d4dbcaa2a029170d0e7f7"
            ]
          }
        },
        "1da719ff4b3c4c989a19d7e8e6d9b430": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "429018bda68545e69709c1dfff3a59de": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_94e4d5f4c3104a7a953b48873e0971f4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.79MB of 0.79MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b264f3ab1e7e4785943f368e29ce0afb"
          }
        },
        "881b2d46783d4dbcaa2a029170d0e7f7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5006d1709e524dd3a58acb14034f86db",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_30a9f174a1164d6fb42bd699522b80b3"
          }
        },
        "94e4d5f4c3104a7a953b48873e0971f4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b264f3ab1e7e4785943f368e29ce0afb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5006d1709e524dd3a58acb14034f86db": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "30a9f174a1164d6fb42bd699522b80b3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e2e04e32b3aa4c33a6f31f567f7a4b8b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_178e945ff75a438c9a047749ca8b79ba",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_bf6bf60dacd3482aba797b9ef955c09a",
              "IPY_MODEL_cb1761fd570f4b0aa8774706747cbb18"
            ]
          }
        },
        "178e945ff75a438c9a047749ca8b79ba": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bf6bf60dacd3482aba797b9ef955c09a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6f1102cbad2644f9be111d26d1514ac2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.75MB of 0.75MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a9ca6f8ef70c43979f8fd79612ee7d5a"
          }
        },
        "cb1761fd570f4b0aa8774706747cbb18": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0ca263116f7449deb4e8de6b7d164c8e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b0fc804e43ef441c97950a1195acfad1"
          }
        },
        "6f1102cbad2644f9be111d26d1514ac2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a9ca6f8ef70c43979f8fd79612ee7d5a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0ca263116f7449deb4e8de6b7d164c8e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b0fc804e43ef441c97950a1195acfad1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c9d6fac283da4c2b861ef9085bdf8a66": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a8c6e7acabba43088f508eebccf15614",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_de926f3ed2cc422b9b2a70216bf0e87c",
              "IPY_MODEL_e585e2e221924424adbeadb50c10af33"
            ]
          }
        },
        "a8c6e7acabba43088f508eebccf15614": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "de926f3ed2cc422b9b2a70216bf0e87c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b9c2dc669f844d9aab57db317a726cd9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.70MB of 0.70MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_353890a79b304578ad77c638075f0c97"
          }
        },
        "e585e2e221924424adbeadb50c10af33": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b5edc0001a4c4afc9b495d0d96461bfe",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6e5110cfa8ba4fb49a7746aadc9e89dd"
          }
        },
        "b9c2dc669f844d9aab57db317a726cd9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "353890a79b304578ad77c638075f0c97": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b5edc0001a4c4afc9b495d0d96461bfe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6e5110cfa8ba4fb49a7746aadc9e89dd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fda14407f991438e9b5b99e6b9ef4be9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d0cf6430912e463aa3c7dee1c5318d62",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_48ecb5f13a8849b4bfb5c29ab4991bbb",
              "IPY_MODEL_cc4c641daaa04e169efc5463ba53718a"
            ]
          }
        },
        "d0cf6430912e463aa3c7dee1c5318d62": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "48ecb5f13a8849b4bfb5c29ab4991bbb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f456ae2d7ad94b7ab9e76cc722ac3389",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.47MB of 0.47MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4c5b3decf0f847429aa67727c4b6b7f3"
          }
        },
        "cc4c641daaa04e169efc5463ba53718a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8b715d27b8024a0aa62dfd830aa0436b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_36fa60b9aefd4c5781b9b874373ad5b0"
          }
        },
        "f456ae2d7ad94b7ab9e76cc722ac3389": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4c5b3decf0f847429aa67727c4b6b7f3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8b715d27b8024a0aa62dfd830aa0436b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "36fa60b9aefd4c5781b9b874373ad5b0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5bd273ccca414036b6b134b9ed6d1309": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_556eb5218b244c729146dff00187744a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a58e6c0022c84d6d91760e514355999b",
              "IPY_MODEL_4c21e3ba13574deba47b807d4d2c7fe2"
            ]
          }
        },
        "556eb5218b244c729146dff00187744a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a58e6c0022c84d6d91760e514355999b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_afaf6443e9c54078912eeb0b2dd61121",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.60MB of 0.60MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5713147194e14b18bf65bd8241360185"
          }
        },
        "4c21e3ba13574deba47b807d4d2c7fe2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a840c8f1296f4c92a8df98ba6379ed52",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f3651edfbd964f979df91f5275b34342"
          }
        },
        "afaf6443e9c54078912eeb0b2dd61121": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5713147194e14b18bf65bd8241360185": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a840c8f1296f4c92a8df98ba6379ed52": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f3651edfbd964f979df91f5275b34342": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ed579c5a9ca142cc9b137abf5fc2892f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_286f31810a574057bd31c634951295ce",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e233a2291baa4e489bb96ff1a2f9a230",
              "IPY_MODEL_f69e6189344a406ca347477d39ba9266"
            ]
          }
        },
        "286f31810a574057bd31c634951295ce": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e233a2291baa4e489bb96ff1a2f9a230": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_36bac18ae24b4f60a1d9401f7803e65b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.75MB of 0.75MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ee1e58ea2ae14594b0c74c38df0ed68f"
          }
        },
        "f69e6189344a406ca347477d39ba9266": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_019ada6c0cbe4dd4b841eba0d13bacc1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_44d5636d699344c1a6a85ae8cd3f77cc"
          }
        },
        "36bac18ae24b4f60a1d9401f7803e65b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ee1e58ea2ae14594b0c74c38df0ed68f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "019ada6c0cbe4dd4b841eba0d13bacc1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "44d5636d699344c1a6a85ae8cd3f77cc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "474a98f026e74810b3b8613f98756a9c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_12c37547f0cc479e931570b29bb0676d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_1478dad1474d4e1da4f85cd434cfb422",
              "IPY_MODEL_811f1dc330a6403294668ad39c90434b"
            ]
          }
        },
        "12c37547f0cc479e931570b29bb0676d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1478dad1474d4e1da4f85cd434cfb422": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8f913f01d1374e96b198156451aa0a70",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.69MB of 0.69MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_cb0b0b24fa46428287eafdf8534ba3fd"
          }
        },
        "811f1dc330a6403294668ad39c90434b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_212909dfc4e547938b4c38f3dbaf5a42",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_55bd213810bb4ae7a0926176ab563c7d"
          }
        },
        "8f913f01d1374e96b198156451aa0a70": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "cb0b0b24fa46428287eafdf8534ba3fd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "212909dfc4e547938b4c38f3dbaf5a42": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "55bd213810bb4ae7a0926176ab563c7d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b36211a892ad428b8606d7cdad2fbe8a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_958b24c503314be787a3187d1d39bb45",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9d9e5e2e50f94e87ae2773e43cf38ee5",
              "IPY_MODEL_0f22e2450fcc42b58c9b5a16516c1c4b"
            ]
          }
        },
        "958b24c503314be787a3187d1d39bb45": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9d9e5e2e50f94e87ae2773e43cf38ee5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f74572ca83d94d4da282ec284331925a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.48MB of 0.48MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9e570dc845744014b02fd44cb149441c"
          }
        },
        "0f22e2450fcc42b58c9b5a16516c1c4b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_532b019a455e4a71a3a26b0c541fbd92",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4be8e6d5d5664e71aacf8141df671f37"
          }
        },
        "f74572ca83d94d4da282ec284331925a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9e570dc845744014b02fd44cb149441c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "532b019a455e4a71a3a26b0c541fbd92": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4be8e6d5d5664e71aacf8141df671f37": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "43bac6b3c6c547b7bf9216ccdcc4acd7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_8f3f9f79969744a293d61d62b8d96b88",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_550539e4268942959e0b11013e60b000",
              "IPY_MODEL_a0002ad655984785a0ef10299f8b6d88"
            ]
          }
        },
        "8f3f9f79969744a293d61d62b8d96b88": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "550539e4268942959e0b11013e60b000": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_bcc292dc8e5b4fd2967214ddb70a935b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.69MB of 0.69MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8964956ed2f34505ad15f39c1988d60e"
          }
        },
        "a0002ad655984785a0ef10299f8b6d88": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_206416facaa94aabb3cf0a2e73358843",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c75f519d48c54d4bace736da8cf4e680"
          }
        },
        "bcc292dc8e5b4fd2967214ddb70a935b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8964956ed2f34505ad15f39c1988d60e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "206416facaa94aabb3cf0a2e73358843": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c75f519d48c54d4bace736da8cf4e680": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4dd297320124462cab8649e70de09069": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e672b9fec6174e399f55658c8a5e363f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ca02ab1ee6b84eaab4c67afa32e562fe",
              "IPY_MODEL_225f57a88da24549ad382209a0ca4271"
            ]
          }
        },
        "e672b9fec6174e399f55658c8a5e363f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ca02ab1ee6b84eaab4c67afa32e562fe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f16057784ea04699a9d7abc345509344",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.71MB of 0.71MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b82f3c6143404bc1ac60b55bc78eaa00"
          }
        },
        "225f57a88da24549ad382209a0ca4271": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e073ff1edb574336bfd1059cf8fa45b0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3554a7f4feeb4bb9acd454f956c604fa"
          }
        },
        "f16057784ea04699a9d7abc345509344": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b82f3c6143404bc1ac60b55bc78eaa00": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e073ff1edb574336bfd1059cf8fa45b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3554a7f4feeb4bb9acd454f956c604fa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/GRU/GRU_Amazon.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ],
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ],
      "metadata": {
        "id": "z5F7GfFTgUo3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 140, done.\u001b[K\n",
            "remote: Counting objects: 100% (140/140), done.\u001b[K\n",
            "remote: Compressing objects: 100% (135/135), done.\u001b[K\n",
            "remote: Total 140 (delta 67), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (140/140), 118.41 KiB | 11.84 MiB/s, done.\n",
            "Resolving deltas: 100% (67/67), done.\n"
          ]
        }
      ],
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "51b5a8a0-60d3-40b2-f60b-16bace9d735b"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/feeder_repo\n"
          ]
        }
      ],
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "653cd5f2-0137-4a52-857e-746a849fc439"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ]
        }
      ],
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d1693aeb-384a-4e23-e0bd-7d0eb12d7226"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "outputs": [],
      "metadata": {
        "id": "fRqkwo6kZUz_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "outputs": [],
      "metadata": {
        "id": "hzVhwND1HAlw"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tue Jul 13 18:04:44 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   36C    P0    27W / 250W |      0MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "36387a41-9206-482c-f955-640d792c2b1d"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ],
      "metadata": {
        "id": "WB9wD4Aahs8_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'Amazon'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'GRU'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "outputs": [],
      "metadata": {
        "id": "vBlKerL-c4-3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "outputs": [],
      "metadata": {
        "id": "hfQJbuBk0vW0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ],
      "metadata": {
        "id": "X53Fp1Gwh88_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8MB 8.1MB/s \n",
            "\u001b[K     |████████████████████████████████| 102kB 13.4MB/s \n",
            "\u001b[K     |████████████████████████████████| 174kB 38.5MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 49.8MB/s \n",
            "\u001b[K     |████████████████████████████████| 71kB 10.9MB/s \n",
            "\u001b[?25h  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "987c47e3-26d5-4219-c151-1e5c006a581a"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "source": [
        "!pip install wandb -qq"
      ],
      "outputs": [],
      "metadata": {
        "id": "pbgZaoQDiIKX"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "a9dba91e-5b77-4648-f956-e30735c2acbc"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.2, 0.3, 0.4]\n",
        "        },\n",
        "        'input_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'hidden_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'sgd']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu', 'selu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "outputs": [],
      "metadata": {
        "id": "j91IBGuSid5w"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "source": [
        "# The sweep calls this function with each set of hyperparameters\n",
        "def train():\n",
        "    # Default values for hyper-parameters we're going to sweep over\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.2,\n",
        "        'input_size': 50,\n",
        "        'hidden_size': 50,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "    \n",
        "    # Define the model architecture - This is a simplified version of the VGG19 architecture\n",
        "    model = Sequential()\n",
        "    \n",
        "    # input layer\n",
        "    model.add(GRU(units=config.input_size,\n",
        "                  activation=config.activation,\n",
        "                  return_sequences=True,\n",
        "                  input_shape=(window_len, 1)))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # hidden layer\n",
        "    model.add(GRU(units=config.hidden_size))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    model.add(Dense(units=1))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "outputs": [],
      "metadata": {
        "id": "V0Sr9HsorH4E"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_GRU')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Create sweep with ID: jvaofocz\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "d2227c22-ae23-4339-858b-32cbf42aa325"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_GRU')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 7qwz3liz with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">misty-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7qwz3liz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7qwz3liz</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_180530-7qwz3liz</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 26s 220ms/step - loss: 0.2164 - mean_squared_error: 0.2164 - mean_absolute_error: 0.3718 - val_loss: 0.3086 - val_mean_squared_error: 0.3086 - val_mean_absolute_error: 0.5205\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.1646 - mean_squared_error: 0.1646 - mean_absolute_error: 0.3141 - val_loss: 0.2318 - val_mean_squared_error: 0.2318 - val_mean_absolute_error: 0.4417\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.1210 - mean_squared_error: 0.1210 - mean_absolute_error: 0.2706 - val_loss: 0.1677 - val_mean_squared_error: 0.1677 - val_mean_absolute_error: 0.3636\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0907 - mean_squared_error: 0.0907 - mean_absolute_error: 0.2442 - val_loss: 0.1235 - val_mean_squared_error: 0.1235 - val_mean_absolute_error: 0.3001\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 66ms/step - loss: 0.0791 - mean_squared_error: 0.0791 - mean_absolute_error: 0.2359 - val_loss: 0.0955 - val_mean_squared_error: 0.0955 - val_mean_absolute_error: 0.2547\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 66ms/step - loss: 0.0693 - mean_squared_error: 0.0693 - mean_absolute_error: 0.2215 - val_loss: 0.0790 - val_mean_squared_error: 0.0790 - val_mean_absolute_error: 0.2266\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0663 - mean_squared_error: 0.0663 - mean_absolute_error: 0.2186 - val_loss: 0.0695 - val_mean_squared_error: 0.0695 - val_mean_absolute_error: 0.2102\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0640 - mean_squared_error: 0.0640 - mean_absolute_error: 0.2175 - val_loss: 0.0641 - val_mean_squared_error: 0.0641 - val_mean_absolute_error: 0.2006\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0647 - mean_squared_error: 0.0647 - mean_absolute_error: 0.2211 - val_loss: 0.0613 - val_mean_squared_error: 0.0613 - val_mean_absolute_error: 0.1959\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 66ms/step - loss: 0.0608 - mean_squared_error: 0.0608 - mean_absolute_error: 0.2133 - val_loss: 0.0592 - val_mean_squared_error: 0.0592 - val_mean_absolute_error: 0.1924\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 66ms/step - loss: 0.0607 - mean_squared_error: 0.0607 - mean_absolute_error: 0.2149 - val_loss: 0.0581 - val_mean_squared_error: 0.0581 - val_mean_absolute_error: 0.1906\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0572 - mean_squared_error: 0.0572 - mean_absolute_error: 0.2068 - val_loss: 0.0576 - val_mean_squared_error: 0.0576 - val_mean_absolute_error: 0.1899\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0588 - mean_squared_error: 0.0588 - mean_absolute_error: 0.2086 - val_loss: 0.0568 - val_mean_squared_error: 0.0568 - val_mean_absolute_error: 0.1885\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0561 - mean_squared_error: 0.0561 - mean_absolute_error: 0.2043 - val_loss: 0.0563 - val_mean_squared_error: 0.0563 - val_mean_absolute_error: 0.1879\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0557 - mean_squared_error: 0.0557 - mean_absolute_error: 0.2046 - val_loss: 0.0557 - val_mean_squared_error: 0.0557 - val_mean_absolute_error: 0.1868\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0538 - mean_squared_error: 0.0538 - mean_absolute_error: 0.2002 - val_loss: 0.0550 - val_mean_squared_error: 0.0550 - val_mean_absolute_error: 0.1858\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0543 - mean_squared_error: 0.0543 - mean_absolute_error: 0.2020 - val_loss: 0.0543 - val_mean_squared_error: 0.0543 - val_mean_absolute_error: 0.1846\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0499 - mean_squared_error: 0.0499 - mean_absolute_error: 0.1935 - val_loss: 0.0533 - val_mean_squared_error: 0.0533 - val_mean_absolute_error: 0.1829\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0519 - mean_squared_error: 0.0519 - mean_absolute_error: 0.1985 - val_loss: 0.0522 - val_mean_squared_error: 0.0522 - val_mean_absolute_error: 0.1811\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0506 - mean_squared_error: 0.0506 - mean_absolute_error: 0.1944 - val_loss: 0.0513 - val_mean_squared_error: 0.0513 - val_mean_absolute_error: 0.1796\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0510 - mean_squared_error: 0.0510 - mean_absolute_error: 0.1948 - val_loss: 0.0505 - val_mean_squared_error: 0.0505 - val_mean_absolute_error: 0.1781\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0494 - mean_squared_error: 0.0494 - mean_absolute_error: 0.1934 - val_loss: 0.0495 - val_mean_squared_error: 0.0495 - val_mean_absolute_error: 0.1764\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0495 - mean_squared_error: 0.0495 - mean_absolute_error: 0.1919 - val_loss: 0.0486 - val_mean_squared_error: 0.0486 - val_mean_absolute_error: 0.1746\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0511 - mean_squared_error: 0.0511 - mean_absolute_error: 0.1958 - val_loss: 0.0476 - val_mean_squared_error: 0.0476 - val_mean_absolute_error: 0.1728\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0500 - mean_squared_error: 0.0500 - mean_absolute_error: 0.1950 - val_loss: 0.0468 - val_mean_squared_error: 0.0468 - val_mean_absolute_error: 0.1714\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0480 - mean_squared_error: 0.0480 - mean_absolute_error: 0.1883 - val_loss: 0.0458 - val_mean_squared_error: 0.0458 - val_mean_absolute_error: 0.1695\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0471 - mean_squared_error: 0.0471 - mean_absolute_error: 0.1857 - val_loss: 0.0450 - val_mean_squared_error: 0.0450 - val_mean_absolute_error: 0.1681\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0450 - mean_squared_error: 0.0450 - mean_absolute_error: 0.1825 - val_loss: 0.0444 - val_mean_squared_error: 0.0444 - val_mean_absolute_error: 0.1671\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0479 - mean_squared_error: 0.0479 - mean_absolute_error: 0.1887 - val_loss: 0.0436 - val_mean_squared_error: 0.0436 - val_mean_absolute_error: 0.1656\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0442 - mean_squared_error: 0.0442 - mean_absolute_error: 0.1817 - val_loss: 0.0430 - val_mean_squared_error: 0.0430 - val_mean_absolute_error: 0.1646\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0423 - mean_squared_error: 0.0423 - mean_absolute_error: 0.1754 - val_loss: 0.0424 - val_mean_squared_error: 0.0424 - val_mean_absolute_error: 0.1635\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0412 - mean_squared_error: 0.0412 - mean_absolute_error: 0.1769 - val_loss: 0.0419 - val_mean_squared_error: 0.0419 - val_mean_absolute_error: 0.1627\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0405 - mean_squared_error: 0.0405 - mean_absolute_error: 0.1729 - val_loss: 0.0415 - val_mean_squared_error: 0.0415 - val_mean_absolute_error: 0.1621\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0421 - mean_squared_error: 0.0421 - mean_absolute_error: 0.1765 - val_loss: 0.0407 - val_mean_squared_error: 0.0407 - val_mean_absolute_error: 0.1606\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 67ms/step - loss: 0.0402 - mean_squared_error: 0.0402 - mean_absolute_error: 0.1733 - val_loss: 0.0400 - val_mean_squared_error: 0.0400 - val_mean_absolute_error: 0.1593\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0406 - mean_squared_error: 0.0406 - mean_absolute_error: 0.1745 - val_loss: 0.0390 - val_mean_squared_error: 0.0390 - val_mean_absolute_error: 0.1572\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0396 - mean_squared_error: 0.0396 - mean_absolute_error: 0.1723 - val_loss: 0.0379 - val_mean_squared_error: 0.0379 - val_mean_absolute_error: 0.1549\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0395 - mean_squared_error: 0.0395 - mean_absolute_error: 0.1717 - val_loss: 0.0370 - val_mean_squared_error: 0.0370 - val_mean_absolute_error: 0.1530\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0372 - mean_squared_error: 0.0372 - mean_absolute_error: 0.1642 - val_loss: 0.0363 - val_mean_squared_error: 0.0363 - val_mean_absolute_error: 0.1517\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0371 - mean_squared_error: 0.0371 - mean_absolute_error: 0.1660 - val_loss: 0.0357 - val_mean_squared_error: 0.0357 - val_mean_absolute_error: 0.1503\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0366 - mean_squared_error: 0.0366 - mean_absolute_error: 0.1642 - val_loss: 0.0351 - val_mean_squared_error: 0.0351 - val_mean_absolute_error: 0.1491\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0350 - mean_squared_error: 0.0350 - mean_absolute_error: 0.1595 - val_loss: 0.0345 - val_mean_squared_error: 0.0345 - val_mean_absolute_error: 0.1479\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0359 - mean_squared_error: 0.0359 - mean_absolute_error: 0.1623 - val_loss: 0.0339 - val_mean_squared_error: 0.0339 - val_mean_absolute_error: 0.1468\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0339 - mean_squared_error: 0.0339 - mean_absolute_error: 0.1588 - val_loss: 0.0335 - val_mean_squared_error: 0.0335 - val_mean_absolute_error: 0.1459\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0343 - mean_squared_error: 0.0343 - mean_absolute_error: 0.1585 - val_loss: 0.0331 - val_mean_squared_error: 0.0331 - val_mean_absolute_error: 0.1453\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0329 - mean_squared_error: 0.0329 - mean_absolute_error: 0.1558 - val_loss: 0.0325 - val_mean_squared_error: 0.0325 - val_mean_absolute_error: 0.1440\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0323 - mean_squared_error: 0.0323 - mean_absolute_error: 0.1550 - val_loss: 0.0320 - val_mean_squared_error: 0.0320 - val_mean_absolute_error: 0.1429\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0324 - mean_squared_error: 0.0324 - mean_absolute_error: 0.1539 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1413\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0320 - mean_squared_error: 0.0320 - mean_absolute_error: 0.1522 - val_loss: 0.0305 - val_mean_squared_error: 0.0305 - val_mean_absolute_error: 0.1394\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0306 - mean_squared_error: 0.0306 - mean_absolute_error: 0.1499 - val_loss: 0.0297 - val_mean_squared_error: 0.0297 - val_mean_absolute_error: 0.1375\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0298 - mean_squared_error: 0.0298 - mean_absolute_error: 0.1456 - val_loss: 0.0292 - val_mean_squared_error: 0.0292 - val_mean_absolute_error: 0.1364\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0292 - mean_squared_error: 0.0292 - mean_absolute_error: 0.1447 - val_loss: 0.0285 - val_mean_squared_error: 0.0285 - val_mean_absolute_error: 0.1349\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0290 - mean_squared_error: 0.0290 - mean_absolute_error: 0.1457 - val_loss: 0.0281 - val_mean_squared_error: 0.0281 - val_mean_absolute_error: 0.1340\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0297 - mean_squared_error: 0.0297 - mean_absolute_error: 0.1485 - val_loss: 0.0276 - val_mean_squared_error: 0.0276 - val_mean_absolute_error: 0.1328\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0282 - mean_squared_error: 0.0282 - mean_absolute_error: 0.1416 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1315\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0291 - mean_squared_error: 0.0291 - mean_absolute_error: 0.1461 - val_loss: 0.0265 - val_mean_squared_error: 0.0265 - val_mean_absolute_error: 0.1301\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0276 - mean_squared_error: 0.0276 - mean_absolute_error: 0.1408 - val_loss: 0.0259 - val_mean_squared_error: 0.0259 - val_mean_absolute_error: 0.1288\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 65ms/step - loss: 0.0265 - mean_squared_error: 0.0265 - mean_absolute_error: 0.1390 - val_loss: 0.0253 - val_mean_squared_error: 0.0253 - val_mean_absolute_error: 0.1271\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0278 - mean_squared_error: 0.0278 - mean_absolute_error: 0.1417 - val_loss: 0.0246 - val_mean_squared_error: 0.0246 - val_mean_absolute_error: 0.1253\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0259 - mean_squared_error: 0.0259 - mean_absolute_error: 0.1355 - val_loss: 0.0241 - val_mean_squared_error: 0.0241 - val_mean_absolute_error: 0.1240\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0256 - mean_squared_error: 0.0256 - mean_absolute_error: 0.1350 - val_loss: 0.0236 - val_mean_squared_error: 0.0236 - val_mean_absolute_error: 0.1228\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0248 - mean_squared_error: 0.0248 - mean_absolute_error: 0.1359 - val_loss: 0.0233 - val_mean_squared_error: 0.0233 - val_mean_absolute_error: 0.1221\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0223 - mean_squared_error: 0.0223 - mean_absolute_error: 0.1283 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1212\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0246 - mean_squared_error: 0.0246 - mean_absolute_error: 0.1323 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1195\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0230 - mean_squared_error: 0.0230 - mean_absolute_error: 0.1291 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1184\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0230 - mean_squared_error: 0.0230 - mean_absolute_error: 0.1293 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1170\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0224 - mean_squared_error: 0.0224 - mean_absolute_error: 0.1272 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1157\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0212 - mean_squared_error: 0.0212 - mean_absolute_error: 0.1232 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1143\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 64ms/step - loss: 0.0219 - mean_squared_error: 0.0219 - mean_absolute_error: 0.1251 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1131\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0196 - mean_squared_error: 0.0196 - mean_absolute_error: 0.1167 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1120\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0203 - mean_squared_error: 0.0203 - mean_absolute_error: 0.1187 - val_loss: 0.0191 - val_mean_squared_error: 0.0191 - val_mean_absolute_error: 0.1110\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0204 - mean_squared_error: 0.0204 - mean_absolute_error: 0.1199 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1100\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0201 - mean_squared_error: 0.0201 - mean_absolute_error: 0.1192 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1084\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.1153 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1079\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0217 - mean_squared_error: 0.0217 - mean_absolute_error: 0.1238 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1061\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - mean_absolute_error: 0.1094 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.1049\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0186 - mean_squared_error: 0.0186 - mean_absolute_error: 0.1148 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1040\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0173 - mean_squared_error: 0.0173 - mean_absolute_error: 0.1090 - val_loss: 0.0163 - val_mean_squared_error: 0.0163 - val_mean_absolute_error: 0.1029\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0185 - mean_squared_error: 0.0185 - mean_absolute_error: 0.1158 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.1013\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.1069 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1001\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.1104 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0987\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0182 - mean_squared_error: 0.0182 - mean_absolute_error: 0.1118 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0976\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.1060 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0965\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.1026 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0951\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0163 - mean_squared_error: 0.0163 - mean_absolute_error: 0.1042 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0938\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 67ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.1019 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0925\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.1000 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0919\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.1007 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0915\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0964 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0910\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.1001 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0899\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0987 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0888\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0920 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0884\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0988 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0876\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0927 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0865\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0920 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0855\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0915 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0842\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0968 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0832\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0842 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0825\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0897 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0815\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0875 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0812\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0834 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0805\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0832 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0800\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0853 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0790\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0848 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0777\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0802 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0771\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0812 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0768\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0796 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0759\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0809 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0743\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0813 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0734\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0803 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0729\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0742 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0727\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0756 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0724\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0735 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0724\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0746 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0725\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0773 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0716\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0738 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0708\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0716 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0699\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0711 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0691\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0690 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0686\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0695 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0684\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0729 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0677\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0719 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0673\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0704 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0670\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0700 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0662\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0689 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0656\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0693 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0648\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0662 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0638\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0684 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0634\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0664 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0628\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0625 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0629\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0665 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0625\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0704 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0619\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0660 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0614\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0644 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0609\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0648 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0605\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0638 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0601\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0620 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0597\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0605 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0598\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0592 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0596\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0669 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0585\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0644 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0578\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0619 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0577\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0612 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0582\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0608 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0585\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0594 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0584\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0622 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0576\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0606 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0566\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0595 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0561\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0598 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0557\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0564 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0554\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0583 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0553\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0594 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0555\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0577 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0555\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0596 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0553\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0586 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0547\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0579 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0547\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0590 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0549\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0565 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0550\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0568 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0549\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0579 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0547\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0598 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0545\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0579 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0541\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0592 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0543\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0565 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0541\n",
            "Epoch 165/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0571 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0534\n",
            "Epoch 166/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0553 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0537\n",
            "Epoch 167/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0553 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0538\n",
            "Epoch 168/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0566 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0540\n",
            "Epoch 169/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0559 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0535\n",
            "Epoch 170/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0522 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0525\n",
            "Epoch 171/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0537 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0521\n",
            "Epoch 172/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0536 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0523\n",
            "Epoch 173/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0550 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0520\n",
            "Epoch 174/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0545 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0515\n",
            "Epoch 175/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0535 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0512\n",
            "Epoch 176/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0530 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0513\n",
            "Epoch 177/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0551 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 178/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0533 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0517\n",
            "Epoch 179/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0553 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0517\n",
            "Epoch 180/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0547 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0519\n",
            "Epoch 181/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0541 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0521\n",
            "Epoch 182/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0545 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0523\n",
            "Epoch 183/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0527 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0521\n",
            "Epoch 184/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0500 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0516\n",
            "Epoch 185/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0552 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0512\n",
            "Epoch 186/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0515 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0514\n",
            "Epoch 187/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0530 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0514\n",
            "Epoch 188/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0543 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0516\n",
            "Epoch 189/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0522 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0516\n",
            "Epoch 190/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0555 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 191/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0532 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 192/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0500 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 193/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0552 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 194/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0510 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 195/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0515 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 196/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0533 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 197/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0515 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 198/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0529 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0508\n",
            "Epoch 199/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0508 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0508\n",
            "Epoch 200/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0505 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0505\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 179<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.68MB of 0.68MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "eb6daa3b488e4732a44178d180cdcc44",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_180530-7qwz3liz/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_180530-7qwz3liz/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.0052</td></tr><tr><td>mean_squared_error</td><td>0.0052</td></tr><tr><td>mean_absolute_error</td><td>0.05189</td></tr><tr><td>val_loss</td><td>0.00414</td></tr><tr><td>val_mean_squared_error</td><td>0.00414</td></tr><tr><td>val_mean_absolute_error</td><td>0.05053</td></tr><tr><td>_runtime</td><td>155</td></tr><tr><td>_timestamp</td><td>1626199685</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00413</td></tr><tr><td>best_epoch</td><td>191</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▅▅▅▅▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">misty-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7qwz3liz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7qwz3liz</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: t8dxn1x9 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">bright-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/t8dxn1x9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/t8dxn1x9</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_180826-t8dxn1x9</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 6s 95ms/step - loss: 0.0730 - mean_squared_error: 0.0730 - mean_absolute_error: 0.1999 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0875\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0822 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0556\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0813 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0531\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0734 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0595\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0694 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0645\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0730 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0521\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0636 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0509\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0629 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0566\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0623 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0663\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0646 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0529\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0666 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0509\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0553 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0577\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0594 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0525\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0590 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0558\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0585 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0536\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0575 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0526\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 2s 66ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0537 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0520\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0545 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0562\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0493 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0591\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0549 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0550\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0514 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0527\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 881<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.33MB of 0.33MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "04ce877ac8ab409aa55c4af243facda9",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_180826-t8dxn1x9/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_180826-t8dxn1x9/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>20</td></tr><tr><td>loss</td><td>0.00496</td></tr><tr><td>mean_squared_error</td><td>0.00496</td></tr><tr><td>mean_absolute_error</td><td>0.05234</td></tr><tr><td>val_loss</td><td>0.00447</td></tr><tr><td>val_mean_squared_error</td><td>0.00447</td></tr><tr><td>val_mean_absolute_error</td><td>0.05269</td></tr><tr><td>_runtime</td><td>51</td></tr><tr><td>_timestamp</td><td>1626199758</td></tr><tr><td>_step</td><td>20</td></tr><tr><td>best_val_loss</td><td>0.00441</td></tr><tr><td>best_epoch</td><td>10</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▁▂▂▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▁▂▂▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▁▂▃▁▁▂▃▁▁▂▁▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▁▂▃▁▁▂▃▁▁▂▁▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▁▃▄▁▁▂▄▁▁▂▁▂▂▁▁▂▃▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">bright-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/t8dxn1x9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/t8dxn1x9</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: prr0ug72 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">copper-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/prr0ug72\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/prr0ug72</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_180925-prr0ug72</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "31/31 [==============================] - 7s 99ms/step - loss: 0.0912 - mean_squared_error: 0.0912 - mean_absolute_error: 0.2214 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0528\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0365 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0541\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0712\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0363 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0541\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0333 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0538\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0375 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0525\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0311 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0530\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0314 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0529\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0297 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0535\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0306 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0577\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0536\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0317 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0533\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0289 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0666\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0323 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0576\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1009<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.76MB of 0.76MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "02ba3a0edca942a49d2a5a503a0d6298",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_180925-prr0ug72/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_180925-prr0ug72/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>13</td></tr><tr><td>loss</td><td>0.00169</td></tr><tr><td>mean_squared_error</td><td>0.00169</td></tr><tr><td>mean_absolute_error</td><td>0.02965</td></tr><tr><td>val_loss</td><td>0.0054</td></tr><tr><td>val_mean_squared_error</td><td>0.0054</td></tr><tr><td>val_mean_absolute_error</td><td>0.05759</td></tr><tr><td>_runtime</td><td>38</td></tr><tr><td>_timestamp</td><td>1626199803</td></tr><tr><td>_step</td><td>13</td></tr><tr><td>best_val_loss</td><td>0.00518</td></tr><tr><td>best_epoch</td><td>3</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▂▁█▁▃▂▃▂▂▂▂▂▅▂</td></tr><tr><td>val_mean_squared_error</td><td>▂▁█▁▃▂▃▂▂▂▂▂▅▂</td></tr><tr><td>val_mean_absolute_error</td><td>▁▂█▂▁▁▁▁▁▃▁▁▆▃</td></tr><tr><td>_runtime</td><td>▁▁▂▃▃▄▄▅▅▆▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▂▃▃▄▄▅▅▆▇▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">copper-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/prr0ug72\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/prr0ug72</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4oorzluu with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">swift-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4oorzluu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4oorzluu</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_181010-4oorzluu</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 6s 97ms/step - loss: 0.1148 - mean_squared_error: 0.1148 - mean_absolute_error: 0.2576 - val_loss: 0.0440 - val_mean_squared_error: 0.0440 - val_mean_absolute_error: 0.1696\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0279 - mean_squared_error: 0.0279 - mean_absolute_error: 0.1418 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.1034\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0812 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0566\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0428 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0479\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0386 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0485\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0388 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0486\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0356 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0469\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0366 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0493\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0352 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0470\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0378 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0476\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0368 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0480\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 2s 67ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0345 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0483\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0366 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0486\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 2s 68ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0348 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0479\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1116<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.73MB of 0.73MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e2e04e32b3aa4c33a6f31f567f7a4b8b",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181010-4oorzluu/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181010-4oorzluu/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>13</td></tr><tr><td>loss</td><td>0.00218</td></tr><tr><td>mean_squared_error</td><td>0.00218</td></tr><tr><td>mean_absolute_error</td><td>0.03421</td></tr><tr><td>val_loss</td><td>0.00414</td></tr><tr><td>val_mean_squared_error</td><td>0.00414</td></tr><tr><td>val_mean_absolute_error</td><td>0.04786</td></tr><tr><td>_runtime</td><td>38</td></tr><tr><td>_timestamp</td><td>1626199848</td></tr><tr><td>_step</td><td>13</td></tr><tr><td>best_val_loss</td><td>0.00413</td></tr><tr><td>best_epoch</td><td>3</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr><tr><td>loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▃▃▄▄▅▅▆▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▂▃▃▄▄▅▅▆▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">swift-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4oorzluu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4oorzluu</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: mgunigr9 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">woven-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/mgunigr9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/mgunigr9</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_181055-mgunigr9</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 199ms/step - loss: 0.2314 - mean_squared_error: 0.2314 - mean_absolute_error: 0.3794 - val_loss: 0.2334 - val_mean_squared_error: 0.2334 - val_mean_absolute_error: 0.4421\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.1087 - mean_squared_error: 0.1087 - mean_absolute_error: 0.2603 - val_loss: 0.0864 - val_mean_squared_error: 0.0864 - val_mean_absolute_error: 0.2417\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0593 - mean_squared_error: 0.0593 - mean_absolute_error: 0.2071 - val_loss: 0.0374 - val_mean_squared_error: 0.0374 - val_mean_absolute_error: 0.1511\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0557 - mean_squared_error: 0.0557 - mean_absolute_error: 0.2020 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1305\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0470 - mean_squared_error: 0.0470 - mean_absolute_error: 0.1849 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1293\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0409 - mean_squared_error: 0.0409 - mean_absolute_error: 0.1734 - val_loss: 0.0303 - val_mean_squared_error: 0.0303 - val_mean_absolute_error: 0.1367\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0380 - mean_squared_error: 0.0380 - mean_absolute_error: 0.1653 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1403\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0346 - mean_squared_error: 0.0346 - mean_absolute_error: 0.1573 - val_loss: 0.0292 - val_mean_squared_error: 0.0292 - val_mean_absolute_error: 0.1361\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0285 - mean_squared_error: 0.0285 - mean_absolute_error: 0.1434 - val_loss: 0.0260 - val_mean_squared_error: 0.0260 - val_mean_absolute_error: 0.1286\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0264 - mean_squared_error: 0.0264 - mean_absolute_error: 0.1369 - val_loss: 0.0223 - val_mean_squared_error: 0.0223 - val_mean_absolute_error: 0.1187\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 67ms/step - loss: 0.0209 - mean_squared_error: 0.0209 - mean_absolute_error: 0.1209 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1121\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0202 - mean_squared_error: 0.0202 - mean_absolute_error: 0.1194 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1060\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0187 - mean_squared_error: 0.0187 - mean_absolute_error: 0.1139 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0994\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.1079 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0943\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0983 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0912\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0951 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0867\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0862 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0824\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0800 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0789\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0813 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0748\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0728 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0714\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0687 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0686\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0670 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0654\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0611 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0635\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0564 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0623\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0550 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0607\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0544 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0583\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0548 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0565\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0479 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0556\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0496 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0548\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0510 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0534\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0487 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0531\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0477 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0532\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0486 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0528\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 66ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0504 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0517\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0475 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0513\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0491 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0515\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0489 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0515\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0478 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0514\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0470 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0509\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0461 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0502\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0463 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0497\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0455 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0504\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0455 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0506\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0445 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0503\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0472 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0501\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0464 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0500\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 67ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0495 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0500\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0472 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 68ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0430 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0495\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0467 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0498\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0433 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0445 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0502\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0419 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 67ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0471 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0492\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0477 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0490\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0463 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0439 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0461 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0500\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0439 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0500\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 67ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0440 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0494\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0455 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0491\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 65ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0432 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0491\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0458 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0494\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0455 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0498\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0445 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0492\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0445 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0491\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0429 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0428 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0498\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0437 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0423 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0425 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0428 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0431 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0490\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 66ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0413 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0418 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0494\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0423 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0504\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0425 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0507\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0411 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0502\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0432 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0410 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0437 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0489\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0417 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0430 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0502\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0421 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0503\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0406 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0502\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0426 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0413 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0407 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0498\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0427 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0499\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0419 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0499\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0432 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0499\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0402 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0425 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0431 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0489\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0435 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0412 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0494\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0418 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0421 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0423 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0404 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0502\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0394 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0504\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0418 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0500\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0404 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0491\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0443 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0490\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0413 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0492\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0415 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0400 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0428 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0492\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0422 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0410 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0486\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0418 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0489\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0399 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0492\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0424 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0408 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0424 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0428 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0498\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0413 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0497\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0411 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0432 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0495\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0414 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0494\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0399 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0415 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0497\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1221<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.66MB of 0.66MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c9d6fac283da4c2b861ef9085bdf8a66",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181055-mgunigr9/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181055-mgunigr9/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>121</td></tr><tr><td>loss</td><td>0.0036</td></tr><tr><td>mean_squared_error</td><td>0.0036</td></tr><tr><td>mean_absolute_error</td><td>0.04269</td></tr><tr><td>val_loss</td><td>0.00446</td></tr><tr><td>val_mean_squared_error</td><td>0.00446</td></tr><tr><td>val_mean_absolute_error</td><td>0.04972</td></tr><tr><td>_runtime</td><td>82</td></tr><tr><td>_timestamp</td><td>1626199937</td></tr><tr><td>_step</td><td>121</td></tr><tr><td>best_val_loss</td><td>0.00445</td></tr><tr><td>best_epoch</td><td>111</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">woven-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/mgunigr9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/mgunigr9</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0zrcm2d2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dainty-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0zrcm2d2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0zrcm2d2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_181225-0zrcm2d2</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "31/31 [==============================] - 4s 35ms/step - loss: 0.0549 - mean_squared_error: 0.0549 - mean_absolute_error: 0.1660 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0633\n",
            "Epoch 2/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0171 - mean_squared_error: 0.0171 - mean_absolute_error: 0.0985 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0582\n",
            "Epoch 3/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - mean_absolute_error: 0.0861 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0625\n",
            "Epoch 4/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - mean_absolute_error: 0.0767 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0583\n",
            "Epoch 5/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0746 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0565\n",
            "Epoch 6/100\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0705 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 7/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0687 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0561\n",
            "Epoch 8/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0608 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0647\n",
            "Epoch 9/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0657 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0572\n",
            "Epoch 10/100\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0613 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0539\n",
            "Epoch 11/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0582 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 12/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0644 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0471\n",
            "Epoch 13/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0578 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0515\n",
            "Epoch 14/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0616 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0517\n",
            "Epoch 15/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0559 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0533\n",
            "Epoch 16/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0563 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0483\n",
            "Epoch 17/100\n",
            "31/31 [==============================] - 0s 10ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0560 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0474\n",
            "Epoch 18/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0525 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0557\n",
            "Epoch 19/100\n",
            "31/31 [==============================] - 0s 9ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0557 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0526\n",
            "Epoch 20/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0522 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0555\n",
            "Epoch 21/100\n",
            "31/31 [==============================] - 0s 8ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0501 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0478\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1661<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.44MB of 0.44MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "fda14407f991438e9b5b99e6b9ef4be9",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181225-0zrcm2d2/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181225-0zrcm2d2/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>20</td></tr><tr><td>loss</td><td>0.00638</td></tr><tr><td>mean_squared_error</td><td>0.00638</td></tr><tr><td>mean_absolute_error</td><td>0.0532</td></tr><tr><td>val_loss</td><td>0.00429</td></tr><tr><td>val_mean_squared_error</td><td>0.00429</td></tr><tr><td>val_mean_absolute_error</td><td>0.04777</td></tr><tr><td>_runtime</td><td>13</td></tr><tr><td>_timestamp</td><td>1626199958</td></tr><tr><td>_step</td><td>20</td></tr><tr><td>best_val_loss</td><td>0.00417</td></tr><tr><td>best_epoch</td><td>10</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▅▄▃▁▃▆▃▂▁▂▁▂▂▁▁▃▂▃▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▅▄▃▁▃▆▃▂▁▂▁▂▂▁▁▃▂▃▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▅▇▅▅▃▅█▅▄▁▁▃▃▃▁▁▄▃▄▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▄▄▄▄▅▅▅▅▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▄▄▄▄▅▅▅▅▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dainty-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0zrcm2d2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0zrcm2d2</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: j6trongu with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">northern-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/j6trongu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/j6trongu</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_181246-j6trongu</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 4s 201ms/step - loss: 0.1085 - mean_squared_error: 0.1085 - mean_absolute_error: 0.2508 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1044\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0434 - mean_squared_error: 0.0434 - mean_absolute_error: 0.1790 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1053\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0945 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0728\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0647 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0472\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0467 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0512\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0476 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0497\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 1s 66ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0461 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0484\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0421 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0503\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0436 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0489\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0426 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0440 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0500\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0428 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0488\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0440 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0479\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0416 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0495\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0434 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0412 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0484\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 1s 70ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0387 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0487\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0403 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0485\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0403 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0476\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 1s 67ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0411 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0491\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0398 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0485\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0419 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0492\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0403 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0476\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0382 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0498\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0403 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0473\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0388 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0486\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0403 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0486\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0374 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0375 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0490\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0396 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0505\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0383 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0478\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0382 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0478\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0396 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0496\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 1s 71ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0401 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0483\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0356 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0479\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0381 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0495\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0372 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0485\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0362 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0481\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 1s 69ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0370 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0487\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0360 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0474\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0353 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0480\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0373 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0487\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0358 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0473\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0366 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0485\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0342 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0483\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0362 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0490\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0346 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0481\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 1s 72ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0345 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0497\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0358 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0482\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0368 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0484\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1783<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.57MB of 0.57MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "5bd273ccca414036b6b134b9ed6d1309",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181246-j6trongu/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181246-j6trongu/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00269</td></tr><tr><td>mean_squared_error</td><td>0.00269</td></tr><tr><td>mean_absolute_error</td><td>0.03682</td></tr><tr><td>val_loss</td><td>0.00408</td></tr><tr><td>val_mean_squared_error</td><td>0.00408</td></tr><tr><td>val_mean_absolute_error</td><td>0.04842</td></tr><tr><td>_runtime</td><td>37</td></tr><tr><td>_timestamp</td><td>1626200003</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00408</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">northern-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/j6trongu\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/j6trongu</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: qd16z6ax with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">glamorous-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/qd16z6ax\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/qd16z6ax</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_181331-qd16z6ax</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 7s 98ms/step - loss: 0.0732 - mean_squared_error: 0.0732 - mean_absolute_error: 0.1896 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0488\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0487 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0492\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0374 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0492\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0376 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0506\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0346 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0503\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0334 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0499\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0340 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0478\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0336 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0508\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0309 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0481\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0325 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0503\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0315 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0482\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0306 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0518\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0549\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0292 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0476\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0300 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0483\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0314 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0475\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0300 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0480\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0285 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0472\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0265 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0485\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0469\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0272 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0468\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0282 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0474\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0253 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0472\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0284 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0486\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0477\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0261 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0468\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0257 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0508\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0527\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0258 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0456\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0292 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0464\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0271 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0455\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 2s 76ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0255 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0454\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0267 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0451\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0261 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0548\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0471\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0472\n",
            "Epoch 37/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0485\n",
            "Epoch 38/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0483\n",
            "Epoch 39/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0254 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0441\n",
            "Epoch 40/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0439\n",
            "Epoch 41/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0458\n",
            "Epoch 42/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0251 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0503\n",
            "Epoch 43/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0438\n",
            "Epoch 44/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0434\n",
            "Epoch 45/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0453\n",
            "Epoch 46/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0243 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0428\n",
            "Epoch 47/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0237 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0477\n",
            "Epoch 48/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0262 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 49/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0455\n",
            "Epoch 50/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0424\n",
            "Epoch 51/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0248 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0414\n",
            "Epoch 52/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0415\n",
            "Epoch 53/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0422\n",
            "Epoch 54/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0248 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0414\n",
            "Epoch 55/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0276 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 56/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0408\n",
            "Epoch 57/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0263 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0451\n",
            "Epoch 58/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 8.8334e-04 - mean_squared_error: 8.8334e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0415\n",
            "Epoch 59/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0260 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0408\n",
            "Epoch 60/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0406\n",
            "Epoch 61/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 62/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0409\n",
            "Epoch 63/200\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0242 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0401\n",
            "Epoch 64/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0400\n",
            "Epoch 65/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0430\n",
            "Epoch 66/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0392\n",
            "Epoch 67/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0393\n",
            "Epoch 68/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.6581e-04 - mean_squared_error: 9.6581e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0421\n",
            "Epoch 69/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0253 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0407\n",
            "Epoch 70/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.5578e-04 - mean_squared_error: 9.5578e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0388\n",
            "Epoch 71/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0396\n",
            "Epoch 72/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0390\n",
            "Epoch 73/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0235 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0396\n",
            "Epoch 74/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0393\n",
            "Epoch 75/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.7795e-04 - mean_squared_error: 9.7795e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0392\n",
            "Epoch 76/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.8728e-04 - mean_squared_error: 9.8728e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 77/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 8.1049e-04 - mean_squared_error: 8.1049e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0396\n",
            "Epoch 78/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 8.9668e-04 - mean_squared_error: 8.9668e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0388\n",
            "Epoch 79/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0391\n",
            "Epoch 80/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 8.6275e-04 - mean_squared_error: 8.6275e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0397\n",
            "Epoch 81/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0423\n",
            "Epoch 82/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0380\n",
            "Epoch 83/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0385\n",
            "Epoch 84/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 9.3513e-04 - mean_squared_error: 9.3513e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 85/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.1025e-04 - mean_squared_error: 9.1025e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0403\n",
            "Epoch 86/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.7054e-04 - mean_squared_error: 9.7054e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0374\n",
            "Epoch 87/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0397\n",
            "Epoch 88/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.8829e-04 - mean_squared_error: 9.8829e-04 - mean_absolute_error: 0.0231 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0371\n",
            "Epoch 89/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0374\n",
            "Epoch 90/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 9.7779e-04 - mean_squared_error: 9.7779e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0368\n",
            "Epoch 91/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.7313e-04 - mean_squared_error: 9.7313e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0375\n",
            "Epoch 92/200\n",
            "31/31 [==============================] - 2s 77ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0224 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0391\n",
            "Epoch 93/200\n",
            "31/31 [==============================] - 2s 77ms/step - loss: 8.3505e-04 - mean_squared_error: 8.3505e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0373\n",
            "Epoch 94/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.2112e-04 - mean_squared_error: 9.2112e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0398\n",
            "Epoch 95/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 9.8323e-04 - mean_squared_error: 9.8323e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 96/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 7.8299e-04 - mean_squared_error: 7.8299e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0369\n",
            "Epoch 97/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 8.5520e-04 - mean_squared_error: 8.5520e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0370\n",
            "Epoch 98/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.7854e-04 - mean_squared_error: 9.7854e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0366\n",
            "Epoch 99/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 8.2367e-04 - mean_squared_error: 8.2367e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0374\n",
            "Epoch 100/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 101/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.1107e-04 - mean_squared_error: 9.1107e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0361\n",
            "Epoch 102/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 8.2963e-04 - mean_squared_error: 8.2963e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0361\n",
            "Epoch 103/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.7359e-04 - mean_squared_error: 9.7359e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0372\n",
            "Epoch 104/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 8.2181e-04 - mean_squared_error: 8.2181e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 105/200\n",
            "31/31 [==============================] - 2s 77ms/step - loss: 8.9431e-04 - mean_squared_error: 8.9431e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0364\n",
            "Epoch 106/200\n",
            "31/31 [==============================] - 2s 77ms/step - loss: 7.4798e-04 - mean_squared_error: 7.4798e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0367\n",
            "Epoch 107/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.9963e-04 - mean_squared_error: 9.9963e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0380\n",
            "Epoch 108/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0398\n",
            "Epoch 109/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 7.9682e-04 - mean_squared_error: 7.9682e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0357\n",
            "Epoch 110/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 8.7390e-04 - mean_squared_error: 8.7390e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0358\n",
            "Epoch 111/200\n",
            "31/31 [==============================] - 2s 78ms/step - loss: 9.5914e-04 - mean_squared_error: 9.5914e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0370\n",
            "Epoch 112/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 8.8002e-04 - mean_squared_error: 8.8002e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0359\n",
            "Epoch 113/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 7.8371e-04 - mean_squared_error: 7.8371e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0352\n",
            "Epoch 114/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 9.5052e-04 - mean_squared_error: 9.5052e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0371\n",
            "Epoch 115/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 7.3848e-04 - mean_squared_error: 7.3848e-04 - mean_absolute_error: 0.0200 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0383\n",
            "Epoch 116/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 7.7772e-04 - mean_squared_error: 7.7772e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0386\n",
            "Epoch 117/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 9.1695e-04 - mean_squared_error: 9.1695e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0387\n",
            "Epoch 118/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 9.3111e-04 - mean_squared_error: 9.3111e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0389\n",
            "Epoch 119/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 8.7230e-04 - mean_squared_error: 8.7230e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0366\n",
            "Epoch 120/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 9.8144e-04 - mean_squared_error: 9.8144e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0374\n",
            "Epoch 121/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 7.8623e-04 - mean_squared_error: 7.8623e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1996<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.70MB of 0.70MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ed579c5a9ca142cc9b137abf5fc2892f",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181331-qd16z6ax/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181331-qd16z6ax/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>120</td></tr><tr><td>loss</td><td>0.00081</td></tr><tr><td>mean_squared_error</td><td>0.00081</td></tr><tr><td>mean_absolute_error</td><td>0.02078</td></tr><tr><td>val_loss</td><td>0.00273</td></tr><tr><td>val_mean_squared_error</td><td>0.00273</td></tr><tr><td>val_mean_absolute_error</td><td>0.04167</td></tr><tr><td>_runtime</td><td>283</td></tr><tr><td>_timestamp</td><td>1626200294</td></tr><tr><td>_step</td><td>120</td></tr><tr><td>best_val_loss</td><td>0.00243</td></tr><tr><td>best_epoch</td><td>110</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▆▆▇▆▅▆▅▆▅▇▅▄▅▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▂▁▁▃▂</td></tr><tr><td>val_mean_squared_error</td><td>█▇▆▆▇▆▅▆▅▆▅▇▅▄▅▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▂▁▁▃▂</td></tr><tr><td>val_mean_absolute_error</td><td>▆▆▅▆█▅▆▅▅▇▄█▆▅▄▅▃▃▃▃▃▄▃▂▂▂▃▃▂▁▁▁▁▁▁▂▁▁▂▃</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">glamorous-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/qd16z6ax\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/qd16z6ax</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: lx5svyrj with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">pretty-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/lx5svyrj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/lx5svyrj</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_181910-lx5svyrj</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "31/31 [==============================] - 7s 101ms/step - loss: 0.0472 - mean_squared_error: 0.0472 - mean_absolute_error: 0.1360 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 2/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0519\n",
            "Epoch 3/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0298 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0405\n",
            "Epoch 4/200\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0264 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 5/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0277 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0571\n",
            "Epoch 6/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0289 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 7/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0257 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0385\n",
            "Epoch 8/200\n",
            "31/31 [==============================] - 2s 76ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0496\n",
            "Epoch 9/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0406\n",
            "Epoch 10/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0225 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0396\n",
            "Epoch 11/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.6915e-04 - mean_squared_error: 9.6915e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0522\n",
            "Epoch 12/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 8.5572e-04 - mean_squared_error: 8.5572e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0395\n",
            "Epoch 13/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0476\n",
            "Epoch 14/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0254 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 15/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 9.7031e-04 - mean_squared_error: 9.7031e-04 - mean_absolute_error: 0.0236 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 16/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0237 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0370\n",
            "Epoch 17/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.9540e-04 - mean_squared_error: 9.9540e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0379\n",
            "Epoch 18/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.2148e-04 - mean_squared_error: 9.2148e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0367\n",
            "Epoch 19/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0239 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0365\n",
            "Epoch 20/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.9997e-04 - mean_squared_error: 9.9997e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0362\n",
            "Epoch 21/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 9.0997e-04 - mean_squared_error: 9.0997e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0391\n",
            "Epoch 22/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 8.1959e-04 - mean_squared_error: 8.1959e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 23/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0248 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0391\n",
            "Epoch 24/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 6.7987e-04 - mean_squared_error: 6.7987e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0361\n",
            "Epoch 25/200\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 7.3583e-04 - mean_squared_error: 7.3583e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0357\n",
            "Epoch 26/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0372\n",
            "Epoch 27/200\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 9.4301e-04 - mean_squared_error: 9.4301e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0348\n",
            "Epoch 28/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0228 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0375\n",
            "Epoch 29/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0381\n",
            "Epoch 30/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.2287e-04 - mean_squared_error: 9.2287e-04 - mean_absolute_error: 0.0224 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0365\n",
            "Epoch 31/200\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 7.0339e-04 - mean_squared_error: 7.0339e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0380\n",
            "Epoch 32/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 7.7446e-04 - mean_squared_error: 7.7446e-04 - mean_absolute_error: 0.0205 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0377\n",
            "Epoch 33/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 8.7445e-04 - mean_squared_error: 8.7445e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0358\n",
            "Epoch 34/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 9.4475e-04 - mean_squared_error: 9.4475e-04 - mean_absolute_error: 0.0229 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 35/200\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.7491e-04 - mean_squared_error: 9.7491e-04 - mean_absolute_error: 0.0238 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0444\n",
            "Epoch 36/200\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0255 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0422\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2470<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.66MB of 0.66MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "474a98f026e74810b3b8613f98756a9c",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181910-lx5svyrj/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_181910-lx5svyrj/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>35</td></tr><tr><td>loss</td><td>0.00108</td></tr><tr><td>mean_squared_error</td><td>0.00108</td></tr><tr><td>mean_absolute_error</td><td>0.02475</td></tr><tr><td>val_loss</td><td>0.00274</td></tr><tr><td>val_mean_squared_error</td><td>0.00274</td></tr><tr><td>val_mean_absolute_error</td><td>0.04224</td></tr><tr><td>_runtime</td><td>93</td></tr><tr><td>_timestamp</td><td>1626200443</td></tr><tr><td>_step</td><td>35</td></tr><tr><td>best_val_loss</td><td>0.00239</td></tr><tr><td>best_epoch</td><td>25</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▁▁▁▂▂▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_loss</td><td>▃▆▃▄█▃▃▅▃▃▆▂▄▂▃▂▁▂▂▂▂▃▂▁▂▁▁▃▃▁▃▁▂▃▃▂</td></tr><tr><td>val_mean_squared_error</td><td>▃▆▃▄█▃▃▅▃▃▆▂▄▂▃▂▁▂▂▂▂▃▂▁▂▁▁▃▃▁▃▁▂▃▃▂</td></tr><tr><td>val_mean_absolute_error</td><td>▄▆▃▄█▃▂▆▃▃▆▂▅▂▄▂▂▂▂▁▂▄▂▁▁▂▁▂▂▂▂▂▁▄▄▃</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">pretty-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/lx5svyrj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/lx5svyrj</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4c2wi4jg with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">usual-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4c2wi4jg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4c2wi4jg</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_182057-4c2wi4jg</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 6s 99ms/step - loss: 0.1369 - mean_squared_error: 0.1369 - mean_absolute_error: 0.2859 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1168\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0369 - mean_squared_error: 0.0369 - mean_absolute_error: 0.1621 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1116\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0243 - mean_squared_error: 0.0243 - mean_absolute_error: 0.1229 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0806\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.0971 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0708\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0781 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0617\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0673 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0541\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0622 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0571\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0648 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0525\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0605 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0533\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0592 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0513\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0593 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0503\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0578 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0546\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0582 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0502\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0595 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0492\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0547 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0528\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0528 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0556 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0535\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0502 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0508\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0546 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0543 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0502\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0543 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0492\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0551 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0511\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0529 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0488\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0512 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0518\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0527 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0526\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0521 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0504 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0518\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0540 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0501\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0537 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0491\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0542 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0513\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 2s 70ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0554 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0551\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0500 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0503\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0483 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0508\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2630<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.45MB of 0.45MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b36211a892ad428b8606d7cdad2fbe8a",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_182057-4c2wi4jg/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_182057-4c2wi4jg/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>32</td></tr><tr><td>loss</td><td>0.00481</td></tr><tr><td>mean_squared_error</td><td>0.00481</td></tr><tr><td>mean_absolute_error</td><td>0.04924</td></tr><tr><td>val_loss</td><td>0.00425</td></tr><tr><td>val_mean_squared_error</td><td>0.00425</td></tr><tr><td>val_mean_absolute_error</td><td>0.05083</td></tr><tr><td>_runtime</td><td>85</td></tr><tr><td>_timestamp</td><td>1626200542</td></tr><tr><td>_step</td><td>32</td></tr><tr><td>best_val_loss</td><td>0.00417</td></tr><tr><td>best_epoch</td><td>22</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▄▃▂▂▂▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">usual-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4c2wi4jg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4c2wi4jg</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: u6sv3qdl with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">unique-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/u6sv3qdl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/u6sv3qdl</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_182236-u6sv3qdl</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "31/31 [==============================] - 7s 102ms/step - loss: 0.0548 - mean_squared_error: 0.0548 - mean_absolute_error: 0.1663 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0594\n",
            "Epoch 2/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0462 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0497\n",
            "Epoch 3/50\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0351 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0526\n",
            "Epoch 4/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0354 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0489\n",
            "Epoch 5/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0348 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0486\n",
            "Epoch 6/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0331 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0499\n",
            "Epoch 7/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0320 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0497\n",
            "Epoch 8/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0292 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0525\n",
            "Epoch 9/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0318 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0522\n",
            "Epoch 10/50\n",
            "31/31 [==============================] - 2s 69ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0319 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0476\n",
            "Epoch 11/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0275 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0477\n",
            "Epoch 12/50\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0282 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0502\n",
            "Epoch 13/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0312 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0476\n",
            "Epoch 14/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0254 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0485\n",
            "Epoch 15/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0474\n",
            "Epoch 16/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0260 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0515\n",
            "Epoch 17/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0473\n",
            "Epoch 18/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0472\n",
            "Epoch 19/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0475\n",
            "Epoch 20/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0240 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0513\n",
            "Epoch 21/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0248 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0467\n",
            "Epoch 22/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0476\n",
            "Epoch 23/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0256 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0499\n",
            "Epoch 24/50\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0467\n",
            "Epoch 25/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0475\n",
            "Epoch 26/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0521\n",
            "Epoch 27/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0466\n",
            "Epoch 28/50\n",
            "31/31 [==============================] - 2s 76ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0231 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0456\n",
            "Epoch 29/50\n",
            "31/31 [==============================] - 2s 71ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0457\n",
            "Epoch 30/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0253 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0455\n",
            "Epoch 31/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0256 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0471\n",
            "Epoch 32/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0254 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0496\n",
            "Epoch 33/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0453\n",
            "Epoch 34/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0251 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0468\n",
            "Epoch 35/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0243 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0449\n",
            "Epoch 36/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0450\n",
            "Epoch 37/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0443\n",
            "Epoch 38/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0473\n",
            "Epoch 39/50\n",
            "31/31 [==============================] - 2s 77ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0242 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0446\n",
            "Epoch 40/50\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0449\n",
            "Epoch 41/50\n",
            "31/31 [==============================] - 2s 76ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0233 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0469\n",
            "Epoch 42/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0456\n",
            "Epoch 43/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0462\n",
            "Epoch 44/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 9.7735e-04 - mean_squared_error: 9.7735e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0473\n",
            "Epoch 45/50\n",
            "31/31 [==============================] - 2s 73ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0248 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0505\n",
            "Epoch 46/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0223 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 47/50\n",
            "31/31 [==============================] - 2s 72ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0435\n",
            "Epoch 48/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0440\n",
            "Epoch 49/50\n",
            "31/31 [==============================] - 2s 75ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0435\n",
            "Epoch 50/50\n",
            "31/31 [==============================] - 2s 74ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0227 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0476\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2781<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.66MB of 0.66MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "43bac6b3c6c547b7bf9216ccdcc4acd7",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_182236-u6sv3qdl/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_182236-u6sv3qdl/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00099</td></tr><tr><td>mean_squared_error</td><td>0.00099</td></tr><tr><td>mean_absolute_error</td><td>0.02274</td></tr><tr><td>val_loss</td><td>0.00448</td></tr><tr><td>val_mean_squared_error</td><td>0.00448</td></tr><tr><td>val_mean_absolute_error</td><td>0.0476</td></tr><tr><td>_runtime</td><td>125</td></tr><tr><td>_timestamp</td><td>1626200681</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00353</td></tr><tr><td>best_epoch</td><td>45</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▅▄▄▄▄▄▄▃▅▄▃▃▃▃▅▃▃▃▃▃▃▂▂▂▂▁▁▂▁▄▃▄▁▁▂▂▄</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▅▄▄▄▄▄▄▃▅▄▃▃▃▃▅▃▃▃▃▃▃▂▂▂▂▁▁▂▁▄▃▄▁▁▂▂▄</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▅▃▄▄▅▅▃▄▃▃▅▃▃▃▂▃▄▂▅▂▂▂▃▄▂▂▂▁▃▁▃▂▂▃▂▁▁▃</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">unique-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/u6sv3qdl\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/u6sv3qdl</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: crxadid8 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">divine-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/jvaofocz</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/crxadid8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/crxadid8</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_182522-crxadid8</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 199ms/step - loss: 0.2675 - mean_squared_error: 0.2675 - mean_absolute_error: 0.4066 - val_loss: 0.2856 - val_mean_squared_error: 0.2856 - val_mean_absolute_error: 0.4967\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.1370 - mean_squared_error: 0.1370 - mean_absolute_error: 0.2830 - val_loss: 0.1008 - val_mean_squared_error: 0.1008 - val_mean_absolute_error: 0.2789\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0434 - mean_squared_error: 0.0434 - mean_absolute_error: 0.1618 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0972\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0743 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0520\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0408 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0511\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0415 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0538\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0395 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0507\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0411 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0503\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0390 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0530\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0415 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0499\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0375 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0574\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0386 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0504\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0387 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0492\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0392 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0512\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0382 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0505\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0364 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0500\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0386 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0490\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0363 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0582\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0382 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0500\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0370 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0492\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0363 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0507\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0356 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0503\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0347 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0505\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0355 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0550\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0360 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0521\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0341 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0533\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0325 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0495\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0358 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0492\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0345 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0501\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0348 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0507\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0324 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0499\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0324 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0520\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0342 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0498\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0333 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0515\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0333 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0516\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0339 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0510\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0330 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0518\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0321 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0511\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0341 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0486\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0348 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0482\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0481\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0489\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0325 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0319 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0486\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0493\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0321 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0560\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0332 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0500\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0498\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0323 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0483\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0321 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0480\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0327 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0501\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0489\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0318 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0481\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0339 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0494\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0485\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0333 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0480\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0314 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0516\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0315 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0482\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0290 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0286 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0489\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0305 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0492\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0316 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0553\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0480\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0285 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0479\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0301 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0486\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0312 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0479\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0311 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0477\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0291 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0476\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0298 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0476\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0295 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0524\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0300 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0570\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0319 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0283 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0474\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0474\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0297 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0482\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0484\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0485\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0291 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0483\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0311 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0509\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0321 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0471\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0289 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0472\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0318 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0479\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0288 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0475\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0307 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0475\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0306 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0471\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0301 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0474\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0295 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0469\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0488\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0310 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0517\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0314 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0504\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0307 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0492\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0472\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0292 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0483\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0472\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0294 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0490\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0300 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0480\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0302 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0493\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0297 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0547\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0298 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0539\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0287 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0481\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0292 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0480\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0296 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0474\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0274 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0508\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0295 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0463\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0475\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0285 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0464\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0283 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0486\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0285 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0472\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0289 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0485\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0296 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0472\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0274 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0474\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0533\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0292 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0489\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0487\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0468\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0474\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0300 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0542\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0472\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0310 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0484\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0278 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0463\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0293 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0467\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0459\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0295 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0488\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0280 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0487\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0305 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0470\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0309 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0457\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0303 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0456\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0296 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0510\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0481\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0298 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0458\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0458\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0469\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0284 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0458\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0463\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0285 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0481\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0295 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0464\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0459\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0465\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0294 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0460\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0453\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0287 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0534\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0294 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0457\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0481\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0302 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0458\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0280 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0470\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0473\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0452\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0616\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0347 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0486\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0290 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0459\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0294 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0452\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0275 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0453\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0451\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0466\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0269 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0474\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0460\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0282 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0452\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0278 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0489\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0266 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0466\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0277 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0463\n",
            "Epoch 165/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0260 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0485\n",
            "Epoch 166/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 167/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0452\n",
            "Epoch 168/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0449\n",
            "Epoch 169/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0275 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0450\n",
            "Epoch 170/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0282 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0456\n",
            "Epoch 171/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0452\n",
            "Epoch 172/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0287 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0452\n",
            "Epoch 173/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0280 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0450\n",
            "Epoch 174/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0296 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0463\n",
            "Epoch 175/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0469\n",
            "Epoch 176/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0266 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0447\n",
            "Epoch 177/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0273 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0464\n",
            "Epoch 178/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 179/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0458\n",
            "Epoch 180/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0294 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0443\n",
            "Epoch 181/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0279 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0445\n",
            "Epoch 182/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0483\n",
            "Epoch 183/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0475\n",
            "Epoch 184/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0441\n",
            "Epoch 185/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0308 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0452\n",
            "Epoch 186/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0441\n",
            "Epoch 187/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0279 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0449\n",
            "Epoch 188/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0268 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0445\n",
            "Epoch 189/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0295 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0441\n",
            "Epoch 190/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0267 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0451\n",
            "Epoch 191/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0275 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0446\n",
            "Epoch 192/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0255 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0439\n",
            "Epoch 193/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0269 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0446\n",
            "Epoch 194/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0446\n",
            "Epoch 195/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0268 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0446\n",
            "Epoch 196/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0264 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0441\n",
            "Epoch 197/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0278 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0457\n",
            "Epoch 198/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0270 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0494\n",
            "Epoch 199/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0272 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0448\n",
            "Epoch 200/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0255 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0452\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2983<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.66MB of 0.66MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4dd297320124462cab8649e70de09069",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_182522-crxadid8/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_182522-crxadid8/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00148</td></tr><tr><td>mean_squared_error</td><td>0.00148</td></tr><tr><td>mean_absolute_error</td><td>0.02639</td></tr><tr><td>val_loss</td><td>0.00359</td></tr><tr><td>val_mean_squared_error</td><td>0.00359</td></tr><tr><td>val_mean_absolute_error</td><td>0.04517</td></tr><tr><td>_runtime</td><td>141</td></tr><tr><td>_timestamp</td><td>1626200863</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00358</td></tr><tr><td>best_epoch</td><td>198</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">divine-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/crxadid8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/crxadid8</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "Exception in thread Thread-11:\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/sdk/internal/internal_api.py\", line 1266, in agent_heartbeat\n",
            "    timeout=60,\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/sdk/lib/retry.py\", line 102, in __call__\n",
            "    result = self._call_fn(*args, **kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/sdk/internal/internal_api.py\", line 127, in execute\n",
            "    return self.client.execute(*args, **kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/vendor/gql-0.2.0/gql/client.py\", line 52, in execute\n",
            "    result = self._get_result(document, *args, **kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/vendor/gql-0.2.0/gql/client.py\", line 60, in _get_result\n",
            "    return self.transport.execute(document, *args, **kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/vendor/gql-0.2.0/gql/transport/requests.py\", line 38, in execute\n",
            "    request = requests.post(self.url, **post_args)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/requests/api.py\", line 119, in post\n",
            "    return request('post', url, data=data, json=json, **kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/requests/api.py\", line 61, in request\n",
            "    return session.request(method=method, url=url, **kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/requests/sessions.py\", line 521, in request\n",
            "    prep.url, proxies, stream, verify, cert\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/requests/sessions.py\", line 697, in merge_environment_settings\n",
            "    env_proxies = get_environ_proxies(url, no_proxy=no_proxy)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/requests/utils.py\", line 766, in get_environ_proxies\n",
            "    if should_bypass_proxies(url, no_proxy=no_proxy):\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/requests/utils.py\", line 750, in should_bypass_proxies\n",
            "    bypass = proxy_bypass(parsed.hostname)\n",
            "  File \"/usr/lib/python3.7/urllib/request.py\", line 2528, in proxy_bypass_environment\n",
            "    proxies = getproxies_environment()\n",
            "  File \"/usr/lib/python3.7/urllib/request.py\", line 2511, in getproxies_environment\n",
            "    for name, value in os.environ.items():\n",
            "  File \"/usr/lib/python3.7/_collections_abc.py\", line 744, in __iter__\n",
            "    yield (key, self._mapping[key])\n",
            "  File \"/usr/lib/python3.7/os.py\", line 681, in __getitem__\n",
            "    raise KeyError(key) from None\n",
            "KeyError: 'WANDB_RUN_ID'\n",
            "\n",
            "During handling of the above exception, another exception occurred:\n",
            "\n",
            "Traceback (most recent call last):\n",
            "  File \"/usr/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\n",
            "    self.run()\n",
            "  File \"/usr/lib/python3.7/threading.py\", line 870, in run\n",
            "    self._target(*self._args, **self._kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/agents/pyagent.py\", line 170, in _heartbeat\n",
            "    commands = self._api.agent_heartbeat(self._agent_id, {}, run_status)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/apis/internal.py\", line 124, in agent_heartbeat\n",
            "    return self.api.agent_heartbeat(*args, **kwargs)\n",
            "  File \"/usr/local/lib/python3.7/dist-packages/wandb/sdk/internal/internal_api.py\", line 1270, in agent_heartbeat\n",
            "    message = ast.literal_eval(e.args[0])[\"message\"]\n",
            "  File \"/usr/lib/python3.7/ast.py\", line 91, in literal_eval\n",
            "    return _convert(node_or_string)\n",
            "  File \"/usr/lib/python3.7/ast.py\", line 90, in _convert\n",
            "    return _convert_signed_num(node)\n",
            "  File \"/usr/lib/python3.7/ast.py\", line 63, in _convert_signed_num\n",
            "    return _convert_num(node)\n",
            "  File \"/usr/lib/python3.7/ast.py\", line 55, in _convert_num\n",
            "    raise ValueError('malformed node or string: ' + repr(node))\n",
            "ValueError: malformed node or string: <_ast.Name object at 0x7f1f8bc46bd0>\n",
            "\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Sweep Agent: Waiting for job.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "eb6daa3b488e4732a44178d180cdcc44",
            "040fe9ae56774bfdb043c0385e82b39a",
            "761a1111ed694d79b0bb47d5246ac7b0",
            "1c973a992856407c8d8cbb96cf2dae77",
            "6db89fd25afe46df9bf78a7a5d683f94",
            "2a80b881cb1e4d54b12dbdd79d7a114a",
            "2cfa8a35c1634cc59f553462862f6b3b",
            "8bf75daf2eec4e13ac8ea6fc0abb82f6",
            "04ce877ac8ab409aa55c4af243facda9",
            "d2e661bdadaf48f2887bc00e9c55d6a2",
            "7e4e4ad9357f4bd598758b0bdb4bf1d4",
            "10634ebc60c648e88a0143ca7ebd4494",
            "406a13929ba34aedaa5e1760d20ae0d4",
            "34410add117a4345b3cf70c3af09a8af",
            "65c4855500fa4d919269b3ef9c00aa75",
            "9ba698c2ca36428a8f4a64372b70c413",
            "02ba3a0edca942a49d2a5a503a0d6298",
            "1da719ff4b3c4c989a19d7e8e6d9b430",
            "429018bda68545e69709c1dfff3a59de",
            "881b2d46783d4dbcaa2a029170d0e7f7",
            "94e4d5f4c3104a7a953b48873e0971f4",
            "b264f3ab1e7e4785943f368e29ce0afb",
            "5006d1709e524dd3a58acb14034f86db",
            "30a9f174a1164d6fb42bd699522b80b3",
            "e2e04e32b3aa4c33a6f31f567f7a4b8b",
            "178e945ff75a438c9a047749ca8b79ba",
            "bf6bf60dacd3482aba797b9ef955c09a",
            "cb1761fd570f4b0aa8774706747cbb18",
            "6f1102cbad2644f9be111d26d1514ac2",
            "a9ca6f8ef70c43979f8fd79612ee7d5a",
            "0ca263116f7449deb4e8de6b7d164c8e",
            "b0fc804e43ef441c97950a1195acfad1",
            "c9d6fac283da4c2b861ef9085bdf8a66",
            "a8c6e7acabba43088f508eebccf15614",
            "de926f3ed2cc422b9b2a70216bf0e87c",
            "e585e2e221924424adbeadb50c10af33",
            "b9c2dc669f844d9aab57db317a726cd9",
            "353890a79b304578ad77c638075f0c97",
            "b5edc0001a4c4afc9b495d0d96461bfe",
            "6e5110cfa8ba4fb49a7746aadc9e89dd",
            "fda14407f991438e9b5b99e6b9ef4be9",
            "d0cf6430912e463aa3c7dee1c5318d62",
            "48ecb5f13a8849b4bfb5c29ab4991bbb",
            "cc4c641daaa04e169efc5463ba53718a",
            "f456ae2d7ad94b7ab9e76cc722ac3389",
            "4c5b3decf0f847429aa67727c4b6b7f3",
            "8b715d27b8024a0aa62dfd830aa0436b",
            "36fa60b9aefd4c5781b9b874373ad5b0",
            "5bd273ccca414036b6b134b9ed6d1309",
            "556eb5218b244c729146dff00187744a",
            "a58e6c0022c84d6d91760e514355999b",
            "4c21e3ba13574deba47b807d4d2c7fe2",
            "afaf6443e9c54078912eeb0b2dd61121",
            "5713147194e14b18bf65bd8241360185",
            "a840c8f1296f4c92a8df98ba6379ed52",
            "f3651edfbd964f979df91f5275b34342",
            "ed579c5a9ca142cc9b137abf5fc2892f",
            "286f31810a574057bd31c634951295ce",
            "e233a2291baa4e489bb96ff1a2f9a230",
            "f69e6189344a406ca347477d39ba9266",
            "36bac18ae24b4f60a1d9401f7803e65b",
            "ee1e58ea2ae14594b0c74c38df0ed68f",
            "019ada6c0cbe4dd4b841eba0d13bacc1",
            "44d5636d699344c1a6a85ae8cd3f77cc",
            "474a98f026e74810b3b8613f98756a9c",
            "12c37547f0cc479e931570b29bb0676d",
            "1478dad1474d4e1da4f85cd434cfb422",
            "811f1dc330a6403294668ad39c90434b",
            "8f913f01d1374e96b198156451aa0a70",
            "cb0b0b24fa46428287eafdf8534ba3fd",
            "212909dfc4e547938b4c38f3dbaf5a42",
            "55bd213810bb4ae7a0926176ab563c7d",
            "b36211a892ad428b8606d7cdad2fbe8a",
            "958b24c503314be787a3187d1d39bb45",
            "9d9e5e2e50f94e87ae2773e43cf38ee5",
            "0f22e2450fcc42b58c9b5a16516c1c4b",
            "f74572ca83d94d4da282ec284331925a",
            "9e570dc845744014b02fd44cb149441c",
            "532b019a455e4a71a3a26b0c541fbd92",
            "4be8e6d5d5664e71aacf8141df671f37",
            "43bac6b3c6c547b7bf9216ccdcc4acd7",
            "8f3f9f79969744a293d61d62b8d96b88",
            "550539e4268942959e0b11013e60b000",
            "a0002ad655984785a0ef10299f8b6d88",
            "bcc292dc8e5b4fd2967214ddb70a935b",
            "8964956ed2f34505ad15f39c1988d60e",
            "206416facaa94aabb3cf0a2e73358843",
            "c75f519d48c54d4bace736da8cf4e680",
            "4dd297320124462cab8649e70de09069",
            "e672b9fec6174e399f55658c8a5e363f",
            "ca02ab1ee6b84eaab4c67afa32e562fe",
            "225f57a88da24549ad382209a0ca4271",
            "f16057784ea04699a9d7abc345509344",
            "b82f3c6143404bc1ac60b55bc78eaa00",
            "e073ff1edb574336bfd1059cf8fa45b0",
            "3554a7f4feeb4bb9acd454f956c604fa"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "d442eb49-e272-40af-df71-be2ceb521427"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ],
      "metadata": {
        "id": "gFTu29dbi18i"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "source": [
        "best_config = {\n",
        "        'epochs': 200,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.2,\n",
        "        'input_size': 50,\n",
        "        'hidden_size': 50,\n",
        "        'learning_rate': 0.001,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "    }"
      ],
      "outputs": [],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# input layer\n",
        "model.add(GRU(units=50, return_sequences=True, input_shape=(window_len, 1), activation='tanh'))\n",
        "model.add(Dropout(0.2))\n",
        "# hidden layer\n",
        "model.add(GRU(units=50))\n",
        "model.add(Dropout(0.2))\n",
        "model.add(Dense(units=1))\n",
        "\n",
        "# defining the optimiser\n",
        "optimizer = keras.optimizers.Adam(learning_rate=0.001)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total number of trainable parameters:  23301\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "c3214b5c-54c7-496f-f0b8-92485ababdd9"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=200, batch_size=32)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "39/39 [==============================] - 3s 6ms/step - loss: 0.0431\n",
            "Epoch 2/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0026\n",
            "Epoch 3/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0025\n",
            "Epoch 4/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0024\n",
            "Epoch 5/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0020\n",
            "Epoch 6/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0021\n",
            "Epoch 7/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0015\n",
            "Epoch 8/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0017\n",
            "Epoch 9/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0016\n",
            "Epoch 10/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0017\n",
            "Epoch 11/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0016\n",
            "Epoch 12/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0015\n",
            "Epoch 13/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0014\n",
            "Epoch 14/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0015\n",
            "Epoch 15/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0013\n",
            "Epoch 16/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0015\n",
            "Epoch 17/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0014\n",
            "Epoch 18/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0016\n",
            "Epoch 19/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0014\n",
            "Epoch 20/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0013\n",
            "Epoch 21/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0016\n",
            "Epoch 22/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0012\n",
            "Epoch 23/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0013\n",
            "Epoch 24/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0013\n",
            "Epoch 25/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0012\n",
            "Epoch 26/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 27/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 28/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0012\n",
            "Epoch 29/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 30/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 31/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.4196e-04\n",
            "Epoch 32/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 33/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.4226e-04\n",
            "Epoch 34/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.7457e-04\n",
            "Epoch 35/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.4816e-04\n",
            "Epoch 36/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.0587e-04\n",
            "Epoch 37/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0010\n",
            "Epoch 38/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 39/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 40/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0012\n",
            "Epoch 41/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.9397e-04\n",
            "Epoch 42/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.9641e-04\n",
            "Epoch 43/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.1063e-04\n",
            "Epoch 44/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.8783e-04\n",
            "Epoch 45/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.1943e-04\n",
            "Epoch 46/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0010\n",
            "Epoch 47/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.8156e-04\n",
            "Epoch 48/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.5040e-04\n",
            "Epoch 49/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0010\n",
            "Epoch 50/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.1350e-04\n",
            "Epoch 51/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0010\n",
            "Epoch 52/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.5361e-04\n",
            "Epoch 53/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.0401e-04\n",
            "Epoch 54/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.9306e-04\n",
            "Epoch 55/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0011\n",
            "Epoch 56/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 0.0011\n",
            "Epoch 57/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.0342e-04\n",
            "Epoch 58/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.9356e-04\n",
            "Epoch 59/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.3378e-04\n",
            "Epoch 60/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 0.0010\n",
            "Epoch 61/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.1207e-04\n",
            "Epoch 62/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.4634e-04\n",
            "Epoch 63/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.5563e-04\n",
            "Epoch 64/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.5756e-04\n",
            "Epoch 65/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.2328e-04\n",
            "Epoch 66/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.6459e-04\n",
            "Epoch 67/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.1554e-04\n",
            "Epoch 68/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.3070e-04\n",
            "Epoch 69/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.7350e-04\n",
            "Epoch 70/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.5338e-04\n",
            "Epoch 71/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.5739e-04\n",
            "Epoch 72/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 9.7225e-04\n",
            "Epoch 73/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.3520e-04\n",
            "Epoch 74/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.7627e-04\n",
            "Epoch 75/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.6249e-04\n",
            "Epoch 76/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.4276e-04\n",
            "Epoch 77/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.8593e-04\n",
            "Epoch 78/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.6643e-04\n",
            "Epoch 79/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.2936e-04\n",
            "Epoch 80/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.9218e-04\n",
            "Epoch 81/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.6093e-04\n",
            "Epoch 82/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.5733e-04\n",
            "Epoch 83/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.7848e-04\n",
            "Epoch 84/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.7554e-04\n",
            "Epoch 85/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0779e-04\n",
            "Epoch 86/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.7284e-04\n",
            "Epoch 87/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.1553e-04\n",
            "Epoch 88/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.3874e-04\n",
            "Epoch 89/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.9353e-04\n",
            "Epoch 90/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.2693e-04\n",
            "Epoch 91/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0335e-04\n",
            "Epoch 92/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.3170e-04\n",
            "Epoch 93/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.7376e-04\n",
            "Epoch 94/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.3875e-04\n",
            "Epoch 95/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.1389e-04\n",
            "Epoch 96/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 9.2745e-04\n",
            "Epoch 97/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.5475e-04\n",
            "Epoch 98/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.1353e-04\n",
            "Epoch 99/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.7036e-04\n",
            "Epoch 100/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.7724e-04\n",
            "Epoch 101/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.1434e-04\n",
            "Epoch 102/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.2459e-04\n",
            "Epoch 103/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.0173e-04\n",
            "Epoch 104/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.6553e-04\n",
            "Epoch 105/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.5819e-04\n",
            "Epoch 106/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.8705e-04\n",
            "Epoch 107/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.1980e-04\n",
            "Epoch 108/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.4030e-04\n",
            "Epoch 109/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.7560e-04\n",
            "Epoch 110/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 5.4481e-04\n",
            "Epoch 111/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.6435e-04\n",
            "Epoch 112/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.8648e-04\n",
            "Epoch 113/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.8158e-04\n",
            "Epoch 114/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.4691e-04\n",
            "Epoch 115/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 8.1208e-04\n",
            "Epoch 116/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.9212e-04\n",
            "Epoch 117/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.1783e-04\n",
            "Epoch 118/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.5916e-04\n",
            "Epoch 119/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.6335e-04\n",
            "Epoch 120/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.3237e-04\n",
            "Epoch 121/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.3940e-04\n",
            "Epoch 122/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.4209e-04\n",
            "Epoch 123/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.0308e-04\n",
            "Epoch 124/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.8842e-04\n",
            "Epoch 125/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.5006e-04\n",
            "Epoch 126/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.5202e-04\n",
            "Epoch 127/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.2648e-04\n",
            "Epoch 128/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.8862e-04\n",
            "Epoch 129/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.1757e-04\n",
            "Epoch 130/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.9177e-04\n",
            "Epoch 131/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.7586e-04\n",
            "Epoch 132/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.5586e-04\n",
            "Epoch 133/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.5781e-04\n",
            "Epoch 134/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.6256e-04\n",
            "Epoch 135/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0439e-04\n",
            "Epoch 136/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.0344e-04\n",
            "Epoch 137/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.9457e-04\n",
            "Epoch 138/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.2656e-04\n",
            "Epoch 139/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.3704e-04\n",
            "Epoch 140/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.1264e-04\n",
            "Epoch 141/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.0162e-04\n",
            "Epoch 142/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.5121e-04\n",
            "Epoch 143/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.0828e-04\n",
            "Epoch 144/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.3742e-04\n",
            "Epoch 145/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.9135e-04\n",
            "Epoch 146/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.3910e-04\n",
            "Epoch 147/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.2264e-04\n",
            "Epoch 148/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0822e-04\n",
            "Epoch 149/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.4761e-04\n",
            "Epoch 150/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.9289e-04\n",
            "Epoch 151/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.2560e-04\n",
            "Epoch 152/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.3713e-04\n",
            "Epoch 153/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.8775e-04\n",
            "Epoch 154/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.5036e-04\n",
            "Epoch 155/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.9151e-04\n",
            "Epoch 156/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.4773e-04\n",
            "Epoch 157/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.3301e-04\n",
            "Epoch 158/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0343e-04\n",
            "Epoch 159/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.5093e-04\n",
            "Epoch 160/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.8836e-04\n",
            "Epoch 161/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.1081e-04\n",
            "Epoch 162/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.5803e-04\n",
            "Epoch 163/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 5.8354e-04\n",
            "Epoch 164/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.2272e-04\n",
            "Epoch 165/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.6004e-04\n",
            "Epoch 166/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 6.1462e-04\n",
            "Epoch 167/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.1950e-04\n",
            "Epoch 168/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.5471e-04\n",
            "Epoch 169/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.6571e-04\n",
            "Epoch 170/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 7.0329e-04\n",
            "Epoch 171/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.1735e-04\n",
            "Epoch 172/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.6618e-04\n",
            "Epoch 173/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.1825e-04\n",
            "Epoch 174/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.7635e-04\n",
            "Epoch 175/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.3480e-04\n",
            "Epoch 176/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.2769e-04\n",
            "Epoch 177/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.4273e-04\n",
            "Epoch 178/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.2579e-04\n",
            "Epoch 179/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.6717e-04\n",
            "Epoch 180/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.7149e-04\n",
            "Epoch 181/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.1522e-04\n",
            "Epoch 182/200\n",
            "39/39 [==============================] - 0s 5ms/step - loss: 5.8672e-04\n",
            "Epoch 183/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0657e-04\n",
            "Epoch 184/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.2796e-04\n",
            "Epoch 185/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.5958e-04\n",
            "Epoch 186/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0112e-04\n",
            "Epoch 187/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.9878e-04\n",
            "Epoch 188/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.2468e-04\n",
            "Epoch 189/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.8041e-04\n",
            "Epoch 190/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.4693e-04\n",
            "Epoch 191/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.6579e-04\n",
            "Epoch 192/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.5509e-04\n",
            "Epoch 193/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.2902e-04\n",
            "Epoch 194/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 5.8230e-04\n",
            "Epoch 195/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 7.0944e-04\n",
            "Epoch 196/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 8.3656e-04\n",
            "Epoch 197/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.6509e-04\n",
            "Epoch 198/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.8908e-04\n",
            "Epoch 199/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.2071e-04\n",
            "Epoch 200/200\n",
            "39/39 [==============================] - 0s 6ms/step - loss: 6.2856e-04\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f1f8bc2ff50>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "f81aaf6f-0fed-4243-b1e0-f1059edbb8bc"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "outputs": [],
      "metadata": {
        "id": "rTXJN51l9Y-F"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ],
      "metadata": {
        "id": "H-D-XHyRjFMp"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": ""
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "78966b90-f11c-406c-e967-2d8469a16b98"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.Image object>"
            ],
            "image/png": ""
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ],
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 644
        },
        "outputId": "88805576-1c5e-498b-cc5b-4e509fa76215"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MSE:  0.015271404619058569\n",
            "RMSE:  0.12357752473268983\n",
            "MAE:  0.10644517613497677\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "92ede4b0-4da6-427a-946c-2006438e61ec"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE:'+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n')\n",
        "error_file.close()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive/\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:Found untraced functions such as gru_cell_layer_call_and_return_conditional_losses, gru_cell_layer_call_fn, gru_cell_1_layer_call_and_return_conditional_losses, gru_cell_1_layer_call_fn, gru_cell_layer_call_fn while saving (showing 5 of 10). These functions will not be directly callable after loading.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_Amazon/assets\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_Amazon/assets\n"
          ]
        }
      ],
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bde1b77f-9cc8-441d-dd50-527c984b3c63"
      }
    }
  ]
}