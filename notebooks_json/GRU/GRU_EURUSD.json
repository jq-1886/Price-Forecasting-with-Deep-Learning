{
  "nbformat": 4,
  "nbformat_minor": 2,
  "metadata": {
    "colab": {
      "name": "GRU_EURUSD.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyN7DD8heFAvp4xGOn2A2dd0",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "20756ab678e046abb5e0b7d16d95412f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3e719d4839784132aa587057f8778d08",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a0ab24a9acaa44328281f1599dc31a10",
              "IPY_MODEL_58c9a97e6e854d25a54740996ff24e21"
            ]
          }
        },
        "3e719d4839784132aa587057f8778d08": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a0ab24a9acaa44328281f1599dc31a10": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9860ccaddced4679a720f90d1de93d2d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.89MB of 0.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e72e491f606e4d979d0a0e21ea5f0360"
          }
        },
        "58c9a97e6e854d25a54740996ff24e21": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8abae4718b494216bc5c09eb430c175a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2002ecb1b7c2466fb621ff5ff430c85b"
          }
        },
        "9860ccaddced4679a720f90d1de93d2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e72e491f606e4d979d0a0e21ea5f0360": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8abae4718b494216bc5c09eb430c175a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2002ecb1b7c2466fb621ff5ff430c85b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "01dadb9be03b4f209010b640bcb28d43": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b8865fae83cc434dbf4c43d93fda0276",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_04eda491c13547afbd884c04dcd0cb8d",
              "IPY_MODEL_16fbc22d216b4339b7a16a47d04f24e6"
            ]
          }
        },
        "b8865fae83cc434dbf4c43d93fda0276": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "04eda491c13547afbd884c04dcd0cb8d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_61b48de56a3748dc81e76f904959471a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.81MB of 0.81MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_10c745d10aab4e61815159ac2f5f2f26"
          }
        },
        "16fbc22d216b4339b7a16a47d04f24e6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3fc8d360c72944b8abde30a7961f48eb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b61b5094713c43f5a9ffb711b778d4c0"
          }
        },
        "61b48de56a3748dc81e76f904959471a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "10c745d10aab4e61815159ac2f5f2f26": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3fc8d360c72944b8abde30a7961f48eb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b61b5094713c43f5a9ffb711b778d4c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c1910973cd0842e68c3b370824410b38": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ec7dbf454e774bf1a1e8ec1df22369f7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f76e7f4315ce471f91b805bafa3a7178",
              "IPY_MODEL_6f5aea43a530436a8d2cef3df4e73d8d"
            ]
          }
        },
        "ec7dbf454e774bf1a1e8ec1df22369f7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f76e7f4315ce471f91b805bafa3a7178": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ce070b3918a940f69a968c5ad1931a3b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.46MB of 0.46MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f0d1cfcc850b4f9f9ae4524cd301e72e"
          }
        },
        "6f5aea43a530436a8d2cef3df4e73d8d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0b05c7fbfda243e292585519b92927da",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_95fc8f2e7d31459896d9027b37e2e82e"
          }
        },
        "ce070b3918a940f69a968c5ad1931a3b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f0d1cfcc850b4f9f9ae4524cd301e72e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0b05c7fbfda243e292585519b92927da": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "95fc8f2e7d31459896d9027b37e2e82e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "32a49d7133c542949106fc78d00d659a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_5c758bfb256e4361885201466b8e2ff8",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7e231c85d4604d4296332e6ec00f6f31",
              "IPY_MODEL_9817bf1aa5924d778ba74734088620d7"
            ]
          }
        },
        "5c758bfb256e4361885201466b8e2ff8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7e231c85d4604d4296332e6ec00f6f31": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6348bce801734efeb55a1c52ff1f1316",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.08MB of 1.08MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_369f662464be4d3abf33611e48a74039"
          }
        },
        "9817bf1aa5924d778ba74734088620d7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3f8e1d08177c4f2a8bd6ea799983c6e8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c6de9ec6415c4183950c2a7eedf49f7f"
          }
        },
        "6348bce801734efeb55a1c52ff1f1316": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "369f662464be4d3abf33611e48a74039": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3f8e1d08177c4f2a8bd6ea799983c6e8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c6de9ec6415c4183950c2a7eedf49f7f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "faa74a3315004394a591167d1e3d6ba6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_25926632769647bdb14a9604b17393be",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6eb1fe430fa04e7092e0ad87c0ca0243",
              "IPY_MODEL_bd3fac98b0a24e22823e428bb4b2c795"
            ]
          }
        },
        "25926632769647bdb14a9604b17393be": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6eb1fe430fa04e7092e0ad87c0ca0243": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9802418d5782437eb8195b6bf3655d6d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.49MB of 0.49MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e472073f2e5046749475dfd0e3f9c1cf"
          }
        },
        "bd3fac98b0a24e22823e428bb4b2c795": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_783c51c61ca7427fbd5ab055a1332e63",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c001c3131b7b43868ed59c24614966d2"
          }
        },
        "9802418d5782437eb8195b6bf3655d6d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e472073f2e5046749475dfd0e3f9c1cf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "783c51c61ca7427fbd5ab055a1332e63": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c001c3131b7b43868ed59c24614966d2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bcb1f23fc53049aa80194edf88eac4e3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a280d53ee9b047f1961201138baff5ba",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_52e8e48c35dd46e2be83c159d3e543ef",
              "IPY_MODEL_cbcc15fe9a4b4c6abba0c90012ed6232"
            ]
          }
        },
        "a280d53ee9b047f1961201138baff5ba": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "52e8e48c35dd46e2be83c159d3e543ef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_18d79512f7c74ab7a5a2b6f15a398e6a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.49MB of 1.49MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a69c331e9edf43f9a9a568e7ea9fb397"
          }
        },
        "cbcc15fe9a4b4c6abba0c90012ed6232": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_1a928369c88b45b79aa8afdc1b258bd7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6b3c0f567b264917b0b228aaa625a7d3"
          }
        },
        "18d79512f7c74ab7a5a2b6f15a398e6a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a69c331e9edf43f9a9a568e7ea9fb397": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1a928369c88b45b79aa8afdc1b258bd7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6b3c0f567b264917b0b228aaa625a7d3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "366bcca61424412fa9ecdfd0b7df437e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_330fe1b886b6445b85b4c4645f76c708",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_eba1d9a60f59414c95bde590ff8c3177",
              "IPY_MODEL_0b3ccb9df8c649f896197a8c327c9bb1"
            ]
          }
        },
        "330fe1b886b6445b85b4c4645f76c708": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "eba1d9a60f59414c95bde590ff8c3177": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1b68f5de9d634b37ad02fbeab582895c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.51MB of 1.51MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9ceebf9592dc46c7a65632a4c0e36a10"
          }
        },
        "0b3ccb9df8c649f896197a8c327c9bb1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2494e71bc4f74a43a9ed32815aca5e90",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2d3ac378ccc349bc8da38f698accffe2"
          }
        },
        "1b68f5de9d634b37ad02fbeab582895c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9ceebf9592dc46c7a65632a4c0e36a10": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2494e71bc4f74a43a9ed32815aca5e90": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2d3ac378ccc349bc8da38f698accffe2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "06c3d2d2d1894e54a121635f1fbb6fdf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_9d80f985270f42d1b718e66deb29db6c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_dc49bca96ed24230a2ad3ced222f7c20",
              "IPY_MODEL_306c305000704a92881a07bd31815bb4"
            ]
          }
        },
        "9d80f985270f42d1b718e66deb29db6c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc49bca96ed24230a2ad3ced222f7c20": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_4bf34d52882649fb9c819b097a5c7d82",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.62MB of 0.62MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9f1af25095e64fdba1e54fe8b1d9206a"
          }
        },
        "306c305000704a92881a07bd31815bb4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_7ea2ae6f568942fb9f11968d72477d74",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a9c5973f69ff42138a9d89a30950356c"
          }
        },
        "4bf34d52882649fb9c819b097a5c7d82": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9f1af25095e64fdba1e54fe8b1d9206a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7ea2ae6f568942fb9f11968d72477d74": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a9c5973f69ff42138a9d89a30950356c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "41c8e764a04345c69f14522a0955d931": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b3158c4665f04003a5298eaccdccbd52",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5967beea00894d869b450c152b51fa1c",
              "IPY_MODEL_0a7155789673414694478dd8eb80a059"
            ]
          }
        },
        "b3158c4665f04003a5298eaccdccbd52": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5967beea00894d869b450c152b51fa1c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9d63df14650042f59a9973d64ca5e161",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.22MB of 1.22MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4a0230c6df5c4fe6948b21a3dec4e19f"
          }
        },
        "0a7155789673414694478dd8eb80a059": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_56bb42d37f524c3090d18378779fdf4f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f5b57803ea3f487488cb29d1d163d7fc"
          }
        },
        "9d63df14650042f59a9973d64ca5e161": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4a0230c6df5c4fe6948b21a3dec4e19f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "56bb42d37f524c3090d18378779fdf4f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f5b57803ea3f487488cb29d1d163d7fc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f603353f417c407083d762a8e8ed3bb2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_dd018a3b1bac4e26a79a82d333b7604d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_bd234a919f424dfc8bb93980b0d8d12f",
              "IPY_MODEL_5978259a71a04424b477d72d72af1f75"
            ]
          }
        },
        "dd018a3b1bac4e26a79a82d333b7604d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bd234a919f424dfc8bb93980b0d8d12f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_4ee656fd111e40268deac1c13ba639a4",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.76MB of 0.76MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d5572778dee6420bb6fa0818c31660e6"
          }
        },
        "5978259a71a04424b477d72d72af1f75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8bd3289223014f6e91d99b966662142c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_df31ced5cb0c48818fd5d8dd975482a5"
          }
        },
        "4ee656fd111e40268deac1c13ba639a4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d5572778dee6420bb6fa0818c31660e6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8bd3289223014f6e91d99b966662142c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "df31ced5cb0c48818fd5d8dd975482a5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2778090bb4f446a98469d6267817395f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2939320a02064ae0a6409e70f537a824",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7ad435d11eae4f379ae20959b628f900",
              "IPY_MODEL_389e6f90b89940508514e5447b8a1b96"
            ]
          }
        },
        "2939320a02064ae0a6409e70f537a824": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7ad435d11eae4f379ae20959b628f900": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8ef92b9aca074641bf554e3bae8f0a79",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.75MB of 0.75MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_932622aa50614267b7b97d94141139e8"
          }
        },
        "389e6f90b89940508514e5447b8a1b96": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_49297b34403348ffb240e07d98697ba0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ed557ead610e4ea48245466acd4513b3"
          }
        },
        "8ef92b9aca074641bf554e3bae8f0a79": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "932622aa50614267b7b97d94141139e8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "49297b34403348ffb240e07d98697ba0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ed557ead610e4ea48245466acd4513b3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ead89cb9c7914a978480fa8b3a0c85a9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_230b7e5275e8408ab670782fd5954522",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d99fe69f1c4948aca3d9f69a16ea3686",
              "IPY_MODEL_716c0c67d26c456da7a513e2f313418d"
            ]
          }
        },
        "230b7e5275e8408ab670782fd5954522": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d99fe69f1c4948aca3d9f69a16ea3686": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_4655a6f7c602482da9dfa9f83a537e0d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.80MB of 0.80MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5346791e54a54df9bb7774025295b681"
          }
        },
        "716c0c67d26c456da7a513e2f313418d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4965b7dad46347a48bb16fafa7d3c9aa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0d78d325ea484c90895c9a99fde2c290"
          }
        },
        "4655a6f7c602482da9dfa9f83a537e0d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5346791e54a54df9bb7774025295b681": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4965b7dad46347a48bb16fafa7d3c9aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0d78d325ea484c90895c9a99fde2c290": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5c4fea340ab4482cbb0ac17dc88d180c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_499f38520d3d42738106574b91a5b7f8",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_25f29a441f1c4c4fa48697fd992f3896",
              "IPY_MODEL_6cba86a848b548fd91b9c7541b4ee7ac"
            ]
          }
        },
        "499f38520d3d42738106574b91a5b7f8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "25f29a441f1c4c4fa48697fd992f3896": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_20a0cbd9440d465291895eb61097da63",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.80MB of 0.80MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2b9866b0636a4fd69bfd1e0ba6ffabdc"
          }
        },
        "6cba86a848b548fd91b9c7541b4ee7ac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a33938bbf602402b9f04279b7e0eb0ee",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a2b105123d474abe801001c5a387367c"
          }
        },
        "20a0cbd9440d465291895eb61097da63": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2b9866b0636a4fd69bfd1e0ba6ffabdc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a33938bbf602402b9f04279b7e0eb0ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a2b105123d474abe801001c5a387367c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0e24cc2c12cf4f4c84b9790aaa0afc3f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d68985eea74644b6a4d5820a5261834f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_60a3c99d94274a108b61d4187c452290",
              "IPY_MODEL_9425674e6e7a429d8704c5c70f2970f9"
            ]
          }
        },
        "d68985eea74644b6a4d5820a5261834f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "60a3c99d94274a108b61d4187c452290": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b5b9f151f16d45ee81fea9e2929cf39c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.10MB of 1.10MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c5e2a8e90a1648bab39a4804fde40650"
          }
        },
        "9425674e6e7a429d8704c5c70f2970f9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_93bc78f17cfe4faf8f047084cf5132bb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_363154ee27ee403b87ae1fb44d74ecb2"
          }
        },
        "b5b9f151f16d45ee81fea9e2929cf39c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c5e2a8e90a1648bab39a4804fde40650": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "93bc78f17cfe4faf8f047084cf5132bb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "363154ee27ee403b87ae1fb44d74ecb2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f652e48e0fa640af8d464e7f02ccc37d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c45c3f5de6344a30a04fbd614115a3b2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a1bba9c199844982b435a03072eaacb0",
              "IPY_MODEL_01dda3d827244e7d9a0a119ae2cc1a64"
            ]
          }
        },
        "c45c3f5de6344a30a04fbd614115a3b2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a1bba9c199844982b435a03072eaacb0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e4017344707347bd8559d1c2ea981473",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.32MB of 1.32MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_56d422bafaa940648f7ba7947a7e3fe2"
          }
        },
        "01dda3d827244e7d9a0a119ae2cc1a64": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2bdb7e7467584e90a7f003682173d4ed",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8535d697538e4bed99038880b55b1514"
          }
        },
        "e4017344707347bd8559d1c2ea981473": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "56d422bafaa940648f7ba7947a7e3fe2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2bdb7e7467584e90a7f003682173d4ed": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8535d697538e4bed99038880b55b1514": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "88c96d0486334f538927aba982445d1b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_9c6ab8f0bc2f48eba1680a2488bcc085",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_32b535dd5d8844b8b37725a35507dec3",
              "IPY_MODEL_9d76e2138a824401ba141b4f35028ff6"
            ]
          }
        },
        "9c6ab8f0bc2f48eba1680a2488bcc085": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "32b535dd5d8844b8b37725a35507dec3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1d7b0756e32e4fcbbe5afd8098bb36a6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.77MB of 0.77MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_203bdd231b7b424f9209c8e836347fc8"
          }
        },
        "9d76e2138a824401ba141b4f35028ff6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3eda1c1662364ca88613f78d10a2f52f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ac7bb4bb5ec94a2e822d9ef2327c9c38"
          }
        },
        "1d7b0756e32e4fcbbe5afd8098bb36a6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "203bdd231b7b424f9209c8e836347fc8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3eda1c1662364ca88613f78d10a2f52f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ac7bb4bb5ec94a2e822d9ef2327c9c38": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8e98ec4a27eb43d1ba1ef6524e92943a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_350f90aa274845bbabcaf1703aba2bb0",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_c8c9615b2f7344d096ef5cbf2d1a918d",
              "IPY_MODEL_72bcd0fc2d9b4e3181d01858a42ed5d1"
            ]
          }
        },
        "350f90aa274845bbabcaf1703aba2bb0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c8c9615b2f7344d096ef5cbf2d1a918d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_bc9e905ff95f4432b1c475dc46a35a15",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.20MB of 1.20MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7cf615d9f4a94d7f82b49efa6997f486"
          }
        },
        "72bcd0fc2d9b4e3181d01858a42ed5d1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8c2246841a434019a273664f5bbb566b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0f3dd2b9ac514691b1b12f34d79d4ecc"
          }
        },
        "bc9e905ff95f4432b1c475dc46a35a15": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7cf615d9f4a94d7f82b49efa6997f486": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8c2246841a434019a273664f5bbb566b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0f3dd2b9ac514691b1b12f34d79d4ecc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "882e73fc3276429c946803063e73b07b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d94456d536d94131ac6164f49af4fe31",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_fac213170ea643e9a5738c383a77e939",
              "IPY_MODEL_c6a35e907d2243588b50cac4c7cd3ecf"
            ]
          }
        },
        "d94456d536d94131ac6164f49af4fe31": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fac213170ea643e9a5738c383a77e939": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_932a19e9454147d0b44758e43cf8c19f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.83MB of 0.83MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5e3fb3f6604a49f0ac38dd1a7c8e6931"
          }
        },
        "c6a35e907d2243588b50cac4c7cd3ecf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_57b30185b37b455ba3610df8bef804c1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2c950261842c4b9f9936ce11960fcea8"
          }
        },
        "932a19e9454147d0b44758e43cf8c19f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5e3fb3f6604a49f0ac38dd1a7c8e6931": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "57b30185b37b455ba3610df8bef804c1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2c950261842c4b9f9936ce11960fcea8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b8b6e713393e451b9a5c4547eb5dc31b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2382dc60bdc9401c95b3c9285dc6d512",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_57484f8447ee4cb3b3b1b6c14896166b",
              "IPY_MODEL_a95ef89c55e148748a904c45a92f5aa1"
            ]
          }
        },
        "2382dc60bdc9401c95b3c9285dc6d512": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "57484f8447ee4cb3b3b1b6c14896166b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_794505b29e094a4bb2f935aeff29d8ff",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.25MB of 1.25MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d552a638d1124b02af1aaf335ea020fd"
          }
        },
        "a95ef89c55e148748a904c45a92f5aa1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_feb28ee617314565b291a166704a93ff",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d5d3b73ea0734d40a84c51c6b6512b9e"
          }
        },
        "794505b29e094a4bb2f935aeff29d8ff": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d552a638d1124b02af1aaf335ea020fd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "feb28ee617314565b291a166704a93ff": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d5d3b73ea0734d40a84c51c6b6512b9e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "242faad1f7bc418a99475ec00e9d22da": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a22bba5dd0af45138806bb6e408de355",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4932bd307de6484799476cf60ef2bd1e",
              "IPY_MODEL_fac9030468e64893bc1f6d9acd36f48b"
            ]
          }
        },
        "a22bba5dd0af45138806bb6e408de355": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4932bd307de6484799476cf60ef2bd1e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e4debe77fc5c46e79473ee4946b4a3b2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.11MB of 1.11MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_de2a4be9f2b04ae792309895fc498e2b"
          }
        },
        "fac9030468e64893bc1f6d9acd36f48b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a337c4b6beed4f37b9960860fffebe29",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9d236e31ab18464c972aed1cc056895c"
          }
        },
        "e4debe77fc5c46e79473ee4946b4a3b2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "de2a4be9f2b04ae792309895fc498e2b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a337c4b6beed4f37b9960860fffebe29": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9d236e31ab18464c972aed1cc056895c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1a0127476b824a25973da79b3d736d18": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_dc10d28623454df0aa87b711e3f3e2da",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f0016cfb0af24645a924e663e5d5b25d",
              "IPY_MODEL_f4bd6a486ea742d396d8994d248d1700"
            ]
          }
        },
        "dc10d28623454df0aa87b711e3f3e2da": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f0016cfb0af24645a924e663e5d5b25d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1b4639849faf4d7d8c289e2f8c18218b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.89MB of 0.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_868f75264914453cbc9ca962cf6f3bc3"
          }
        },
        "f4bd6a486ea742d396d8994d248d1700": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_3649b2d18f8743b482627103961dc3d6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6b798bfe11c04dd7919b79e36e4d53b9"
          }
        },
        "1b4639849faf4d7d8c289e2f8c18218b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "868f75264914453cbc9ca962cf6f3bc3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3649b2d18f8743b482627103961dc3d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6b798bfe11c04dd7919b79e36e4d53b9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "57750a884e4748aa9c75dbe3abd600b1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_5907b655af38484da3bd13a35db8c562",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b4240f41689e4428b86e40c1b4c7ef87",
              "IPY_MODEL_796f8726ddd344bc8e266ba07db68669"
            ]
          }
        },
        "5907b655af38484da3bd13a35db8c562": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b4240f41689e4428b86e40c1b4c7ef87": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_93814c25c3c04911a64c1d361c4fb071",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.31MB of 1.31MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8d78a9275e584f47847ffdc7703113f6"
          }
        },
        "796f8726ddd344bc8e266ba07db68669": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_50a90e5460574bac95ac0475f4be83a0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_779e47bffab541a3824fcaa59d468ef1"
          }
        },
        "93814c25c3c04911a64c1d361c4fb071": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8d78a9275e584f47847ffdc7703113f6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "50a90e5460574bac95ac0475f4be83a0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "779e47bffab541a3824fcaa59d468ef1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c60d047e8c6743a48801c8f36db15e9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6e6e83d001ac42ec953a9f8059fe681e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6ad45961b0fd4ce7b7ebb1c2efca7bde",
              "IPY_MODEL_1e78c50950ff41049439c649b4c90b86"
            ]
          }
        },
        "6e6e83d001ac42ec953a9f8059fe681e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6ad45961b0fd4ce7b7ebb1c2efca7bde": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_40e6b53a2cda4ca198d7a1e09051fc4f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.03MB of 1.03MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c1c11c308982459bae5e01f3c0672867"
          }
        },
        "1e78c50950ff41049439c649b4c90b86": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ddfee6fe102340af9e6ad82ae27128a5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2bfa7b06db4b442ca46d681a2385cf85"
          }
        },
        "40e6b53a2cda4ca198d7a1e09051fc4f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c1c11c308982459bae5e01f3c0672867": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ddfee6fe102340af9e6ad82ae27128a5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2bfa7b06db4b442ca46d681a2385cf85": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bf2d41ef0044482997dcfebafe4995a9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e7a22503252d4fae9bf99b97bc492e04",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_16d889a06a9247bf83ed7174308216d3",
              "IPY_MODEL_f3ec0ee174344674b23be832eeedbbc0"
            ]
          }
        },
        "e7a22503252d4fae9bf99b97bc492e04": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "16d889a06a9247bf83ed7174308216d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_265fdcb77cda4ca1a1b2a1c95b839ff7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.08MB of 1.08MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5c4598ff87f74e40b7ed08e01552b943"
          }
        },
        "f3ec0ee174344674b23be832eeedbbc0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_80f443cd4591430ea3e377a965d38950",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_99c243318bad46d28a238bef76e40f06"
          }
        },
        "265fdcb77cda4ca1a1b2a1c95b839ff7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5c4598ff87f74e40b7ed08e01552b943": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "80f443cd4591430ea3e377a965d38950": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "99c243318bad46d28a238bef76e40f06": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f986de0ce6d04d1ea84657d84894e88d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_574b910a791b41ea9a85b9e394758cfd",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a124e40c055047859380f43df88a623c",
              "IPY_MODEL_5f40707d0faf41118882a39765ec4c81"
            ]
          }
        },
        "574b910a791b41ea9a85b9e394758cfd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a124e40c055047859380f43df88a623c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_227d727dfea8438c9e100d2c31b86d4d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.41MB of 1.41MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6870432252a949db9630468edab46c06"
          }
        },
        "5f40707d0faf41118882a39765ec4c81": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2a8eb05de72e4369a918e061bd6f5a15",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d616c8e9ee4c42bc9c07d3e13b55a2c2"
          }
        },
        "227d727dfea8438c9e100d2c31b86d4d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6870432252a949db9630468edab46c06": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2a8eb05de72e4369a918e061bd6f5a15": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d616c8e9ee4c42bc9c07d3e13b55a2c2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "933174d73a8a4e8d86706f1d3bb707c7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e90578bb1eff4fa9ac5b9a0f74130b72",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_cda02a2affd448d59be4b0ca57b6f272",
              "IPY_MODEL_e1242c3959ca4a4a8f53bba265ac6649"
            ]
          }
        },
        "e90578bb1eff4fa9ac5b9a0f74130b72": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cda02a2affd448d59be4b0ca57b6f272": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_49942c1519924ee68f252d044e2c670e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.40MB of 1.40MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5cfdfdca798c4fbcb664fe905c99d64c"
          }
        },
        "e1242c3959ca4a4a8f53bba265ac6649": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_05b72ffe6e8f440db45d0d96c86001f1",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_178a5284ebe646d5a4e4977e9274fde1"
          }
        },
        "49942c1519924ee68f252d044e2c670e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5cfdfdca798c4fbcb664fe905c99d64c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "05b72ffe6e8f440db45d0d96c86001f1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "178a5284ebe646d5a4e4977e9274fde1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ecb3c948b5214802849ebed9a276920b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_23a9650ae3da49a79fee12ea1ce170f7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_90b26e7271ed48b682b4bf7d079b27d8",
              "IPY_MODEL_058a6095aa764e7fa4bcc07b51e8a3e0"
            ]
          }
        },
        "23a9650ae3da49a79fee12ea1ce170f7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "90b26e7271ed48b682b4bf7d079b27d8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_31981c77f0944b1ba4402f2c738de5f0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 2.04MB of 2.04MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_51ca652409f44a938b03941566c6eb94"
          }
        },
        "058a6095aa764e7fa4bcc07b51e8a3e0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8592649166724a6bb13b452b01a7f6de",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_550fb0a7ad09415989839449fc90e33c"
          }
        },
        "31981c77f0944b1ba4402f2c738de5f0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "51ca652409f44a938b03941566c6eb94": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8592649166724a6bb13b452b01a7f6de": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "550fb0a7ad09415989839449fc90e33c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b2296ec8d0b84642b55e9637ca7be252": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_38d89766f8fd48f68b24ab5c8119f2ee",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b3e14f8192ee49acb70c7a5a7d32f3d6",
              "IPY_MODEL_252eed18fa8f4c19b7f6e0ee89ebcdb0"
            ]
          }
        },
        "38d89766f8fd48f68b24ab5c8119f2ee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b3e14f8192ee49acb70c7a5a7d32f3d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2c7b32fc603b44e3abbda159a8423b35",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.37MB of 1.37MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b7c68694ad53486a922ff40d541857c9"
          }
        },
        "252eed18fa8f4c19b7f6e0ee89ebcdb0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b9c8d99d1813463599068fcf89bd7e8c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d5ef589dbbf3483496dcab583d713f97"
          }
        },
        "2c7b32fc603b44e3abbda159a8423b35": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b7c68694ad53486a922ff40d541857c9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b9c8d99d1813463599068fcf89bd7e8c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d5ef589dbbf3483496dcab583d713f97": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "324c0edf2e2e4681b24142b2dd8ac48d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c66bf49fb37d4d738185a8eb15e96b60",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7c70ad5589444cc1911704781599322b",
              "IPY_MODEL_e2f85409a43348bcbee3f3fd94544bcf"
            ]
          }
        },
        "c66bf49fb37d4d738185a8eb15e96b60": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7c70ad5589444cc1911704781599322b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2e593b7e075a483ba6957643bca192da",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.20MB of 1.20MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0594749573664af18c149d1cd2e1d616"
          }
        },
        "e2f85409a43348bcbee3f3fd94544bcf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d81353164d16497881435eca5bb22dd0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6e619c9847294b0280abef574c206004"
          }
        },
        "2e593b7e075a483ba6957643bca192da": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0594749573664af18c149d1cd2e1d616": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d81353164d16497881435eca5bb22dd0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6e619c9847294b0280abef574c206004": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "faeffa612ee34e29997d39e6048e1ec1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0572e95200d949d6b13749441459172a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a1dc446a35a34b559ef0d7dfd1c35057",
              "IPY_MODEL_874222a67e86468d83ca390f0ae0c55c"
            ]
          }
        },
        "0572e95200d949d6b13749441459172a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a1dc446a35a34b559ef0d7dfd1c35057": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d028a1dd7e8842b78ebbf54da5b3268f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.23MB of 1.23MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3f9eb1996b70450dbc93204d2598f388"
          }
        },
        "874222a67e86468d83ca390f0ae0c55c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_7a0fe3f310c04292bf60d7b96970698c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dedffb7f360b43a7b7c1caa5e1bfa975"
          }
        },
        "d028a1dd7e8842b78ebbf54da5b3268f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3f9eb1996b70450dbc93204d2598f388": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7a0fe3f310c04292bf60d7b96970698c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dedffb7f360b43a7b7c1caa5e1bfa975": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bc1a6da0ba6f4f3aadbb8acce3b7adbf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a956e1ade60a40038b45f8009cc7279d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2da2ff8b0efc47df9cfba5c19041d4a0",
              "IPY_MODEL_fd4aa5cb80a54607a7057e15661bbf9b"
            ]
          }
        },
        "a956e1ade60a40038b45f8009cc7279d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2da2ff8b0efc47df9cfba5c19041d4a0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_c6c85f41eb2e4f13a630986f87eec7cb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.25MB of 1.25MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_cd72e52bd64a41edbfbb88ed7e114abe"
          }
        },
        "fd4aa5cb80a54607a7057e15661bbf9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_eda4a6b87d214712b2dd7bd79b1c5d4c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_134b9c916e464662bea67a34ffe8ec00"
          }
        },
        "c6c85f41eb2e4f13a630986f87eec7cb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "cd72e52bd64a41edbfbb88ed7e114abe": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "eda4a6b87d214712b2dd7bd79b1c5d4c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "134b9c916e464662bea67a34ffe8ec00": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9134d35ffa484b78831caecfbefea175": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d8dd416267134488a1144ae7a818daed",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_8483d34fb2d24c2089851dd074eb964e",
              "IPY_MODEL_f0d3158bf2544d28a108ac63f63a3edd"
            ]
          }
        },
        "d8dd416267134488a1144ae7a818daed": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8483d34fb2d24c2089851dd074eb964e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f44731e319324377b0b33e2e9b6d6f2d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.27MB of 1.27MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a58dee8d1fbd4416a70aa99c49c0b2e7"
          }
        },
        "f0d3158bf2544d28a108ac63f63a3edd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_728c29133acb43e797c18ae10aceb997",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f59f040e8e494e3081ed81557e305032"
          }
        },
        "f44731e319324377b0b33e2e9b6d6f2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a58dee8d1fbd4416a70aa99c49c0b2e7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "728c29133acb43e797c18ae10aceb997": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f59f040e8e494e3081ed81557e305032": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "554708faca0e415f888da3866ba588b3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_bdf4c2934c534517ac2e238deeaa2c1c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_0b61e9e5bf4b4ebea072aad1f647872b",
              "IPY_MODEL_58a262b2b4b44ca3b5e3802c636691b7"
            ]
          }
        },
        "bdf4c2934c534517ac2e238deeaa2c1c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0b61e9e5bf4b4ebea072aad1f647872b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_0d50e386a7cd4742ad68fab7b08495bc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.35MB of 1.35MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_cb0f983ecfeb4b4abbab2dc8e52af20e"
          }
        },
        "58a262b2b4b44ca3b5e3802c636691b7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9449a4e26d37415fa9010f318d303ebd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_514e6067a45d408cac25e383923892a6"
          }
        },
        "0d50e386a7cd4742ad68fab7b08495bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "cb0f983ecfeb4b4abbab2dc8e52af20e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9449a4e26d37415fa9010f318d303ebd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "514e6067a45d408cac25e383923892a6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "27fb6a913598452a80feb689348c1784": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_211ba9e9fe264aff8a890a3621d036a3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_65ec0d14711c47d69181fe13465c493b",
              "IPY_MODEL_58df7779faf242a2a82e010a11e76f9e"
            ]
          }
        },
        "211ba9e9fe264aff8a890a3621d036a3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "65ec0d14711c47d69181fe13465c493b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_b4d70c12cfa7482ca920c202128a6344",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.86MB of 1.86MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_05a0aa5f98814fcd8ab3b7b179ff9a6d"
          }
        },
        "58df7779faf242a2a82e010a11e76f9e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a45bb9b89ab7464abda9f31aa3e1bb04",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_888c48509d684964b2f021ecc58a6d7c"
          }
        },
        "b4d70c12cfa7482ca920c202128a6344": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "05a0aa5f98814fcd8ab3b7b179ff9a6d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a45bb9b89ab7464abda9f31aa3e1bb04": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "888c48509d684964b2f021ecc58a6d7c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d4213b841bee41b386690c38c3c82699": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_ef717f3708614b31b20b7c4f2a84be1d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_fa113c21ba5b472184959a9ff3c2e655",
              "IPY_MODEL_842315ef063742a385c0ab085326f94c"
            ]
          }
        },
        "ef717f3708614b31b20b7c4f2a84be1d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fa113c21ba5b472184959a9ff3c2e655": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_54205aefc41d49699b31a7cc36e66bdd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.60MB of 1.60MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b52ec4a827224134bd0c924443bafcf0"
          }
        },
        "842315ef063742a385c0ab085326f94c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2b57856431cb4c0b8d7f749952b2ee65",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a350183b78c04b76938bedb2b88ade85"
          }
        },
        "54205aefc41d49699b31a7cc36e66bdd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b52ec4a827224134bd0c924443bafcf0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2b57856431cb4c0b8d7f749952b2ee65": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a350183b78c04b76938bedb2b88ade85": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/GRU/GRU_EURUSD.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ],
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ],
      "metadata": {
        "id": "z5F7GfFTgUo3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 119, done.\u001b[K\n",
            "remote: Counting objects: 100% (119/119), done.\u001b[K\n",
            "remote: Compressing objects: 100% (114/114), done.\u001b[K\n",
            "remote: Total 119 (delta 53), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (119/119), 107.55 KiB | 5.66 MiB/s, done.\n",
            "Resolving deltas: 100% (53/53), done.\n"
          ]
        }
      ],
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2dddb1ae-4704-4445-ec44-cb0a7d2ca70d"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/feeder_repo\n"
          ]
        }
      ],
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a2f0b7cc-76cb-40d6-b3d3-8743bcbe2aef"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ]
        }
      ],
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "54c165f4-6443-445c-cc65-085eb49b8de4"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "outputs": [],
      "metadata": {
        "id": "fRqkwo6kZUz_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "outputs": [],
      "metadata": {
        "id": "hzVhwND1HAlw"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tue Jul 13 12:55:07 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   34C    P0    26W / 250W |      0MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "8a136853-df01-49a8-cafc-faae36b63b54"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ],
      "metadata": {
        "id": "WB9wD4Aahs8_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'EURUSD'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'GRU'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "outputs": [],
      "metadata": {
        "id": "vBlKerL-c4-3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "outputs": [],
      "metadata": {
        "id": "hfQJbuBk0vW0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ],
      "metadata": {
        "id": "X53Fp1Gwh88_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8MB 8.1MB/s \n",
            "\u001b[K     |████████████████████████████████| 102kB 11.9MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 38.9MB/s \n",
            "\u001b[K     |████████████████████████████████| 174kB 29.5MB/s \n",
            "\u001b[K     |████████████████████████████████| 71kB 9.4MB/s \n",
            "\u001b[?25h  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "5cc2f14a-207c-420a-c236-3e42783157ac"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "source": [
        "!pip install wandb -qq"
      ],
      "outputs": [],
      "metadata": {
        "id": "pbgZaoQDiIKX"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "63237542-d7ac-42d2-daaa-c8e280bf0803"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.2, 0.3, 0.4]\n",
        "        },\n",
        "        'input_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'hidden_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'sgd']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu', 'selu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "outputs": [],
      "metadata": {
        "id": "j91IBGuSid5w"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "source": [
        "# The sweep calls this function with each set of hyperparameters\n",
        "def train():\n",
        "    # Default values for hyper-parameters we're going to sweep over\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.2,\n",
        "        'input_size': 50,\n",
        "        'hidden_size': 50,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "    \n",
        "    # Define the model architecture - This is a simplified version of the VGG19 architecture\n",
        "    model = Sequential()\n",
        "    \n",
        "    # input layer\n",
        "    model.add(GRU(units=config.input_size,\n",
        "                  activation=config.activation,\n",
        "                  return_sequences=True,\n",
        "                  input_shape=(window_len, 1)))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # hidden layer\n",
        "    model.add(GRU(units=config.hidden_size))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    model.add(Dense(units=1))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "outputs": [],
      "metadata": {
        "id": "V0Sr9HsorH4E"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_GRU')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Create sweep with ID: d67zmip9\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "688f1ecd-631b-40c1-f727-6991ffe800b3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_GRU')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 74b04w47 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">feasible-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/74b04w47\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/74b04w47</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_125616-74b04w47</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 30s 108ms/step - loss: 0.1000 - mean_squared_error: 0.1000 - mean_absolute_error: 0.2231 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0560\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0400 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0498\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 2s 73ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0348 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0574\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0386 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0490\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0362 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0482\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0350 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0483\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0350 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0481\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0336 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0309 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0324 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 2s 74ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0332 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 2s 73ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0317 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0323 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0323 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0276 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0455\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0307 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0300 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0455\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 2s 74ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0452\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0298 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0505\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0307 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0292 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0310 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0275 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0413\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0272 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0421\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0282 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0417\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 2s 73ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0299 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0398\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0288 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0420\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0285 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0387\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0285 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 2s 74ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0275 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0393\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0276 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0389\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 2s 72ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0384\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 2s 74ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0266 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0264 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0393\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0292 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0270 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0263 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0381\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0385\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0266 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0270 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0375\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0263 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0390\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0419\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0262 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0396\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0276 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0265 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0397\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0276 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0266 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0245 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 183<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.86MB of 0.86MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "20756ab678e046abb5e0b7d16d95412f",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_125616-74b04w47/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_125616-74b04w47/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00123</td></tr><tr><td>mean_squared_error</td><td>0.00123</td></tr><tr><td>mean_absolute_error</td><td>0.02611</td></tr><tr><td>val_loss</td><td>0.00222</td></tr><tr><td>val_mean_squared_error</td><td>0.00222</td></tr><tr><td>val_mean_absolute_error</td><td>0.03752</td></tr><tr><td>_runtime</td><td>158</td></tr><tr><td>_timestamp</td><td>1626181135</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00212</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▅█▄▄▄▄▄▄▃▃▃▃▄▃▅▄▂▄▂▂▂▃▁▂▁▁▂▁▁▁▂▁▁▂▁▃▂▃▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▅█▄▄▄▄▄▄▃▃▃▃▄▃▅▄▂▄▂▂▂▃▁▂▁▁▂▁▁▁▂▁▁▂▁▃▂▃▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅█▅▅▅▄▄▅▄▄▄▃▄▄▆▄▃▄▂▂▂▃▁▂▂▁▂▁▁▁▁▁▂▃▁▄▂▄▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">feasible-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/74b04w47\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/74b04w47</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: owy4wxg2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">hardy-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/owy4wxg2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/owy4wxg2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_125903-owy4wxg2</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 215ms/step - loss: 0.0908 - mean_squared_error: 0.0908 - mean_absolute_error: 0.2176 - val_loss: 0.0170 - val_mean_squared_error: 0.0170 - val_mean_absolute_error: 0.1163\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0176 - mean_squared_error: 0.0176 - mean_absolute_error: 0.1010 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0983\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0814 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0535\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0693 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0475\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0604 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0480\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0602 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0463\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0578 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0460\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0552 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0519 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0506 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0565 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0524 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0506 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0510 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0454\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0503 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0483 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0491 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0498 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0455 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0440\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0476 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0473 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0486 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0432 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0509 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0485 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0433\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0463 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0470 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0426 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0429\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0436 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0433\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0497 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0451 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0450 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0459 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0457 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0413 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0436 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0470 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0438\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0421 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0431 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0421\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0442 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0424\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0422 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0434 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0424 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0409 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0421\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0401 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0416\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0429 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0402 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0387 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0432 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0399 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0418\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0401 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0420\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0390 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0412\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0428 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0417\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0398 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0417 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0406 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0395 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0409\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0394 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0407\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0381 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0424 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0405\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0384 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0404\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0369 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0403\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0371 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0351 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0404\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0394 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0404\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0399 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0415\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0391 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0408\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0379 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0365 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0402\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0379 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0401\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0363 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0399\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0396 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0349 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0396\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0380 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0395\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0385 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0354 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0393\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0330 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0408\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0347 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0399\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0363 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0342 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0385 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0378 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0374 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0366 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0401 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0390\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0365 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0391\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0364 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0333 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0402\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0359 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0345 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0398\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0350 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0393\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0363 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0387\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0354 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0412\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0344 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0416\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0375 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0347 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0399\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0363 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0394\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0334 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0390\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0328 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0384\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0348 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0312 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0387\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0330 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0383\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0355 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0394\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0349 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0383\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0326 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0385\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0330 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0381\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0320 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0398\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0349 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0382\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0335 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0351 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0313 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0335 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0387\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0332 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0376\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0349 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0379\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0329 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0334 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0317 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0379\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0332 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0388\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0333 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0345 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0389\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0340 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0373\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0324 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0354 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0309 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0377\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0332 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0377\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0339 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0372\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0324 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0372\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0319 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0383\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 1s 75ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0339 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0398\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0330 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0374\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0291 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0341 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0383\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0328 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0403\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0343 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0314 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0333 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0374\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0307 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0370\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 1s 106ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0316 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0371\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0310 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0369\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0331 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0369\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0313 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0368\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0301 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0320 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0323 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0352 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0381\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0314 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0370\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0316 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0369\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0313 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0373\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0304 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0325 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0379\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0302 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0370\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0312 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0369\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0321 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0363\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0302 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0364\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0309 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0304 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0376\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0331 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0367\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0313 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0381\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0306 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0360\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0303 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0363\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0321 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0361\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0321 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0368\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0293 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0362\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0295 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0373\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 431<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.76MB of 0.76MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "01dadb9be03b4f209010b640bcb28d43",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_125903-owy4wxg2/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_125903-owy4wxg2/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>163</td></tr><tr><td>loss</td><td>0.00223</td></tr><tr><td>mean_squared_error</td><td>0.00223</td></tr><tr><td>mean_absolute_error</td><td>0.03113</td></tr><tr><td>val_loss</td><td>0.00214</td></tr><tr><td>val_mean_squared_error</td><td>0.00214</td></tr><tr><td>val_mean_absolute_error</td><td>0.03729</td></tr><tr><td>_runtime</td><td>118</td></tr><tr><td>_timestamp</td><td>1626181261</td></tr><tr><td>_step</td><td>163</td></tr><tr><td>best_val_loss</td><td>0.00202</td></tr><tr><td>best_epoch</td><td>153</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">hardy-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/owy4wxg2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/owy4wxg2</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 37jy3kit with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">kind-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37jy3kit\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37jy3kit</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_130108-37jy3kit</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 5s 139ms/step - loss: 0.1478 - mean_squared_error: 0.1478 - mean_absolute_error: 0.2827 - val_loss: 0.0521 - val_mean_squared_error: 0.0521 - val_mean_absolute_error: 0.1693\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 1s 72ms/step - loss: 0.0456 - mean_squared_error: 0.0456 - mean_absolute_error: 0.1683 - val_loss: 0.0343 - val_mean_squared_error: 0.0343 - val_mean_absolute_error: 0.1562\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0403 - mean_squared_error: 0.0403 - mean_absolute_error: 0.1684 - val_loss: 0.0279 - val_mean_squared_error: 0.0279 - val_mean_absolute_error: 0.1292\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0339 - mean_squared_error: 0.0339 - mean_absolute_error: 0.1360 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1122\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0264 - mean_squared_error: 0.0264 - mean_absolute_error: 0.1190 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0975\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0202 - mean_squared_error: 0.0202 - mean_absolute_error: 0.1038 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0848\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0887 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0744\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0755 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0662\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0701 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0605\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0646 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0570\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0614 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0538\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0609 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0517\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 1s 77ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0606 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0504\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 1s 76ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0599 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0494\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0601 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0487\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0565 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0483\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 1s 77ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0521 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0526 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0478\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 2s 100ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0543 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0476\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0524 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0475\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 1s 76ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0517 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0531 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0507 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0475\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0498 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0509 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 1s 77ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0528 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0487 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0477\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0521 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0516 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0503 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0510 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0482 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0514 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0495 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0505 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0493 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0493 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 1s 77ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0482 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0492 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0460 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0490 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0475 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0485 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 1s 74ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0479 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 1s 71ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0497 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0457 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0473 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0493 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0480 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0473 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0463 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0478 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0466 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0478 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0465 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 1s 77ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0485 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0485 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0474 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0497 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 1s 77ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0477 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0454 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0481 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0506 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0473\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 1s 76ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0464 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0478 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0489 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1002<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.42MB of 0.42MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c1910973cd0842e68c3b370824410b38",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130108-37jy3kit/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130108-37jy3kit/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>65</td></tr><tr><td>loss</td><td>0.0048</td></tr><tr><td>mean_squared_error</td><td>0.0048</td></tr><tr><td>mean_absolute_error</td><td>0.04763</td></tr><tr><td>val_loss</td><td>0.00342</td></tr><tr><td>val_mean_squared_error</td><td>0.00342</td></tr><tr><td>val_mean_absolute_error</td><td>0.04718</td></tr><tr><td>_runtime</td><td>114</td></tr><tr><td>_timestamp</td><td>1626181382</td></tr><tr><td>_step</td><td>65</td></tr><tr><td>best_val_loss</td><td>0.00341</td></tr><tr><td>best_epoch</td><td>55</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▄▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▅▃▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">kind-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37jy3kit\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37jy3kit</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 8ly3oyzq with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">hardy-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/8ly3oyzq\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/8ly3oyzq</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_130310-8ly3oyzq</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 7s 104ms/step - loss: 0.0806 - mean_squared_error: 0.0806 - mean_absolute_error: 0.2087 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0663\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0589 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0474 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0438 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0428 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0464 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0431 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0406 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0456 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0410 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0390 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0418 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 2s 71ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0398 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0398 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0388 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0408 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0371 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0368 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0371 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 2s 74ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0389 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0379 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0376 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0371 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0366 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0372 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0358 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0353 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0359 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0333 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 2s 73ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0345 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0332 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0438\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0356 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0439\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0365 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0345 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0332 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0348 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0363 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0440\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0363 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0338 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0357 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 2s 74ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0346 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0441\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0340 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0439\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0357 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0368 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0342 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0435\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0321 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0335 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0309 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0338 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0343 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0328 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0344 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0310 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 55/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0321 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 56/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 57/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0317 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 58/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0335 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 59/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0334 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 60/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0349 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 61/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0322 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 62/200\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0305 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 63/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0318 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 64/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0331 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 65/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0329 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 66/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0321 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 67/200\n",
            "32/32 [==============================] - 2s 74ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0332 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 68/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0347 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0443\n",
            "Epoch 69/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0331 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 70/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0324 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 71/200\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0318 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1279<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.05MB of 1.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "32a49d7133c542949106fc78d00d659a",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130310-8ly3oyzq/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130310-8ly3oyzq/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>70</td></tr><tr><td>loss</td><td>0.00184</td></tr><tr><td>mean_squared_error</td><td>0.00184</td></tr><tr><td>mean_absolute_error</td><td>0.03176</td></tr><tr><td>val_loss</td><td>0.00293</td></tr><tr><td>val_mean_squared_error</td><td>0.00293</td></tr><tr><td>val_mean_absolute_error</td><td>0.04332</td></tr><tr><td>_runtime</td><td>185</td></tr><tr><td>_timestamp</td><td>1626181575</td></tr><tr><td>_step</td><td>70</td></tr><tr><td>best_val_loss</td><td>0.00286</td></tr><tr><td>best_epoch</td><td>60</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▂▁▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▂▁▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▂▂▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">hardy-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/8ly3oyzq\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/8ly3oyzq</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: zesu3zya with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">hopeful-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/zesu3zya\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/zesu3zya</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_130622-zesu3zya</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "32/32 [==============================] - 6s 42ms/step - loss: 0.1019 - mean_squared_error: 0.1019 - mean_absolute_error: 0.2210 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0956\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0301 - mean_squared_error: 0.0301 - mean_absolute_error: 0.1248 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0641\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0164 - mean_squared_error: 0.0164 - mean_absolute_error: 0.0869 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0476\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0778 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0712 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0495\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0697 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0501\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0710 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0675 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0650 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0670 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0627 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0622 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0578 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0584 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0622 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0555 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0557 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0488\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0532 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0551 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0546 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0501 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0494 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0517 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0512\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0517 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0476\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0493 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0527 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0508 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0507 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0442\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0514 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0473 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0461 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0501 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0460\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0465 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0496 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0448 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0460 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0510 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0467 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0448 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0451 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0454 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0459 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0426 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0414 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0442 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0417 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0432\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0414 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0429\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0414 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0430 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0414 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0431 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0393 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0425 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0389 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 55/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0406 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 56/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0392 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0434\n",
            "Epoch 57/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0409 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 58/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0434 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 59/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0417 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0432\n",
            "Epoch 60/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0390 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 61/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0395 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0421\n",
            "Epoch 62/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0372 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0421\n",
            "Epoch 63/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0407 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 64/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0410 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 65/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0407 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 66/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0390 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0422\n",
            "Epoch 67/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0402 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 68/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0388 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0419\n",
            "Epoch 69/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0403 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 70/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0404 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 71/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0390 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 72/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0374 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 73/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0379 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 74/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0376 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 75/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0385 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0413\n",
            "Epoch 76/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0369 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0432\n",
            "Epoch 77/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0402 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0419\n",
            "Epoch 78/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0396 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 79/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0426 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0426\n",
            "Epoch 80/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0427 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0412\n",
            "Epoch 81/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0353 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 82/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0395 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n",
            "Epoch 83/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0397 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0412\n",
            "Epoch 84/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0377 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0435\n",
            "Epoch 85/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0364 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0420\n",
            "Epoch 86/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0386 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 87/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0398 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n",
            "Epoch 88/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0419 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 89/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0374 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 90/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0386 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0418\n",
            "Epoch 91/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0357 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 92/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0380 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0412\n",
            "Epoch 93/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0357 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1585<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.45MB of 0.45MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "faa74a3315004394a591167d1e3d6ba6",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130622-zesu3zya/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130622-zesu3zya/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>92</td></tr><tr><td>loss</td><td>0.00301</td></tr><tr><td>mean_squared_error</td><td>0.00301</td></tr><tr><td>mean_absolute_error</td><td>0.03679</td></tr><tr><td>val_loss</td><td>0.00275</td></tr><tr><td>val_mean_squared_error</td><td>0.00275</td></tr><tr><td>val_mean_absolute_error</td><td>0.04237</td></tr><tr><td>_runtime</td><td>62</td></tr><tr><td>_timestamp</td><td>1626181644</td></tr><tr><td>_step</td><td>92</td></tr><tr><td>best_val_loss</td><td>0.00262</td></tr><tr><td>best_epoch</td><td>82</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▂▂▂▂▂▁▁▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">hopeful-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/zesu3zya\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/zesu3zya</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: motwt9wn with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sweepy-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/motwt9wn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/motwt9wn</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_130733-motwt9wn</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 8s 110ms/step - loss: 0.0714 - mean_squared_error: 0.0714 - mean_absolute_error: 0.1810 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0634\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0511 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0386 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0434 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0439 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0401 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0446\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0386 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 2s 73ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0384 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0381 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0502\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0379 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0374 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0374 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0471\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0366 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0391 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0347 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0493\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0368 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0424\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0359 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0511\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0347 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0343 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0380 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0443\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0347 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0421\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0351 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0346 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0335 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0490\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0342 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0412\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0415\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0340 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0413\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0324 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0408\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0321 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0403\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 2s 79ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0333 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0421\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0341 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0417\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0309 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0343 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0400\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0318 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0411\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0303 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0387\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0296 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0360 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0436\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0347 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0303 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0292 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0482\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0347 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0309 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0399\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0304 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0386\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0317 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1933<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.46MB of 1.46MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "bcb1f23fc53049aa80194edf88eac4e3",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130733-motwt9wn/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_130733-motwt9wn/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>44</td></tr><tr><td>loss</td><td>0.00206</td></tr><tr><td>mean_squared_error</td><td>0.00206</td></tr><tr><td>mean_absolute_error</td><td>0.03241</td></tr><tr><td>val_loss</td><td>0.00274</td></tr><tr><td>val_mean_squared_error</td><td>0.00274</td></tr><tr><td>val_mean_absolute_error</td><td>0.04204</td></tr><tr><td>_runtime</td><td>156</td></tr><tr><td>_timestamp</td><td>1626181809</td></tr><tr><td>_step</td><td>44</td></tr><tr><td>best_val_loss</td><td>0.00234</td></tr><tr><td>best_epoch</td><td>34</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▂▂▂▂▂▂▃▂▂▄▂▅▂▂▂▂▂▄▂▂▁▁▂▂▁▁▂▁▂▂▁▄▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▂▃▂▂▄▂▅▂▂▂▂▂▄▂▂▁▁▂▂▁▁▂▁▂▂▁▄▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▃▃▃▃▃▃▃▃▃▃▃▄▂▅▂▃▂▂▂▄▂▂▂▁▂▂▂▁▂▁▂▂▁▄▁▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sweepy-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/motwt9wn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/motwt9wn</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: uoayxqa2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">azure-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uoayxqa2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uoayxqa2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_131042-uoayxqa2</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 6s 144ms/step - loss: 0.0606 - mean_squared_error: 0.0606 - mean_absolute_error: 0.1698 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0666\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0516 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0442\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0465 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0406 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0416 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0424\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0416 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0430\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0392 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0403 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0384 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0372 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0370 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0360 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0368 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0354 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0362 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0363 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0407\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0357 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0426\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0337 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0406\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0374 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0405\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0335 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0333 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0400\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0402\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0347 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0334 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0403\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0344 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0423\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0350 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0424\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0331 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0394\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0331 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0408\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0389\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0296 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0307 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0387\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0316 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0388\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0315 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0388\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0324 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0313 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0383\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0393\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0312 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0382\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0431\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0315 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0407\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 1s 74ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0316 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0377\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0297 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0381\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0305 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0373\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0384\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0285 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0377\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0321 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0396\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0282 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0371\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0378\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0294 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0373\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0288 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2159<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.48MB of 1.48MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "366bcca61424412fa9ecdfd0b7df437e",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131042-uoayxqa2/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131042-uoayxqa2/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00162</td></tr><tr><td>mean_squared_error</td><td>0.00162</td></tr><tr><td>mean_absolute_error</td><td>0.02847</td></tr><tr><td>val_loss</td><td>0.00205</td></tr><tr><td>val_mean_squared_error</td><td>0.00205</td></tr><tr><td>val_mean_absolute_error</td><td>0.03638</td></tr><tr><td>_runtime</td><td>75</td></tr><tr><td>_timestamp</td><td>1626181917</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00205</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▃▂▁▁▁▁▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">azure-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uoayxqa2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uoayxqa2</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: w25tthwo with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">serene-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w25tthwo\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w25tthwo</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_131219-w25tthwo</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 7s 106ms/step - loss: 0.1304 - mean_squared_error: 0.1304 - mean_absolute_error: 0.2663 - val_loss: 0.0719 - val_mean_squared_error: 0.0719 - val_mean_absolute_error: 0.1941\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0573 - mean_squared_error: 0.0573 - mean_absolute_error: 0.1718 - val_loss: 0.0485 - val_mean_squared_error: 0.0485 - val_mean_absolute_error: 0.1682\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0513 - mean_squared_error: 0.0513 - mean_absolute_error: 0.1806 - val_loss: 0.0446 - val_mean_squared_error: 0.0446 - val_mean_absolute_error: 0.1620\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0484 - mean_squared_error: 0.0484 - mean_absolute_error: 0.1699 - val_loss: 0.0417 - val_mean_squared_error: 0.0417 - val_mean_absolute_error: 0.1563\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0439 - mean_squared_error: 0.0439 - mean_absolute_error: 0.1628 - val_loss: 0.0385 - val_mean_squared_error: 0.0385 - val_mean_absolute_error: 0.1507\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0378 - mean_squared_error: 0.0378 - mean_absolute_error: 0.1530 - val_loss: 0.0358 - val_mean_squared_error: 0.0358 - val_mean_absolute_error: 0.1453\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0374 - mean_squared_error: 0.0374 - mean_absolute_error: 0.1495 - val_loss: 0.0334 - val_mean_squared_error: 0.0334 - val_mean_absolute_error: 0.1399\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0319 - mean_squared_error: 0.0319 - mean_absolute_error: 0.1380 - val_loss: 0.0307 - val_mean_squared_error: 0.0307 - val_mean_absolute_error: 0.1345\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0319 - mean_squared_error: 0.0319 - mean_absolute_error: 0.1382 - val_loss: 0.0285 - val_mean_squared_error: 0.0285 - val_mean_absolute_error: 0.1292\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0306 - mean_squared_error: 0.0306 - mean_absolute_error: 0.1345 - val_loss: 0.0259 - val_mean_squared_error: 0.0259 - val_mean_absolute_error: 0.1237\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0264 - mean_squared_error: 0.0264 - mean_absolute_error: 0.1236 - val_loss: 0.0238 - val_mean_squared_error: 0.0238 - val_mean_absolute_error: 0.1186\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0288 - mean_squared_error: 0.0288 - mean_absolute_error: 0.1263 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1132\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0225 - mean_squared_error: 0.0225 - mean_absolute_error: 0.1136 - val_loss: 0.0196 - val_mean_squared_error: 0.0196 - val_mean_absolute_error: 0.1082\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0233 - mean_squared_error: 0.0233 - mean_absolute_error: 0.1098 - val_loss: 0.0179 - val_mean_squared_error: 0.0179 - val_mean_absolute_error: 0.1034\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0222 - mean_squared_error: 0.0222 - mean_absolute_error: 0.1107 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0985\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.0996 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0941\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0179 - mean_squared_error: 0.0179 - mean_absolute_error: 0.0987 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0894\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0905 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0849\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0897 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0806\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0131 - mean_squared_error: 0.0131 - mean_absolute_error: 0.0814 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0769\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0814 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0735\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.0921 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0700\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0714 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0679\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0747 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0649\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0784 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0623\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0680 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0599\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0676 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0581\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0647 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0560\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 2s 79ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0672 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0549\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0650 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0532\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0648 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0521\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0614 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0509\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0633 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0501\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0572 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0490\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0586 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0487\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0674 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0476\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0605 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0571 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0599 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0589 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0562 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0566 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0550 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0548 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0559 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0552 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0582 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0631 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0536 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0550 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0602 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0522 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0567 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0580 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0518 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0528 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0571 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0560 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0548 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0519 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 61/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0551 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 62/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0524 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 63/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0557 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 64/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0573 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 65/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0551 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 66/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0594 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 67/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0497 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 68/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0523 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 69/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0554 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 70/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0552 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 71/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0551 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 72/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0539 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 73/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0570 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 74/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0531 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 75/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0550 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 76/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0530 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 77/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0497 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 78/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0527 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 79/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0552 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 80/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0523 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 81/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0523 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 82/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0606 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 83/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0527 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 84/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0530 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 85/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0507 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 86/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0545 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 87/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0543 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 88/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0537 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 89/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0512 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0430\n",
            "Epoch 90/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0513 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 91/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0474 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0430\n",
            "Epoch 92/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0542 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0429\n",
            "Epoch 93/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0502 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0429\n",
            "Epoch 94/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0494 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 95/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0525 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 96/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0518 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 97/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0534 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 98/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0552 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 99/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0541 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0430\n",
            "Epoch 100/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0526 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2384<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.57MB of 0.57MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "06c3d2d2d1894e54a121635f1fbb6fdf",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131219-w25tthwo/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131219-w25tthwo/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00558</td></tr><tr><td>mean_squared_error</td><td>0.00558</td></tr><tr><td>mean_absolute_error</td><td>0.05079</td></tr><tr><td>val_loss</td><td>0.00286</td></tr><tr><td>val_mean_squared_error</td><td>0.00286</td></tr><tr><td>val_mean_absolute_error</td><td>0.04309</td></tr><tr><td>_runtime</td><td>270</td></tr><tr><td>_timestamp</td><td>1626182209</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00284</td></tr><tr><td>best_epoch</td><td>92</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▅▅▄▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▄▄▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▄▄▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▆▅▅▄▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">serene-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w25tthwo\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w25tthwo</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 877pmh1z with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sleek-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/877pmh1z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/877pmh1z</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_131657-877pmh1z</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 6s 141ms/step - loss: 0.1088 - mean_squared_error: 0.1088 - mean_absolute_error: 0.2443 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1091\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0845 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0576\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 1s 73ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0529 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0498\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 2s 101ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0441 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0473\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0442 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0427 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0395 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0430 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0403 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0380 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0385 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0397 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0374 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0392 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0460\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0359 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0372 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0364 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0398 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0373 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0356 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 1s 73ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0352 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0460\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 1s 72ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0364 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0386 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0366 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0353 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0366 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 1s 76ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0363 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0369 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0368 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0363 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0354 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0357 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0364 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0345 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0347 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0339 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0459\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0360 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0455\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0354 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0343 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0338 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0322 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0359 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0323 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0454\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0331 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 1s 78ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0327 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0340 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0339 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0325 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0353 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0341 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0344 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0314 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0314 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0333 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0330 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2793<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.19MB of 1.19MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "41c8e764a04345c69f14522a0955d931",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131657-877pmh1z/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131657-877pmh1z/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>56</td></tr><tr><td>loss</td><td>0.00187</td></tr><tr><td>mean_squared_error</td><td>0.00187</td></tr><tr><td>mean_absolute_error</td><td>0.03277</td></tr><tr><td>val_loss</td><td>0.00331</td></tr><tr><td>val_mean_squared_error</td><td>0.00331</td></tr><tr><td>val_mean_absolute_error</td><td>0.04622</td></tr><tr><td>_runtime</td><td>83</td></tr><tr><td>_timestamp</td><td>1626182300</td></tr><tr><td>_step</td><td>56</td></tr><tr><td>best_val_loss</td><td>0.00309</td></tr><tr><td>best_epoch</td><td>46</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sleek-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/877pmh1z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/877pmh1z</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ev4j4778 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">cosmic-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ev4j4778\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ev4j4778</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_131829-ev4j4778</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 5s 69ms/step - loss: 0.1037 - mean_squared_error: 0.1037 - mean_absolute_error: 0.2335 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0931\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0250 - mean_squared_error: 0.0250 - mean_absolute_error: 0.1262 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0739\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0176 - mean_squared_error: 0.0176 - mean_absolute_error: 0.0962 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0629\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0746 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0479\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0744 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0498\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0624 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0473\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0676 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0476\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0617 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0463\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0630 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0496\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0591 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0653 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0631 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0616 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0601 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0465\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0585 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0492\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0640 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0474\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0562 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0581 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0465\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0568 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0545 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0602 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0463\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0537 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0476\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0538 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0537 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0491 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0533 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0454\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0541 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0468\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0507 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0534 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0464\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0527 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0550 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0462\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0508 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0447\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0522 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0484 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0446\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0541 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0536 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0513 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0522\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0522 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0522 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0504 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0490 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0441\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0507 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0469\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0498 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0480 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0474 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0472 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0440\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0489 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0460 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0439\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0500 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0457 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0435\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0445 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0459 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0466 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0439\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0467 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0438\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0444 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0458 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0465 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0463 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0466 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0465 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0434 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0454 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0456\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0466 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0428 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0435 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0438\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0432 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0414 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0436 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0429 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0445 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0423 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0439 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0395 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0450 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0435\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0443 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0433 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0422\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0408 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0397 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0442 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0422\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0416 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0421\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0398 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0410 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0409 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0411 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0422\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0416 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0418\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0398 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0422\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0391 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0423\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0395 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0408 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0388 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0420\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0418 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0409 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0406 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0413\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0395 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0384 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0421\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0390 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0403 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0406 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0399 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0384 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0419\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0389 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0413\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0392 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0384 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0412\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0415 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0394 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0376 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0409\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0395 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0408\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0396 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0394 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0410\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0388 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n",
            "Epoch 111/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0396 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n",
            "Epoch 112/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0389 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 113/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0402 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0410\n",
            "Epoch 114/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0402 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 115/200\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0368 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 116/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0404 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0405\n",
            "Epoch 117/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0382 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0404\n",
            "Epoch 118/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0360 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0407\n",
            "Epoch 119/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0370 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0409\n",
            "Epoch 120/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0359 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0404\n",
            "Epoch 121/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0383 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 122/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0372 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 123/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0361 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0400\n",
            "Epoch 124/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0379 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0402\n",
            "Epoch 125/200\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0366 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0403\n",
            "Epoch 126/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0345 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 127/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0359 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0399\n",
            "Epoch 128/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0361 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0402\n",
            "Epoch 129/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0371 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0398\n",
            "Epoch 130/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0377 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0399\n",
            "Epoch 131/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0390 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0396\n",
            "Epoch 132/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0369 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0398\n",
            "Epoch 133/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0370 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0403\n",
            "Epoch 134/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0366 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0413\n",
            "Epoch 135/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0403 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n",
            "Epoch 136/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0370 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 137/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0390 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0396\n",
            "Epoch 138/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0357 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0400\n",
            "Epoch 139/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0382 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 140/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0364 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0396\n",
            "Epoch 141/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0367 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 142/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0364 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 143/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0358 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0393\n",
            "Epoch 144/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0371 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 145/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0348 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 146/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0382 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 147/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0354 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0393\n",
            "Epoch 148/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0376 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0391\n",
            "Epoch 149/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0364 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0397\n",
            "Epoch 150/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0343 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0390\n",
            "Epoch 151/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0374 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 152/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0364 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 153/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0367 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0403\n",
            "Epoch 154/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0350 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0389\n",
            "Epoch 155/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0371 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0397\n",
            "Epoch 156/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0377 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 157/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0364 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 158/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0365 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0388\n",
            "Epoch 159/200\n",
            "16/16 [==============================] - 1s 36ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0326 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n",
            "Epoch 160/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0371 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0403\n",
            "Epoch 161/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0372 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0384\n",
            "Epoch 162/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0373 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n",
            "Epoch 163/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0351 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 164/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0346 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0384\n",
            "Epoch 165/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0388 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n",
            "Epoch 166/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0355 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 167/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0396 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0400\n",
            "Epoch 168/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0351 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0390\n",
            "Epoch 169/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0356 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0384\n",
            "Epoch 170/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0355 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0381\n",
            "Epoch 171/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0382 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0383\n",
            "Epoch 172/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0357 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n",
            "Epoch 173/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0360 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 174/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0368 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n",
            "Epoch 175/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0342 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0384\n",
            "Epoch 176/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0357 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 177/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0358 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0379\n",
            "Epoch 178/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0397\n",
            "Epoch 179/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0357 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0377\n",
            "Epoch 180/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0376 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 181/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0365 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n",
            "Epoch 182/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0353 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 183/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0356 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 184/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0365 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 185/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0362 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0381\n",
            "Epoch 186/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0367 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0377\n",
            "Epoch 187/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0346 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 188/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0358 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0381\n",
            "Epoch 189/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0368 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0391\n",
            "Epoch 190/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0370 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 191/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0355 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0376\n",
            "Epoch 192/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0349 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 193/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0357 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 194/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0368 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0382\n",
            "Epoch 195/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0367 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 196/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0334 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0377\n",
            "Epoch 197/200\n",
            "16/16 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0370 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0373\n",
            "Epoch 198/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0354 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0373\n",
            "Epoch 199/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0396 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0404\n",
            "Epoch 200/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0394 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0384\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3037<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.71MB of 0.71MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f603353f417c407083d762a8e8ed3bb2",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131829-ev4j4778/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131829-ev4j4778/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00322</td></tr><tr><td>mean_squared_error</td><td>0.00322</td></tr><tr><td>mean_absolute_error</td><td>0.03857</td></tr><tr><td>val_loss</td><td>0.00236</td></tr><tr><td>val_mean_squared_error</td><td>0.00236</td></tr><tr><td>val_mean_absolute_error</td><td>0.03839</td></tr><tr><td>_runtime</td><td>50</td></tr><tr><td>_timestamp</td><td>1626182359</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00217</td></tr><tr><td>best_epoch</td><td>191</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▃▃▃▂▂▃▃▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">cosmic-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ev4j4778\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ev4j4778</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: jboqejfo with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">still-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jboqejfo\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jboqejfo</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_131928-jboqejfo</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 8s 116ms/step - loss: 0.1597 - mean_squared_error: 0.1597 - mean_absolute_error: 0.2947 - val_loss: 0.0250 - val_mean_squared_error: 0.0250 - val_mean_absolute_error: 0.1244\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0197 - mean_squared_error: 0.0197 - mean_absolute_error: 0.1162 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0516\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 3s 89ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0516 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0545\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0501 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0507\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0527 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0501\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0498 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0527\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 3s 92ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0460 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0508\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0468 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0513\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0466 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0508\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0500 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0517\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0440 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0433 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0550\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0455 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0515\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0453 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0498\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 3s 89ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0449 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0496\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3704<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.73MB of 0.73MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2778090bb4f446a98469d6267817395f",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131928-jboqejfo/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_131928-jboqejfo/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>14</td></tr><tr><td>loss</td><td>0.00399</td></tr><tr><td>mean_squared_error</td><td>0.00399</td></tr><tr><td>mean_absolute_error</td><td>0.04537</td></tr><tr><td>val_loss</td><td>0.00396</td></tr><tr><td>val_mean_squared_error</td><td>0.00396</td></tr><tr><td>val_mean_absolute_error</td><td>0.04961</td></tr><tr><td>_runtime</td><td>51</td></tr><tr><td>_timestamp</td><td>1626182419</td></tr><tr><td>_step</td><td>14</td></tr><tr><td>best_val_loss</td><td>0.00388</td></tr><tr><td>best_epoch</td><td>4</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▁▁▁▁▁▁▁▁▁▁▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▄▅▅▅▆▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▄▅▅▅▆▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▂▃▃▃▄▅▅▅▆▇▇▇█</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">still-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jboqejfo\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jboqejfo</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: bnbbrami with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">clean-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bnbbrami\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bnbbrami</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_132028-bnbbrami</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "32/32 [==============================] - 5s 55ms/step - loss: 0.0655 - mean_squared_error: 0.0655 - mean_absolute_error: 0.1886 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0893\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - mean_absolute_error: 0.0853 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0488\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0547 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0541 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0516 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0479 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0472 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0435 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0495 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0456 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0454 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0448\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0436 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0431 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0397 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0448\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0450 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0447\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0435 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0452 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0432 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0430 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0452\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0416 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0410 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0416 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0453\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0398 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0436 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0422 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0420 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0455\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0403 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0397 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0403 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0447\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0412 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0402 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0384 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0411 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0431 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0432 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0452\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0392 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0385 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0391 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0403 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0443\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0386 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0443\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0402 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0406 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0417 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0400 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0405 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0386 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0393 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0382 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0398 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0387 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3814<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.77MB of 0.77MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ead89cb9c7914a978480fa8b3a0c85a9",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132028-bnbbrami/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132028-bnbbrami/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00318</td></tr><tr><td>mean_squared_error</td><td>0.00318</td></tr><tr><td>mean_absolute_error</td><td>0.0396</td></tr><tr><td>val_loss</td><td>0.00305</td></tr><tr><td>val_mean_squared_error</td><td>0.00305</td></tr><tr><td>val_mean_absolute_error</td><td>0.04419</td></tr><tr><td>_runtime</td><td>26</td></tr><tr><td>_timestamp</td><td>1626182454</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00303</td></tr><tr><td>best_epoch</td><td>40</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">clean-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bnbbrami\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bnbbrami</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4f3ej200 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">pleasant-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4f3ej200\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4f3ej200</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_132103-4f3ej200</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 6s 211ms/step - loss: 0.1716 - mean_squared_error: 0.1716 - mean_absolute_error: 0.2993 - val_loss: 0.0337 - val_mean_squared_error: 0.0337 - val_mean_absolute_error: 0.1346\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0358 - mean_squared_error: 0.0358 - mean_absolute_error: 0.1318 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0885\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0216 - mean_squared_error: 0.0216 - mean_absolute_error: 0.1097 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0617\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0787 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0530\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0651 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0496\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0641 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0493\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0626 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0596 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0485\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0575 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0488\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0619 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0473\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0582 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0550 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0474\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0519 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0485\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0556 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0479\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0528 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0524 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0541 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0516 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0485\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0542 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0493 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0520 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0499 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0459\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0472 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0515 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0480 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0490 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0466 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0497 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0460 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0479 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0479 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0471 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0458 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0462 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0475 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0439\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0454 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0448\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0445 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0442 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0436 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0447 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0437 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0422 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0419 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0458 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0452 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0419 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0458 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0432\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0432 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0429\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0441 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0435 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4027<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.77MB of 0.77MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "5c4fea340ab4482cbb0ac17dc88d180c",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132103-4f3ej200/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132103-4f3ej200/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00435</td></tr><tr><td>mean_squared_error</td><td>0.00435</td></tr><tr><td>mean_absolute_error</td><td>0.04413</td></tr><tr><td>val_loss</td><td>0.00305</td></tr><tr><td>val_mean_squared_error</td><td>0.00305</td></tr><tr><td>val_mean_absolute_error</td><td>0.04393</td></tr><tr><td>_runtime</td><td>45</td></tr><tr><td>_timestamp</td><td>1626182508</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.0028</td></tr><tr><td>best_epoch</td><td>47</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">pleasant-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4f3ej200\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/4f3ej200</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: trn8x5ud with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">cerulean-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/trn8x5ud\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/trn8x5ud</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_132158-trn8x5ud</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 7s 113ms/step - loss: 0.1787 - mean_squared_error: 0.1787 - mean_absolute_error: 0.3086 - val_loss: 0.0648 - val_mean_squared_error: 0.0648 - val_mean_absolute_error: 0.1886\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0549 - mean_squared_error: 0.0549 - mean_absolute_error: 0.1882 - val_loss: 0.0433 - val_mean_squared_error: 0.0433 - val_mean_absolute_error: 0.1671\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0445 - mean_squared_error: 0.0445 - mean_absolute_error: 0.1750 - val_loss: 0.0343 - val_mean_squared_error: 0.0343 - val_mean_absolute_error: 0.1453\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0375 - mean_squared_error: 0.0375 - mean_absolute_error: 0.1516 - val_loss: 0.0261 - val_mean_squared_error: 0.0261 - val_mean_absolute_error: 0.1265\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0259 - mean_squared_error: 0.0259 - mean_absolute_error: 0.1272 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1105\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0205 - mean_squared_error: 0.0205 - mean_absolute_error: 0.1092 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0961\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0180 - mean_squared_error: 0.0180 - mean_absolute_error: 0.0986 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0835\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0804 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0734\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0703 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0658\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0622 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0599\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0586 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0556\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0587 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0522\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0489 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0499\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0491 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0483\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0485 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0472\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0467 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0458 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0449 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0463\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0470 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0450 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0424 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0449 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0449 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0437 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0436 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0431 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0450 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0468 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0397 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0417 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0443 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0437 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0429 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0455\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0429 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0410 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0405 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0418 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0401 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0400 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0430 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0436 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0412 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0427 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0432 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0388 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0412 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0423 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0443 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0459\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0427 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0440 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 2s 79ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0438 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 2s 75ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0462 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 2s 79ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0415 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0397 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0392 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0412 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0380 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0424 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0423 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0433 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 61/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0423 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 62/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0382 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 63/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0385 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 64/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0397 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 65/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0384 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 66/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0420 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 67/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0374 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0459\n",
            "Epoch 68/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0415 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 69/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0405 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 70/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0395 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 71/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0381 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 72/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0409 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 73/100\n",
            "32/32 [==============================] - 2s 78ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0394 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 74/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0401 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 75/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0403 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 76/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0415 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 77/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0396 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 78/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0401 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 79/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0393 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 80/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0387 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 81/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0383 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 82/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0393 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 83/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0408 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 84/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0377 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 85/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0370 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 86/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0390 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 87/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0384 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 88/100\n",
            "32/32 [==============================] - 2s 77ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0376 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 89/100\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0374 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 90/100\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0396 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 91/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0386 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 92/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0379 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 93/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0381 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 94/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0399 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 95/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0389 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 96/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0389 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 97/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0400 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 98/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0374 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 99/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0383 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 100/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0367 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4242<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.06MB of 1.06MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "0e24cc2c12cf4f4c84b9790aaa0afc3f",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132158-trn8x5ud/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132158-trn8x5ud/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00282</td></tr><tr><td>mean_squared_error</td><td>0.00282</td></tr><tr><td>mean_absolute_error</td><td>0.03746</td></tr><tr><td>val_loss</td><td>0.00311</td></tr><tr><td>val_mean_squared_error</td><td>0.00311</td></tr><tr><td>val_mean_absolute_error</td><td>0.04493</td></tr><tr><td>_runtime</td><td>271</td></tr><tr><td>_timestamp</td><td>1626182789</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00311</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">cerulean-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/trn8x5ud\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/trn8x5ud</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: giey4lbn with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">bright-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/giey4lbn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/giey4lbn</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_132738-giey4lbn</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 5s 212ms/step - loss: 0.1895 - mean_squared_error: 0.1895 - mean_absolute_error: 0.3328 - val_loss: 0.1086 - val_mean_squared_error: 0.1086 - val_mean_absolute_error: 0.2504\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0631 - mean_squared_error: 0.0631 - mean_absolute_error: 0.1693 - val_loss: 0.0207 - val_mean_squared_error: 0.0207 - val_mean_absolute_error: 0.1107\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0196 - mean_squared_error: 0.0196 - mean_absolute_error: 0.1104 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0860\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0908 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0604\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0638 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0487\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0509 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0485\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0524 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0488\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0481 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0460 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0484\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0513 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0484\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0471 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0470 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0506 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0482\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0451 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0482\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0469 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0480\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0461 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0484\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0462 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0489\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 1s 96ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0471 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0480\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0437 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0488\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 1s 99ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0427 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0476\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0420 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0436 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0428 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0408 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0477\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0415 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0495\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0426 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0491\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0419 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0418 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0391 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0486\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0416 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0442 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0378 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0403 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0477\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0399 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0423 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0402 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0463\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0394 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0467\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0403 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0474\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0410 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0475\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0377 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0454\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0402 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0389 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0393 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0389 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0443\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0370 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0383 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0378 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0392 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0393 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0393 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0492\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4663<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.29MB of 1.29MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f652e48e0fa640af8d464e7f02ccc37d",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132738-giey4lbn/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132738-giey4lbn/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00323</td></tr><tr><td>mean_squared_error</td><td>0.00323</td></tr><tr><td>mean_absolute_error</td><td>0.0405</td></tr><tr><td>val_loss</td><td>0.0037</td></tr><tr><td>val_mean_squared_error</td><td>0.0037</td></tr><tr><td>val_mean_absolute_error</td><td>0.0492</td></tr><tr><td>_runtime</td><td>45</td></tr><tr><td>_timestamp</td><td>1626182903</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00296</td></tr><tr><td>best_epoch</td><td>42</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">bright-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/giey4lbn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/giey4lbn</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: i6yenvei with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">vivid-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/i6yenvei\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/i6yenvei</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_132837-i6yenvei</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 5s 223ms/step - loss: 0.1442 - mean_squared_error: 0.1442 - mean_absolute_error: 0.2932 - val_loss: 0.1264 - val_mean_squared_error: 0.1264 - val_mean_absolute_error: 0.2697\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0855 - mean_squared_error: 0.0855 - mean_absolute_error: 0.1965 - val_loss: 0.0702 - val_mean_squared_error: 0.0702 - val_mean_absolute_error: 0.1928\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 1s 73ms/step - loss: 0.0607 - mean_squared_error: 0.0607 - mean_absolute_error: 0.1785 - val_loss: 0.0511 - val_mean_squared_error: 0.0511 - val_mean_absolute_error: 0.1740\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0510 - mean_squared_error: 0.0510 - mean_absolute_error: 0.1842 - val_loss: 0.0473 - val_mean_squared_error: 0.0473 - val_mean_absolute_error: 0.1757\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0532 - mean_squared_error: 0.0532 - mean_absolute_error: 0.1939 - val_loss: 0.0458 - val_mean_squared_error: 0.0458 - val_mean_absolute_error: 0.1718\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0520 - mean_squared_error: 0.0520 - mean_absolute_error: 0.1887 - val_loss: 0.0450 - val_mean_squared_error: 0.0450 - val_mean_absolute_error: 0.1663\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0478 - mean_squared_error: 0.0478 - mean_absolute_error: 0.1775 - val_loss: 0.0445 - val_mean_squared_error: 0.0445 - val_mean_absolute_error: 0.1623\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 1s 74ms/step - loss: 0.0433 - mean_squared_error: 0.0433 - mean_absolute_error: 0.1654 - val_loss: 0.0437 - val_mean_squared_error: 0.0437 - val_mean_absolute_error: 0.1590\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0436 - mean_squared_error: 0.0436 - mean_absolute_error: 0.1620 - val_loss: 0.0418 - val_mean_squared_error: 0.0418 - val_mean_absolute_error: 0.1559\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0453 - mean_squared_error: 0.0453 - mean_absolute_error: 0.1675 - val_loss: 0.0399 - val_mean_squared_error: 0.0399 - val_mean_absolute_error: 0.1529\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0390 - mean_squared_error: 0.0390 - mean_absolute_error: 0.1548 - val_loss: 0.0384 - val_mean_squared_error: 0.0384 - val_mean_absolute_error: 0.1500\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0378 - mean_squared_error: 0.0378 - mean_absolute_error: 0.1519 - val_loss: 0.0367 - val_mean_squared_error: 0.0367 - val_mean_absolute_error: 0.1471\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0390 - mean_squared_error: 0.0390 - mean_absolute_error: 0.1538 - val_loss: 0.0350 - val_mean_squared_error: 0.0350 - val_mean_absolute_error: 0.1442\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0346 - mean_squared_error: 0.0346 - mean_absolute_error: 0.1477 - val_loss: 0.0336 - val_mean_squared_error: 0.0336 - val_mean_absolute_error: 0.1412\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0322 - mean_squared_error: 0.0322 - mean_absolute_error: 0.1414 - val_loss: 0.0322 - val_mean_squared_error: 0.0322 - val_mean_absolute_error: 0.1382\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0319 - mean_squared_error: 0.0319 - mean_absolute_error: 0.1375 - val_loss: 0.0310 - val_mean_squared_error: 0.0310 - val_mean_absolute_error: 0.1353\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0348 - mean_squared_error: 0.0348 - mean_absolute_error: 0.1433 - val_loss: 0.0295 - val_mean_squared_error: 0.0295 - val_mean_absolute_error: 0.1323\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0326 - mean_squared_error: 0.0326 - mean_absolute_error: 0.1388 - val_loss: 0.0280 - val_mean_squared_error: 0.0280 - val_mean_absolute_error: 0.1293\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0294 - mean_squared_error: 0.0294 - mean_absolute_error: 0.1328 - val_loss: 0.0267 - val_mean_squared_error: 0.0267 - val_mean_absolute_error: 0.1264\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0310 - mean_squared_error: 0.0310 - mean_absolute_error: 0.1380 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1234\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0246 - mean_squared_error: 0.0246 - mean_absolute_error: 0.1210 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1205\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0267 - mean_squared_error: 0.0267 - mean_absolute_error: 0.1254 - val_loss: 0.0232 - val_mean_squared_error: 0.0232 - val_mean_absolute_error: 0.1176\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0259 - mean_squared_error: 0.0259 - mean_absolute_error: 0.1218 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1147\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0248 - mean_squared_error: 0.0248 - mean_absolute_error: 0.1197 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1118\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 1s 76ms/step - loss: 0.0209 - mean_squared_error: 0.0209 - mean_absolute_error: 0.1111 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1089\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0207 - mean_squared_error: 0.0207 - mean_absolute_error: 0.1119 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1061\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0202 - mean_squared_error: 0.0202 - mean_absolute_error: 0.1087 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1033\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0206 - mean_squared_error: 0.0206 - mean_absolute_error: 0.1096 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1005\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0985 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0979\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0173 - mean_squared_error: 0.0173 - mean_absolute_error: 0.0993 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0952\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0173 - mean_squared_error: 0.0173 - mean_absolute_error: 0.0980 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0926\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0918 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0900\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - mean_absolute_error: 0.0902 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0876\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0830 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0853\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0828 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0830\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - mean_absolute_error: 0.0867 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0808\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0814 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0786\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0779 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0766\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0121 - mean_squared_error: 0.0121 - mean_absolute_error: 0.0795 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0746\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0764 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0727\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0712 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0708\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0728 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0690\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0735 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0673\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0677 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0658\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0649 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0644\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0633 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0630\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0647 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0616\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0616 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0604\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0637 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0592\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0643 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0581\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4880<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.74MB of 0.74MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "88c96d0486334f538927aba982445d1b",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132837-i6yenvei/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132837-i6yenvei/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.0083</td></tr><tr><td>mean_squared_error</td><td>0.0083</td></tr><tr><td>mean_absolute_error</td><td>0.06216</td></tr><tr><td>val_loss</td><td>0.00534</td></tr><tr><td>val_mean_squared_error</td><td>0.00534</td></tr><tr><td>val_mean_absolute_error</td><td>0.05808</td></tr><tr><td>_runtime</td><td>45</td></tr><tr><td>_timestamp</td><td>1626182962</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00534</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▅▅▅▅▄▄▄▄▄▄▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▄▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▄▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▅▅▄▄▄▄▄▄▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">vivid-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/i6yenvei\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/i6yenvei</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: o096deu7 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">avid-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/o096deu7\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/o096deu7</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_132931-o096deu7</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 6s 235ms/step - loss: 0.1135 - mean_squared_error: 0.1135 - mean_absolute_error: 0.2486 - val_loss: 0.0294 - val_mean_squared_error: 0.0294 - val_mean_absolute_error: 0.1278\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0215 - mean_squared_error: 0.0215 - mean_absolute_error: 0.1147 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0844\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0826 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0534\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0561 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0499\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0533 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0510\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0509 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0501\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0504 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0497 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0506\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0522 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0509\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0483 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0523\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0466 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0563\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0516 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0660\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0509 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0518\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0469 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0540\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5095<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.18MB of 1.18MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "8e98ec4a27eb43d1ba1ef6524e92943a",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132931-o096deu7/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_132931-o096deu7/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>13</td></tr><tr><td>loss</td><td>0.00419</td></tr><tr><td>mean_squared_error</td><td>0.00419</td></tr><tr><td>mean_absolute_error</td><td>0.04659</td></tr><tr><td>val_loss</td><td>0.00437</td></tr><tr><td>val_mean_squared_error</td><td>0.00437</td></tr><tr><td>val_mean_absolute_error</td><td>0.05403</td></tr><tr><td>_runtime</td><td>20</td></tr><tr><td>_timestamp</td><td>1626182991</td></tr><tr><td>_step</td><td>13</td></tr><tr><td>best_val_loss</td><td>0.00383</td></tr><tr><td>best_epoch</td><td>3</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▁▁▁▁▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▁▁▁▁▁▁▁▁▁▂▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▁▁▁▁▁▁▁▁▂▂▁▁</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▄▅▆▆▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▄▅▆▆▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▃▄▄▅▅▆▆▇▇█</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">avid-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/o096deu7\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/o096deu7</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 7fmhfmc4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">deft-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7fmhfmc4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7fmhfmc4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133011-7fmhfmc4</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 6s 142ms/step - loss: 0.1306 - mean_squared_error: 0.1306 - mean_absolute_error: 0.2644 - val_loss: 0.0304 - val_mean_squared_error: 0.0304 - val_mean_absolute_error: 0.1350\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0338 - mean_squared_error: 0.0338 - mean_absolute_error: 0.1510 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.1093\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0208 - mean_squared_error: 0.0208 - mean_absolute_error: 0.1126 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0792\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0865 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0502\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0644 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0475\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 1s 75ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0611 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0511\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0578 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0563 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0596 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0480\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0575 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0478\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0552 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0544 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0579 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0498\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0550 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0478\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0542 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0516 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0511 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0488 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0475\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0463 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0507\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0540 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0481\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0496 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5200<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.80MB of 0.80MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "882e73fc3276429c946803063e73b07b",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133011-7fmhfmc4/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133011-7fmhfmc4/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>20</td></tr><tr><td>loss</td><td>0.00494</td></tr><tr><td>mean_squared_error</td><td>0.00494</td></tr><tr><td>mean_absolute_error</td><td>0.04908</td></tr><tr><td>val_loss</td><td>0.00348</td></tr><tr><td>val_mean_squared_error</td><td>0.00348</td></tr><tr><td>val_mean_absolute_error</td><td>0.04791</td></tr><tr><td>_runtime</td><td>38</td></tr><tr><td>_timestamp</td><td>1626183049</td></tr><tr><td>_step</td><td>20</td></tr><tr><td>best_val_loss</td><td>0.00338</td></tr><tr><td>best_epoch</td><td>10</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">deft-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7fmhfmc4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/7fmhfmc4</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: b439emn9 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">peach-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/b439emn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/b439emn9</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133108-b439emn9</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "16/16 [==============================] - 5s 74ms/step - loss: 0.0634 - mean_squared_error: 0.0634 - mean_absolute_error: 0.1754 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0563\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0642 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0505\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0684 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0488\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0600 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0543\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0655 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0499\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0615 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0477\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0592 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0578 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0544 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0573 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0582 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0533 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0525 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0490 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0507 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0547 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0550 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0435\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0522 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0441\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0516 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0440\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0478 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0520 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0440\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0480 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0491 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0477 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0428\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0489 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0441 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0436 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0433 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0445 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0574\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0464 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0444 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0417 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0469\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0433 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0407\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0444 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0433 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0407\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0411 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0443 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0423\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0417 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0405\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0460 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0429 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0413\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0416 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0482\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0395 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0396\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0409 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0399\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0404 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0394 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0395\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0394 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0384 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0398 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0421\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0375 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0390\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0402 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5330<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.22MB of 1.22MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b8b6e713393e451b9a5c4547eb5dc31b",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133108-b439emn9/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133108-b439emn9/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00405</td></tr><tr><td>mean_squared_error</td><td>0.00405</td></tr><tr><td>mean_absolute_error</td><td>0.04018</td></tr><tr><td>val_loss</td><td>0.00247</td></tr><tr><td>val_mean_squared_error</td><td>0.00247</td></tr><tr><td>val_mean_absolute_error</td><td>0.04007</td></tr><tr><td>_runtime</td><td>23</td></tr><tr><td>_timestamp</td><td>1626183091</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00233</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▄▄▆▄▃▃▃▃▄▄▂▂▂▃▂▂▂▂▂▂▂▂█▂▄▁▁▂▂▁▁▄▁▁▂▂▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▄▄▆▄▃▃▃▃▄▄▂▂▂▃▂▂▂▂▂▂▂▂█▂▄▁▁▂▂▁▁▄▁▁▂▂▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▇▄▃▃▄▃▄▄▃▃▃▃▃▃▃▂▂▂▂▂█▂▄▂▂▂▂▂▁▄▁▁▂▂▁▂▁</td></tr><tr><td>_runtime</td><td>▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">peach-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/b439emn9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/b439emn9</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 2swuk9zm with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">prime-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/2swuk9zm\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/2swuk9zm</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133144-2swuk9zm</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 7s 110ms/step - loss: 0.0847 - mean_squared_error: 0.0847 - mean_absolute_error: 0.2124 - val_loss: 0.0248 - val_mean_squared_error: 0.0248 - val_mean_absolute_error: 0.1332\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0355 - mean_squared_error: 0.0355 - mean_absolute_error: 0.1453 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.0995\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0246 - mean_squared_error: 0.0246 - mean_absolute_error: 0.1070 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0779\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0220 - mean_squared_error: 0.0220 - mean_absolute_error: 0.1005 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0657\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.0845 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0573\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0165 - mean_squared_error: 0.0165 - mean_absolute_error: 0.0809 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0525\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0685 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0498\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0757 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0494\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0815 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0683 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0640 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0704 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0668 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0483\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0653 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0663 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0684 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 3s 78ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0707 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0622 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0644 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0461\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0641 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0663 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0592 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0652 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0465\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0574 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0604 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0635 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0624 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0593 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0579 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0459\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5541<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.08MB of 1.08MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "242faad1f7bc418a99475ec00e9d22da",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133144-2swuk9zm/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133144-2swuk9zm/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>28</td></tr><tr><td>loss</td><td>0.00828</td></tr><tr><td>mean_squared_error</td><td>0.00828</td></tr><tr><td>mean_absolute_error</td><td>0.05982</td></tr><tr><td>val_loss</td><td>0.00329</td></tr><tr><td>val_mean_squared_error</td><td>0.00329</td></tr><tr><td>val_mean_absolute_error</td><td>0.04593</td></tr><tr><td>_runtime</td><td>86</td></tr><tr><td>_timestamp</td><td>1626183190</td></tr><tr><td>_step</td><td>28</td></tr><tr><td>best_val_loss</td><td>0.00329</td></tr><tr><td>best_epoch</td><td>18</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr><tr><td>loss</td><td>█▄▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▃▂▂▂▂▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇██</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">prime-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/2swuk9zm\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/2swuk9zm</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: appnmk87 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">earthy-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/appnmk87\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/appnmk87</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133321-appnmk87</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 7s 181ms/step - loss: 0.0732 - mean_squared_error: 0.0732 - mean_absolute_error: 0.1797 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0571\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0726 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0486\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0689 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0970\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0670 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0673\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0582 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0544\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0661 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0510 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0462\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0471 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0587 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0458 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0484 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0450 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0480\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0467 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0417\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0460 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0422\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0490 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0417 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0473\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0428 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0407\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0437 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0435 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0430\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0419 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0416\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0445 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0411\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0477 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0430\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0419 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0395 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0432\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0397 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0400\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0392 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0405\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0377 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0400\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0486 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0414\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0411 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0404\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0404 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0535\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0423 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0462\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0428 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0424\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0399 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0410\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0399 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0417\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0405 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 2s 95ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0416 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0393\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0365 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0421\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5703<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.87MB of 0.87MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "1a0127476b824a25973da79b3d736d18",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133321-appnmk87/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133321-appnmk87/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>36</td></tr><tr><td>loss</td><td>0.00279</td></tr><tr><td>mean_squared_error</td><td>0.00279</td></tr><tr><td>mean_absolute_error</td><td>0.03757</td></tr><tr><td>val_loss</td><td>0.00274</td></tr><tr><td>val_mean_squared_error</td><td>0.00274</td></tr><tr><td>val_mean_absolute_error</td><td>0.04207</td></tr><tr><td>_runtime</td><td>63</td></tr><tr><td>_timestamp</td><td>1626183264</td></tr><tr><td>_step</td><td>36</td></tr><tr><td>best_val_loss</td><td>0.00243</td></tr><tr><td>best_epoch</td><td>26</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▃▂▂▃▂▂▂▂▂▂▁▂▂▁▁▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃▂█▄▂▁▂▂▁▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▃▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▃▂█▄▂▁▂▂▁▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▃▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▃▂█▄▃▂▂▂▂▂▁▂▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▃▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">earthy-sweep-21</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/appnmk87\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/appnmk87</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: yoeedcw6 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">deep-sweep-22</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yoeedcw6\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yoeedcw6</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133500-yoeedcw6</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 6s 147ms/step - loss: 0.0631 - mean_squared_error: 0.0631 - mean_absolute_error: 0.1782 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0506\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0703 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0650 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0526\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0585 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0550\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0582 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0396\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0484 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0398\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0506 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0404\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0493 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0465\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0559 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0522 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0430 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0480 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0442\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0460 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0423 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0394\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0413 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0385\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0498 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0424\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0450 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0411 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0450 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0394 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0400 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0418 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0403 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0374\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0390 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 1s 94ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0423 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0371\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0411 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0366\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0417 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0365\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0360 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0362\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0359 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0357 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0367\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0369 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0375\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0345 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0371\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0370 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0402\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0381 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0368\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0363 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0365\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0386 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0382\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0372 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0366\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0354 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0362 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0361\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0363 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0365\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0374 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0362\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0386 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0355\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0410 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0352 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0370 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0355\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0367 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0373\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0355 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0369\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0366 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0383 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0346 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5887<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.28MB of 1.28MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "57750a884e4748aa9c75dbe3abd600b1",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133500-yoeedcw6/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133500-yoeedcw6/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00266</td></tr><tr><td>mean_squared_error</td><td>0.00266</td></tr><tr><td>mean_absolute_error</td><td>0.0361</td></tr><tr><td>val_loss</td><td>0.00222</td></tr><tr><td>val_mean_squared_error</td><td>0.00222</td></tr><tr><td>val_mean_absolute_error</td><td>0.03738</td></tr><tr><td>_runtime</td><td>79</td></tr><tr><td>_timestamp</td><td>1626183379</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00199</td></tr><tr><td>best_epoch</td><td>44</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆▃▇█▂▂▄▃▅▄▂▂▃▂▃▁▂▃▂▃▁▁▁▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▂▂</td></tr><tr><td>val_mean_squared_error</td><td>▆▃▇█▂▂▄▃▅▄▂▂▃▂▃▁▂▃▂▃▁▁▁▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>▆▃▇█▃▃▅▄▅▄▂▂▃▂▃▁▂▃▂▃▁▁▁▂▂▂▃▁▂▁▂▁▁▁▁▂▂▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">deep-sweep-22</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yoeedcw6\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yoeedcw6</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0rfv1c9c with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">volcanic-sweep-23</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0rfv1c9c\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0rfv1c9c</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133642-0rfv1c9c</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 6s 185ms/step - loss: 0.1968 - mean_squared_error: 0.1968 - mean_absolute_error: 0.3040 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1379\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0285 - mean_squared_error: 0.0285 - mean_absolute_error: 0.1415 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0727\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 1s 77ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0742 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0660 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0524\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0610 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0562 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0581 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0550 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0528 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0539 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0510 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0560 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0507 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0476 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0451\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0514 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0503 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0459 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0443\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0442 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0497 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0450 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0467 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0462 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0446\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0443 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0470\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0465 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 1s 79ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0456 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0426 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0425 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0467 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0449\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0435 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0418 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0418 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0448 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0447\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0436 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0441\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0445 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0446\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0427 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0418 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0435 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0454\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0418 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0448\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0435 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 1s 81ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0398 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0411 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0434\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0444 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0421 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0399 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0394 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0391 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0375 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0422\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 1s 80ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0370 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0391 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0411 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0442\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6112<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.00MB of 1.00MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c60d047e8c6743a48801c8f36db15e9b",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133642-0rfv1c9c/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133642-0rfv1c9c/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00385</td></tr><tr><td>mean_squared_error</td><td>0.00385</td></tr><tr><td>mean_absolute_error</td><td>0.04122</td></tr><tr><td>val_loss</td><td>0.00315</td></tr><tr><td>val_mean_squared_error</td><td>0.00315</td></tr><tr><td>val_mean_absolute_error</td><td>0.04417</td></tr><tr><td>_runtime</td><td>79</td></tr><tr><td>_timestamp</td><td>1626183481</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00276</td></tr><tr><td>best_epoch</td><td>46</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">volcanic-sweep-23</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0rfv1c9c\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/0rfv1c9c</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 756a4mam with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">royal-sweep-24</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/756a4mam\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/756a4mam</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133825-756a4mam</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 5s 222ms/step - loss: 0.2104 - mean_squared_error: 0.2104 - mean_absolute_error: 0.3337 - val_loss: 0.0757 - val_mean_squared_error: 0.0757 - val_mean_absolute_error: 0.2168\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0838 - mean_squared_error: 0.0838 - mean_absolute_error: 0.2534 - val_loss: 0.0594 - val_mean_squared_error: 0.0594 - val_mean_absolute_error: 0.2199\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0628 - mean_squared_error: 0.0628 - mean_absolute_error: 0.2210 - val_loss: 0.0499 - val_mean_squared_error: 0.0499 - val_mean_absolute_error: 0.1668\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0465 - mean_squared_error: 0.0465 - mean_absolute_error: 0.1591 - val_loss: 0.0433 - val_mean_squared_error: 0.0433 - val_mean_absolute_error: 0.1544\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0376 - mean_squared_error: 0.0376 - mean_absolute_error: 0.1467 - val_loss: 0.0315 - val_mean_squared_error: 0.0315 - val_mean_absolute_error: 0.1382\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0358 - mean_squared_error: 0.0358 - mean_absolute_error: 0.1471 - val_loss: 0.0247 - val_mean_squared_error: 0.0247 - val_mean_absolute_error: 0.1248\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0249 - mean_squared_error: 0.0249 - mean_absolute_error: 0.1244 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1101\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0201 - mean_squared_error: 0.0201 - mean_absolute_error: 0.1080 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0963\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.0963 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0836\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0815 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0731\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0705 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0633\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0556 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0566\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0578 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0515\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0529 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0499 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0493 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0517 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0470 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0482 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0494 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0442\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0489 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0478 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0455 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0451 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0469 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0499 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 1s 96ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0466 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0476 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0457 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0459 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0477 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0463 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0476 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0440 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0467 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0462 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0479 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0460 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0476 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0478 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0479 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0452 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0435 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0458 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0447 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 1s 100ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0474 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0434 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0440 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0439 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0440\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0439 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6337<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.05MB of 1.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "bf2d41ef0044482997dcfebafe4995a9",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133825-756a4mam/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133825-756a4mam/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00439</td></tr><tr><td>mean_squared_error</td><td>0.00439</td></tr><tr><td>mean_absolute_error</td><td>0.04567</td></tr><tr><td>val_loss</td><td>0.00297</td></tr><tr><td>val_mean_squared_error</td><td>0.00297</td></tr><tr><td>val_mean_absolute_error</td><td>0.04393</td></tr><tr><td>_runtime</td><td>46</td></tr><tr><td>_timestamp</td><td>1626183551</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00295</td></tr><tr><td>best_epoch</td><td>40</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▇▆▄▄▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▆▅▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▆▅▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>██▆▅▄▄▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">royal-sweep-24</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/756a4mam\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/756a4mam</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: aykwz62k with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">soft-sweep-25</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/aykwz62k\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/aykwz62k</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_133925-aykwz62k</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 7s 111ms/step - loss: 0.1103 - mean_squared_error: 0.1103 - mean_absolute_error: 0.2304 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0751\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0663 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0562 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0526\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0594 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0483\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0502 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0467\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0520 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0481 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0460\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0486 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0444 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0446\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0462 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0451\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0486 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0554\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0536 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0455\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0440 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0447 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0469\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0476 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0412 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0465\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0441 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0430\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0421 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0449\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0412 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0432\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0420 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0404 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0398 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0439\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0439 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0426\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0394 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0382 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0413 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0411 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0447\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0394 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0385 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0433\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0375 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0416\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0380 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0419\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0397 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 3s 79ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0397 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0378 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0437\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0431 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0379 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0409\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0394 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0422\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0370 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0362 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0403\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0357 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0402\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0339 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0412\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0379 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0427\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0343 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0390\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0348 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0341 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0403\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0359 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0389\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0320 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0404\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0347 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0408\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0339 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0395\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 3s 98ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0335 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0413\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0381 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0424\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0357 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0386\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0384 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0405\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0330 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0409\n",
            "Epoch 55/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0345 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0382\n",
            "Epoch 56/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0311 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 57/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0321 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0383\n",
            "Epoch 58/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0378 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 59/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0393\n",
            "Epoch 60/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0331 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0394\n",
            "Epoch 61/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0339 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n",
            "Epoch 62/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0360 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0401\n",
            "Epoch 63/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0322 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0398\n",
            "Epoch 64/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0320 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0389\n",
            "Epoch 65/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0330 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 66/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0305 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0393\n",
            "Epoch 67/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0325 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0384\n",
            "Epoch 68/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0330 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 69/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0332 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 70/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0327 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0382\n",
            "Epoch 71/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0356 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0377\n",
            "Epoch 72/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0372\n",
            "Epoch 73/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0316 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0387\n",
            "Epoch 74/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0317 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0379\n",
            "Epoch 75/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0328 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0386\n",
            "Epoch 76/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0318 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0377\n",
            "Epoch 77/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0305 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0370\n",
            "Epoch 78/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0302 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0379\n",
            "Epoch 79/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0315 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0377\n",
            "Epoch 80/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0329 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0381\n",
            "Epoch 81/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0317 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0376\n",
            "Epoch 82/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0298 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n",
            "Epoch 83/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0336 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n",
            "Epoch 84/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0309 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0379\n",
            "Epoch 85/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0372\n",
            "Epoch 86/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0307 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0382\n",
            "Epoch 87/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0314 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6554<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.37MB of 1.37MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f986de0ce6d04d1ea84657d84894e88d",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133925-aykwz62k/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_133925-aykwz62k/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>86</td></tr><tr><td>loss</td><td>0.00201</td></tr><tr><td>mean_squared_error</td><td>0.00201</td></tr><tr><td>mean_absolute_error</td><td>0.03091</td></tr><tr><td>val_loss</td><td>0.00232</td></tr><tr><td>val_mean_squared_error</td><td>0.00232</td></tr><tr><td>val_mean_absolute_error</td><td>0.03804</td></tr><tr><td>_runtime</td><td>246</td></tr><tr><td>_timestamp</td><td>1626183811</td></tr><tr><td>_step</td><td>86</td></tr><tr><td>best_val_loss</td><td>0.00218</td></tr><tr><td>best_epoch</td><td>76</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▂▂▂▂▂▂▂▂▁▂▂▂▂▁▂▁▂▁▁▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▂▂▂▂▂▂▂▂▁▂▂▂▂▁▂▁▂▁▁▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▃▂▂▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▂▁▂▂▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">soft-sweep-25</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/aykwz62k\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/aykwz62k</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: bgsrl6g5 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">rich-sweep-26</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bgsrl6g5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bgsrl6g5</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_134404-bgsrl6g5</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 4s 139ms/step - loss: 0.1923 - mean_squared_error: 0.1923 - mean_absolute_error: 0.3328 - val_loss: 0.1545 - val_mean_squared_error: 0.1545 - val_mean_absolute_error: 0.2976\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.1138 - mean_squared_error: 0.1138 - mean_absolute_error: 0.2270 - val_loss: 0.0785 - val_mean_squared_error: 0.0785 - val_mean_absolute_error: 0.2038\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0649 - mean_squared_error: 0.0649 - mean_absolute_error: 0.1841 - val_loss: 0.0558 - val_mean_squared_error: 0.0558 - val_mean_absolute_error: 0.1857\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0569 - mean_squared_error: 0.0569 - mean_absolute_error: 0.1989 - val_loss: 0.0506 - val_mean_squared_error: 0.0506 - val_mean_absolute_error: 0.1865\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0565 - mean_squared_error: 0.0565 - mean_absolute_error: 0.2035 - val_loss: 0.0475 - val_mean_squared_error: 0.0475 - val_mean_absolute_error: 0.1784\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0558 - mean_squared_error: 0.0558 - mean_absolute_error: 0.1993 - val_loss: 0.0452 - val_mean_squared_error: 0.0452 - val_mean_absolute_error: 0.1685\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0462 - mean_squared_error: 0.0462 - mean_absolute_error: 0.1777 - val_loss: 0.0436 - val_mean_squared_error: 0.0436 - val_mean_absolute_error: 0.1614\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0478 - mean_squared_error: 0.0478 - mean_absolute_error: 0.1733 - val_loss: 0.0415 - val_mean_squared_error: 0.0415 - val_mean_absolute_error: 0.1557\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0436 - mean_squared_error: 0.0436 - mean_absolute_error: 0.1607 - val_loss: 0.0386 - val_mean_squared_error: 0.0386 - val_mean_absolute_error: 0.1504\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0374 - mean_squared_error: 0.0374 - mean_absolute_error: 0.1497 - val_loss: 0.0357 - val_mean_squared_error: 0.0357 - val_mean_absolute_error: 0.1453\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 10ms/step - loss: 0.0381 - mean_squared_error: 0.0381 - mean_absolute_error: 0.1543 - val_loss: 0.0327 - val_mean_squared_error: 0.0327 - val_mean_absolute_error: 0.1403\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0336 - mean_squared_error: 0.0336 - mean_absolute_error: 0.1452 - val_loss: 0.0304 - val_mean_squared_error: 0.0304 - val_mean_absolute_error: 0.1354\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0315 - mean_squared_error: 0.0315 - mean_absolute_error: 0.1405 - val_loss: 0.0283 - val_mean_squared_error: 0.0283 - val_mean_absolute_error: 0.1306\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0308 - mean_squared_error: 0.0308 - mean_absolute_error: 0.1388 - val_loss: 0.0263 - val_mean_squared_error: 0.0263 - val_mean_absolute_error: 0.1260\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0276 - mean_squared_error: 0.0276 - mean_absolute_error: 0.1310 - val_loss: 0.0246 - val_mean_squared_error: 0.0246 - val_mean_absolute_error: 0.1216\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0257 - mean_squared_error: 0.0257 - mean_absolute_error: 0.1240 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1173\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0251 - mean_squared_error: 0.0251 - mean_absolute_error: 0.1215 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1130\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0239 - mean_squared_error: 0.0239 - mean_absolute_error: 0.1190 - val_loss: 0.0194 - val_mean_squared_error: 0.0194 - val_mean_absolute_error: 0.1089\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0222 - mean_squared_error: 0.0222 - mean_absolute_error: 0.1156 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1049\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - mean_absolute_error: 0.1027 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1012\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0186 - mean_squared_error: 0.0186 - mean_absolute_error: 0.1045 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0975\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0179 - mean_squared_error: 0.0179 - mean_absolute_error: 0.1047 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0939\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - mean_absolute_error: 0.0964 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0905\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0922 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0872\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0881 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0840\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0826 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0810\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0827 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0782\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0804 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0755\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0739 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0730\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0767 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0707\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0698 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0684\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0692 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0664\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0671 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0643\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0622 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0625\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0630 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0609\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0627 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0592\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0587 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0576\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0620 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0560\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0604 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0547\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0553 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0535\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0534 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0526\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0552 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0517\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0515 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0509\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0529 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0499\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0514 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0491\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0492 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0484\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0487 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0477\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0520 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0492 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0481 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0461\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0494 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0433 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0441 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0494 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0446\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0448 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0443\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0460 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0442\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0473 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0440\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0448 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0474 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0440 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0435\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0464 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0434\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0462 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0426 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0412 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0435\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0470 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0434\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0438 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0435 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0431\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0445 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0430\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0433 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0440 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0443 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0415 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0429 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0438 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0426 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0427 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0439 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0440 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0425 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0432 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0416 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0424 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0419 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0435 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0426 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0399 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0426 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0417 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0450 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0399 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0418 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0417 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0419 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0408 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0431 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0426 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0424 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0407 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0403 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0415 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0435 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0405 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0410 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0406 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0436 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0433 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0388 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0419 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0410 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0415 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0412 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0422 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0401 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0427\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0398 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0425 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0410 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0425 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0418 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0390 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0432 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0417 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0397 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0427 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6925<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.35MB of 1.35MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "933174d73a8a4e8d86706f1d3bb707c7",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134404-bgsrl6g5/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134404-bgsrl6g5/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>122</td></tr><tr><td>loss</td><td>0.00375</td></tr><tr><td>mean_squared_error</td><td>0.00375</td></tr><tr><td>mean_absolute_error</td><td>0.04149</td></tr><tr><td>val_loss</td><td>0.00281</td></tr><tr><td>val_mean_squared_error</td><td>0.00281</td></tr><tr><td>val_mean_absolute_error</td><td>0.04257</td></tr><tr><td>_runtime</td><td>28</td></tr><tr><td>_timestamp</td><td>1626183872</td></tr><tr><td>_step</td><td>122</td></tr><tr><td>best_val_loss</td><td>0.00279</td></tr><tr><td>best_epoch</td><td>112</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▄▄▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▄▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">rich-sweep-26</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bgsrl6g5\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bgsrl6g5</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: yx69hxl9 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">hopeful-sweep-27</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yx69hxl9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yx69hxl9</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_134445-yx69hxl9</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "16/16 [==============================] - 7s 192ms/step - loss: 0.0739 - mean_squared_error: 0.0739 - mean_absolute_error: 0.1667 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0642\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0614 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0845\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 1s 93ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0782 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0424\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0482 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0394\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0420 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0388\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0490 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0792\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 1s 92ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0713 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0515\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0431 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0370\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0496 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0618\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0410 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0480 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0423\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0392 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0408\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0382 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0416\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0362 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0402\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0317 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0375\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0450 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0683\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0496 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0357\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0350 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0481\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0408 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0359\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0314 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0521\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0410 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0350\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0355\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0322 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0351\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0301 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0351\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0289 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0334 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0381\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0311 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0308 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0399\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0314 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0461\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0339 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0397\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0309 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0371\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0350 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0351\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0305 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0349\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7357<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 2.01MB of 2.01MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ecb3c948b5214802849ebed9a276920b",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134445-yx69hxl9/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134445-yx69hxl9/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>32</td></tr><tr><td>loss</td><td>0.00175</td></tr><tr><td>mean_squared_error</td><td>0.00175</td></tr><tr><td>mean_absolute_error</td><td>0.03028</td></tr><tr><td>val_loss</td><td>0.00198</td></tr><tr><td>val_mean_squared_error</td><td>0.00198</td></tr><tr><td>val_mean_absolute_error</td><td>0.03495</td></tr><tr><td>_runtime</td><td>58</td></tr><tr><td>_timestamp</td><td>1626183943</td></tr><tr><td>_step</td><td>32</td></tr><tr><td>best_val_loss</td><td>0.0019</td></tr><tr><td>best_epoch</td><td>22</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▂▂▁▂▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▂▂▁▂▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▃▂▃▄▂▃▂▃▂▂▁▁▃▂▁▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>val_loss</td><td>▅█▂▁▁▇▃▁▅▁▂▂▂▂▁▆▁▂▁▃▁▁▁▁▁▁▁▁▂▂▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▅█▂▁▁▇▃▁▅▁▂▂▂▂▁▆▁▂▁▃▁▁▁▁▁▁▁▁▂▂▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅█▂▂▂▇▃▁▅▁▂▂▂▂▁▆▁▃▁▃▁▁▁▁▁▁▂▂▃▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">hopeful-sweep-27</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yx69hxl9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/yx69hxl9</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ag3qy8xc with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">bright-sweep-28</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ag3qy8xc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ag3qy8xc</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_134555-ag3qy8xc</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 218ms/step - loss: 0.2153 - mean_squared_error: 0.2153 - mean_absolute_error: 0.3634 - val_loss: 0.2405 - val_mean_squared_error: 0.2405 - val_mean_absolute_error: 0.3963\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.1939 - mean_squared_error: 0.1939 - mean_absolute_error: 0.3226 - val_loss: 0.1823 - val_mean_squared_error: 0.1823 - val_mean_absolute_error: 0.3230\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.1366 - mean_squared_error: 0.1366 - mean_absolute_error: 0.2506 - val_loss: 0.1377 - val_mean_squared_error: 0.1377 - val_mean_absolute_error: 0.2726\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.1064 - mean_squared_error: 0.1064 - mean_absolute_error: 0.2128 - val_loss: 0.1092 - val_mean_squared_error: 0.1092 - val_mean_absolute_error: 0.2404\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0965 - mean_squared_error: 0.0965 - mean_absolute_error: 0.2127 - val_loss: 0.0924 - val_mean_squared_error: 0.0924 - val_mean_absolute_error: 0.2210\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0785 - mean_squared_error: 0.0785 - mean_absolute_error: 0.2022 - val_loss: 0.0833 - val_mean_squared_error: 0.0833 - val_mean_absolute_error: 0.2123\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0786 - mean_squared_error: 0.0786 - mean_absolute_error: 0.2113 - val_loss: 0.0781 - val_mean_squared_error: 0.0781 - val_mean_absolute_error: 0.2085\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0723 - mean_squared_error: 0.0723 - mean_absolute_error: 0.2058 - val_loss: 0.0750 - val_mean_squared_error: 0.0750 - val_mean_absolute_error: 0.2068\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0716 - mean_squared_error: 0.0716 - mean_absolute_error: 0.2118 - val_loss: 0.0731 - val_mean_squared_error: 0.0731 - val_mean_absolute_error: 0.2055\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0704 - mean_squared_error: 0.0704 - mean_absolute_error: 0.2108 - val_loss: 0.0717 - val_mean_squared_error: 0.0717 - val_mean_absolute_error: 0.2043\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0692 - mean_squared_error: 0.0692 - mean_absolute_error: 0.2135 - val_loss: 0.0706 - val_mean_squared_error: 0.0706 - val_mean_absolute_error: 0.2029\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0707 - mean_squared_error: 0.0707 - mean_absolute_error: 0.2108 - val_loss: 0.0694 - val_mean_squared_error: 0.0694 - val_mean_absolute_error: 0.2016\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0714 - mean_squared_error: 0.0714 - mean_absolute_error: 0.2142 - val_loss: 0.0685 - val_mean_squared_error: 0.0685 - val_mean_absolute_error: 0.2002\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0655 - mean_squared_error: 0.0655 - mean_absolute_error: 0.2039 - val_loss: 0.0677 - val_mean_squared_error: 0.0677 - val_mean_absolute_error: 0.1988\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0656 - mean_squared_error: 0.0656 - mean_absolute_error: 0.2038 - val_loss: 0.0668 - val_mean_squared_error: 0.0668 - val_mean_absolute_error: 0.1975\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0669 - mean_squared_error: 0.0669 - mean_absolute_error: 0.2061 - val_loss: 0.0657 - val_mean_squared_error: 0.0657 - val_mean_absolute_error: 0.1962\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0661 - mean_squared_error: 0.0661 - mean_absolute_error: 0.2039 - val_loss: 0.0648 - val_mean_squared_error: 0.0648 - val_mean_absolute_error: 0.1949\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0652 - mean_squared_error: 0.0652 - mean_absolute_error: 0.2050 - val_loss: 0.0639 - val_mean_squared_error: 0.0639 - val_mean_absolute_error: 0.1936\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0629 - mean_squared_error: 0.0629 - mean_absolute_error: 0.1988 - val_loss: 0.0631 - val_mean_squared_error: 0.0631 - val_mean_absolute_error: 0.1923\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0627 - mean_squared_error: 0.0627 - mean_absolute_error: 0.1992 - val_loss: 0.0623 - val_mean_squared_error: 0.0623 - val_mean_absolute_error: 0.1911\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0611 - mean_squared_error: 0.0611 - mean_absolute_error: 0.1980 - val_loss: 0.0616 - val_mean_squared_error: 0.0616 - val_mean_absolute_error: 0.1898\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0653 - mean_squared_error: 0.0653 - mean_absolute_error: 0.2041 - val_loss: 0.0608 - val_mean_squared_error: 0.0608 - val_mean_absolute_error: 0.1886\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 77ms/step - loss: 0.0597 - mean_squared_error: 0.0597 - mean_absolute_error: 0.1939 - val_loss: 0.0601 - val_mean_squared_error: 0.0601 - val_mean_absolute_error: 0.1874\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0616 - mean_squared_error: 0.0616 - mean_absolute_error: 0.1971 - val_loss: 0.0592 - val_mean_squared_error: 0.0592 - val_mean_absolute_error: 0.1862\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0599 - mean_squared_error: 0.0599 - mean_absolute_error: 0.1948 - val_loss: 0.0585 - val_mean_squared_error: 0.0585 - val_mean_absolute_error: 0.1850\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0568 - mean_squared_error: 0.0568 - mean_absolute_error: 0.1891 - val_loss: 0.0577 - val_mean_squared_error: 0.0577 - val_mean_absolute_error: 0.1838\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0572 - mean_squared_error: 0.0572 - mean_absolute_error: 0.1911 - val_loss: 0.0570 - val_mean_squared_error: 0.0570 - val_mean_absolute_error: 0.1826\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0549 - mean_squared_error: 0.0549 - mean_absolute_error: 0.1869 - val_loss: 0.0562 - val_mean_squared_error: 0.0562 - val_mean_absolute_error: 0.1814\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0528 - mean_squared_error: 0.0528 - mean_absolute_error: 0.1852 - val_loss: 0.0554 - val_mean_squared_error: 0.0554 - val_mean_absolute_error: 0.1802\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0582 - mean_squared_error: 0.0582 - mean_absolute_error: 0.1929 - val_loss: 0.0546 - val_mean_squared_error: 0.0546 - val_mean_absolute_error: 0.1790\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0534 - mean_squared_error: 0.0534 - mean_absolute_error: 0.1848 - val_loss: 0.0539 - val_mean_squared_error: 0.0539 - val_mean_absolute_error: 0.1778\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0550 - mean_squared_error: 0.0550 - mean_absolute_error: 0.1849 - val_loss: 0.0532 - val_mean_squared_error: 0.0532 - val_mean_absolute_error: 0.1766\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0556 - mean_squared_error: 0.0556 - mean_absolute_error: 0.1855 - val_loss: 0.0524 - val_mean_squared_error: 0.0524 - val_mean_absolute_error: 0.1754\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0532 - mean_squared_error: 0.0532 - mean_absolute_error: 0.1865 - val_loss: 0.0517 - val_mean_squared_error: 0.0517 - val_mean_absolute_error: 0.1742\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0518 - mean_squared_error: 0.0518 - mean_absolute_error: 0.1791 - val_loss: 0.0509 - val_mean_squared_error: 0.0509 - val_mean_absolute_error: 0.1730\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 101ms/step - loss: 0.0529 - mean_squared_error: 0.0529 - mean_absolute_error: 0.1837 - val_loss: 0.0502 - val_mean_squared_error: 0.0502 - val_mean_absolute_error: 0.1718\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0511 - mean_squared_error: 0.0511 - mean_absolute_error: 0.1779 - val_loss: 0.0494 - val_mean_squared_error: 0.0494 - val_mean_absolute_error: 0.1706\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0529 - mean_squared_error: 0.0529 - mean_absolute_error: 0.1814 - val_loss: 0.0487 - val_mean_squared_error: 0.0487 - val_mean_absolute_error: 0.1694\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0501 - mean_squared_error: 0.0501 - mean_absolute_error: 0.1787 - val_loss: 0.0480 - val_mean_squared_error: 0.0480 - val_mean_absolute_error: 0.1682\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0500 - mean_squared_error: 0.0500 - mean_absolute_error: 0.1775 - val_loss: 0.0473 - val_mean_squared_error: 0.0473 - val_mean_absolute_error: 0.1670\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0469 - mean_squared_error: 0.0469 - mean_absolute_error: 0.1704 - val_loss: 0.0466 - val_mean_squared_error: 0.0466 - val_mean_absolute_error: 0.1657\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0478 - mean_squared_error: 0.0478 - mean_absolute_error: 0.1724 - val_loss: 0.0459 - val_mean_squared_error: 0.0459 - val_mean_absolute_error: 0.1645\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0450 - mean_squared_error: 0.0450 - mean_absolute_error: 0.1661 - val_loss: 0.0453 - val_mean_squared_error: 0.0453 - val_mean_absolute_error: 0.1633\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0453 - mean_squared_error: 0.0453 - mean_absolute_error: 0.1672 - val_loss: 0.0446 - val_mean_squared_error: 0.0446 - val_mean_absolute_error: 0.1621\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0446 - mean_squared_error: 0.0446 - mean_absolute_error: 0.1653 - val_loss: 0.0439 - val_mean_squared_error: 0.0439 - val_mean_absolute_error: 0.1608\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0446 - mean_squared_error: 0.0446 - mean_absolute_error: 0.1657 - val_loss: 0.0432 - val_mean_squared_error: 0.0432 - val_mean_absolute_error: 0.1596\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0423 - mean_squared_error: 0.0423 - mean_absolute_error: 0.1646 - val_loss: 0.0424 - val_mean_squared_error: 0.0424 - val_mean_absolute_error: 0.1584\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0461 - mean_squared_error: 0.0461 - mean_absolute_error: 0.1687 - val_loss: 0.0418 - val_mean_squared_error: 0.0418 - val_mean_absolute_error: 0.1571\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0421 - mean_squared_error: 0.0421 - mean_absolute_error: 0.1631 - val_loss: 0.0411 - val_mean_squared_error: 0.0411 - val_mean_absolute_error: 0.1559\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0431 - mean_squared_error: 0.0431 - mean_absolute_error: 0.1646 - val_loss: 0.0404 - val_mean_squared_error: 0.0404 - val_mean_absolute_error: 0.1547\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0405 - mean_squared_error: 0.0405 - mean_absolute_error: 0.1592 - val_loss: 0.0397 - val_mean_squared_error: 0.0397 - val_mean_absolute_error: 0.1534\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0404 - mean_squared_error: 0.0404 - mean_absolute_error: 0.1606 - val_loss: 0.0390 - val_mean_squared_error: 0.0390 - val_mean_absolute_error: 0.1522\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 99ms/step - loss: 0.0401 - mean_squared_error: 0.0401 - mean_absolute_error: 0.1582 - val_loss: 0.0383 - val_mean_squared_error: 0.0383 - val_mean_absolute_error: 0.1509\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0377 - mean_squared_error: 0.0377 - mean_absolute_error: 0.1549 - val_loss: 0.0377 - val_mean_squared_error: 0.0377 - val_mean_absolute_error: 0.1496\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0378 - mean_squared_error: 0.0378 - mean_absolute_error: 0.1558 - val_loss: 0.0370 - val_mean_squared_error: 0.0370 - val_mean_absolute_error: 0.1484\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0374 - mean_squared_error: 0.0374 - mean_absolute_error: 0.1532 - val_loss: 0.0364 - val_mean_squared_error: 0.0364 - val_mean_absolute_error: 0.1471\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0392 - mean_squared_error: 0.0392 - mean_absolute_error: 0.1536 - val_loss: 0.0357 - val_mean_squared_error: 0.0357 - val_mean_absolute_error: 0.1458\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0344 - mean_squared_error: 0.0344 - mean_absolute_error: 0.1437 - val_loss: 0.0351 - val_mean_squared_error: 0.0351 - val_mean_absolute_error: 0.1445\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0335 - mean_squared_error: 0.0335 - mean_absolute_error: 0.1443 - val_loss: 0.0344 - val_mean_squared_error: 0.0344 - val_mean_absolute_error: 0.1432\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0357 - mean_squared_error: 0.0357 - mean_absolute_error: 0.1480 - val_loss: 0.0338 - val_mean_squared_error: 0.0338 - val_mean_absolute_error: 0.1420\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0360 - mean_squared_error: 0.0360 - mean_absolute_error: 0.1490 - val_loss: 0.0332 - val_mean_squared_error: 0.0332 - val_mean_absolute_error: 0.1407\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0361 - mean_squared_error: 0.0361 - mean_absolute_error: 0.1481 - val_loss: 0.0325 - val_mean_squared_error: 0.0325 - val_mean_absolute_error: 0.1394\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0335 - mean_squared_error: 0.0335 - mean_absolute_error: 0.1434 - val_loss: 0.0319 - val_mean_squared_error: 0.0319 - val_mean_absolute_error: 0.1381\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0338 - mean_squared_error: 0.0338 - mean_absolute_error: 0.1448 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1368\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0331 - mean_squared_error: 0.0331 - mean_absolute_error: 0.1418 - val_loss: 0.0307 - val_mean_squared_error: 0.0307 - val_mean_absolute_error: 0.1355\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0333 - mean_squared_error: 0.0333 - mean_absolute_error: 0.1439 - val_loss: 0.0300 - val_mean_squared_error: 0.0300 - val_mean_absolute_error: 0.1342\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0307 - mean_squared_error: 0.0307 - mean_absolute_error: 0.1362 - val_loss: 0.0295 - val_mean_squared_error: 0.0295 - val_mean_absolute_error: 0.1329\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0318 - mean_squared_error: 0.0318 - mean_absolute_error: 0.1389 - val_loss: 0.0289 - val_mean_squared_error: 0.0289 - val_mean_absolute_error: 0.1316\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0320 - mean_squared_error: 0.0320 - mean_absolute_error: 0.1377 - val_loss: 0.0283 - val_mean_squared_error: 0.0283 - val_mean_absolute_error: 0.1303\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0296 - mean_squared_error: 0.0296 - mean_absolute_error: 0.1348 - val_loss: 0.0277 - val_mean_squared_error: 0.0277 - val_mean_absolute_error: 0.1290\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0301 - mean_squared_error: 0.0301 - mean_absolute_error: 0.1342 - val_loss: 0.0272 - val_mean_squared_error: 0.0272 - val_mean_absolute_error: 0.1277\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0300 - mean_squared_error: 0.0300 - mean_absolute_error: 0.1330 - val_loss: 0.0266 - val_mean_squared_error: 0.0266 - val_mean_absolute_error: 0.1265\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0260 - mean_squared_error: 0.0260 - mean_absolute_error: 0.1275 - val_loss: 0.0262 - val_mean_squared_error: 0.0262 - val_mean_absolute_error: 0.1252\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0262 - mean_squared_error: 0.0262 - mean_absolute_error: 0.1254 - val_loss: 0.0256 - val_mean_squared_error: 0.0256 - val_mean_absolute_error: 0.1240\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0272 - mean_squared_error: 0.0272 - mean_absolute_error: 0.1265 - val_loss: 0.0251 - val_mean_squared_error: 0.0251 - val_mean_absolute_error: 0.1227\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0217 - mean_squared_error: 0.0217 - mean_absolute_error: 0.1146 - val_loss: 0.0245 - val_mean_squared_error: 0.0245 - val_mean_absolute_error: 0.1214\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0256 - mean_squared_error: 0.0256 - mean_absolute_error: 0.1234 - val_loss: 0.0240 - val_mean_squared_error: 0.0240 - val_mean_absolute_error: 0.1201\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0269 - mean_squared_error: 0.0269 - mean_absolute_error: 0.1263 - val_loss: 0.0234 - val_mean_squared_error: 0.0234 - val_mean_absolute_error: 0.1188\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0254 - mean_squared_error: 0.0254 - mean_absolute_error: 0.1238 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1176\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0238 - mean_squared_error: 0.0238 - mean_absolute_error: 0.1183 - val_loss: 0.0224 - val_mean_squared_error: 0.0224 - val_mean_absolute_error: 0.1163\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0246 - mean_squared_error: 0.0246 - mean_absolute_error: 0.1199 - val_loss: 0.0218 - val_mean_squared_error: 0.0218 - val_mean_absolute_error: 0.1150\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0231 - mean_squared_error: 0.0231 - mean_absolute_error: 0.1172 - val_loss: 0.0213 - val_mean_squared_error: 0.0213 - val_mean_absolute_error: 0.1137\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0251 - mean_squared_error: 0.0251 - mean_absolute_error: 0.1211 - val_loss: 0.0208 - val_mean_squared_error: 0.0208 - val_mean_absolute_error: 0.1125\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0239 - mean_squared_error: 0.0239 - mean_absolute_error: 0.1188 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1112\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0224 - mean_squared_error: 0.0224 - mean_absolute_error: 0.1142 - val_loss: 0.0198 - val_mean_squared_error: 0.0198 - val_mean_absolute_error: 0.1099\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0217 - mean_squared_error: 0.0217 - mean_absolute_error: 0.1134 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1086\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0212 - mean_squared_error: 0.0212 - mean_absolute_error: 0.1106 - val_loss: 0.0189 - val_mean_squared_error: 0.0189 - val_mean_absolute_error: 0.1074\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0211 - mean_squared_error: 0.0211 - mean_absolute_error: 0.1101 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1062\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0211 - mean_squared_error: 0.0211 - mean_absolute_error: 0.1085 - val_loss: 0.0180 - val_mean_squared_error: 0.0180 - val_mean_absolute_error: 0.1049\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0193 - mean_squared_error: 0.0193 - mean_absolute_error: 0.1072 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1037\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0201 - mean_squared_error: 0.0201 - mean_absolute_error: 0.1072 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1025\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0194 - mean_squared_error: 0.0194 - mean_absolute_error: 0.1050 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1013\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0195 - mean_squared_error: 0.0195 - mean_absolute_error: 0.1056 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.1001\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - mean_absolute_error: 0.1026 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0989\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.0998 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0978\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0176 - mean_squared_error: 0.0176 - mean_absolute_error: 0.1003 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0966\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.0967 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0954\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0932 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0943\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - mean_absolute_error: 0.0936 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0932\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0168 - mean_squared_error: 0.0168 - mean_absolute_error: 0.0975 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0921\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0172 - mean_squared_error: 0.0172 - mean_absolute_error: 0.0969 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0910\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.0961 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0899\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0927 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0888\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0902 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0878\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.0905 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0867\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0147 - mean_squared_error: 0.0147 - mean_absolute_error: 0.0889 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0857\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - mean_absolute_error: 0.0911 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0847\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - mean_absolute_error: 0.0907 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0837\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0882 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0827\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0870 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0817\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0824 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0807\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0823 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0798\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0814 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0789\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0833 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0780\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0768 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0772\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0798 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0763\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0789 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0755\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0843 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0747\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0118 - mean_squared_error: 0.0118 - mean_absolute_error: 0.0774 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0738\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0777 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0730\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0811 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0722\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0776 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0714\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0769 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0706\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0717 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0699\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0710 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0692\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0727 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0685\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0744 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0679\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0708 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0672\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0727 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0664\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0703 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0658\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0711 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0651\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0677 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0645\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0686 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0639\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0713 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0633\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0699 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0627\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0694 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0621\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0734 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0615\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0675 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0609\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0663 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0604\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 1s 79ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0674 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0599\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0663 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0595\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0625 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0590\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0633 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0586\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0643 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0582\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0637 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0578\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0633 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0574\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0655 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0570\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0630 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0566\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0635 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0563\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0619 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0559\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0639 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0555\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0615 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0552\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0655 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0548\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0618 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0545\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0657 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0542\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0621 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0539\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0608 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0536\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0609 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0534\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 1s 97ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0584 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0531\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0600 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0528\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0594 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0525\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0593 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0523\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0612 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0520\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0605 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0518\n",
            "Epoch 165/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0612 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0516\n",
            "Epoch 166/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0600 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0515\n",
            "Epoch 167/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0575 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0513\n",
            "Epoch 168/200\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0603 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0510\n",
            "Epoch 169/200\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0588 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0509\n",
            "Epoch 170/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0601 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0507\n",
            "Epoch 171/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0602 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0505\n",
            "Epoch 172/200\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0556 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0503\n",
            "Epoch 173/200\n",
            "8/8 [==============================] - 1s 97ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0601 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0502\n",
            "Epoch 174/200\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0561 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0500\n",
            "Epoch 175/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0581 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0498\n",
            "Epoch 176/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0588 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0498\n",
            "Epoch 177/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0571 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0497\n",
            "Epoch 178/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0560 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0497\n",
            "Epoch 179/200\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0574 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0496\n",
            "Epoch 180/200\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0563 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0494\n",
            "Epoch 181/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0552 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0494\n",
            "Epoch 182/200\n",
            "8/8 [==============================] - 1s 100ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0558 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0492\n",
            "Epoch 183/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0554 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0490\n",
            "Epoch 184/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0569 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0488\n",
            "Epoch 185/200\n",
            "8/8 [==============================] - 1s 99ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0576 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0487\n",
            "Epoch 186/200\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0552 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0487\n",
            "Epoch 187/200\n",
            "8/8 [==============================] - 1s 97ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0552 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 188/200\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0572 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 189/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0551 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0485\n",
            "Epoch 190/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0583 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0484\n",
            "Epoch 191/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0554 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0482\n",
            "Epoch 192/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0576 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0480\n",
            "Epoch 193/200\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0527 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 194/200\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0575 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0477\n",
            "Epoch 195/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0547 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 196/200\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0544 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 197/200\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0558 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 198/200\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0545 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0474\n",
            "Epoch 199/200\n",
            "8/8 [==============================] - 1s 100ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0543 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0473\n",
            "Epoch 200/200\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0565 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7525<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.33MB of 1.33MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b2296ec8d0b84642b55e9637ca7be252",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134555-ag3qy8xc/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134555-ag3qy8xc/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00698</td></tr><tr><td>mean_squared_error</td><td>0.00698</td></tr><tr><td>mean_absolute_error</td><td>0.05606</td></tr><tr><td>val_loss</td><td>0.00342</td></tr><tr><td>val_mean_squared_error</td><td>0.00342</td></tr><tr><td>val_mean_absolute_error</td><td>0.04722</td></tr><tr><td>_runtime</td><td>157</td></tr><tr><td>_timestamp</td><td>1626184112</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00342</td></tr><tr><td>best_epoch</td><td>199</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▅▅▅▅▅▅▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▅▅▄▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">bright-sweep-28</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ag3qy8xc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ag3qy8xc</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: m0mo09hv with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">snowy-sweep-29</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/m0mo09hv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/m0mo09hv</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_134844-m0mo09hv</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 6s 233ms/step - loss: 0.2085 - mean_squared_error: 0.2085 - mean_absolute_error: 0.3532 - val_loss: 0.1857 - val_mean_squared_error: 0.1857 - val_mean_absolute_error: 0.3330\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.1337 - mean_squared_error: 0.1337 - mean_absolute_error: 0.2520 - val_loss: 0.1119 - val_mean_squared_error: 0.1119 - val_mean_absolute_error: 0.2444\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0790 - mean_squared_error: 0.0790 - mean_absolute_error: 0.1892 - val_loss: 0.0791 - val_mean_squared_error: 0.0791 - val_mean_absolute_error: 0.2075\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0700 - mean_squared_error: 0.0700 - mean_absolute_error: 0.2044 - val_loss: 0.0692 - val_mean_squared_error: 0.0692 - val_mean_absolute_error: 0.2049\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0686 - mean_squared_error: 0.0686 - mean_absolute_error: 0.2152 - val_loss: 0.0663 - val_mean_squared_error: 0.0663 - val_mean_absolute_error: 0.2054\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0719 - mean_squared_error: 0.0719 - mean_absolute_error: 0.2224 - val_loss: 0.0648 - val_mean_squared_error: 0.0648 - val_mean_absolute_error: 0.2021\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0710 - mean_squared_error: 0.0710 - mean_absolute_error: 0.2200 - val_loss: 0.0640 - val_mean_squared_error: 0.0640 - val_mean_absolute_error: 0.1975\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0653 - mean_squared_error: 0.0653 - mean_absolute_error: 0.2085 - val_loss: 0.0636 - val_mean_squared_error: 0.0636 - val_mean_absolute_error: 0.1937\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0637 - mean_squared_error: 0.0637 - mean_absolute_error: 0.2011 - val_loss: 0.0626 - val_mean_squared_error: 0.0626 - val_mean_absolute_error: 0.1909\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0619 - mean_squared_error: 0.0619 - mean_absolute_error: 0.1970 - val_loss: 0.0612 - val_mean_squared_error: 0.0612 - val_mean_absolute_error: 0.1884\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0601 - mean_squared_error: 0.0601 - mean_absolute_error: 0.1948 - val_loss: 0.0595 - val_mean_squared_error: 0.0595 - val_mean_absolute_error: 0.1859\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 1s 99ms/step - loss: 0.0574 - mean_squared_error: 0.0574 - mean_absolute_error: 0.1927 - val_loss: 0.0579 - val_mean_squared_error: 0.0579 - val_mean_absolute_error: 0.1835\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0585 - mean_squared_error: 0.0585 - mean_absolute_error: 0.1924 - val_loss: 0.0561 - val_mean_squared_error: 0.0561 - val_mean_absolute_error: 0.1811\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0532 - mean_squared_error: 0.0532 - mean_absolute_error: 0.1843 - val_loss: 0.0547 - val_mean_squared_error: 0.0547 - val_mean_absolute_error: 0.1786\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0533 - mean_squared_error: 0.0533 - mean_absolute_error: 0.1824 - val_loss: 0.0532 - val_mean_squared_error: 0.0532 - val_mean_absolute_error: 0.1761\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0501 - mean_squared_error: 0.0501 - mean_absolute_error: 0.1797 - val_loss: 0.0517 - val_mean_squared_error: 0.0517 - val_mean_absolute_error: 0.1737\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0473 - mean_squared_error: 0.0473 - mean_absolute_error: 0.1742 - val_loss: 0.0502 - val_mean_squared_error: 0.0502 - val_mean_absolute_error: 0.1713\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0524 - mean_squared_error: 0.0524 - mean_absolute_error: 0.1827 - val_loss: 0.0485 - val_mean_squared_error: 0.0485 - val_mean_absolute_error: 0.1689\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0472 - mean_squared_error: 0.0472 - mean_absolute_error: 0.1726 - val_loss: 0.0472 - val_mean_squared_error: 0.0472 - val_mean_absolute_error: 0.1664\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0490 - mean_squared_error: 0.0490 - mean_absolute_error: 0.1771 - val_loss: 0.0458 - val_mean_squared_error: 0.0458 - val_mean_absolute_error: 0.1639\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0455 - mean_squared_error: 0.0455 - mean_absolute_error: 0.1703 - val_loss: 0.0444 - val_mean_squared_error: 0.0444 - val_mean_absolute_error: 0.1615\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0405 - mean_squared_error: 0.0405 - mean_absolute_error: 0.1618 - val_loss: 0.0431 - val_mean_squared_error: 0.0431 - val_mean_absolute_error: 0.1590\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0423 - mean_squared_error: 0.0423 - mean_absolute_error: 0.1623 - val_loss: 0.0417 - val_mean_squared_error: 0.0417 - val_mean_absolute_error: 0.1565\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0418 - mean_squared_error: 0.0418 - mean_absolute_error: 0.1600 - val_loss: 0.0403 - val_mean_squared_error: 0.0403 - val_mean_absolute_error: 0.1541\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0388 - mean_squared_error: 0.0388 - mean_absolute_error: 0.1554 - val_loss: 0.0388 - val_mean_squared_error: 0.0388 - val_mean_absolute_error: 0.1516\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0412 - mean_squared_error: 0.0412 - mean_absolute_error: 0.1597 - val_loss: 0.0375 - val_mean_squared_error: 0.0375 - val_mean_absolute_error: 0.1491\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0398 - mean_squared_error: 0.0398 - mean_absolute_error: 0.1580 - val_loss: 0.0361 - val_mean_squared_error: 0.0361 - val_mean_absolute_error: 0.1466\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0371 - mean_squared_error: 0.0371 - mean_absolute_error: 0.1512 - val_loss: 0.0349 - val_mean_squared_error: 0.0349 - val_mean_absolute_error: 0.1441\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 1s 100ms/step - loss: 0.0370 - mean_squared_error: 0.0370 - mean_absolute_error: 0.1523 - val_loss: 0.0337 - val_mean_squared_error: 0.0337 - val_mean_absolute_error: 0.1415\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0318 - mean_squared_error: 0.0318 - mean_absolute_error: 0.1403 - val_loss: 0.0326 - val_mean_squared_error: 0.0326 - val_mean_absolute_error: 0.1390\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0287 - mean_squared_error: 0.0287 - mean_absolute_error: 0.1321 - val_loss: 0.0315 - val_mean_squared_error: 0.0315 - val_mean_absolute_error: 0.1365\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0318 - mean_squared_error: 0.0318 - mean_absolute_error: 0.1383 - val_loss: 0.0302 - val_mean_squared_error: 0.0302 - val_mean_absolute_error: 0.1339\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 1s 83ms/step - loss: 0.0332 - mean_squared_error: 0.0332 - mean_absolute_error: 0.1425 - val_loss: 0.0289 - val_mean_squared_error: 0.0289 - val_mean_absolute_error: 0.1314\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0274 - mean_squared_error: 0.0274 - mean_absolute_error: 0.1300 - val_loss: 0.0278 - val_mean_squared_error: 0.0278 - val_mean_absolute_error: 0.1288\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0298 - mean_squared_error: 0.0298 - mean_absolute_error: 0.1332 - val_loss: 0.0266 - val_mean_squared_error: 0.0266 - val_mean_absolute_error: 0.1263\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0276 - mean_squared_error: 0.0276 - mean_absolute_error: 0.1303 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1238\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0267 - mean_squared_error: 0.0267 - mean_absolute_error: 0.1263 - val_loss: 0.0243 - val_mean_squared_error: 0.0243 - val_mean_absolute_error: 0.1212\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0243 - mean_squared_error: 0.0243 - mean_absolute_error: 0.1230 - val_loss: 0.0233 - val_mean_squared_error: 0.0233 - val_mean_absolute_error: 0.1187\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 1s 96ms/step - loss: 0.0231 - mean_squared_error: 0.0231 - mean_absolute_error: 0.1183 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1162\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0234 - mean_squared_error: 0.0234 - mean_absolute_error: 0.1184 - val_loss: 0.0216 - val_mean_squared_error: 0.0216 - val_mean_absolute_error: 0.1137\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0223 - mean_squared_error: 0.0223 - mean_absolute_error: 0.1131 - val_loss: 0.0206 - val_mean_squared_error: 0.0206 - val_mean_absolute_error: 0.1112\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0200 - mean_squared_error: 0.0200 - mean_absolute_error: 0.1086 - val_loss: 0.0195 - val_mean_squared_error: 0.0195 - val_mean_absolute_error: 0.1087\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0212 - mean_squared_error: 0.0212 - mean_absolute_error: 0.1123 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1062\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0210 - mean_squared_error: 0.0210 - mean_absolute_error: 0.1096 - val_loss: 0.0176 - val_mean_squared_error: 0.0176 - val_mean_absolute_error: 0.1037\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0181 - mean_squared_error: 0.0181 - mean_absolute_error: 0.1041 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1013\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0184 - mean_squared_error: 0.0184 - mean_absolute_error: 0.1028 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0989\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0175 - mean_squared_error: 0.0175 - mean_absolute_error: 0.1004 - val_loss: 0.0152 - val_mean_squared_error: 0.0152 - val_mean_absolute_error: 0.0965\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0965 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0942\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.0935 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.0919\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.0938 - val_loss: 0.0132 - val_mean_squared_error: 0.0132 - val_mean_absolute_error: 0.0897\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 1s 102ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - mean_absolute_error: 0.0925 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0875\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0889 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0854\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0867 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0833\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0820 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0813\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0790 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0793\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0132 - mean_squared_error: 0.0132 - mean_absolute_error: 0.0829 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0773\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0795 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0755\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0773 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0737\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0717 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0721\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0740 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0704\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0704 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0687\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 1s 96ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0727 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0672\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0642 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0658\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0668 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0644\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0649 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0631\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0662 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0617\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 1s 96ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0638 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0605\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0628 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0593\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0642 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0583\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0613 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0573\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0580 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0564\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0616 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0554\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0597 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0546\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0584 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0540\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0576 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0534\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0555 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0528\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0569 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0521\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 1s 97ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0563 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0515\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0561 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0511\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 1s 99ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0590 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0506\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0555 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0499\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0572 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0495\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0563 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0493\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0509 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0489\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0557 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0530 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0482\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0524 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0480\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0500 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0480\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0556 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0477\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0501 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 1s 97ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0536 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0512 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0511 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0506 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0548 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 1s 96ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0499 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0516 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 1s 95ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0490 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0459\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0565 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0538 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 8214<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.16MB of 1.16MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "324c0edf2e2e4681b24142b2dd8ac48d",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134844-m0mo09hv/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_134844-m0mo09hv/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00656</td></tr><tr><td>mean_squared_error</td><td>0.00656</td></tr><tr><td>mean_absolute_error</td><td>0.05434</td></tr><tr><td>val_loss</td><td>0.00323</td></tr><tr><td>val_mean_squared_error</td><td>0.00323</td></tr><tr><td>val_mean_absolute_error</td><td>0.04571</td></tr><tr><td>_runtime</td><td>88</td></tr><tr><td>_timestamp</td><td>1626184212</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00323</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▅▅▅▅▄▄▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▅▄▄▄▄▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">snowy-sweep-29</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/m0mo09hv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/m0mo09hv</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: h74r5f0n with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">confused-sweep-30</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/h74r5f0n\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/h74r5f0n</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_135024-h74r5f0n</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 5s 214ms/step - loss: 0.1987 - mean_squared_error: 0.1987 - mean_absolute_error: 0.3413 - val_loss: 0.1855 - val_mean_squared_error: 0.1855 - val_mean_absolute_error: 0.3308\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.1307 - mean_squared_error: 0.1307 - mean_absolute_error: 0.2503 - val_loss: 0.0932 - val_mean_squared_error: 0.0932 - val_mean_absolute_error: 0.2219\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0719 - mean_squared_error: 0.0719 - mean_absolute_error: 0.1852 - val_loss: 0.0598 - val_mean_squared_error: 0.0598 - val_mean_absolute_error: 0.1876\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0662 - mean_squared_error: 0.0662 - mean_absolute_error: 0.2075 - val_loss: 0.0514 - val_mean_squared_error: 0.0514 - val_mean_absolute_error: 0.1877\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0561 - mean_squared_error: 0.0561 - mean_absolute_error: 0.2039 - val_loss: 0.0473 - val_mean_squared_error: 0.0473 - val_mean_absolute_error: 0.1807\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0506 - mean_squared_error: 0.0506 - mean_absolute_error: 0.1912 - val_loss: 0.0439 - val_mean_squared_error: 0.0439 - val_mean_absolute_error: 0.1698\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0470 - mean_squared_error: 0.0470 - mean_absolute_error: 0.1812 - val_loss: 0.0413 - val_mean_squared_error: 0.0413 - val_mean_absolute_error: 0.1601\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0413 - mean_squared_error: 0.0413 - mean_absolute_error: 0.1640 - val_loss: 0.0388 - val_mean_squared_error: 0.0388 - val_mean_absolute_error: 0.1525\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0400 - mean_squared_error: 0.0400 - mean_absolute_error: 0.1588 - val_loss: 0.0357 - val_mean_squared_error: 0.0357 - val_mean_absolute_error: 0.1458\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0349 - mean_squared_error: 0.0349 - mean_absolute_error: 0.1474 - val_loss: 0.0326 - val_mean_squared_error: 0.0326 - val_mean_absolute_error: 0.1394\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0341 - mean_squared_error: 0.0341 - mean_absolute_error: 0.1430 - val_loss: 0.0294 - val_mean_squared_error: 0.0294 - val_mean_absolute_error: 0.1332\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0298 - mean_squared_error: 0.0298 - mean_absolute_error: 0.1351 - val_loss: 0.0266 - val_mean_squared_error: 0.0266 - val_mean_absolute_error: 0.1271\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0268 - mean_squared_error: 0.0268 - mean_absolute_error: 0.1298 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1212\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0236 - mean_squared_error: 0.0236 - mean_absolute_error: 0.1208 - val_loss: 0.0220 - val_mean_squared_error: 0.0220 - val_mean_absolute_error: 0.1154\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0240 - mean_squared_error: 0.0240 - mean_absolute_error: 0.1192 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1097\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0205 - mean_squared_error: 0.0205 - mean_absolute_error: 0.1103 - val_loss: 0.0178 - val_mean_squared_error: 0.0178 - val_mean_absolute_error: 0.1043\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0187 - mean_squared_error: 0.0187 - mean_absolute_error: 0.1053 - val_loss: 0.0161 - val_mean_squared_error: 0.0161 - val_mean_absolute_error: 0.0992\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 1s 98ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.0945 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0944\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0925 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0898\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0140 - mean_squared_error: 0.0140 - mean_absolute_error: 0.0868 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0856\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0808 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0816\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 82ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0821 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0778\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0757 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0742\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 1s 84ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0715 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0710\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0709 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0681\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0612 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0654\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 1s 86ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0613 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0630\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0588 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0609\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0537 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0590\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0539 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0573\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0532 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0559\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0511 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0545\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 1s 97ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0515 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0533\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0466 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0523\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0505 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0514\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0478 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0506\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0434 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0499\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0448 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0494\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0458 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0489\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0454 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0485\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0424 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0481\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0437 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0479\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 1s 102ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0417 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0476\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0415 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0475\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0434 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0473\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0435 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0410 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0440 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0469\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 1s 96ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0436 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0470\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0452 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0469\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 1s 93ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0431 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0469\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0429 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0469\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0411 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0406 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0424 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0395 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0406 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 1s 87ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0415 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 1s 78ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0433 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0442 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0421 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0466\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 1s 80ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0413 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 1s 90ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0409 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0419 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 1s 85ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0404 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0433 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0435 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 1s 81ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0408 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0439 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 1s 92ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0407 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 1s 102ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0423 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 1s 88ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0431 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 1s 89ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0409 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 1s 94ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0400 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 1s 97ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0408 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 1s 91ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0431 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 8587<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.19MB of 1.19MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "faeffa612ee34e29997d39e6048e1ec1",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135024-h74r5f0n/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135024-h74r5f0n/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>75</td></tr><tr><td>loss</td><td>0.00361</td></tr><tr><td>mean_squared_error</td><td>0.00361</td></tr><tr><td>mean_absolute_error</td><td>0.04166</td></tr><tr><td>val_loss</td><td>0.00348</td></tr><tr><td>val_mean_squared_error</td><td>0.00348</td></tr><tr><td>val_mean_absolute_error</td><td>0.04679</td></tr><tr><td>_runtime</td><td>67</td></tr><tr><td>_timestamp</td><td>1626184291</td></tr><tr><td>_step</td><td>75</td></tr><tr><td>best_val_loss</td><td>0.00342</td></tr><tr><td>best_epoch</td><td>65</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▅▅▄▄▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▄▄▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">confused-sweep-30</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/h74r5f0n\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/h74r5f0n</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 008a6zj4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">crimson-sweep-31</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/008a6zj4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/008a6zj4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_135208-008a6zj4</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 7s 132ms/step - loss: 0.1470 - mean_squared_error: 0.1470 - mean_absolute_error: 0.2718 - val_loss: 0.0300 - val_mean_squared_error: 0.0300 - val_mean_absolute_error: 0.1493\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0356 - mean_squared_error: 0.0356 - mean_absolute_error: 0.1499 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.0977\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0206 - mean_squared_error: 0.0206 - mean_absolute_error: 0.1053 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0720\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0746 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0589\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 2s 76ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0652 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0527\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0643 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0494\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0588 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0482\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 3s 90ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0600 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0477\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0520 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0548 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0538 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0582 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0475\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0556 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 3s 90ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0522 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0565 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0571 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0470\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0557 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0514 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0470\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0527 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0502 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0470\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0465 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0470\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0492 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0522 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0522 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0480 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0466 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0482 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0506 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0495 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0482 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0482 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0476 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0498 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 3s 90ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0456 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0474\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0489 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0492 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0431 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0478 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0478 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0464 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0481 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0468 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0468\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0433 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0467\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 3s 89ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0442 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0435 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0421 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0462 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0440 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0442 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0458 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0465 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0451 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0467\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0446 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0463 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 55/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0469 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0465\n",
            "Epoch 56/200\n",
            "32/32 [==============================] - 3s 81ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0449 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 57/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0455 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 58/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0481 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 59/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0432 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 8892<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.22MB of 1.22MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "bc1a6da0ba6f4f3aadbb8acce3b7adbf",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135208-008a6zj4/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135208-008a6zj4/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>58</td></tr><tr><td>loss</td><td>0.00369</td></tr><tr><td>mean_squared_error</td><td>0.00369</td></tr><tr><td>mean_absolute_error</td><td>0.04331</td></tr><tr><td>val_loss</td><td>0.00335</td></tr><tr><td>val_mean_squared_error</td><td>0.00335</td></tr><tr><td>val_mean_absolute_error</td><td>0.04664</td></tr><tr><td>_runtime</td><td>173</td></tr><tr><td>_timestamp</td><td>1626184501</td></tr><tr><td>_step</td><td>58</td></tr><tr><td>best_val_loss</td><td>0.00333</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▃▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">crimson-sweep-31</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/008a6zj4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/008a6zj4</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: uovgiy94 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">feasible-sweep-32</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uovgiy94\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uovgiy94</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_135515-uovgiy94</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 7s 116ms/step - loss: 0.1337 - mean_squared_error: 0.1337 - mean_absolute_error: 0.2679 - val_loss: 0.0360 - val_mean_squared_error: 0.0360 - val_mean_absolute_error: 0.1469\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0382 - mean_squared_error: 0.0382 - mean_absolute_error: 0.1405 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1084\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 3s 82ms/step - loss: 0.0199 - mean_squared_error: 0.0199 - mean_absolute_error: 0.1076 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0802\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - mean_absolute_error: 0.0890 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0635\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0734 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0539\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0672 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0501\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0639 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0668 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0647 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0581 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0606 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0607 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0603 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0569 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0474\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 3s 89ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0576 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0581 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0475\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 3s 83ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0606 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0589 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0558 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0532 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0561 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 3s 80ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0577 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0477\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0533 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 3s 90ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0521 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0522 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 3s 87ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0570 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0506 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0517 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0527 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0490 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 3s 86ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0546 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0469\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 3s 85ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0513 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0471\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0495 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0485 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0506 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 3s 90ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0490 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0508 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0519 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 3s 88ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0503 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 9160<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.24MB of 1.24MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9134d35ffa484b78831caecfbefea175",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135515-uovgiy94/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135515-uovgiy94/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>38</td></tr><tr><td>loss</td><td>0.0054</td></tr><tr><td>mean_squared_error</td><td>0.0054</td></tr><tr><td>mean_absolute_error</td><td>0.04925</td></tr><tr><td>val_loss</td><td>0.00332</td></tr><tr><td>val_mean_squared_error</td><td>0.00332</td></tr><tr><td>val_mean_absolute_error</td><td>0.04632</td></tr><tr><td>_runtime</td><td>118</td></tr><tr><td>_timestamp</td><td>1626184633</td></tr><tr><td>_step</td><td>38</td></tr><tr><td>best_val_loss</td><td>0.00329</td></tr><tr><td>best_epoch</td><td>28</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">feasible-sweep-32</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uovgiy94\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/uovgiy94</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 6i4wz6pf with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fluent-sweep-33</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6i4wz6pf\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6i4wz6pf</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_135725-6i4wz6pf</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 6s 152ms/step - loss: 0.1846 - mean_squared_error: 0.1846 - mean_absolute_error: 0.3174 - val_loss: 0.0201 - val_mean_squared_error: 0.0201 - val_mean_absolute_error: 0.1097\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0251 - mean_squared_error: 0.0251 - mean_absolute_error: 0.1279 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0942\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 2s 97ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - mean_absolute_error: 0.0997 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0680\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 1s 92ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0708 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0532\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 1s 92ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0635 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0495\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0588 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0497\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 1s 82ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0556 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0494\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0527 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0500\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0585 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0497\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0523 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0488\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0540 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0486\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0525 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0479\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0525 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0477\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0461 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0478\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0487 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0484\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 1s 90ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0522 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0473\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 1s 85ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0477 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0478\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 1s 92ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0451 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0472\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0453 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0446 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0457 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0467\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0449 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0433 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0465\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 1s 93ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0443 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0468\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0469 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0466\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0465 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0460\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0448 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0429 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0460\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 1s 92ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0444 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0452 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0410 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0399 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0440 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0424 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0452\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0406 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 1s 84ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0420 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0406 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0453\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0404 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0501\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 1s 89ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0416 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0466\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0352 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0465\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0420 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0374 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0416 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0467\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0387 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0446\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0420 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0444\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 1s 83ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0402 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 1s 86ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0384 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 1s 87ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0371 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 1s 88ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0384 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 1s 91ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0385 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0447\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 9356<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.32MB of 1.32MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "554708faca0e415f888da3866ba588b3",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135725-6i4wz6pf/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135725-6i4wz6pf/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00284</td></tr><tr><td>mean_squared_error</td><td>0.00284</td></tr><tr><td>mean_absolute_error</td><td>0.03844</td></tr><tr><td>val_loss</td><td>0.00304</td></tr><tr><td>val_mean_squared_error</td><td>0.00304</td></tr><tr><td>val_mean_absolute_error</td><td>0.04471</td></tr><tr><td>_runtime</td><td>83</td></tr><tr><td>_timestamp</td><td>1626184728</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.003</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▄▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">fluent-sweep-33</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6i4wz6pf\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6i4wz6pf</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 32x7w5y4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">exalted-sweep-34</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/32x7w5y4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/32x7w5y4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_135900-32x7w5y4</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "32/32 [==============================] - 6s 42ms/step - loss: 0.1035 - mean_squared_error: 0.1035 - mean_absolute_error: 0.2183 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0609\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0453 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0529\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0375 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0480\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0365 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0478\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0353 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0514\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0330 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0484\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0337 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0464\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0344 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0459\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0318 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0314 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0467\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0316 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0305 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0320 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0471\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0323 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0443\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0313 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0305 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0316 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0299 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0432\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0288 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0432\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0298 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0429\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0295 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0429\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0321 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0428\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0425\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0307 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0426\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0292 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0284 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0432\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0279 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0417\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0282 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0421\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0278 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0410\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0272 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0408\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0268 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0405\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0274 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0426\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0265 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0279 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0451\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0264 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0398\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0273 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0402\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0288 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0404\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0261 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0398\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0259 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0404\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0272 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0394\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0265 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0392\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0269 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0392\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0249 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0250 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0403\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0270 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0426\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0281 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0390\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0259 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0382\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0387\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0252 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0413\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0282 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0380\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0246 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0379\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0402\n",
            "Epoch 55/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0253 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0376\n",
            "Epoch 56/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0241 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0373\n",
            "Epoch 57/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0251 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0372\n",
            "Epoch 58/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0245 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0368\n",
            "Epoch 59/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0237 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0386\n",
            "Epoch 60/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0248 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0371\n",
            "Epoch 61/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0234 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0373\n",
            "Epoch 62/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.8791e-04 - mean_squared_error: 8.8791e-04 - mean_absolute_error: 0.0227 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0369\n",
            "Epoch 63/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0240 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0364\n",
            "Epoch 64/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0238 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 65/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0366\n",
            "Epoch 66/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0253 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0359\n",
            "Epoch 67/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0244 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n",
            "Epoch 68/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0244 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0359\n",
            "Epoch 69/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 9.1955e-04 - mean_squared_error: 9.1955e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0363\n",
            "Epoch 70/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0245 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0371\n",
            "Epoch 71/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0237 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0356\n",
            "Epoch 72/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 7.9248e-04 - mean_squared_error: 7.9248e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0358\n",
            "Epoch 73/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0238 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 74/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0235 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0356\n",
            "Epoch 75/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0355\n",
            "Epoch 76/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.5954e-04 - mean_squared_error: 9.5954e-04 - mean_absolute_error: 0.0231 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0368\n",
            "Epoch 77/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.3000e-04 - mean_squared_error: 9.3000e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0354\n",
            "Epoch 78/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0243 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0351\n",
            "Epoch 79/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.1801e-04 - mean_squared_error: 9.1801e-04 - mean_absolute_error: 0.0221 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0352\n",
            "Epoch 80/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.4664e-04 - mean_squared_error: 9.4664e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0349\n",
            "Epoch 81/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0230 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0347\n",
            "Epoch 82/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.4010e-04 - mean_squared_error: 8.4010e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0355\n",
            "Epoch 83/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0350\n",
            "Epoch 84/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0238 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0379\n",
            "Epoch 85/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0230 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0346\n",
            "Epoch 86/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.0287e-04 - mean_squared_error: 9.0287e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0351\n",
            "Epoch 87/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 9.8987e-04 - mean_squared_error: 9.8987e-04 - mean_absolute_error: 0.0228 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0346\n",
            "Epoch 88/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.6225e-04 - mean_squared_error: 8.6225e-04 - mean_absolute_error: 0.0214 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0357\n",
            "Epoch 89/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0239 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0357\n",
            "Epoch 90/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.5166e-04 - mean_squared_error: 9.5166e-04 - mean_absolute_error: 0.0232 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0358\n",
            "Epoch 91/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.7418e-04 - mean_squared_error: 8.7418e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0344\n",
            "Epoch 92/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.6290e-04 - mean_squared_error: 9.6290e-04 - mean_absolute_error: 0.0226 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0349\n",
            "Epoch 93/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.9509e-04 - mean_squared_error: 8.9509e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0349\n",
            "Epoch 94/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 8.6305e-04 - mean_squared_error: 8.6305e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0361\n",
            "Epoch 95/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 8.5650e-04 - mean_squared_error: 8.5650e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0353\n",
            "Epoch 96/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0236 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0345\n",
            "Epoch 97/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 9.0699e-04 - mean_squared_error: 9.0699e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0344\n",
            "Epoch 98/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.6376e-04 - mean_squared_error: 8.6376e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0343\n",
            "Epoch 99/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 8.8189e-04 - mean_squared_error: 8.8189e-04 - mean_absolute_error: 0.0217 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0346\n",
            "Epoch 100/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 8.8593e-04 - mean_squared_error: 8.8593e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0341\n",
            "Epoch 101/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 9.9627e-04 - mean_squared_error: 9.9627e-04 - mean_absolute_error: 0.0230 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0338\n",
            "Epoch 102/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.4602e-04 - mean_squared_error: 9.4602e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0339\n",
            "Epoch 103/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 8.8915e-04 - mean_squared_error: 8.8915e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0343\n",
            "Epoch 104/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 7.2181e-04 - mean_squared_error: 7.2181e-04 - mean_absolute_error: 0.0197 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0360\n",
            "Epoch 105/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 8.6812e-04 - mean_squared_error: 8.6812e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0344\n",
            "Epoch 106/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.1425e-04 - mean_squared_error: 9.1425e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0340\n",
            "Epoch 107/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0232 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 108/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 7.2108e-04 - mean_squared_error: 7.2108e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0365\n",
            "Epoch 109/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.5090e-04 - mean_squared_error: 8.5090e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0337\n",
            "Epoch 110/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.6543e-04 - mean_squared_error: 8.6543e-04 - mean_absolute_error: 0.0211 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0335\n",
            "Epoch 111/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 7.8394e-04 - mean_squared_error: 7.8394e-04 - mean_absolute_error: 0.0202 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0358\n",
            "Epoch 112/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.6931e-04 - mean_squared_error: 9.6931e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0339\n",
            "Epoch 113/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.0257e-04 - mean_squared_error: 8.0257e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0335\n",
            "Epoch 114/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.0535e-04 - mean_squared_error: 8.0535e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0335\n",
            "Epoch 115/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.3237e-04 - mean_squared_error: 8.3237e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0341\n",
            "Epoch 116/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.1069e-04 - mean_squared_error: 9.1069e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0333\n",
            "Epoch 117/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.3371e-04 - mean_squared_error: 9.3371e-04 - mean_absolute_error: 0.0225 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0337\n",
            "Epoch 118/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 7.5398e-04 - mean_squared_error: 7.5398e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0332\n",
            "Epoch 119/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.4291e-04 - mean_squared_error: 8.4291e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0331\n",
            "Epoch 120/200\n",
            "32/32 [==============================] - 1s 16ms/step - loss: 8.6351e-04 - mean_squared_error: 8.6351e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0332\n",
            "Epoch 121/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 7.3553e-04 - mean_squared_error: 7.3553e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0332\n",
            "Epoch 122/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.4123e-04 - mean_squared_error: 8.4123e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0338\n",
            "Epoch 123/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 7.7508e-04 - mean_squared_error: 7.7508e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0341\n",
            "Epoch 124/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.7764e-04 - mean_squared_error: 8.7764e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0333\n",
            "Epoch 125/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 7.5067e-04 - mean_squared_error: 7.5067e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0332\n",
            "Epoch 126/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.4755e-04 - mean_squared_error: 8.4755e-04 - mean_absolute_error: 0.0212 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0331\n",
            "Epoch 127/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 7.2978e-04 - mean_squared_error: 7.2978e-04 - mean_absolute_error: 0.0203 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0335\n",
            "Epoch 128/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 7.6880e-04 - mean_squared_error: 7.6880e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0341\n",
            "Epoch 129/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 9.4546e-04 - mean_squared_error: 9.4546e-04 - mean_absolute_error: 0.0219 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0331\n",
            "Epoch 130/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 9.0230e-04 - mean_squared_error: 9.0230e-04 - mean_absolute_error: 0.0210 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0346\n",
            "Epoch 131/200\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 8.1743e-04 - mean_squared_error: 8.1743e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0335\n",
            "Epoch 132/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 8.0663e-04 - mean_squared_error: 8.0663e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0331\n",
            "Epoch 133/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 8.1668e-04 - mean_squared_error: 8.1668e-04 - mean_absolute_error: 0.0207 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0332\n",
            "Epoch 134/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 8.8026e-04 - mean_squared_error: 8.8026e-04 - mean_absolute_error: 0.0220 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0332\n",
            "Epoch 135/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 7.6454e-04 - mean_squared_error: 7.6454e-04 - mean_absolute_error: 0.0201 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0332\n",
            "Epoch 136/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 7.2190e-04 - mean_squared_error: 7.2190e-04 - mean_absolute_error: 0.0199 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0339\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 9581<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.82MB of 1.82MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "27fb6a913598452a80feb689348c1784",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135900-32x7w5y4/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_135900-32x7w5y4/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>135</td></tr><tr><td>loss</td><td>0.00077</td></tr><tr><td>mean_squared_error</td><td>0.00077</td></tr><tr><td>mean_absolute_error</td><td>0.0203</td></tr><tr><td>val_loss</td><td>0.00176</td></tr><tr><td>val_mean_squared_error</td><td>0.00176</td></tr><tr><td>val_mean_absolute_error</td><td>0.03392</td></tr><tr><td>_runtime</td><td>74</td></tr><tr><td>_timestamp</td><td>1626184814</td></tr><tr><td>_step</td><td>135</td></tr><tr><td>best_val_loss</td><td>0.00171</td></tr><tr><td>best_epoch</td><td>125</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▅▄▄▃▃▃▃▂▂▂▂▃▂▂▂▂▁▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▅▄▄▃▃▃▃▂▂▂▂▃▂▂▂▂▁▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▅▅▅▄▄▄▃▃▃▃▃▃▃▃▂▃▂▃▂▂▂▂▂▂▂▁▂▂▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▅▄▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▁▂▁▂▂▁▁▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▅▄▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▁▂▁▂▂▁▁▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▆▅▅▅▄▅▄▄▄▃▃▃▄▃▃▂▂▂▂▂▂▂▃▂▂▂▁▁▂▂▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">exalted-sweep-34</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/32x7w5y4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/32x7w5y4</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 37eptz0w with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">exalted-sweep-35</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/d67zmip9</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37eptz0w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37eptz0w</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_140029-37eptz0w</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 209ms/step - loss: 0.1665 - mean_squared_error: 0.1665 - mean_absolute_error: 0.3133 - val_loss: 0.1438 - val_mean_squared_error: 0.1438 - val_mean_absolute_error: 0.2913\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.1031 - mean_squared_error: 0.1031 - mean_absolute_error: 0.2172 - val_loss: 0.0777 - val_mean_squared_error: 0.0777 - val_mean_absolute_error: 0.2030\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0624 - mean_squared_error: 0.0624 - mean_absolute_error: 0.1705 - val_loss: 0.0513 - val_mean_squared_error: 0.0513 - val_mean_absolute_error: 0.1719\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0491 - mean_squared_error: 0.0491 - mean_absolute_error: 0.1773 - val_loss: 0.0444 - val_mean_squared_error: 0.0444 - val_mean_absolute_error: 0.1708\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0532 - mean_squared_error: 0.0532 - mean_absolute_error: 0.1962 - val_loss: 0.0414 - val_mean_squared_error: 0.0414 - val_mean_absolute_error: 0.1666\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0476 - mean_squared_error: 0.0476 - mean_absolute_error: 0.1837 - val_loss: 0.0392 - val_mean_squared_error: 0.0392 - val_mean_absolute_error: 0.1591\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0427 - mean_squared_error: 0.0427 - mean_absolute_error: 0.1691 - val_loss: 0.0376 - val_mean_squared_error: 0.0376 - val_mean_absolute_error: 0.1523\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0397 - mean_squared_error: 0.0397 - mean_absolute_error: 0.1595 - val_loss: 0.0356 - val_mean_squared_error: 0.0356 - val_mean_absolute_error: 0.1468\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0379 - mean_squared_error: 0.0379 - mean_absolute_error: 0.1545 - val_loss: 0.0335 - val_mean_squared_error: 0.0335 - val_mean_absolute_error: 0.1419\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0331 - mean_squared_error: 0.0331 - mean_absolute_error: 0.1439 - val_loss: 0.0315 - val_mean_squared_error: 0.0315 - val_mean_absolute_error: 0.1372\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0332 - mean_squared_error: 0.0332 - mean_absolute_error: 0.1433 - val_loss: 0.0292 - val_mean_squared_error: 0.0292 - val_mean_absolute_error: 0.1325\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0312 - mean_squared_error: 0.0312 - mean_absolute_error: 0.1378 - val_loss: 0.0270 - val_mean_squared_error: 0.0270 - val_mean_absolute_error: 0.1280\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0281 - mean_squared_error: 0.0281 - mean_absolute_error: 0.1294 - val_loss: 0.0252 - val_mean_squared_error: 0.0252 - val_mean_absolute_error: 0.1236\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0289 - mean_squared_error: 0.0289 - mean_absolute_error: 0.1302 - val_loss: 0.0235 - val_mean_squared_error: 0.0235 - val_mean_absolute_error: 0.1193\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0258 - mean_squared_error: 0.0258 - mean_absolute_error: 0.1237 - val_loss: 0.0217 - val_mean_squared_error: 0.0217 - val_mean_absolute_error: 0.1150\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0261 - mean_squared_error: 0.0261 - mean_absolute_error: 0.1262 - val_loss: 0.0202 - val_mean_squared_error: 0.0202 - val_mean_absolute_error: 0.1109\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0230 - mean_squared_error: 0.0230 - mean_absolute_error: 0.1126 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1069\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0210 - mean_squared_error: 0.0210 - mean_absolute_error: 0.1108 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1030\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.1055 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0993\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.1027 - val_loss: 0.0148 - val_mean_squared_error: 0.0148 - val_mean_absolute_error: 0.0956\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0190 - mean_squared_error: 0.0190 - mean_absolute_error: 0.1013 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0921\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0168 - mean_squared_error: 0.0168 - mean_absolute_error: 0.0972 - val_loss: 0.0128 - val_mean_squared_error: 0.0128 - val_mean_absolute_error: 0.0888\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0902 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0856\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0142 - mean_squared_error: 0.0142 - mean_absolute_error: 0.0872 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0828\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0856 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0800\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0138 - mean_squared_error: 0.0138 - mean_absolute_error: 0.0862 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0772\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0120 - mean_squared_error: 0.0120 - mean_absolute_error: 0.0790 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0747\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0786 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0723\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0790 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0700\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0702 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0679\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0099 - mean_squared_error: 0.0099 - mean_absolute_error: 0.0714 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0660\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0678 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0641\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0712 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0622\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0088 - mean_squared_error: 0.0088 - mean_absolute_error: 0.0645 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0607\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0667 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0593\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0597 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0581\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0602 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0569\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0599 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0558\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0592 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0548\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0604 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0539\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0558 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0531\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0568 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0523\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0571 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0515\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0542 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0508\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0529 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0501\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0544 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0496\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0588 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0491\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0555 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0488\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0518 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0485\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0515 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0481\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0552 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0476\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0527 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0522 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0472\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0527 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0470\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0516 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0468\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0492 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0543 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0464\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0503 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0462\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0500 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0503 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0534 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0504 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0518 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0515 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0474 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0504 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0539 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0466 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0530 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0457\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0518 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0456\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0489 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0455\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0477 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0455\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0513 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0487 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0462 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0503 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0503 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0453 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0473 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0473 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0499 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0483 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0485 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0510 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0471 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0490 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0516 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0461 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0495 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0471 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0458 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0464 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0464 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0472 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0483 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0464 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0478 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0474 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0439 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0460 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0476 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0481 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0449 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0471 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0487 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0465 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0467 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0495 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0456 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0452 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0447 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0495 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0465 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0476 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0475 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0487 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0506 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0479 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0439 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0452 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 10060<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.20MB of 1.20MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d4213b841bee41b386690c38c3c82699",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_140029-37eptz0w/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_140029-37eptz0w/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>119</td></tr><tr><td>loss</td><td>0.00489</td></tr><tr><td>mean_squared_error</td><td>0.00489</td></tr><tr><td>mean_absolute_error</td><td>0.04692</td></tr><tr><td>val_loss</td><td>0.00318</td></tr><tr><td>val_mean_squared_error</td><td>0.00318</td></tr><tr><td>val_mean_absolute_error</td><td>0.04514</td></tr><tr><td>_runtime</td><td>29</td></tr><tr><td>_timestamp</td><td>1626184858</td></tr><tr><td>_step</td><td>119</td></tr><tr><td>best_val_loss</td><td>0.00318</td></tr><tr><td>best_epoch</td><td>109</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▄▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">exalted-sweep-35</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37eptz0w\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/37eptz0w</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: urycm85l with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "20756ab678e046abb5e0b7d16d95412f",
            "3e719d4839784132aa587057f8778d08",
            "a0ab24a9acaa44328281f1599dc31a10",
            "58c9a97e6e854d25a54740996ff24e21",
            "9860ccaddced4679a720f90d1de93d2d",
            "e72e491f606e4d979d0a0e21ea5f0360",
            "8abae4718b494216bc5c09eb430c175a",
            "2002ecb1b7c2466fb621ff5ff430c85b",
            "01dadb9be03b4f209010b640bcb28d43",
            "b8865fae83cc434dbf4c43d93fda0276",
            "04eda491c13547afbd884c04dcd0cb8d",
            "16fbc22d216b4339b7a16a47d04f24e6",
            "61b48de56a3748dc81e76f904959471a",
            "10c745d10aab4e61815159ac2f5f2f26",
            "3fc8d360c72944b8abde30a7961f48eb",
            "b61b5094713c43f5a9ffb711b778d4c0",
            "c1910973cd0842e68c3b370824410b38",
            "ec7dbf454e774bf1a1e8ec1df22369f7",
            "f76e7f4315ce471f91b805bafa3a7178",
            "6f5aea43a530436a8d2cef3df4e73d8d",
            "ce070b3918a940f69a968c5ad1931a3b",
            "f0d1cfcc850b4f9f9ae4524cd301e72e",
            "0b05c7fbfda243e292585519b92927da",
            "95fc8f2e7d31459896d9027b37e2e82e",
            "32a49d7133c542949106fc78d00d659a",
            "5c758bfb256e4361885201466b8e2ff8",
            "7e231c85d4604d4296332e6ec00f6f31",
            "9817bf1aa5924d778ba74734088620d7",
            "6348bce801734efeb55a1c52ff1f1316",
            "369f662464be4d3abf33611e48a74039",
            "3f8e1d08177c4f2a8bd6ea799983c6e8",
            "c6de9ec6415c4183950c2a7eedf49f7f",
            "faa74a3315004394a591167d1e3d6ba6",
            "25926632769647bdb14a9604b17393be",
            "6eb1fe430fa04e7092e0ad87c0ca0243",
            "bd3fac98b0a24e22823e428bb4b2c795",
            "9802418d5782437eb8195b6bf3655d6d",
            "e472073f2e5046749475dfd0e3f9c1cf",
            "783c51c61ca7427fbd5ab055a1332e63",
            "c001c3131b7b43868ed59c24614966d2",
            "bcb1f23fc53049aa80194edf88eac4e3",
            "a280d53ee9b047f1961201138baff5ba",
            "52e8e48c35dd46e2be83c159d3e543ef",
            "cbcc15fe9a4b4c6abba0c90012ed6232",
            "18d79512f7c74ab7a5a2b6f15a398e6a",
            "a69c331e9edf43f9a9a568e7ea9fb397",
            "1a928369c88b45b79aa8afdc1b258bd7",
            "6b3c0f567b264917b0b228aaa625a7d3",
            "366bcca61424412fa9ecdfd0b7df437e",
            "330fe1b886b6445b85b4c4645f76c708",
            "eba1d9a60f59414c95bde590ff8c3177",
            "0b3ccb9df8c649f896197a8c327c9bb1",
            "1b68f5de9d634b37ad02fbeab582895c",
            "9ceebf9592dc46c7a65632a4c0e36a10",
            "2494e71bc4f74a43a9ed32815aca5e90",
            "2d3ac378ccc349bc8da38f698accffe2",
            "06c3d2d2d1894e54a121635f1fbb6fdf",
            "9d80f985270f42d1b718e66deb29db6c",
            "dc49bca96ed24230a2ad3ced222f7c20",
            "306c305000704a92881a07bd31815bb4",
            "4bf34d52882649fb9c819b097a5c7d82",
            "9f1af25095e64fdba1e54fe8b1d9206a",
            "7ea2ae6f568942fb9f11968d72477d74",
            "a9c5973f69ff42138a9d89a30950356c",
            "41c8e764a04345c69f14522a0955d931",
            "b3158c4665f04003a5298eaccdccbd52",
            "5967beea00894d869b450c152b51fa1c",
            "0a7155789673414694478dd8eb80a059",
            "9d63df14650042f59a9973d64ca5e161",
            "4a0230c6df5c4fe6948b21a3dec4e19f",
            "56bb42d37f524c3090d18378779fdf4f",
            "f5b57803ea3f487488cb29d1d163d7fc",
            "f603353f417c407083d762a8e8ed3bb2",
            "dd018a3b1bac4e26a79a82d333b7604d",
            "bd234a919f424dfc8bb93980b0d8d12f",
            "5978259a71a04424b477d72d72af1f75",
            "4ee656fd111e40268deac1c13ba639a4",
            "d5572778dee6420bb6fa0818c31660e6",
            "8bd3289223014f6e91d99b966662142c",
            "df31ced5cb0c48818fd5d8dd975482a5",
            "2778090bb4f446a98469d6267817395f",
            "2939320a02064ae0a6409e70f537a824",
            "7ad435d11eae4f379ae20959b628f900",
            "389e6f90b89940508514e5447b8a1b96",
            "8ef92b9aca074641bf554e3bae8f0a79",
            "932622aa50614267b7b97d94141139e8",
            "49297b34403348ffb240e07d98697ba0",
            "ed557ead610e4ea48245466acd4513b3",
            "ead89cb9c7914a978480fa8b3a0c85a9",
            "230b7e5275e8408ab670782fd5954522",
            "d99fe69f1c4948aca3d9f69a16ea3686",
            "716c0c67d26c456da7a513e2f313418d",
            "4655a6f7c602482da9dfa9f83a537e0d",
            "5346791e54a54df9bb7774025295b681",
            "4965b7dad46347a48bb16fafa7d3c9aa",
            "0d78d325ea484c90895c9a99fde2c290",
            "5c4fea340ab4482cbb0ac17dc88d180c",
            "499f38520d3d42738106574b91a5b7f8",
            "25f29a441f1c4c4fa48697fd992f3896",
            "6cba86a848b548fd91b9c7541b4ee7ac",
            "20a0cbd9440d465291895eb61097da63",
            "2b9866b0636a4fd69bfd1e0ba6ffabdc",
            "a33938bbf602402b9f04279b7e0eb0ee",
            "a2b105123d474abe801001c5a387367c",
            "0e24cc2c12cf4f4c84b9790aaa0afc3f",
            "d68985eea74644b6a4d5820a5261834f",
            "60a3c99d94274a108b61d4187c452290",
            "9425674e6e7a429d8704c5c70f2970f9",
            "b5b9f151f16d45ee81fea9e2929cf39c",
            "c5e2a8e90a1648bab39a4804fde40650",
            "93bc78f17cfe4faf8f047084cf5132bb",
            "363154ee27ee403b87ae1fb44d74ecb2",
            "f652e48e0fa640af8d464e7f02ccc37d",
            "c45c3f5de6344a30a04fbd614115a3b2",
            "a1bba9c199844982b435a03072eaacb0",
            "01dda3d827244e7d9a0a119ae2cc1a64",
            "e4017344707347bd8559d1c2ea981473",
            "56d422bafaa940648f7ba7947a7e3fe2",
            "2bdb7e7467584e90a7f003682173d4ed",
            "8535d697538e4bed99038880b55b1514",
            "88c96d0486334f538927aba982445d1b",
            "9c6ab8f0bc2f48eba1680a2488bcc085",
            "32b535dd5d8844b8b37725a35507dec3",
            "9d76e2138a824401ba141b4f35028ff6",
            "1d7b0756e32e4fcbbe5afd8098bb36a6",
            "203bdd231b7b424f9209c8e836347fc8",
            "3eda1c1662364ca88613f78d10a2f52f",
            "ac7bb4bb5ec94a2e822d9ef2327c9c38",
            "8e98ec4a27eb43d1ba1ef6524e92943a",
            "350f90aa274845bbabcaf1703aba2bb0",
            "c8c9615b2f7344d096ef5cbf2d1a918d",
            "72bcd0fc2d9b4e3181d01858a42ed5d1",
            "bc9e905ff95f4432b1c475dc46a35a15",
            "7cf615d9f4a94d7f82b49efa6997f486",
            "8c2246841a434019a273664f5bbb566b",
            "0f3dd2b9ac514691b1b12f34d79d4ecc",
            "882e73fc3276429c946803063e73b07b",
            "d94456d536d94131ac6164f49af4fe31",
            "fac213170ea643e9a5738c383a77e939",
            "c6a35e907d2243588b50cac4c7cd3ecf",
            "932a19e9454147d0b44758e43cf8c19f",
            "5e3fb3f6604a49f0ac38dd1a7c8e6931",
            "57b30185b37b455ba3610df8bef804c1",
            "2c950261842c4b9f9936ce11960fcea8",
            "b8b6e713393e451b9a5c4547eb5dc31b",
            "2382dc60bdc9401c95b3c9285dc6d512",
            "57484f8447ee4cb3b3b1b6c14896166b",
            "a95ef89c55e148748a904c45a92f5aa1",
            "794505b29e094a4bb2f935aeff29d8ff",
            "d552a638d1124b02af1aaf335ea020fd",
            "feb28ee617314565b291a166704a93ff",
            "d5d3b73ea0734d40a84c51c6b6512b9e",
            "242faad1f7bc418a99475ec00e9d22da",
            "a22bba5dd0af45138806bb6e408de355",
            "4932bd307de6484799476cf60ef2bd1e",
            "fac9030468e64893bc1f6d9acd36f48b",
            "e4debe77fc5c46e79473ee4946b4a3b2",
            "de2a4be9f2b04ae792309895fc498e2b",
            "a337c4b6beed4f37b9960860fffebe29",
            "9d236e31ab18464c972aed1cc056895c",
            "1a0127476b824a25973da79b3d736d18",
            "dc10d28623454df0aa87b711e3f3e2da",
            "f0016cfb0af24645a924e663e5d5b25d",
            "f4bd6a486ea742d396d8994d248d1700",
            "1b4639849faf4d7d8c289e2f8c18218b",
            "868f75264914453cbc9ca962cf6f3bc3",
            "3649b2d18f8743b482627103961dc3d6",
            "6b798bfe11c04dd7919b79e36e4d53b9",
            "57750a884e4748aa9c75dbe3abd600b1",
            "5907b655af38484da3bd13a35db8c562",
            "b4240f41689e4428b86e40c1b4c7ef87",
            "796f8726ddd344bc8e266ba07db68669",
            "93814c25c3c04911a64c1d361c4fb071",
            "8d78a9275e584f47847ffdc7703113f6",
            "50a90e5460574bac95ac0475f4be83a0",
            "779e47bffab541a3824fcaa59d468ef1",
            "c60d047e8c6743a48801c8f36db15e9b",
            "6e6e83d001ac42ec953a9f8059fe681e",
            "6ad45961b0fd4ce7b7ebb1c2efca7bde",
            "1e78c50950ff41049439c649b4c90b86",
            "40e6b53a2cda4ca198d7a1e09051fc4f",
            "c1c11c308982459bae5e01f3c0672867",
            "ddfee6fe102340af9e6ad82ae27128a5",
            "2bfa7b06db4b442ca46d681a2385cf85",
            "bf2d41ef0044482997dcfebafe4995a9",
            "e7a22503252d4fae9bf99b97bc492e04",
            "16d889a06a9247bf83ed7174308216d3",
            "f3ec0ee174344674b23be832eeedbbc0",
            "265fdcb77cda4ca1a1b2a1c95b839ff7",
            "5c4598ff87f74e40b7ed08e01552b943",
            "80f443cd4591430ea3e377a965d38950",
            "99c243318bad46d28a238bef76e40f06",
            "f986de0ce6d04d1ea84657d84894e88d",
            "574b910a791b41ea9a85b9e394758cfd",
            "a124e40c055047859380f43df88a623c",
            "5f40707d0faf41118882a39765ec4c81",
            "227d727dfea8438c9e100d2c31b86d4d",
            "6870432252a949db9630468edab46c06",
            "2a8eb05de72e4369a918e061bd6f5a15",
            "d616c8e9ee4c42bc9c07d3e13b55a2c2",
            "933174d73a8a4e8d86706f1d3bb707c7",
            "e90578bb1eff4fa9ac5b9a0f74130b72",
            "cda02a2affd448d59be4b0ca57b6f272",
            "e1242c3959ca4a4a8f53bba265ac6649",
            "49942c1519924ee68f252d044e2c670e",
            "5cfdfdca798c4fbcb664fe905c99d64c",
            "05b72ffe6e8f440db45d0d96c86001f1",
            "178a5284ebe646d5a4e4977e9274fde1",
            "ecb3c948b5214802849ebed9a276920b",
            "23a9650ae3da49a79fee12ea1ce170f7",
            "90b26e7271ed48b682b4bf7d079b27d8",
            "058a6095aa764e7fa4bcc07b51e8a3e0",
            "31981c77f0944b1ba4402f2c738de5f0",
            "51ca652409f44a938b03941566c6eb94",
            "8592649166724a6bb13b452b01a7f6de",
            "550fb0a7ad09415989839449fc90e33c",
            "b2296ec8d0b84642b55e9637ca7be252",
            "38d89766f8fd48f68b24ab5c8119f2ee",
            "b3e14f8192ee49acb70c7a5a7d32f3d6",
            "252eed18fa8f4c19b7f6e0ee89ebcdb0",
            "2c7b32fc603b44e3abbda159a8423b35",
            "b7c68694ad53486a922ff40d541857c9",
            "b9c8d99d1813463599068fcf89bd7e8c",
            "d5ef589dbbf3483496dcab583d713f97",
            "324c0edf2e2e4681b24142b2dd8ac48d",
            "c66bf49fb37d4d738185a8eb15e96b60",
            "7c70ad5589444cc1911704781599322b",
            "e2f85409a43348bcbee3f3fd94544bcf",
            "2e593b7e075a483ba6957643bca192da",
            "0594749573664af18c149d1cd2e1d616",
            "d81353164d16497881435eca5bb22dd0",
            "6e619c9847294b0280abef574c206004",
            "faeffa612ee34e29997d39e6048e1ec1",
            "0572e95200d949d6b13749441459172a",
            "a1dc446a35a34b559ef0d7dfd1c35057",
            "874222a67e86468d83ca390f0ae0c55c",
            "d028a1dd7e8842b78ebbf54da5b3268f",
            "3f9eb1996b70450dbc93204d2598f388",
            "7a0fe3f310c04292bf60d7b96970698c",
            "dedffb7f360b43a7b7c1caa5e1bfa975",
            "bc1a6da0ba6f4f3aadbb8acce3b7adbf",
            "a956e1ade60a40038b45f8009cc7279d",
            "2da2ff8b0efc47df9cfba5c19041d4a0",
            "fd4aa5cb80a54607a7057e15661bbf9b",
            "c6c85f41eb2e4f13a630986f87eec7cb",
            "cd72e52bd64a41edbfbb88ed7e114abe",
            "eda4a6b87d214712b2dd7bd79b1c5d4c",
            "134b9c916e464662bea67a34ffe8ec00",
            "9134d35ffa484b78831caecfbefea175",
            "d8dd416267134488a1144ae7a818daed",
            "8483d34fb2d24c2089851dd074eb964e",
            "f0d3158bf2544d28a108ac63f63a3edd",
            "f44731e319324377b0b33e2e9b6d6f2d",
            "a58dee8d1fbd4416a70aa99c49c0b2e7",
            "728c29133acb43e797c18ae10aceb997",
            "f59f040e8e494e3081ed81557e305032",
            "554708faca0e415f888da3866ba588b3",
            "bdf4c2934c534517ac2e238deeaa2c1c",
            "0b61e9e5bf4b4ebea072aad1f647872b",
            "58a262b2b4b44ca3b5e3802c636691b7",
            "0d50e386a7cd4742ad68fab7b08495bc",
            "cb0f983ecfeb4b4abbab2dc8e52af20e",
            "9449a4e26d37415fa9010f318d303ebd",
            "514e6067a45d408cac25e383923892a6",
            "27fb6a913598452a80feb689348c1784",
            "211ba9e9fe264aff8a890a3621d036a3",
            "65ec0d14711c47d69181fe13465c493b",
            "58df7779faf242a2a82e010a11e76f9e",
            "b4d70c12cfa7482ca920c202128a6344",
            "05a0aa5f98814fcd8ab3b7b179ff9a6d",
            "a45bb9b89ab7464abda9f31aa3e1bb04",
            "888c48509d684964b2f021ecc58a6d7c",
            "d4213b841bee41b386690c38c3c82699",
            "ef717f3708614b31b20b7c4f2a84be1d",
            "fa113c21ba5b472184959a9ff3c2e655",
            "842315ef063742a385c0ab085326f94c",
            "54205aefc41d49699b31a7cc36e66bdd",
            "b52ec4a827224134bd0c924443bafcf0",
            "2b57856431cb4c0b8d7f749952b2ee65",
            "a350183b78c04b76938bedb2b88ade85"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "214f0c3c-5420-4076-ca41-07149b799b35"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ],
      "metadata": {
        "id": "gFTu29dbi18i"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "source": [
        "best_config = {\n",
        "        'epochs': 200,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.2,\n",
        "        'input_size': 100,\n",
        "        'hidden_size': 50,\n",
        "        'learning_rate': 0.0005,\n",
        "        'optimizer': 'Nadam',\n",
        "        'activation': 'tanh',\n",
        "    }"
      ],
      "outputs": [],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# input layer\n",
        "model.add(GRU(units=100, return_sequences=True, input_shape=(window_len, 1), activation='tanh'))\n",
        "model.add(Dropout(0.2))\n",
        "# hidden layer\n",
        "model.add(GRU(units=50))\n",
        "model.add(Dropout(0.2))\n",
        "model.add(Dense(units=1))\n",
        "\n",
        "# defining the optimiser\n",
        "optimizer = keras.optimizers.Nadam(learning_rate=0.0005)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "22/32 [===================>..........] - ETA: 0s - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0527Total number of trainable parameters:  53751\n",
            "32/32 [==============================] - 3s 84ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0524 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0465\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 2s 65ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0531 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0463\n",
            "Epoch 27/200\n",
            "29/32 [==========================>...] - ETA: 0s - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0498"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "0b83fe55-6fc7-4743-829e-59bd1995e0c0"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=200, batch_size=32)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "19/32 [================>.............] - ETA: 0s - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0505Epoch 1/200\n",
            "32/32 [==============================] - 3s 95ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0503 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0457\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 4s 136ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0478 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 33/200\n",
            "40/40 [==============================] - 8s 17ms/step - loss: 0.0851\n",
            "Epoch 2/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0036\n",
            "Epoch 3/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0031\n",
            "Epoch 4/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0030\n",
            "Epoch 5/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0026\n",
            "Epoch 6/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0026\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 5s 142ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0486 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 34/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0024\n",
            "Epoch 8/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0024\n",
            "Epoch 9/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0022\n",
            "Epoch 10/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0018\n",
            "Epoch 11/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0025\n",
            "Epoch 12/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0027\n",
            "Epoch 13/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0021\n",
            "Epoch 14/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0021\n",
            "Epoch 15/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0019\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 5s 143ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0519 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            " 8/40 [=====>........................] - ETA: 0s - loss: 0.0025Epoch 35/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0022\n",
            "Epoch 17/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0017\n",
            "Epoch 18/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0018\n",
            "Epoch 19/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 0.0019\n",
            "Epoch 20/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 0.0019\n",
            "Epoch 21/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0019\n",
            "Epoch 22/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0017\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 4s 136ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0530 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 36/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0016\n",
            "Epoch 24/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0017\n",
            " 4/32 [==>...........................] - ETA: 4s - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0537Epoch 25/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0018\n",
            "Epoch 26/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0018\n",
            "Epoch 27/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0016\n",
            "Epoch 28/200\n",
            "40/40 [==============================] - 0s 13ms/step - loss: 0.0017\n",
            "Epoch 29/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0015\n",
            "Epoch 30/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 0.0015\n",
            "Epoch 31/200\n",
            "40/40 [==============================] - 1s 12ms/step - loss: 0.0014\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 5s 144ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0491 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "10/40 [======>.......................] - ETA: 0s - loss: 0.0015Epoch 37/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0015\n",
            "Epoch 33/200\n",
            "40/40 [==============================] - 0s 11ms/step - loss: 0.0016\n",
            "Epoch 34/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0016\n",
            "Epoch 35/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0017\n",
            "Epoch 36/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0013\n",
            "Epoch 37/200\n",
            "40/40 [==============================] - 0s 11ms/step - loss: 0.0015\n",
            "Epoch 38/200\n",
            "40/40 [==============================] - 1s 19ms/step - loss: 0.0014\n",
            "Epoch 39/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0017\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 5s 143ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0487 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "28/40 [====================>.........] - ETA: 0s - loss: 0.0015Epoch 38/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0015\n",
            "Epoch 41/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0013\n",
            "Epoch 42/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 0.0016\n",
            "Epoch 43/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0015\n",
            "Epoch 44/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0013\n",
            "Epoch 45/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 0.0012\n",
            "Epoch 46/200\n",
            "40/40 [==============================] - 1s 12ms/step - loss: 0.0014\n",
            "27/32 [========================>.....] - ETA: 0s - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0488Epoch 47/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 0.0013\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 4s 135ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0489 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            " 5/40 [==>...........................] - ETA: 0s - loss: 0.0019Epoch 39/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0015\n",
            " 4/32 [==>...........................] - ETA: 3s - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0484Epoch 49/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0011\n",
            "Epoch 50/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0011\n",
            "Epoch 51/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0013\n",
            "Epoch 52/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0013\n",
            "Epoch 53/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0013\n",
            "Epoch 54/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0012\n",
            "Epoch 55/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0014\n",
            "32/32 [==============================] - 4s 141ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0481 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 56/200\n",
            "Epoch 40/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0013\n",
            "Epoch 57/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0013\n",
            " 9/32 [=======>......................] - ETA: 2s - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0502Epoch 58/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0015\n",
            "Epoch 59/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0012\n",
            "Epoch 60/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0015\n",
            "Epoch 61/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0013\n",
            "Epoch 62/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 9.3582e-04\n",
            "Epoch 63/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0011\n",
            "Epoch 64/200\n",
            "32/32 [==============================] - 5s 142ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0501 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 41/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            " 3/32 [=>............................] - ETA: 3s - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0372Epoch 65/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0011\n",
            "Epoch 66/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 0.0011\n",
            "Epoch 67/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0010\n",
            "Epoch 68/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0012\n",
            "Epoch 69/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 9.4301e-04\n",
            "Epoch 70/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0011\n",
            "Epoch 71/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0012\n",
            "Epoch 72/200\n",
            "32/32 [==============================] - 5s 146ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0460 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 42/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0011\n",
            "Epoch 73/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0012\n",
            "Epoch 74/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 9.9038e-04\n",
            "Epoch 75/200\n",
            "40/40 [==============================] - 0s 13ms/step - loss: 0.0011\n",
            "Epoch 76/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0011\n",
            "Epoch 77/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0011\n",
            "Epoch 78/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0011\n",
            "Epoch 79/200\n",
            "40/40 [==============================] - 1s 18ms/step - loss: 9.7400e-04\n",
            "Epoch 80/200\n",
            "32/32 [==============================] - 4s 139ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0497 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 43/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0012\n",
            "Epoch 81/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 8.7882e-04\n",
            "Epoch 82/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 9.3177e-04\n",
            "Epoch 83/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 9.5780e-04\n",
            "Epoch 84/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 9.4837e-04\n",
            "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bEpoch 85/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.1873e-04\n",
            "Epoch 86/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 9.7411e-04\n",
            "Epoch 87/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 9.2576e-04\n",
            "Epoch 88/200\n",
            "32/32 [==============================] - 5s 143ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0498 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "28/40 [====================>.........] - ETA: 0s - loss: 9.8400e-04Epoch 44/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 9.8869e-04\n",
            "Epoch 89/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.0266e-04\n",
            "Epoch 90/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.5286e-04\n",
            "Epoch 91/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 9.2412e-04\n",
            "Epoch 92/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 9.8608e-04\n",
            "Epoch 93/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 9.3549e-04\n",
            "Epoch 94/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 9.2208e-04\n",
            "Epoch 95/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 9.5757e-04\n",
            "Epoch 96/200\n",
            "32/32 [==============================] - 4s 136ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0511 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            " 6/40 [===>..........................] - ETA: 0s - loss: 8.0800e-04Epoch 45/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 0.0010\n",
            "Epoch 97/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 9.2619e-04\n",
            "Epoch 98/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0011\n",
            "Epoch 99/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.3435e-04\n",
            "Epoch 100/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 0.0011\n",
            "Epoch 101/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 9.9021e-04\n",
            "Epoch 102/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 9.7390e-04\n",
            "Epoch 103/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 9.4119e-04\n",
            "Epoch 104/200\n",
            "32/32 [==============================] - 5s 145ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0494 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0451\n",
            "22/40 [===============>..............] - ETA: 0s - loss: 9.7549e-04Epoch 46/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 9.4586e-04\n",
            "Epoch 105/200\n",
            "40/40 [==============================] - 0s 11ms/step - loss: 0.0011\n",
            "Epoch 106/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 0.0010\n",
            "Epoch 107/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 9.0262e-04\n",
            "Epoch 108/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 8.5818e-04\n",
            "Epoch 109/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.4242e-04\n",
            "Epoch 110/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 9.6437e-04\n",
            "25/32 [======================>.......] - ETA: 0s - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0489Epoch 111/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.7730e-04\n",
            "Epoch 112/200\n",
            "40/40 [==============================] - 0s 11ms/step - loss: 8.8611e-04\n",
            "Epoch 113/200\n",
            "32/32 [==============================] - 5s 149ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0486 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "Epoch 47/200\n",
            "40/40 [==============================] - 1s 18ms/step - loss: 8.2815e-04\n",
            "Epoch 114/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 8.1555e-04\n",
            "Epoch 115/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.5115e-04\n",
            "Epoch 116/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 8.5547e-04\n",
            "Epoch 117/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.7617e-04\n",
            "Epoch 118/200\n",
            "40/40 [==============================] - 1s 19ms/step - loss: 8.1681e-04\n",
            "Epoch 119/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.4233e-04\n",
            "Epoch 120/200\n",
            "32/32 [==============================] - 4s 133ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0479 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 48/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 7.8284e-04\n",
            "Epoch 121/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.7336e-04\n",
            "Epoch 122/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.9784e-04\n",
            "Epoch 123/200\n",
            "40/40 [==============================] - 1s 19ms/step - loss: 8.5743e-04\n",
            "Epoch 124/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 8.8063e-04\n",
            "Epoch 125/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 8.3645e-04\n",
            "Epoch 126/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.5976e-04\n",
            "Epoch 127/200\n",
            "32/32 [==============================] - 4s 135ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0512 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0458\n",
            "Epoch 49/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 7.1295e-04\n",
            "Epoch 128/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 6.8784e-04\n",
            "Epoch 129/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.0469e-04\n",
            "Epoch 130/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 8.8503e-04\n",
            "Epoch 131/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.5224e-04\n",
            "Epoch 132/200\n",
            "40/40 [==============================] - 1s 12ms/step - loss: 7.5968e-04\n",
            "Epoch 133/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 7.6060e-04\n",
            "Epoch 134/200\n",
            "40/40 [==============================] - 0s 12ms/step - loss: 7.9936e-04\n",
            "Epoch 135/200\n",
            "32/32 [==============================] - 5s 148ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0478 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "17/40 [===========>..................] - ETA: 0s - loss: 7.7421e-04Epoch 50/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 7.9055e-04\n",
            "Epoch 136/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.9023e-04\n",
            "Epoch 137/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 7.7281e-04\n",
            "Epoch 138/200\n",
            "40/40 [==============================] - 1s 18ms/step - loss: 7.8034e-04\n",
            "Epoch 139/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 6.8836e-04\n",
            "Epoch 140/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 7.5174e-04\n",
            "Epoch 141/200\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0487 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 51/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.9714e-04\n",
            "Epoch 142/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.4603e-04\n",
            "Epoch 143/200\n",
            "40/40 [==============================] - 1s 18ms/step - loss: 6.2862e-04\n",
            "Epoch 144/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 7.7935e-04\n",
            "Epoch 145/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 7.6879e-04\n",
            "Epoch 146/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 7.1953e-04\n",
            "Epoch 147/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.7173e-04\n",
            "Epoch 148/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 7.6168e-04\n",
            "Epoch 149/200\n",
            "32/32 [==============================] - 4s 140ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0527 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0456\n",
            "Epoch 52/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.8879e-04\n",
            "Epoch 150/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.0238e-04\n",
            "Epoch 151/200\n",
            "40/40 [==============================] - 1s 19ms/step - loss: 7.7115e-04\n",
            "Epoch 152/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 7.6286e-04\n",
            "Epoch 153/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.4566e-04\n",
            "Epoch 154/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 8.8502e-04\n",
            "Epoch 155/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.1638e-04\n",
            "Epoch 156/200\n",
            "32/32 [==============================] - 4s 137ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0487 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 53/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 7.6441e-04\n",
            "Epoch 157/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.2212e-04\n",
            "Epoch 158/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 7.3051e-04\n",
            "Epoch 159/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 8.1339e-04\n",
            "Epoch 160/200\n",
            "40/40 [==============================] - 1s 14ms/step - loss: 7.7686e-04\n",
            "Epoch 161/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 7.9427e-04\n",
            "Epoch 162/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.4171e-04\n",
            "Epoch 163/200\n",
            "32/32 [==============================] - 5s 141ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0476 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0454\n",
            "Epoch 54/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 8.4962e-04\n",
            "Epoch 164/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.3195e-04\n",
            "Epoch 165/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.5678e-04\n",
            "Epoch 166/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 5.9325e-04\n",
            "Epoch 167/200\n",
            "40/40 [==============================] - 1s 19ms/step - loss: 7.5307e-04\n",
            "Epoch 168/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.8770e-04\n",
            "Epoch 169/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 8.2562e-04\n",
            "Epoch 170/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.2136e-04\n",
            "Epoch 171/200\n",
            "32/32 [==============================] - 4s 140ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0509 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 55/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 7.3537e-04\n",
            "Epoch 172/200\n",
            "40/40 [==============================] - 1s 16ms/step - loss: 7.1229e-04\n",
            "Epoch 173/200\n",
            "40/40 [==============================] - 1s 20ms/step - loss: 7.2571e-04\n",
            "Epoch 174/200\n",
            "40/40 [==============================] - 1s 17ms/step - loss: 6.8630e-04\n",
            "Epoch 175/200\n",
            "40/40 [==============================] - 1s 15ms/step - loss: 7.7292e-04\n",
            "Epoch 176/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.0788e-04\n",
            "Epoch 177/200\n",
            "40/40 [==============================] - 1s 13ms/step - loss: 7.3679e-04\n",
            "Epoch 178/200\n",
            "32/32 [==============================] - 4s 137ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0483 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0452\n",
            "40/40 [==============================] - 0s 10ms/step - loss: 6.8594e-04\n",
            "Epoch 179/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.3174e-04\n",
            "Epoch 180/200\n",
            "40/40 [==============================] - 0s 8ms/step - loss: 6.7892e-04\n",
            "Epoch 181/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.1402e-04\n",
            "Epoch 182/200\n",
            "40/40 [==============================] - 0s 8ms/step - loss: 7.3410e-04\n",
            "Epoch 183/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.9291e-04\n",
            "Epoch 184/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 6.9493e-04\n",
            "Epoch 185/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.6730e-04\n",
            "Epoch 186/200\n",
            "40/40 [==============================] - 0s 8ms/step - loss: 7.9101e-04\n",
            "Epoch 187/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.4648e-04\n",
            "Epoch 188/200\n",
            "40/40 [==============================] - 0s 8ms/step - loss: 6.9332e-04\n",
            "Epoch 189/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.2433e-04\n",
            "Epoch 190/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.1057e-04\n",
            "Epoch 191/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.1172e-04\n",
            "Epoch 192/200\n",
            "40/40 [==============================] - 0s 10ms/step - loss: 6.5290e-04\n",
            "Epoch 193/200\n",
            "40/40 [==============================] - 0s 9ms/step - loss: 6.9723e-04\n",
            "Epoch 194/200\n",
            "40/40 [==============================] - 0s 8ms/step - loss: 7.2190e-04\n",
            "Epoch 195/200\n",
            "40/40 [==============================] - 0s 8ms/step - loss: 6.5871e-04\n",
            "Epoch 196/200\n",
            "40/40 [==============================] - 0s 8ms/step - loss: 7.5967e-04\n",
            "Epoch 197/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.3936e-04\n",
            "Epoch 198/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 7.1386e-04\n",
            "Epoch 199/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 6.1697e-04\n",
            "Epoch 200/200\n",
            "40/40 [==============================] - 0s 7ms/step - loss: 6.9892e-04\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f428065c510>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "dcd06083-30c0-4d5b-d965-98e3ffcc2060"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "outputs": [],
      "metadata": {
        "id": "rTXJN51l9Y-F"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ],
      "metadata": {
        "id": "H-D-XHyRjFMp"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": ""
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "a4ab08f0-cb1b-44e1-8363-acc0b29f5f3e"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.Image object>"
            ],
            "image/png": ""
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ],
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 644
        },
        "outputId": "b1f4c051-3e3b-4daa-ae3b-d28fa9097cb1"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MSE:  0.015873705623312227\n",
            "RMSE:  0.12599089500163188\n",
            "MAE:  0.10707004801482177\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "cca9d7af-64b5-4bcc-9f1b-6bb6f0b8d553"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE:'+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n')\n",
        "error_file.close()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive/\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:Found untraced functions such as gru_cell_layer_call_and_return_conditional_losses, gru_cell_layer_call_fn, gru_cell_1_layer_call_and_return_conditional_losses, gru_cell_1_layer_call_fn, gru_cell_layer_call_fn while saving (showing 5 of 10). These functions will not be directly callable after loading.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_EURUSD/assets\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_EURUSD/assets\n"
          ]
        }
      ],
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "60796841-081e-4e38-a4de-4bf780b5b665"
      }
    }
  ]
}