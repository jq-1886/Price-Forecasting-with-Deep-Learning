{
  "nbformat": 4,
  "nbformat_minor": 2,
  "metadata": {
    "colab": {
      "name": "GRU_Treasury10y.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNMVhj4GaDUErA18Rdibz8X",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "15178bf708ec43afb98e60a5c5b868c9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d4956adb0f1a4816a56d67054d29adb1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a70f409ec80946a1975e995b7f282af1",
              "IPY_MODEL_92f6ccd688124d11ae08428ac03c5372"
            ]
          }
        },
        "d4956adb0f1a4816a56d67054d29adb1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a70f409ec80946a1975e995b7f282af1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_36c09978ce27480cbf9d7d0666281500",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.45MB of 0.45MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_16751e9999844939940ddfd65465dc87"
          }
        },
        "92f6ccd688124d11ae08428ac03c5372": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5b516e94613b4403be32d3b9724e165e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b555547ed7ac4ff49223e47fc79c0b05"
          }
        },
        "36c09978ce27480cbf9d7d0666281500": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "16751e9999844939940ddfd65465dc87": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5b516e94613b4403be32d3b9724e165e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b555547ed7ac4ff49223e47fc79c0b05": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8c72f38e9ab54dbab931bf87ffc8645c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c2a7d649ff274b8ba74066de2eb0126b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_82696170736f4d55a048a05a93b53488",
              "IPY_MODEL_8acf633ac7bd49ee996d3d29bba211b3"
            ]
          }
        },
        "c2a7d649ff274b8ba74066de2eb0126b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "82696170736f4d55a048a05a93b53488": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6539c1d9cb85450eb5d8fc0e9ae69274",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.41MB of 0.41MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6cd2ec70f4624a51832cfdddbdaa16cd"
          }
        },
        "8acf633ac7bd49ee996d3d29bba211b3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ba1631a3fdf2474c9d829620671d88a5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4100a577d0ea4096888a73eb102bad08"
          }
        },
        "6539c1d9cb85450eb5d8fc0e9ae69274": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6cd2ec70f4624a51832cfdddbdaa16cd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ba1631a3fdf2474c9d829620671d88a5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4100a577d0ea4096888a73eb102bad08": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3ca7753611e7419a88688b891477382d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f3d93659feda4970a3f1e7e50d3beda6",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d5147321b54740b59004d283067e3455",
              "IPY_MODEL_ca4aa1d72d9e43eb8b88aac265c4c7b8"
            ]
          }
        },
        "f3d93659feda4970a3f1e7e50d3beda6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d5147321b54740b59004d283067e3455": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ecc8a9c6a0a9465aae646261aebd7200",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.98MB of 0.98MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7130d4fa0a56477891722694d29298ee"
          }
        },
        "ca4aa1d72d9e43eb8b88aac265c4c7b8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_de1c26aafc714aeb872ce7b70bce9ddf",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b0fafe70bbdf44e38b440d3d572f445c"
          }
        },
        "ecc8a9c6a0a9465aae646261aebd7200": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7130d4fa0a56477891722694d29298ee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "de1c26aafc714aeb872ce7b70bce9ddf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b0fafe70bbdf44e38b440d3d572f445c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "868979c07d2a4b20b77b7f9c525ea511": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0f4d51b26142454ba104493baadb7017",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_c1d29d0207494efd8a2ea1c7cebc5f62",
              "IPY_MODEL_c2e6cb48ccdf4f0d92a8241eb7ad369d"
            ]
          }
        },
        "0f4d51b26142454ba104493baadb7017": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c1d29d0207494efd8a2ea1c7cebc5f62": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_596503f7d8634b94bb779c4122d65672",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.41MB of 1.41MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_14bcfb9a3a304ea2ad831e8db1be81e0"
          }
        },
        "c2e6cb48ccdf4f0d92a8241eb7ad369d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2583957fb5d44b8cb0ec5bcd0a24eba3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_521fb5fa267e448280166c95e7f8d966"
          }
        },
        "596503f7d8634b94bb779c4122d65672": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "14bcfb9a3a304ea2ad831e8db1be81e0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2583957fb5d44b8cb0ec5bcd0a24eba3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "521fb5fa267e448280166c95e7f8d966": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a0ea1d52fecc4edab4c793b336fc7946": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_aada402522af4190be0df0404b2f88a2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_967b418003e34eeca6713e3656a4134f",
              "IPY_MODEL_1b6b43b358044f2e9331fbe74417e02d"
            ]
          }
        },
        "aada402522af4190be0df0404b2f88a2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "967b418003e34eeca6713e3656a4134f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_73c3135f0ca145389c7893acdc6a0c2d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.53MB of 0.53MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_28c0ce21d82946509ff6c1579848818f"
          }
        },
        "1b6b43b358044f2e9331fbe74417e02d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_8d9d33ecf8f048e2848917adf0874eb5",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2c95da44d87444e99ea351a56caf371e"
          }
        },
        "73c3135f0ca145389c7893acdc6a0c2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "28c0ce21d82946509ff6c1579848818f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8d9d33ecf8f048e2848917adf0874eb5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2c95da44d87444e99ea351a56caf371e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "14749dada70d4da7aef03501078388be": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_eb43f31cae96487087abd5f9ef0c1c1d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b09828347e88413b852a4f37d9c336a2",
              "IPY_MODEL_52cacf5a0e69482597627d83f30aa96f"
            ]
          }
        },
        "eb43f31cae96487087abd5f9ef0c1c1d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b09828347e88413b852a4f37d9c336a2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_76ed595a123149feab6ac47db5174d9a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.53MB of 0.53MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_740e9baedb5c4fca8163a2f56d660ff7"
          }
        },
        "52cacf5a0e69482597627d83f30aa96f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4a71baf9dee24b5cbb09871023f9dc87",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b4e097cd1d0547439cf63497e29ffc77"
          }
        },
        "76ed595a123149feab6ac47db5174d9a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "740e9baedb5c4fca8163a2f56d660ff7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4a71baf9dee24b5cbb09871023f9dc87": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b4e097cd1d0547439cf63497e29ffc77": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4b7ceb80c7cf4b0a9cb0564b765695b5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2e6fbf8aab0b4548a10003551ac39c50",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_dc252e109b2848c1a2d3e95e456b44bd",
              "IPY_MODEL_fa4cdef0a2864c6aafa4f507eacb2655"
            ]
          }
        },
        "2e6fbf8aab0b4548a10003551ac39c50": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc252e109b2848c1a2d3e95e456b44bd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1ecc4c54150f465998389cf6d294599c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.92MB of 0.92MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e0c1791bf96e45cf9de4075a496104a4"
          }
        },
        "fa4cdef0a2864c6aafa4f507eacb2655": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_1c0c3dbf915c4f71a414f98f24d27fe7",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_28340a2c927c4a4d87f9f8dbe22729e9"
          }
        },
        "1ecc4c54150f465998389cf6d294599c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e0c1791bf96e45cf9de4075a496104a4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1c0c3dbf915c4f71a414f98f24d27fe7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "28340a2c927c4a4d87f9f8dbe22729e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f4510e213de349f6b5dea7102e9973e4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_2fe3e7cf743c426ca3c0f9835c16c503",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5544c9edaf8f4513a317b5cc1755e139",
              "IPY_MODEL_c8cf1190f6884d3c8b43f7eeae799649"
            ]
          }
        },
        "2fe3e7cf743c426ca3c0f9835c16c503": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5544c9edaf8f4513a317b5cc1755e139": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e2eae05ba6864a3aa644cc879171597a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.92MB of 0.92MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c3a041c192af43c7b5dc8d4eccaea4d8"
          }
        },
        "c8cf1190f6884d3c8b43f7eeae799649": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e84676efe9b749f48ca8ec63e633bb71",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9f57bb620d4e4177a1c8c3555d88b280"
          }
        },
        "e2eae05ba6864a3aa644cc879171597a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c3a041c192af43c7b5dc8d4eccaea4d8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e84676efe9b749f48ca8ec63e633bb71": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9f57bb620d4e4177a1c8c3555d88b280": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dbb94156378042c1ab02481c819c5c0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_41a305adea7e40a9b8834d028a1d3df8",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e67c187ff18a4481b6e660b515005f01",
              "IPY_MODEL_b0b015271cbc4db7953912a11b42f5ae"
            ]
          }
        },
        "41a305adea7e40a9b8834d028a1d3df8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e67c187ff18a4481b6e660b515005f01": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_bd8ddd92331243d1a0f6b0bf031db351",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.83MB of 0.83MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0d61d1c1435c4797979c9d7ae8e0caad"
          }
        },
        "b0b015271cbc4db7953912a11b42f5ae": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_516894183ab443a8bad36f3944d25783",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_fb5a55a4f4e04ca9b6c639cc21bd5232"
          }
        },
        "bd8ddd92331243d1a0f6b0bf031db351": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0d61d1c1435c4797979c9d7ae8e0caad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "516894183ab443a8bad36f3944d25783": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "fb5a55a4f4e04ca9b6c639cc21bd5232": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "df2ca68b27b340a096e6176b8bfe5764": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_233924c45fc74e198f1f565ba532b8f5",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_eb3aba8f33074b949b0cdf518dd31d24",
              "IPY_MODEL_5c2bff8b204e4ff883bd7d1fb8956678"
            ]
          }
        },
        "233924c45fc74e198f1f565ba532b8f5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "eb3aba8f33074b949b0cdf518dd31d24": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_683503a6000349ed916fb9037ecd8111",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.61MB of 0.61MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_83ad38eccb66430da97269e9c086f6ad"
          }
        },
        "5c2bff8b204e4ff883bd7d1fb8956678": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ab954f038dee4dff8b201f7afcdf6a55",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7b9528be3e404ebcab861076bd1cea8a"
          }
        },
        "683503a6000349ed916fb9037ecd8111": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "83ad38eccb66430da97269e9c086f6ad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ab954f038dee4dff8b201f7afcdf6a55": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7b9528be3e404ebcab861076bd1cea8a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a0905d8981594b589454de2ac9fd0131": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3f9305cb58e642b1870b95adc81d62c1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2d71927ff9504051889e00244efe2d9b",
              "IPY_MODEL_13108be0ff094d13b558e984d18313d4"
            ]
          }
        },
        "3f9305cb58e642b1870b95adc81d62c1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2d71927ff9504051889e00244efe2d9b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_4e331a9c6cc34b0c8fc7630b94abea04",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.69MB of 0.69MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b86058e00d0f455996dad9883a63c5c4"
          }
        },
        "13108be0ff094d13b558e984d18313d4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_00545f2e220447ae83ef424abf10acdb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c99f7705143e423d88dac254e6a68509"
          }
        },
        "4e331a9c6cc34b0c8fc7630b94abea04": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b86058e00d0f455996dad9883a63c5c4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "00545f2e220447ae83ef424abf10acdb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c99f7705143e423d88dac254e6a68509": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3d8c1f8d66324b73ad465ddd28a468aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_fb01a21b0c19411c8cc158973dc751d4",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7da86f657e544979ad1ebea051f953f2",
              "IPY_MODEL_56d48295f1c7419b8c642d82fc063873"
            ]
          }
        },
        "fb01a21b0c19411c8cc158973dc751d4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7da86f657e544979ad1ebea051f953f2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_1303711adde84cbf9957ffa1d36c20fa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.10MB of 1.10MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2d13daff394c440cadba0e6abd518976"
          }
        },
        "56d48295f1c7419b8c642d82fc063873": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4c025e3f6d5840989d4db7d63cfc1074",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ba47594f82294cb4905c6f13a59a5582"
          }
        },
        "1303711adde84cbf9957ffa1d36c20fa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2d13daff394c440cadba0e6abd518976": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4c025e3f6d5840989d4db7d63cfc1074": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ba47594f82294cb4905c6f13a59a5582": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "054cf01da54c476bb57d62cf2c50ee4e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_f48173f2aadc4c4682ae11adad10f1e2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4639e858496548539b2497fcb76985da",
              "IPY_MODEL_afa42146955a472f9255ac087d23cbe8"
            ]
          }
        },
        "f48173f2aadc4c4682ae11adad10f1e2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4639e858496548539b2497fcb76985da": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_4b5c280496ef47dfafc9c67d28bdad3a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.93MB of 0.93MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c020954047ee407b8d3cc951d7274f68"
          }
        },
        "afa42146955a472f9255ac087d23cbe8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c3f0be22833e4115b8972340df8c52c2",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_57224a27f7434342b43a0c8979c2646d"
          }
        },
        "4b5c280496ef47dfafc9c67d28bdad3a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c020954047ee407b8d3cc951d7274f68": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c3f0be22833e4115b8972340df8c52c2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "57224a27f7434342b43a0c8979c2646d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0b088b3272a54871a647418380a2cd0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e4c9d4f5d67b463bb50e71e77fde4570",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_75a116d5977242e396d45a3b080afc8f",
              "IPY_MODEL_79ec7d07105d44e7aa2b8858d0bc9dda"
            ]
          }
        },
        "e4c9d4f5d67b463bb50e71e77fde4570": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "75a116d5977242e396d45a3b080afc8f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d9361b4c374b445eaacf58f041ca87dd",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.25MB of 0.25MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6a43cf2bf0154f1e93335b2e635ab7e9"
          }
        },
        "79ec7d07105d44e7aa2b8858d0bc9dda": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_bfbaa9d0c76743d3ae4eac50d2f0fea9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0d714ca852dd4ac0ac00f2bf3a4036cd"
          }
        },
        "d9361b4c374b445eaacf58f041ca87dd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6a43cf2bf0154f1e93335b2e635ab7e9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bfbaa9d0c76743d3ae4eac50d2f0fea9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0d714ca852dd4ac0ac00f2bf3a4036cd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "08da03f30f9a4cb99250d6cd291c661b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1fc08db927f747929ffa794f0d53744f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d6dc9d78f4e946b8b36000bb11837098",
              "IPY_MODEL_35346ba2752549458f4be029a86f266d"
            ]
          }
        },
        "1fc08db927f747929ffa794f0d53744f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d6dc9d78f4e946b8b36000bb11837098": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d71a2ac7009847b2a13faa7605cacd31",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.12MB of 1.12MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d58e97d02d634baaaf56c2fc5033a84b"
          }
        },
        "35346ba2752549458f4be029a86f266d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c8206403799e40eca932ca742197d595",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_22f7d6c86e7a4037a002cc2a4ac4a960"
          }
        },
        "d71a2ac7009847b2a13faa7605cacd31": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d58e97d02d634baaaf56c2fc5033a84b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c8206403799e40eca932ca742197d595": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "22f7d6c86e7a4037a002cc2a4ac4a960": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "794a7292566c427d827f6a4a4648fa68": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_277bb92fe1e64f4a9ae35b29f240b5a3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_086427ace1f54e099a7533850ddeabfc",
              "IPY_MODEL_75140de6807248cfa4c06c5d2946da72"
            ]
          }
        },
        "277bb92fe1e64f4a9ae35b29f240b5a3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "086427ace1f54e099a7533850ddeabfc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_63f73488580e45c088052de4e2bdf1ec",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.53MB of 0.53MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_456bb5bd53c04b27b50212de2faec9f8"
          }
        },
        "75140de6807248cfa4c06c5d2946da72": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_67bdaf41e4d14ac6884d98de22be88ba",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3f9831175cf94f9fbffbb8cb4839ce0e"
          }
        },
        "63f73488580e45c088052de4e2bdf1ec": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "456bb5bd53c04b27b50212de2faec9f8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "67bdaf41e4d14ac6884d98de22be88ba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3f9831175cf94f9fbffbb8cb4839ce0e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/GRU/GRU_Treasury10y.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ],
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ],
      "metadata": {
        "id": "z5F7GfFTgUo3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 119, done.\u001b[K\n",
            "remote: Counting objects: 100% (119/119), done.\u001b[K\n",
            "remote: Compressing objects: 100% (114/114), done.\u001b[K\n",
            "remote: Total 119 (delta 53), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (119/119), 107.55 KiB | 4.30 MiB/s, done.\n",
            "Resolving deltas: 100% (53/53), done.\n"
          ]
        }
      ],
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3bf6f24d-52a4-49f2-df9c-31c062e946cc"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/feeder_repo\n"
          ]
        }
      ],
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "715cff4e-4c3a-4e71-b441-f167f3c8434f"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ]
        }
      ],
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "88c3a746-feea-4950-d51f-9f9a4ba5119c"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "outputs": [],
      "metadata": {
        "id": "fRqkwo6kZUz_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "outputs": [],
      "metadata": {
        "id": "hzVhwND1HAlw"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Tue Jul 13 15:47:19 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   40C    P0    27W / 250W |      0MiB / 16280MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "4d025a11-af3f-4362-e5b6-b230f204d77d"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ],
      "metadata": {
        "id": "WB9wD4Aahs8_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'Treasury10y'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'GRU'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "outputs": [],
      "metadata": {
        "id": "vBlKerL-c4-3"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "outputs": [],
      "metadata": {
        "id": "hfQJbuBk0vW0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ],
      "metadata": {
        "id": "X53Fp1Gwh88_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8MB 8.5MB/s \n",
            "\u001b[K     |████████████████████████████████| 102kB 11.1MB/s \n",
            "\u001b[K     |████████████████████████████████| 174kB 38.3MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 38.4MB/s \n",
            "\u001b[K     |████████████████████████████████| 71kB 9.0MB/s \n",
            "\u001b[?25h  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "66b09ebc-895a-4afd-97f1-4cb982cfd33f"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "source": [
        "!pip install wandb -qq"
      ],
      "outputs": [],
      "metadata": {
        "id": "pbgZaoQDiIKX"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "e13d4b84-e954-4f25-ac2a-8e15bad1df00"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.2, 0.3, 0.4]\n",
        "        },\n",
        "        'input_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'hidden_size': {\n",
        "            'values': [25, 50, 100]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'sgd']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu', 'selu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "outputs": [],
      "metadata": {
        "id": "j91IBGuSid5w"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "source": [
        "# The sweep calls this function with each set of hyperparameters\n",
        "def train():\n",
        "    # Default values for hyper-parameters we're going to sweep over\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.2,\n",
        "        'input_size': 50,\n",
        "        'hidden_size': 50,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "    \n",
        "    # Define the model architecture - This is a simplified version of the VGG19 architecture\n",
        "    model = Sequential()\n",
        "    \n",
        "    # input layer\n",
        "    model.add(GRU(units=config.input_size,\n",
        "                  activation=config.activation,\n",
        "                  return_sequences=True,\n",
        "                  input_shape=(window_len, 1)))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # hidden layer\n",
        "    model.add(GRU(units=config.hidden_size))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    model.add(Dense(units=1))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "outputs": [],
      "metadata": {
        "id": "V0Sr9HsorH4E"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_GRU')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Create sweep with ID: htfcfvq8\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "2914c3c2-f846-456d-be17-3cd8ee187c97"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_GRU')"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 1cvg3f0c with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">valiant-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1cvg3f0c\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1cvg3f0c</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_154801-1cvg3f0c</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "16/16 [==============================] - 27s 106ms/step - loss: 0.1212 - mean_squared_error: 0.1212 - mean_absolute_error: 0.2880 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0731\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0205 - mean_squared_error: 0.0205 - mean_absolute_error: 0.1141 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.1023\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0146 - mean_squared_error: 0.0146 - mean_absolute_error: 0.0950 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0627\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0867 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0550\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0764 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0512\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0740 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0512\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0685 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0530\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0694 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0492\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0725 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0481\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0713 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0479\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0681 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0481\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0653 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0474\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0683 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0486\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0653 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0468\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0612 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0466\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0681 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0665 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0469\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0619 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0484\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0623 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0455\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0638 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0624 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0496\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0612 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0470\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0603 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0445\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0590 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0474\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0568 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0533\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0584 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0577 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0474\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0550 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0582 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0434\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0570 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0457\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0597 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0498\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0571 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0467\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0555 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0428\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0555 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0432\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0511 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0422\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0555 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0420\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0529 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0417\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0511 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0539 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0492 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0414\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0521 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0513 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0443\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0546 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0421\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0502 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 0s 18ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0490 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0460\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0481 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0418\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0519 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0402\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0501 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0400\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0497 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0484 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0422\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0519 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0397\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0458 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0445 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0424\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0457 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0391\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0490 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0390\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0448 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0387\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0471 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0473 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0454 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0385\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0471 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0413\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0441 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0396\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0470 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0390\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0451 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0453 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0381\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0432 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0401\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0446 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0424 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0435 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0377\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0444 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0435 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0420 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0385\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0414 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0428 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0422\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0430 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0390 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0369\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0397 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0437 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0377\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0394 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0367\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0421 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0377\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0401 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0405 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0363\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0406 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0392 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0380\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0404 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0358\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0406 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0372\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0404 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0357\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0383 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0369\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0360\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0375 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0357\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0412 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0360\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0353\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0370 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0372\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0373 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0353\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0389 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0351 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0354\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0367 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0357\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0359 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0379\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 0s 16ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0389 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0349\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 179<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.41MB of 0.41MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "15178bf708ec43afb98e60a5c5b868c9",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_154801-1cvg3f0c/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_154801-1cvg3f0c/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00243</td></tr><tr><td>mean_squared_error</td><td>0.00243</td></tr><tr><td>mean_absolute_error</td><td>0.03808</td></tr><tr><td>val_loss</td><td>0.00192</td></tr><tr><td>val_mean_squared_error</td><td>0.00192</td></tr><tr><td>val_mean_absolute_error</td><td>0.03486</td></tr><tr><td>_runtime</td><td>60</td></tr><tr><td>_timestamp</td><td>1626191341</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00192</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▄▃▃▃▃▃▃▃▄▃▃▂▂▂▂▂▃▂▂▂▂▂▂▁▂▁▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▄▃▃▃▃▃▃▃▄▃▃▂▂▂▂▂▃▂▂▂▂▂▂▁▂▁▂▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▄▄▃▄▃▃▄▃▄▃▃▂▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">valiant-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1cvg3f0c\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1cvg3f0c</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 6umzcx3v with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">atomic-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6umzcx3v\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6umzcx3v</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_154908-6umzcx3v</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 15s 155ms/step - loss: 0.2383 - mean_squared_error: 0.2383 - mean_absolute_error: 0.4016 - val_loss: 0.0257 - val_mean_squared_error: 0.0257 - val_mean_absolute_error: 0.1189\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 111ms/step - loss: 0.0348 - mean_squared_error: 0.0348 - mean_absolute_error: 0.1503 - val_loss: 0.0305 - val_mean_squared_error: 0.0305 - val_mean_absolute_error: 0.1344\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0239 - mean_squared_error: 0.0239 - mean_absolute_error: 0.1244 - val_loss: 0.0243 - val_mean_squared_error: 0.0243 - val_mean_absolute_error: 0.1197\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0216 - mean_squared_error: 0.0216 - mean_absolute_error: 0.1179 - val_loss: 0.0199 - val_mean_squared_error: 0.0199 - val_mean_absolute_error: 0.1087\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0177 - mean_squared_error: 0.0177 - mean_absolute_error: 0.1071 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.0999\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - mean_absolute_error: 0.1052 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0845\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0915 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0904\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 110ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0839 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0791\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0809 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0764\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0789 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0647\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0743 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0642\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0737 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0623\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0686 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0580\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0656 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0568\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0642 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0572\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0649 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0545\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0600 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0547\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0589 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0543\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0647 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 4s 110ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0584 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0523\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0594 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0524\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0602 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0510\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0549 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0515\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0593 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0512\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0573 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0510\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0559 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0520\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0543 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0580 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0501\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0558 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 4s 111ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0536 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0500\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0513 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0512\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 3s 110ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0550 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0557 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0592 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0506\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0537 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0520\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 4s 110ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0533 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0506\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0552 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 3s 109ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0510 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0509\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0526 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0514\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 4s 110ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0552 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0511\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 559<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.38MB of 0.38MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "8c72f38e9ab54dbab931bf87ffc8645c",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_154908-6umzcx3v/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_154908-6umzcx3v/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>39</td></tr><tr><td>loss</td><td>0.00483</td></tr><tr><td>mean_squared_error</td><td>0.00483</td></tr><tr><td>mean_absolute_error</td><td>0.05503</td></tr><tr><td>val_loss</td><td>0.00422</td></tr><tr><td>val_mean_squared_error</td><td>0.00422</td></tr><tr><td>val_mean_absolute_error</td><td>0.05109</td></tr><tr><td>_runtime</td><td>162</td></tr><tr><td>_timestamp</td><td>1626191510</td></tr><tr><td>_step</td><td>39</td></tr><tr><td>best_val_loss</td><td>0.00408</td></tr><tr><td>best_epoch</td><td>29</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇█▆▅▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▇█▆▅▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇█▇▆▅▄▄▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">atomic-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6umzcx3v\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/6umzcx3v</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: nke4zpmc with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">elated-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/nke4zpmc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/nke4zpmc</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_155157-nke4zpmc</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 10s 154ms/step - loss: 0.0436 - mean_squared_error: 0.0436 - mean_absolute_error: 0.1510 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0769 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0481\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 4s 110ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0712 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0648 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0464\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0661 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0431\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0592 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0546\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 3s 107ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0612 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0512\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 3s 107ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0571 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0579 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0416\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0526 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0433\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0562 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0400\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0564 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0398\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0570 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0555 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0537 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0387\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0495 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0382\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 4s 111ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0515 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0400\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0519 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0449\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0485 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0382\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0481 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0375\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0476 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0374\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0455 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0375\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0480 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0365\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0480 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0459\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0472 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0464 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0358\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0443 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0363\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0428 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 4s 111ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0408 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0351\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 3s 105ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0349\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0403 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0359\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0414 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0346\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0423 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0470\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0427 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0344\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0420 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0391\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0407 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0354\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0398 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0341\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0378 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0337\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0373 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0336\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0395 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0333\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0375 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0373\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0369 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0369\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0377 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0332\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0356 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0384\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0372 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0332\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0358 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0328\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0372 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0345\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0363 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0361\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0358 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0360\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0366 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0344\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0357 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0330\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0364 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0332\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0350 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0336\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0353 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0327\n",
            "Epoch 55/200\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0367 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0322\n",
            "Epoch 56/200\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0332 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0333\n",
            "Epoch 57/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0338 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0350\n",
            "Epoch 58/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0354 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0396\n",
            "Epoch 59/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0346 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0353\n",
            "Epoch 60/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0341 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0333\n",
            "Epoch 61/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0321\n",
            "Epoch 62/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0319 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0367\n",
            "Epoch 63/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0333 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0330\n",
            "Epoch 64/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0331 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0334\n",
            "Epoch 65/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0324 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0323\n",
            "Epoch 66/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0329 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0317\n",
            "Epoch 67/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0334 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0317\n",
            "Epoch 68/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0323 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0319\n",
            "Epoch 69/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0329 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0316\n",
            "Epoch 70/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0299 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0315\n",
            "Epoch 71/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0330 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0315\n",
            "Epoch 72/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0322 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0323\n",
            "Epoch 73/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0336\n",
            "Epoch 74/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0317 - val_loss: 0.0016 - val_mean_squared_error: 0.0016 - val_mean_absolute_error: 0.0312\n",
            "Epoch 75/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0314\n",
            "Epoch 76/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0292 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0359\n",
            "Epoch 77/200\n",
            "32/32 [==============================] - 3s 109ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0315 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0314\n",
            "Epoch 78/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0315 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0320\n",
            "Epoch 79/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0314 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0324\n",
            "Epoch 80/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0310 - val_loss: 0.0016 - val_mean_squared_error: 0.0016 - val_mean_absolute_error: 0.0310\n",
            "Epoch 81/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0309 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0327\n",
            "Epoch 82/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0280 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0314\n",
            "Epoch 83/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0298 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0315\n",
            "Epoch 84/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0314\n",
            "Epoch 85/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0284 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0315\n",
            "Epoch 86/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0297 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0336\n",
            "Epoch 87/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0296 - val_loss: 0.0016 - val_mean_squared_error: 0.0016 - val_mean_absolute_error: 0.0309\n",
            "Epoch 88/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0293 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0317\n",
            "Epoch 89/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0290 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0310\n",
            "Epoch 90/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0341\n",
            "Epoch 91/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0317 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0316\n",
            "Epoch 92/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0283 - val_loss: 0.0016 - val_mean_squared_error: 0.0016 - val_mean_absolute_error: 0.0310\n",
            "Epoch 93/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0293 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0312\n",
            "Epoch 94/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0292 - val_loss: 0.0016 - val_mean_squared_error: 0.0016 - val_mean_absolute_error: 0.0311\n",
            "Epoch 95/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0345\n",
            "Epoch 96/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0309 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0341\n",
            "Epoch 97/200\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0295 - val_loss: 0.0017 - val_mean_squared_error: 0.0017 - val_mean_absolute_error: 0.0314\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 766<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.93MB of 0.93MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3ca7753611e7419a88688b891477382d",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_155157-nke4zpmc/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_155157-nke4zpmc/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>96</td></tr><tr><td>loss</td><td>0.00148</td></tr><tr><td>mean_squared_error</td><td>0.00148</td></tr><tr><td>mean_absolute_error</td><td>0.02987</td></tr><tr><td>val_loss</td><td>0.00167</td></tr><tr><td>val_mean_squared_error</td><td>0.00167</td></tr><tr><td>val_mean_absolute_error</td><td>0.03139</td></tr><tr><td>_runtime</td><td>377</td></tr><tr><td>_timestamp</td><td>1626191895</td></tr><tr><td>_step</td><td>96</td></tr><tr><td>best_val_loss</td><td>0.00163</td></tr><tr><td>best_epoch</td><td>86</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▅▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▄▅▄▃▅▃▂▃▄▂▆▃▂▁▃▁▂▂▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▄▅▄▃▅▃▂▃▄▂▆▃▂▁▃▁▂▂▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▅▅▅▅▄▆▃▃▃▄▂▇▄▂▂▃▂▂▂▂▁▂▂▃▁▁▁▁▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">elated-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/nke4zpmc\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/nke4zpmc</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 1ms7u7d6 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">wandering-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1ms7u7d6\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1ms7u7d6</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_155822-1ms7u7d6</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 285ms/step - loss: 0.1045 - mean_squared_error: 0.1045 - mean_absolute_error: 0.2426 - val_loss: 0.0376 - val_mean_squared_error: 0.0376 - val_mean_absolute_error: 0.1798\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.1058 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0627\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0483 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0623\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0135 - mean_squared_error: 0.0135 - mean_absolute_error: 0.0949 - val_loss: 0.0139 - val_mean_squared_error: 0.0139 - val_mean_absolute_error: 0.1005\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0728 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1334\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0842 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0571\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0481 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0496\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0535 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0948\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0749 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0671\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0535 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0895\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0669 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0472\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0512 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.1066\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 1s 185ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0809 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0515\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0548 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0919\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0664 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0499\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0442 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0578\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0671 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0494\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0524 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0458\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0588 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0588\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0541 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0432\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0463 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0473\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0465 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0440\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0501 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0453\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0495 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0554\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0584 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0491 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0520\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0617 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0424\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0447 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0506\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0453 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0404\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0431 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0387 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0970\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0627 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0618\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0421 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0423 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0771\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0455 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0415\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0394 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0816\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0664 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0503\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0383 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0387\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0407 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0413\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0386 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 1s 113ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0368 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0379\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0368 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0405\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0379 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0870\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0621 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0528\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0525 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0491\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0380 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0373 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0382\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0370 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0416\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0524 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0405\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0403 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0376\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1188<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.38MB of 1.38MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "868979c07d2a4b20b77b7f9c525ea511",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_155822-1ms7u7d6/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_155822-1ms7u7d6/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00243</td></tr><tr><td>mean_squared_error</td><td>0.00243</td></tr><tr><td>mean_absolute_error</td><td>0.03853</td></tr><tr><td>val_loss</td><td>0.00233</td></tr><tr><td>val_mean_squared_error</td><td>0.00233</td></tr><tr><td>val_mean_absolute_error</td><td>0.03761</td></tr><tr><td>_runtime</td><td>67</td></tr><tr><td>_timestamp</td><td>1626191969</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00233</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▃▂▁▂▂▂▁▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▃▂▁▂▂▂▁▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▄▃▂▃▃▂▂▃▂▂▃▂▃▂▁▂▂▂▂▁▁▁▂▁▂▁▂▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▃▂▁▃▂▁▃▁▃▂▁▁▂▁▁▁▁▁▁▁▁▃▂▁▂▂▁▁▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▃▂▁▃▂▁▃▁▃▂▁▁▂▁▁▁▁▁▁▁▁▃▂▁▂▂▁▁▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▄▂▂▄▂▁▄▂▄▂▂▁▂▁▁▁▂▂▁▂▁▄▂▁▃▃▂▁▁▁▁▃▂▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">wandering-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1ms7u7d6\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/1ms7u7d6</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: s1wkf6bg with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">brisk-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/s1wkf6bg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/s1wkf6bg</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_155937-s1wkf6bg</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 8s 196ms/step - loss: 0.0858 - mean_squared_error: 0.0858 - mean_absolute_error: 0.2260 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0510\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0223 - mean_squared_error: 0.0223 - mean_absolute_error: 0.1173 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0954\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0835 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0497\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0846 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0504\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0822 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0730\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0776 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0711\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0741 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0889\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0771 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0664\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0759 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0619\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0741 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0594\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 2s 113ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0639 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0596\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0628 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0497\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0660 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0623\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1407<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.51MB of 0.51MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "a0ea1d52fecc4edab4c793b336fc7946",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_155937-s1wkf6bg/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_155937-s1wkf6bg/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>12</td></tr><tr><td>loss</td><td>0.00738</td></tr><tr><td>mean_squared_error</td><td>0.00738</td></tr><tr><td>mean_absolute_error</td><td>0.06699</td></tr><tr><td>val_loss</td><td>0.00624</td></tr><tr><td>val_mean_squared_error</td><td>0.00624</td></tr><tr><td>val_mean_absolute_error</td><td>0.06228</td></tr><tr><td>_runtime</td><td>36</td></tr><tr><td>_timestamp</td><td>1626192013</td></tr><tr><td>_step</td><td>12</td></tr><tr><td>best_val_loss</td><td>0.0041</td></tr><tr><td>best_epoch</td><td>2</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr><tr><td>loss</td><td>█▃▂▂▂▂▁▁▂▂▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▂▁▁▂▂▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▂▂▂▂▂▁▁▁</td></tr><tr><td>val_loss</td><td>▁█▁▁▄▄▇▃▃▂▂▁▃</td></tr><tr><td>val_mean_squared_error</td><td>▁█▁▁▄▄▇▃▃▂▂▁▃</td></tr><tr><td>val_mean_absolute_error</td><td>▁█▁▁▅▄▇▄▃▂▃▁▃</td></tr><tr><td>_runtime</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr><tr><td>_timestamp</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr><tr><td>_step</td><td>▁▂▂▃▃▄▅▅▆▆▇▇█</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">brisk-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/s1wkf6bg\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/s1wkf6bg</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: jgnrteep with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fast-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jgnrteep\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jgnrteep</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_160020-jgnrteep</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 8s 288ms/step - loss: 0.4548 - mean_squared_error: 0.4548 - mean_absolute_error: 0.6286 - val_loss: 0.5114 - val_mean_squared_error: 0.5114 - val_mean_absolute_error: 0.6947\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.2773 - mean_squared_error: 0.2773 - mean_absolute_error: 0.4810 - val_loss: 0.2941 - val_mean_squared_error: 0.2941 - val_mean_absolute_error: 0.5213\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.1517 - mean_squared_error: 0.1517 - mean_absolute_error: 0.3423 - val_loss: 0.1229 - val_mean_squared_error: 0.1229 - val_mean_absolute_error: 0.3258\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0605 - mean_squared_error: 0.0605 - mean_absolute_error: 0.2056 - val_loss: 0.0353 - val_mean_squared_error: 0.0353 - val_mean_absolute_error: 0.1555\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0237 - mean_squared_error: 0.0237 - mean_absolute_error: 0.1254 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0925\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0228 - mean_squared_error: 0.0228 - mean_absolute_error: 0.1215 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0872\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0203 - mean_squared_error: 0.0203 - mean_absolute_error: 0.1163 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0936\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0190 - mean_squared_error: 0.0190 - mean_absolute_error: 0.1112 - val_loss: 0.0157 - val_mean_squared_error: 0.0157 - val_mean_absolute_error: 0.0963\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0183 - mean_squared_error: 0.0183 - mean_absolute_error: 0.1101 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0913\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0183 - mean_squared_error: 0.0183 - mean_absolute_error: 0.1086 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0894\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0163 - mean_squared_error: 0.0163 - mean_absolute_error: 0.1027 - val_loss: 0.0133 - val_mean_squared_error: 0.0133 - val_mean_absolute_error: 0.0894\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 139ms/step - loss: 0.0163 - mean_squared_error: 0.0163 - mean_absolute_error: 0.1033 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0818\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0980 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0796\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0137 - mean_squared_error: 0.0137 - mean_absolute_error: 0.0941 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0762\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0906 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0734\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0903 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0719\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0830 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0668\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0828 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0685\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0797 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0669\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0737 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0585\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0779 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0608\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0740 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0599\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0693 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0587\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0692 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0585\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0712 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0572\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0701 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0565\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0693 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0550\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0674 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0572\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0724 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0568\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0689 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0568\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0683 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0548\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0690 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0562\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0668 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0544\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0662 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0544\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0661 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0549\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0695 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0532\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0665 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0544\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0639 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0556\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 114ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0656 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0535\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0620 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0542\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0658 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0546\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0625 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0533\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0623 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0520\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0653 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0559\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0634 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0527\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0635 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0532\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0613 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0523\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0614 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0525\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0654 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0529\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0629 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0517\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0626 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0538\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0612 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0522\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0618 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0528\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0603 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0514\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0629 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0591 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0511\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0610 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0576 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0515\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0600 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0539\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0608 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0515\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0573 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0585 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0505\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0592 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0508\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0616 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0510\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0594 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0494\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0578 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0510\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0579 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0511\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0592 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0496\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0601 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0515\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0576 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0499\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0568 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0579 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0584 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0554 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0595 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0498\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0586 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0496\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0585 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0591 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0487\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0582 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0590 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0511\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0571 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0505\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0586 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 143ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0565 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0483\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0553 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 114ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0568 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0476\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0548 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0481\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0546 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0476\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 113ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0546 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0488\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0565 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0485\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0557 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0501\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0573 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0492\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 112ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0555 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0549 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0486\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0559 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0490\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0525 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0477\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0539 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0470\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0538 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0468\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0523 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0476\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0558 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0484\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0534 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0466\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0556 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0470\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0558 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0468\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0534 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0465\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0546 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0493\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0525 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0473\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0518 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0466\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0570 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0461\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0522 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0465\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0570 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0457\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0558 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0461\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0553 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0463\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0546 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0461\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0552 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0457\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0521 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0451\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0546 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0457\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0525 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0477\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0531 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0450\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0540 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0466\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0540 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0459\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0537 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0455\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0513 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0444\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0550 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0459\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0565 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0518 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0461\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0539 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0501 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0519 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0447\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0528 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0547 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0537 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0521 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0440\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0513 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0460\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0497 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0440\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0525 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0441\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0512 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0440\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0501 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0491 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0446\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0509 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0450\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0539 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0449\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0531 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0430\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0521 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0441\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0512 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0453\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0512 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0519 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0426\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0499 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0430\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0508 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0429\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0507 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0423\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0494 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0476 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0505 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0429\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0519 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0431\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0423\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0498 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0424\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0488 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0476 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0498 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0475 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0417\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0508 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0491 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0491 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0422\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0498 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0414\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0499 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0508 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0496 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0416\n",
            "Epoch 165/200\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0491 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0414\n",
            "Epoch 166/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 167/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0491 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 168/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0450 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 169/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0467 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 170/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0484 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 171/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0484 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 172/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0490 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0407\n",
            "Epoch 173/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0500 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0413\n",
            "Epoch 174/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0487 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0416\n",
            "Epoch 175/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0463 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 176/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0482 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0414\n",
            "Epoch 177/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0473 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0404\n",
            "Epoch 178/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0470 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0408\n",
            "Epoch 179/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0474 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 180/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0402\n",
            "Epoch 181/200\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0470 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 182/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0472 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 183/200\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0460 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 184/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0471 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 185/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0506 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0415\n",
            "Epoch 186/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0473 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 187/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0472 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0398\n",
            "Epoch 188/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0469 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 189/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0452 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 190/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0488 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0407\n",
            "Epoch 191/200\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0442 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 192/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0462 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0407\n",
            "Epoch 193/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0441 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 194/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0464 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 195/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0448 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0435\n",
            "Epoch 196/200\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0481 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 197/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0466 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0393\n",
            "Epoch 198/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0466 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0400\n",
            "Epoch 199/200\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0456 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0394\n",
            "Epoch 200/200\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0456 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1509<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.48MB of 0.48MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "14749dada70d4da7aef03501078388be",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_160020-jgnrteep/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_160020-jgnrteep/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.0034</td></tr><tr><td>mean_squared_error</td><td>0.0034</td></tr><tr><td>mean_absolute_error</td><td>0.04532</td></tr><tr><td>val_loss</td><td>0.00261</td></tr><tr><td>val_mean_squared_error</td><td>0.00261</td></tr><tr><td>val_mean_absolute_error</td><td>0.03988</td></tr><tr><td>_runtime</td><td>220</td></tr><tr><td>_timestamp</td><td>1626192240</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00249</td></tr><tr><td>best_epoch</td><td>196</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">fast-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jgnrteep\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/jgnrteep</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: th0cs9kh with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">valiant-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/th0cs9kh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/th0cs9kh</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_160500-th0cs9kh</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 7s 183ms/step - loss: 0.1566 - mean_squared_error: 0.1566 - mean_absolute_error: 0.3486 - val_loss: 0.0131 - val_mean_squared_error: 0.0131 - val_mean_absolute_error: 0.0910\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0133 - mean_squared_error: 0.0133 - mean_absolute_error: 0.0931 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0636\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0115 - mean_squared_error: 0.0115 - mean_absolute_error: 0.0867 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0700\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0793 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0596\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0732 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0565\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0714 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0557\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0696 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0609\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0634 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0560\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0645 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0544\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0620 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0530\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0607 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0535\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0580 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0579\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0644 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0583\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0587 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0580\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0574 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0540\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0566 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0570\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0575 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0517\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0522 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0517\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0518 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0650\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0576 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0682\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0590 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0551 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0532\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0548 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0565\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0559 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0518 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0534\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0525 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0551 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0565\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0535 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0518\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0553 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0577\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0575 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0573\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0610 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0499\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0485 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0485\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0502 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0513\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0495 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0525\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0484 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0527 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0479\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0513 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0521\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0513 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0475\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 23ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0490 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0482\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0495 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0682\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0569 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0472\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 22ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0522 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0510\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0488 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0469\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0493 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0468\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0510 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0471\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 20ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0509 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0549\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 24ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0503 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0540\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0495 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0608\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0513 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0456\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0511 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0511\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2218<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.89MB of 0.89MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4b7ceb80c7cf4b0a9cb0564b765695b5",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_160500-th0cs9kh/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_160500-th0cs9kh/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.0042</td></tr><tr><td>mean_squared_error</td><td>0.0042</td></tr><tr><td>mean_absolute_error</td><td>0.05172</td></tr><tr><td>val_loss</td><td>0.00421</td></tr><tr><td>val_mean_squared_error</td><td>0.00421</td></tr><tr><td>val_mean_absolute_error</td><td>0.05109</td></tr><tr><td>_runtime</td><td>21</td></tr><tr><td>_timestamp</td><td>1626192321</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.0034</td></tr><tr><td>best_epoch</td><td>48</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▄▃▂▃▂▂▂▂▂▂▂▂▂▃▂▂▂▁▁▂▂▂▁▁▁▂▁▂▁▁▁▁▁▁▂▂▃▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▄▃▂▃▂▂▂▂▂▂▂▂▂▃▂▂▂▁▁▂▂▂▁▁▁▂▁▂▁▁▁▁▁▁▂▂▃▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▅▃▂▃▂▂▂▃▃▃▃▂▂▄▂▂▃▂▂▃▂▃▁▁▂▂▁▂▁▁▁▂▁▁▂▂▃▂</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">valiant-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/th0cs9kh\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/th0cs9kh</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: gn5en2lk with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.4\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">exalted-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/gn5en2lk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/gn5en2lk</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_160529-gn5en2lk</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 10s 160ms/step - loss: 0.1625 - mean_squared_error: 0.1625 - mean_absolute_error: 0.3506 - val_loss: 0.0235 - val_mean_squared_error: 0.0235 - val_mean_absolute_error: 0.1137\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0345 - mean_squared_error: 0.0345 - mean_absolute_error: 0.1482 - val_loss: 0.0310 - val_mean_squared_error: 0.0310 - val_mean_absolute_error: 0.1359\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0303 - mean_squared_error: 0.0303 - mean_absolute_error: 0.1430 - val_loss: 0.0296 - val_mean_squared_error: 0.0296 - val_mean_absolute_error: 0.1331\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0275 - mean_squared_error: 0.0275 - mean_absolute_error: 0.1330 - val_loss: 0.0274 - val_mean_squared_error: 0.0274 - val_mean_absolute_error: 0.1273\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0243 - mean_squared_error: 0.0243 - mean_absolute_error: 0.1260 - val_loss: 0.0267 - val_mean_squared_error: 0.0267 - val_mean_absolute_error: 0.1264\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0230 - mean_squared_error: 0.0230 - mean_absolute_error: 0.1235 - val_loss: 0.0265 - val_mean_squared_error: 0.0265 - val_mean_absolute_error: 0.1269\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0218 - mean_squared_error: 0.0218 - mean_absolute_error: 0.1210 - val_loss: 0.0235 - val_mean_squared_error: 0.0235 - val_mean_absolute_error: 0.1182\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0213 - mean_squared_error: 0.0213 - mean_absolute_error: 0.1189 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1140\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0182 - mean_squared_error: 0.0182 - mean_absolute_error: 0.1085 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1123\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0172 - mean_squared_error: 0.0172 - mean_absolute_error: 0.1060 - val_loss: 0.0197 - val_mean_squared_error: 0.0197 - val_mean_absolute_error: 0.1085\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0176 - mean_squared_error: 0.0176 - mean_absolute_error: 0.1069 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1050\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - mean_absolute_error: 0.1046 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1023\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - mean_absolute_error: 0.1029 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0972\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.1011 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0948\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0134 - mean_squared_error: 0.0134 - mean_absolute_error: 0.0945 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0926\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0935 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0877\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0126 - mean_squared_error: 0.0126 - mean_absolute_error: 0.0907 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0858\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0870 - val_loss: 0.0118 - val_mean_squared_error: 0.0118 - val_mean_absolute_error: 0.0844\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0129 - mean_squared_error: 0.0129 - mean_absolute_error: 0.0913 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0835\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0858 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0786\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0843 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0763\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0105 - mean_squared_error: 0.0105 - mean_absolute_error: 0.0828 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0763\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0104 - mean_squared_error: 0.0104 - mean_absolute_error: 0.0824 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0718\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0097 - mean_squared_error: 0.0097 - mean_absolute_error: 0.0791 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0719\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 3s 104ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0735 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0697\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0727 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0669\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0751 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0661\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0702 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0657\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0735 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0634\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0661 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0627\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0717 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0630\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0694 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0595\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0665 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0592\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0684 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0602\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0647 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0571\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0629 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0577\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0652 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0559\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0681 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0537\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0596 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0548\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0604 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0547\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0603 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0536\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0582 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0539\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0611 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0549\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0616 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0538\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0619 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0522\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0602 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0511\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0554 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0521\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0595 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0511\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0585 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0507\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0565 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0520\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0554 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0518\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0550 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0514\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0559 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0520\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0589 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0509\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0566 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0547 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0590 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0499\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0553 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0569 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0504\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0531 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0500\n",
            "Epoch 61/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0541 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0506\n",
            "Epoch 62/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0549 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 63/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0577 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0501\n",
            "Epoch 64/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0543 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0487\n",
            "Epoch 65/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0515 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 66/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0533 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0500\n",
            "Epoch 67/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0548 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0493\n",
            "Epoch 68/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0552 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0484\n",
            "Epoch 69/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0562 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0501\n",
            "Epoch 70/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0533 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0485\n",
            "Epoch 71/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0559 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0496\n",
            "Epoch 72/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0534 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 73/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0525 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0487\n",
            "Epoch 74/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0514 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 75/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0552 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0487\n",
            "Epoch 76/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0533 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n",
            "Epoch 77/100\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0518 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0487\n",
            "Epoch 78/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0524 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n",
            "Epoch 79/100\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0525 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0485\n",
            "Epoch 80/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0539 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n",
            "Epoch 81/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0549 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0490\n",
            "Epoch 82/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0505 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0492\n",
            "Epoch 83/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0515 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n",
            "Epoch 84/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0541 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 85/100\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0531 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0482\n",
            "Epoch 86/100\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0566 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0489\n",
            "Epoch 87/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0521 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0486\n",
            "Epoch 88/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0558 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0487\n",
            "Epoch 89/100\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0544 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0486\n",
            "Epoch 90/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0549 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0481\n",
            "Epoch 91/100\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0501 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0483\n",
            "Epoch 92/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0534 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0481\n",
            "Epoch 93/100\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0546 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0483\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2429<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.87MB of 0.87MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "f4510e213de349f6b5dea7102e9973e4",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_160529-gn5en2lk/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_160529-gn5en2lk/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>92</td></tr><tr><td>loss</td><td>0.00481</td></tr><tr><td>mean_squared_error</td><td>0.00481</td></tr><tr><td>mean_absolute_error</td><td>0.05491</td></tr><tr><td>val_loss</td><td>0.00379</td></tr><tr><td>val_mean_squared_error</td><td>0.00379</td></tr><tr><td>val_mean_absolute_error</td><td>0.04827</td></tr><tr><td>_runtime</td><td>372</td></tr><tr><td>_timestamp</td><td>1626192701</td></tr><tr><td>_step</td><td>92</td></tr><tr><td>best_val_loss</td><td>0.00375</td></tr><tr><td>best_epoch</td><td>82</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆█▇▆▅▅▄▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▆█▇▆▅▅▄▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆█▇▆▆▅▅▄▄▃▃▃▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">exalted-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/gn5en2lk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/gn5en2lk</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: fhbgpgpv with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">classic-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/fhbgpgpv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/fhbgpgpv</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_161206-fhbgpgpv</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "32/32 [==============================] - 7s 51ms/step - loss: 0.1483 - mean_squared_error: 0.1483 - mean_absolute_error: 0.3297 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0981\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0343 - mean_squared_error: 0.0343 - mean_absolute_error: 0.1483 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1404\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0259 - mean_squared_error: 0.0259 - mean_absolute_error: 0.1293 - val_loss: 0.0246 - val_mean_squared_error: 0.0246 - val_mean_absolute_error: 0.1212\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0233 - mean_squared_error: 0.0233 - mean_absolute_error: 0.1229 - val_loss: 0.0230 - val_mean_squared_error: 0.0230 - val_mean_absolute_error: 0.1179\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0219 - mean_squared_error: 0.0219 - mean_absolute_error: 0.1216 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1124\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0204 - mean_squared_error: 0.0204 - mean_absolute_error: 0.1176 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1059\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0175 - mean_squared_error: 0.0175 - mean_absolute_error: 0.1062 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1021\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.1046 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.0982\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - mean_absolute_error: 0.1025 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0927\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - mean_absolute_error: 0.0990 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0882\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0143 - mean_squared_error: 0.0143 - mean_absolute_error: 0.0984 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0876\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0899 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0808\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0873 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0768\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0834 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0780\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0822 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0723\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0787 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0706\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0770 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0674\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0758 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0633\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0083 - mean_squared_error: 0.0083 - mean_absolute_error: 0.0736 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0656\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0712 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0628\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0685 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0599\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0678 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0564\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0670 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0577\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0629 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0563\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0618 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0542\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0636 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0562\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0599 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0521\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0568 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0536\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0580 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0520\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0571 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0519\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0563 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0577 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0588 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0485\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0560 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0499\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0582 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0489\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0547 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0479\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0565 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0490\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0515 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0485\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0564 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0484\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0558 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0474\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0559 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0489\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0576 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0482\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0530 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0520 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0471\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0551 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0473\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0521 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0462\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0565 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0468\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0519 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0476\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0545 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0472\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0490 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0480\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2841<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.80MB of 0.80MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "dbb94156378042c1ab02481c819c5c0c",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161206-fhbgpgpv/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161206-fhbgpgpv/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00399</td></tr><tr><td>mean_squared_error</td><td>0.00399</td></tr><tr><td>mean_absolute_error</td><td>0.04908</td></tr><tr><td>val_loss</td><td>0.00375</td></tr><tr><td>val_mean_squared_error</td><td>0.00375</td></tr><tr><td>val_mean_absolute_error</td><td>0.04798</td></tr><tr><td>_runtime</td><td>33</td></tr><tr><td>_timestamp</td><td>1626192759</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00351</td></tr><tr><td>best_epoch</td><td>45</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▄█▆▆▅▄▄▄▃▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▄█▆▆▅▄▄▄▃▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▅█▇▆▅▅▅▄▄▄▃▃▃▃▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">classic-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/fhbgpgpv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/fhbgpgpv</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: bvoy2pme with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">misunderstood-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bvoy2pme\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bvoy2pme</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_161248-bvoy2pme</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 10s 176ms/step - loss: 0.0822 - mean_squared_error: 0.0822 - mean_absolute_error: 0.2106 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0462\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0106 - mean_squared_error: 0.0106 - mean_absolute_error: 0.0791 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0476\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0679 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0491\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0627 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0443\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0613 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0450\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0618 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0444\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0539 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0495 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0429\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0504 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0464\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0480 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0421\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0483 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0463 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0385\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0425 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0382\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0421 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0382\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0408 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0371\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0415 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0375\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0388\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0401 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0365\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0386 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0357\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0398 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0354\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0399 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0358\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0369 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0362\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0362 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0358\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0352 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0355\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0347 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0367\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0347 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0344\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0340 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0345\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0337 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0358\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0352 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0340\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0324 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0333\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0340 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0364\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0317 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0340\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0311 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0340\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0453\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0339 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0327\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0329 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0348\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0333 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0328\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0314 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0342\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0370 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0336\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0332 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0331\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0328 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0347\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0320 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0326\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0327 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0350\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0306 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0329\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0313 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0327\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3054<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.58MB of 0.58MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "df2ca68b27b340a096e6176b8bfe5764",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161248-bvoy2pme/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161248-bvoy2pme/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>44</td></tr><tr><td>loss</td><td>0.00189</td></tr><tr><td>mean_squared_error</td><td>0.00189</td></tr><tr><td>mean_absolute_error</td><td>0.03307</td></tr><tr><td>val_loss</td><td>0.00179</td></tr><tr><td>val_mean_squared_error</td><td>0.00179</td></tr><tr><td>val_mean_absolute_error</td><td>0.03266</td></tr><tr><td>_runtime</td><td>188</td></tr><tr><td>_timestamp</td><td>1626192956</td></tr><tr><td>_step</td><td>44</td></tr><tr><td>best_val_loss</td><td>0.00179</td></tr><tr><td>best_epoch</td><td>34</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▇▇█▆▆▆▅▅▅▄▃▃▃▂▃▃▂▂▂▂▂▂▂▁▂▁▁▂▁▁▆▁▁▂▁▁▂▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>▇▇█▆▆▆▅▅▅▄▃▃▃▂▃▃▂▂▂▂▂▂▂▁▂▁▁▂▁▁▆▁▁▂▁▁▂▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇▇█▆▆▆▆▅▅▅▄▃▃▃▃▄▂▂▂▃▂▂▃▂▂▂▁▃▂▂▆▁▁▂▁▁▂▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">misunderstood-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bvoy2pme\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/bvoy2pme</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: rdr0cyt3 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">lemon-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/rdr0cyt3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/rdr0cyt3</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_161604-rdr0cyt3</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 7s 203ms/step - loss: 0.1597 - mean_squared_error: 0.1597 - mean_absolute_error: 0.3583 - val_loss: 0.0720 - val_mean_squared_error: 0.0720 - val_mean_absolute_error: 0.2401\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0383 - mean_squared_error: 0.0383 - mean_absolute_error: 0.1580 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0973\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 2s 114ms/step - loss: 0.0280 - mean_squared_error: 0.0280 - mean_absolute_error: 0.1358 - val_loss: 0.0182 - val_mean_squared_error: 0.0182 - val_mean_absolute_error: 0.1014\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0263 - mean_squared_error: 0.0263 - mean_absolute_error: 0.1324 - val_loss: 0.0219 - val_mean_squared_error: 0.0219 - val_mean_absolute_error: 0.1142\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0253 - mean_squared_error: 0.0253 - mean_absolute_error: 0.1301 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1136\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0221 - mean_squared_error: 0.0221 - mean_absolute_error: 0.1190 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1069\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 2s 117ms/step - loss: 0.0219 - mean_squared_error: 0.0219 - mean_absolute_error: 0.1199 - val_loss: 0.0183 - val_mean_squared_error: 0.0183 - val_mean_absolute_error: 0.1041\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0214 - mean_squared_error: 0.0214 - mean_absolute_error: 0.1184 - val_loss: 0.0174 - val_mean_squared_error: 0.0174 - val_mean_absolute_error: 0.1017\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0213 - mean_squared_error: 0.0213 - mean_absolute_error: 0.1171 - val_loss: 0.0160 - val_mean_squared_error: 0.0160 - val_mean_absolute_error: 0.0974\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 2s 114ms/step - loss: 0.0192 - mean_squared_error: 0.0192 - mean_absolute_error: 0.1156 - val_loss: 0.0149 - val_mean_squared_error: 0.0149 - val_mean_absolute_error: 0.0936\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0178 - mean_squared_error: 0.0178 - mean_absolute_error: 0.1091 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0936\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0173 - mean_squared_error: 0.0173 - mean_absolute_error: 0.1062 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0954\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0169 - mean_squared_error: 0.0169 - mean_absolute_error: 0.1050 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0930\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 2s 115ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.1032 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0881\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - mean_absolute_error: 0.1012 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0863\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0171 - mean_squared_error: 0.0171 - mean_absolute_error: 0.1057 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0849\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 2s 114ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - mean_absolute_error: 0.1015 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0820\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - mean_absolute_error: 0.0966 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0795\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 2s 117ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0941 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0795\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0893 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0784\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0127 - mean_squared_error: 0.0127 - mean_absolute_error: 0.0899 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0755\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0110 - mean_squared_error: 0.0110 - mean_absolute_error: 0.0837 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0752\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0846 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0747\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0830 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0733\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0836 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0707\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0777 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0714\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0098 - mean_squared_error: 0.0098 - mean_absolute_error: 0.0793 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0707\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0795 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0687\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0763 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0675\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0787 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0662\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0746 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0672\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0745 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0670\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0770 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0660\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0770 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0629\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0754 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0635\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0737 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0640\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0729 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0628\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0660 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0621\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0699 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0602\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0696 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0614\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0718 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0620\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0711 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0604\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0668 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0603\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0713 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0600\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0685 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0613\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0705 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0602\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0666 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0595\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0676 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0592\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0653 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0580\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0672 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0583\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0683 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0604\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0683 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0581\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0671 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0572\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0654 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0601\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0683 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0589\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0647 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0576\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0641 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0581\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0645 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0580\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0647 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0574\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0638 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0569\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0635 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0568\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0617 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0577\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0671 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0569\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0625 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0564\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0649 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0569\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0650 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0570\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0640 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0563\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0567 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0563\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0627 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0559\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0628 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0567\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0629 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0572\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0613 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0562\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0610 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0561\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0606 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0566\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 2s 115ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0654 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0562\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0617 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0562\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0584 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0572\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0616 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0560\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0637 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0563\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0652 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0572\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0665 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0565\n",
            "Epoch 82/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0601 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0563\n",
            "Epoch 83/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0578 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0564\n",
            "Epoch 84/100\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0607 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0574\n",
            "Epoch 85/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0637 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0559\n",
            "Epoch 86/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0591 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0553\n",
            "Epoch 87/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0631 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0555\n",
            "Epoch 88/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0585 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0575\n",
            "Epoch 89/100\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0565\n",
            "Epoch 90/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0589 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0559\n",
            "Epoch 91/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0613 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0557\n",
            "Epoch 92/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0569 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0557\n",
            "Epoch 93/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0615 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0552\n",
            "Epoch 94/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0584 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0553\n",
            "Epoch 95/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0609 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0549\n",
            "Epoch 96/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0609 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0562\n",
            "Epoch 97/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0586 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0565\n",
            "Epoch 98/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0606 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0555\n",
            "Epoch 99/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0587 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0553\n",
            "Epoch 100/100\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0600 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0550\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3282<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.65MB of 0.65MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "a0905d8981594b589454de2ac9fd0131",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161604-rdr0cyt3/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161604-rdr0cyt3/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00586</td></tr><tr><td>mean_squared_error</td><td>0.00586</td></tr><tr><td>mean_absolute_error</td><td>0.05991</td></tr><tr><td>val_loss</td><td>0.00483</td></tr><tr><td>val_mean_squared_error</td><td>0.00483</td></tr><tr><td>val_mean_absolute_error</td><td>0.05504</td></tr><tr><td>_runtime</td><td>208</td></tr><tr><td>_timestamp</td><td>1626193172</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00481</td></tr><tr><td>best_epoch</td><td>94</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">lemon-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/rdr0cyt3\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/rdr0cyt3</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ql9bpt04 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dark-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ql9bpt04\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ql9bpt04</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_161944-ql9bpt04</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 11s 159ms/step - loss: 0.1676 - mean_squared_error: 0.1676 - mean_absolute_error: 0.3552 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0758\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0090 - mean_squared_error: 0.0090 - mean_absolute_error: 0.0761 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0620\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0582 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0619\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0521 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0584\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0534 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0603\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0494 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0597\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0474 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0564\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0475 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0584\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0475 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0550\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0457 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0540\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0452 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0616\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0486 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0603\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0463 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0523\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0459 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0520\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0435 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0519\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0416 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0567\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0455 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0492\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0437 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0541\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0435 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0491\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0413 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0500\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0396 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0426 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0522\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0409 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0479\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0415 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0479\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0391 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0471\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0400 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0466\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0399 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0572\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0400 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0575\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0420 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0474\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0382 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0454\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0404 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0451\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0384 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0447\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0458\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0396 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0497\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0403 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0487\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0399 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0494\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0399 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0411 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0405 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0443\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0399 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0433\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0358 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0473\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0382 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0460\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0384 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0451\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0375 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0437\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0389 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0476\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0372 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0426\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0369 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0439\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0377 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0476\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0376 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0449\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0377 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0434\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0351 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0408\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0371 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0375 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0363 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0465\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0355 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0381 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0463\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0347 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0353 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0490\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0370 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0400\n",
            "Epoch 61/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0357 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0428\n",
            "Epoch 62/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0363 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0591\n",
            "Epoch 63/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0366 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 64/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0360 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0397\n",
            "Epoch 65/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0363 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 66/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0363 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 67/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0355 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0473\n",
            "Epoch 68/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0346 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 69/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0351 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0433\n",
            "Epoch 70/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0349 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0390\n",
            "Epoch 71/100\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0343 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0433\n",
            "Epoch 72/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0341 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0390\n",
            "Epoch 73/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0352 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0388\n",
            "Epoch 74/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0356 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0420\n",
            "Epoch 75/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0322 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0390\n",
            "Epoch 76/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0349 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 77/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0354 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0423\n",
            "Epoch 78/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0350 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 79/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0363 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0385\n",
            "Epoch 80/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0341 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 81/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0339 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0398\n",
            "Epoch 82/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0367 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 83/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0350 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0414\n",
            "Epoch 84/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0348 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0495\n",
            "Epoch 85/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0355 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 86/100\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0351 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0387\n",
            "Epoch 87/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0341 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0383\n",
            "Epoch 88/100\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0346 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 89/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0348 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 90/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0340 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 91/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0347 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0383\n",
            "Epoch 92/100\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0360 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0415\n",
            "Epoch 93/100\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0316 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 94/100\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0334 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 95/100\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0354 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0383\n",
            "Epoch 96/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0327 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0383\n",
            "Epoch 97/100\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0327 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0386\n",
            "Epoch 98/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0341 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0397\n",
            "Epoch 99/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0333 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 100/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0346 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0446\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3681<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.05MB of 1.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3d8c1f8d66324b73ad465ddd28a468aa",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161944-ql9bpt04/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_161944-ql9bpt04/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00186</td></tr><tr><td>mean_squared_error</td><td>0.00186</td></tr><tr><td>mean_absolute_error</td><td>0.03335</td></tr><tr><td>val_loss</td><td>0.00327</td></tr><tr><td>val_mean_squared_error</td><td>0.00327</td></tr><tr><td>val_mean_absolute_error</td><td>0.04457</td></tr><tr><td>_runtime</td><td>408</td></tr><tr><td>_timestamp</td><td>1626193592</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.0024</td></tr><tr><td>best_epoch</td><td>94</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▄▄▅▃▄▃▃▂▂▄▂▃▃▂▂▂▂▂▂▂▁▃▂▁▂▂▁▂▂▁▁▃▁▁▁▁▁▂</td></tr><tr><td>val_mean_squared_error</td><td>█▅▄▄▅▃▄▃▃▂▂▄▂▃▃▂▂▂▂▂▂▂▁▃▂▁▂▂▁▂▂▁▁▃▁▁▁▁▁▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▅▅▄▄▄▃▃▃▅▂▃▃▂▂▂▃▃▂▂▂▃▂▁▃▂▁▂▂▁▁▃▁▁▂▁▁▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dark-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ql9bpt04\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/ql9bpt04</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: x7ondoy4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">summer-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/x7ondoy4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/x7ondoy4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_162727-x7ondoy4</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "16/16 [==============================] - 6s 89ms/step - loss: 0.1843 - mean_squared_error: 0.1843 - mean_absolute_error: 0.3578 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1081\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0339 - mean_squared_error: 0.0339 - mean_absolute_error: 0.1472 - val_loss: 0.0265 - val_mean_squared_error: 0.0265 - val_mean_absolute_error: 0.1245\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0246 - mean_squared_error: 0.0246 - mean_absolute_error: 0.1233 - val_loss: 0.0227 - val_mean_squared_error: 0.0227 - val_mean_absolute_error: 0.1176\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0174 - mean_squared_error: 0.0174 - mean_absolute_error: 0.1077 - val_loss: 0.0165 - val_mean_squared_error: 0.0165 - val_mean_absolute_error: 0.0997\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0935 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0809\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0116 - mean_squared_error: 0.0116 - mean_absolute_error: 0.0862 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0772\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0764 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0665\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0707 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0593\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0663 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0563\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0616 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0543\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0595 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0540\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0550 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0509\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0555 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0493\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0518 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0524 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0484\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0535 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0482 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0474\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0516 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0492\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0471 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0505 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0498\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0491 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0477\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0502 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0489 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0505 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0478\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0453 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0481\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0477 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0477\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 0s 17ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0459 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0480\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4124<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.91MB of 0.91MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "054cf01da54c476bb57d62cf2c50ee4e",
              "version_major": 2,
              "version_minor": 0
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162727-x7ondoy4/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162727-x7ondoy4/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>26</td></tr><tr><td>loss</td><td>0.00345</td></tr><tr><td>mean_squared_error</td><td>0.00345</td></tr><tr><td>mean_absolute_error</td><td>0.04637</td></tr><tr><td>val_loss</td><td>0.00376</td></tr><tr><td>val_mean_squared_error</td><td>0.00376</td></tr><tr><td>val_mean_absolute_error</td><td>0.04799</td></tr><tr><td>_runtime</td><td>18</td></tr><tr><td>_timestamp</td><td>1626193665</td></tr><tr><td>_step</td><td>26</td></tr><tr><td>best_val_loss</td><td>0.00372</td></tr><tr><td>best_epoch</td><td>16</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr><tr><td>loss</td><td>█▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆█▇▅▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▆█▇▅▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▇█▇▆▄▄▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">summer-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/x7ondoy4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/x7ondoy4</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: z8mdhwzz with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: sgd\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fine-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/z8mdhwzz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/z8mdhwzz</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_162754-z8mdhwzz</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "32/32 [==============================] - 6s 49ms/step - loss: 0.2318 - mean_squared_error: 0.2318 - mean_absolute_error: 0.4272 - val_loss: 0.0581 - val_mean_squared_error: 0.0581 - val_mean_absolute_error: 0.1991\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0374 - mean_squared_error: 0.0374 - mean_absolute_error: 0.1563 - val_loss: 0.0313 - val_mean_squared_error: 0.0313 - val_mean_absolute_error: 0.1328\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0347 - mean_squared_error: 0.0347 - mean_absolute_error: 0.1503 - val_loss: 0.0352 - val_mean_squared_error: 0.0352 - val_mean_absolute_error: 0.1447\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0318 - mean_squared_error: 0.0318 - mean_absolute_error: 0.1429 - val_loss: 0.0337 - val_mean_squared_error: 0.0337 - val_mean_absolute_error: 0.1418\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0301 - mean_squared_error: 0.0301 - mean_absolute_error: 0.1405 - val_loss: 0.0315 - val_mean_squared_error: 0.0315 - val_mean_absolute_error: 0.1367\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0270 - mean_squared_error: 0.0270 - mean_absolute_error: 0.1304 - val_loss: 0.0297 - val_mean_squared_error: 0.0297 - val_mean_absolute_error: 0.1325\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0275 - mean_squared_error: 0.0275 - mean_absolute_error: 0.1329 - val_loss: 0.0277 - val_mean_squared_error: 0.0277 - val_mean_absolute_error: 0.1279\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0266 - mean_squared_error: 0.0266 - mean_absolute_error: 0.1329 - val_loss: 0.0263 - val_mean_squared_error: 0.0263 - val_mean_absolute_error: 0.1245\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0246 - mean_squared_error: 0.0246 - mean_absolute_error: 0.1253 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1233\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0231 - mean_squared_error: 0.0231 - mean_absolute_error: 0.1223 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1206\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0211 - mean_squared_error: 0.0211 - mean_absolute_error: 0.1182 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1164\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0208 - mean_squared_error: 0.0208 - mean_absolute_error: 0.1151 - val_loss: 0.0215 - val_mean_squared_error: 0.0215 - val_mean_absolute_error: 0.1129\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0202 - mean_squared_error: 0.0202 - mean_absolute_error: 0.1172 - val_loss: 0.0211 - val_mean_squared_error: 0.0211 - val_mean_absolute_error: 0.1126\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0192 - mean_squared_error: 0.0192 - mean_absolute_error: 0.1132 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1055\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 0s 16ms/step - loss: 0.0182 - mean_squared_error: 0.0182 - mean_absolute_error: 0.1096 - val_loss: 0.0172 - val_mean_squared_error: 0.0172 - val_mean_absolute_error: 0.1004\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0183 - mean_squared_error: 0.0183 - mean_absolute_error: 0.1098 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.0998\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0165 - mean_squared_error: 0.0165 - mean_absolute_error: 0.1053 - val_loss: 0.0164 - val_mean_squared_error: 0.0164 - val_mean_absolute_error: 0.0989\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.1045 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0975\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0966 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0921\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0145 - mean_squared_error: 0.0145 - mean_absolute_error: 0.0990 - val_loss: 0.0141 - val_mean_squared_error: 0.0141 - val_mean_absolute_error: 0.0919\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0139 - mean_squared_error: 0.0139 - mean_absolute_error: 0.0948 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0906\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0127 - mean_squared_error: 0.0127 - mean_absolute_error: 0.0901 - val_loss: 0.0126 - val_mean_squared_error: 0.0126 - val_mean_absolute_error: 0.0868\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0128 - mean_squared_error: 0.0128 - mean_absolute_error: 0.0912 - val_loss: 0.0127 - val_mean_squared_error: 0.0127 - val_mean_absolute_error: 0.0877\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0117 - mean_squared_error: 0.0117 - mean_absolute_error: 0.0856 - val_loss: 0.0119 - val_mean_squared_error: 0.0119 - val_mean_absolute_error: 0.0850\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0860 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0814\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0825 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0815\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0778 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0766\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0776 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0757\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0814 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0727\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0091 - mean_squared_error: 0.0091 - mean_absolute_error: 0.0760 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0728\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0086 - mean_squared_error: 0.0086 - mean_absolute_error: 0.0750 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0727\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0740 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0709\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0707 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0695\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0710 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0670\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0701 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0667\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0687 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0663\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0702 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0636\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0677 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0614\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0685 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0588\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0643 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0602\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0628 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0592\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0617 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0575\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0634 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0578\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0602 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0570\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0575 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0564\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0614 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0564\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0630 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0549\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0592 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0565\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0628 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0553\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0595 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0548\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4266<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.22MB of 0.22MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "0b088b3272a54871a647418380a2cd0c",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162754-z8mdhwzz/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162754-z8mdhwzz/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00546</td></tr><tr><td>mean_squared_error</td><td>0.00546</td></tr><tr><td>mean_absolute_error</td><td>0.05823</td></tr><tr><td>val_loss</td><td>0.0049</td></tr><tr><td>val_mean_squared_error</td><td>0.0049</td></tr><tr><td>val_mean_absolute_error</td><td>0.05482</td></tr><tr><td>_runtime</td><td>35</td></tr><tr><td>_timestamp</td><td>1626193709</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.0049</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▅▅▄▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▅▅▄▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▅▅▅▄▄▄▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">fine-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/z8mdhwzz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/z8mdhwzz</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: pc2f5m2s with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">upbeat-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/pc2f5m2s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/pc2f5m2s</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_162859-pc2f5m2s</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "32/32 [==============================] - 7s 55ms/step - loss: 0.0969 - mean_squared_error: 0.0969 - mean_absolute_error: 0.2394 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0608\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0603 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0559\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0560 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0577\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0496 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0508\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0521 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0488\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0467 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0538\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0482 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0474\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0445 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0466\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0454 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0457\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0447 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0460\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0477 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0454\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0472 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0469\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0450 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0495\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0450 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0427 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0424\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0429 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0485\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0429 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0442 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0445 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0408 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0402\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0407 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0400\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0406 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0394\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0404 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0439\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0421 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0484\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0415 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0385\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0405 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0387\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0386 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0394\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0411 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0427 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0434\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0400 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0391\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0384 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0374\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0387 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0406 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0407 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0382\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0365\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 1s 20ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0391 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0378\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0387 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0372\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0367 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0361\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0361 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0360\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0369 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0354\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0352 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0355\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0377 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0382 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0435\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0371 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0362\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0368 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0346\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 1s 17ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0337 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0345\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0334 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0366\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 1s 19ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0363 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0367 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0619\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 1s 18ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0391 - val_loss: 0.0018 - val_mean_squared_error: 0.0018 - val_mean_absolute_error: 0.0339\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4476<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 1.09MB of 1.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "08da03f30f9a4cb99250d6cd291c661b",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162859-pc2f5m2s/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162859-pc2f5m2s/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00215</td></tr><tr><td>mean_squared_error</td><td>0.00215</td></tr><tr><td>mean_absolute_error</td><td>0.03601</td></tr><tr><td>val_loss</td><td>0.00184</td></tr><tr><td>val_mean_squared_error</td><td>0.00184</td></tr><tr><td>val_mean_absolute_error</td><td>0.03386</td></tr><tr><td>_runtime</td><td>45</td></tr><tr><td>_timestamp</td><td>1626193784</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00184</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▇▅▆▄▄▄▃▄▅▃▄▃▃▃▂▂▃▄▂▂▂▃▂▂▂▂▂▂▁▁▁▂▃▁▁▂▂▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▇▅▆▄▄▄▃▄▅▃▄▃▃▃▂▂▃▄▂▂▂▃▂▂▂▂▂▂▁▁▁▂▃▁▁▂▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▇▅▆▅▄▄▄▄▅▄▅▄▄▃▃▂▄▅▂▂▃▃▂▂▃▂▂▂▂▂▁▃▃▂▁▂▃▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">upbeat-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/pc2f5m2s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/pc2f5m2s</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: w7fmfv9u with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 25\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">genial-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w7fmfv9u\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w7fmfv9u</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_162958-w7fmfv9u</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 10s 159ms/step - loss: 0.0339 - mean_squared_error: 0.0339 - mean_absolute_error: 0.1362 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0403\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0509 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0396\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0402 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0420 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0395\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0379 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0389\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0363 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0386\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0358 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0371\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0336 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0387\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0379 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0361\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0338 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0357\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0336 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0444\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0348 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0344\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0333 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0367\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0312 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0347\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0322 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0337\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0299 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0346\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0302 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0354\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0332 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0340\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0303 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0398\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0309 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0343\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0325 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0435\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0334 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0345\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0300 - val_loss: 0.0020 - val_mean_squared_error: 0.0020 - val_mean_absolute_error: 0.0347\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0314 - val_loss: 0.0019 - val_mean_squared_error: 0.0019 - val_mean_absolute_error: 0.0334\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0278 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0405\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4678<br/>Program ended successfully."
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "VBox(children=(Label(value=' 0.51MB of 0.51MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "794a7292566c427d827f6a4a4648fa68",
              "version_minor": 0,
              "version_major": 2
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162958-w7fmfv9u/logs/debug.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210713_162958-w7fmfv9u/logs/debug-internal.log</code>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>24</td></tr><tr><td>loss</td><td>0.00132</td></tr><tr><td>mean_squared_error</td><td>0.00132</td></tr><tr><td>mean_absolute_error</td><td>0.02794</td></tr><tr><td>val_loss</td><td>0.00265</td></tr><tr><td>val_mean_squared_error</td><td>0.00265</td></tr><tr><td>val_mean_absolute_error</td><td>0.04046</td></tr><tr><td>_runtime</td><td>115</td></tr><tr><td>_timestamp</td><td>1626193913</td></tr><tr><td>_step</td><td>24</td></tr><tr><td>best_val_loss</td><td>0.00187</td></tr><tr><td>best_epoch</td><td>14</td></tr></table>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▁▂▂▁▁▁</td></tr><tr><td>val_loss</td><td>▅▅▅▅▄▄▃▄▂▂█▂▃▂▁▂▂▁▅▁▇▂▂▁▅</td></tr><tr><td>val_mean_squared_error</td><td>▅▅▅▅▄▄▃▄▂▂█▂▃▂▁▂▂▁▅▁▇▂▂▁▅</td></tr><tr><td>val_mean_absolute_error</td><td>▅▅▆▅▄▄▃▄▃▂█▂▃▂▁▂▂▁▅▂▇▂▂▁▅</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▂▃▃▃▄▄▄▅▅▅▅▆▆▆▇▇▇▇██</td></tr></table><br/>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 0 artifact file(s) and 2 other file(s)"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">genial-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w7fmfv9u\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/w7fmfv9u</a><br/>\n",
              "                "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 3uyvlws2 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \thidden_size: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tinput_size: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.10.33<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fallen-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/sweeps/htfcfvq8</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/3uyvlws2\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU/runs/3uyvlws2</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210713_163208-3uyvlws2</code><br/><br/>\n",
              "            "
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 10s 162ms/step - loss: 0.1328 - mean_squared_error: 0.1328 - mean_absolute_error: 0.2930 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0581\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0743 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0487\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0601 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0467\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0585 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0513\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0631 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0527\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 130ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0541 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0665\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0517 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0547\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0561 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0535\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0517 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0459\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0527 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0453\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0492 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0486\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0509 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0541 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0424\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 4s 130ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0510 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0549\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0480 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0527\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0489 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0472 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0498 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0420\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0477 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0435\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0462 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0467 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0400\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0443 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0496\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0467 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0578\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0475 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0587\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0456 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0427\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0432 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0458 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0430\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0461 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0421\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0455 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0448\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0446 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0468 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0385\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0442 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0379\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0414 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0423\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0431 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0468\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0446 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0408 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0438\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0401 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0443 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0413 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0364\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0414 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0412 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0440\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0416 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0374\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0410 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0428\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0406 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0367\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0399 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0387\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0389 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0369\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0378 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0364\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0422 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0394\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0425 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0386 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0548\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "15178bf708ec43afb98e60a5c5b868c9",
            "d4956adb0f1a4816a56d67054d29adb1",
            "a70f409ec80946a1975e995b7f282af1",
            "92f6ccd688124d11ae08428ac03c5372",
            "36c09978ce27480cbf9d7d0666281500",
            "16751e9999844939940ddfd65465dc87",
            "5b516e94613b4403be32d3b9724e165e",
            "b555547ed7ac4ff49223e47fc79c0b05",
            "8c72f38e9ab54dbab931bf87ffc8645c",
            "c2a7d649ff274b8ba74066de2eb0126b",
            "82696170736f4d55a048a05a93b53488",
            "8acf633ac7bd49ee996d3d29bba211b3",
            "6539c1d9cb85450eb5d8fc0e9ae69274",
            "6cd2ec70f4624a51832cfdddbdaa16cd",
            "ba1631a3fdf2474c9d829620671d88a5",
            "4100a577d0ea4096888a73eb102bad08",
            "3ca7753611e7419a88688b891477382d",
            "f3d93659feda4970a3f1e7e50d3beda6",
            "d5147321b54740b59004d283067e3455",
            "ca4aa1d72d9e43eb8b88aac265c4c7b8",
            "ecc8a9c6a0a9465aae646261aebd7200",
            "7130d4fa0a56477891722694d29298ee",
            "de1c26aafc714aeb872ce7b70bce9ddf",
            "b0fafe70bbdf44e38b440d3d572f445c",
            "868979c07d2a4b20b77b7f9c525ea511",
            "0f4d51b26142454ba104493baadb7017",
            "c1d29d0207494efd8a2ea1c7cebc5f62",
            "c2e6cb48ccdf4f0d92a8241eb7ad369d",
            "596503f7d8634b94bb779c4122d65672",
            "14bcfb9a3a304ea2ad831e8db1be81e0",
            "2583957fb5d44b8cb0ec5bcd0a24eba3",
            "521fb5fa267e448280166c95e7f8d966",
            "a0ea1d52fecc4edab4c793b336fc7946",
            "aada402522af4190be0df0404b2f88a2",
            "967b418003e34eeca6713e3656a4134f",
            "1b6b43b358044f2e9331fbe74417e02d",
            "73c3135f0ca145389c7893acdc6a0c2d",
            "28c0ce21d82946509ff6c1579848818f",
            "8d9d33ecf8f048e2848917adf0874eb5",
            "2c95da44d87444e99ea351a56caf371e",
            "14749dada70d4da7aef03501078388be",
            "eb43f31cae96487087abd5f9ef0c1c1d",
            "b09828347e88413b852a4f37d9c336a2",
            "52cacf5a0e69482597627d83f30aa96f",
            "76ed595a123149feab6ac47db5174d9a",
            "740e9baedb5c4fca8163a2f56d660ff7",
            "4a71baf9dee24b5cbb09871023f9dc87",
            "b4e097cd1d0547439cf63497e29ffc77",
            "4b7ceb80c7cf4b0a9cb0564b765695b5",
            "2e6fbf8aab0b4548a10003551ac39c50",
            "dc252e109b2848c1a2d3e95e456b44bd",
            "fa4cdef0a2864c6aafa4f507eacb2655",
            "1ecc4c54150f465998389cf6d294599c",
            "e0c1791bf96e45cf9de4075a496104a4",
            "1c0c3dbf915c4f71a414f98f24d27fe7",
            "28340a2c927c4a4d87f9f8dbe22729e9",
            "f4510e213de349f6b5dea7102e9973e4",
            "2fe3e7cf743c426ca3c0f9835c16c503",
            "5544c9edaf8f4513a317b5cc1755e139",
            "c8cf1190f6884d3c8b43f7eeae799649",
            "e2eae05ba6864a3aa644cc879171597a",
            "c3a041c192af43c7b5dc8d4eccaea4d8",
            "e84676efe9b749f48ca8ec63e633bb71",
            "9f57bb620d4e4177a1c8c3555d88b280",
            "dbb94156378042c1ab02481c819c5c0c",
            "41a305adea7e40a9b8834d028a1d3df8",
            "e67c187ff18a4481b6e660b515005f01",
            "b0b015271cbc4db7953912a11b42f5ae",
            "bd8ddd92331243d1a0f6b0bf031db351",
            "0d61d1c1435c4797979c9d7ae8e0caad",
            "516894183ab443a8bad36f3944d25783",
            "fb5a55a4f4e04ca9b6c639cc21bd5232",
            "df2ca68b27b340a096e6176b8bfe5764",
            "233924c45fc74e198f1f565ba532b8f5",
            "eb3aba8f33074b949b0cdf518dd31d24",
            "5c2bff8b204e4ff883bd7d1fb8956678",
            "683503a6000349ed916fb9037ecd8111",
            "83ad38eccb66430da97269e9c086f6ad",
            "ab954f038dee4dff8b201f7afcdf6a55",
            "7b9528be3e404ebcab861076bd1cea8a",
            "a0905d8981594b589454de2ac9fd0131",
            "3f9305cb58e642b1870b95adc81d62c1",
            "2d71927ff9504051889e00244efe2d9b",
            "13108be0ff094d13b558e984d18313d4",
            "4e331a9c6cc34b0c8fc7630b94abea04",
            "b86058e00d0f455996dad9883a63c5c4",
            "00545f2e220447ae83ef424abf10acdb",
            "c99f7705143e423d88dac254e6a68509",
            "3d8c1f8d66324b73ad465ddd28a468aa",
            "fb01a21b0c19411c8cc158973dc751d4",
            "7da86f657e544979ad1ebea051f953f2",
            "56d48295f1c7419b8c642d82fc063873",
            "1303711adde84cbf9957ffa1d36c20fa",
            "2d13daff394c440cadba0e6abd518976",
            "4c025e3f6d5840989d4db7d63cfc1074",
            "ba47594f82294cb4905c6f13a59a5582",
            "054cf01da54c476bb57d62cf2c50ee4e",
            "f48173f2aadc4c4682ae11adad10f1e2",
            "4639e858496548539b2497fcb76985da",
            "afa42146955a472f9255ac087d23cbe8",
            "4b5c280496ef47dfafc9c67d28bdad3a",
            "c020954047ee407b8d3cc951d7274f68",
            "c3f0be22833e4115b8972340df8c52c2",
            "57224a27f7434342b43a0c8979c2646d",
            "0b088b3272a54871a647418380a2cd0c",
            "e4c9d4f5d67b463bb50e71e77fde4570",
            "75a116d5977242e396d45a3b080afc8f",
            "79ec7d07105d44e7aa2b8858d0bc9dda",
            "d9361b4c374b445eaacf58f041ca87dd",
            "6a43cf2bf0154f1e93335b2e635ab7e9",
            "bfbaa9d0c76743d3ae4eac50d2f0fea9",
            "0d714ca852dd4ac0ac00f2bf3a4036cd",
            "08da03f30f9a4cb99250d6cd291c661b",
            "1fc08db927f747929ffa794f0d53744f",
            "d6dc9d78f4e946b8b36000bb11837098",
            "35346ba2752549458f4be029a86f266d",
            "d71a2ac7009847b2a13faa7605cacd31",
            "d58e97d02d634baaaf56c2fc5033a84b",
            "c8206403799e40eca932ca742197d595",
            "22f7d6c86e7a4037a002cc2a4ac4a960",
            "794a7292566c427d827f6a4a4648fa68",
            "277bb92fe1e64f4a9ae35b29f240b5a3",
            "086427ace1f54e099a7533850ddeabfc",
            "75140de6807248cfa4c06c5d2946da72",
            "63f73488580e45c088052de4e2bdf1ec",
            "456bb5bd53c04b27b50212de2faec9f8",
            "67bdaf41e4d14ac6884d98de22be88ba",
            "3f9831175cf94f9fbffbb8cb4839ce0e"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "281f4459-ab81-4dbb-c124-c250955512f4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ],
      "metadata": {
        "id": "gFTu29dbi18i"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "source": [
        "best_config = {\n",
        "        'epochs': 200,\n",
        "        'batch_size': 32,\n",
        "        'dropout': 0.4,\n",
        "        'input_size': 100,\n",
        "        'hidden_size': 50,\n",
        "        'learning_rate': 0.001,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'selu',\n",
        "    }"
      ],
      "outputs": [],
      "metadata": {}
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# input layer\n",
        "model.add(GRU(units=100, return_sequences=True, input_shape=(window_len, 1), activation='selu'))\n",
        "model.add(Dropout(0.4))\n",
        "# hidden layer\n",
        "model.add(GRU(units=50))\n",
        "model.add(Dropout(0.4))\n",
        "model.add(Dense(units=1))\n",
        "\n",
        "# defining the optimiser\n",
        "optimizer = keras.optimizers.Nadam(learning_rate=0.001)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Total number of trainable parameters:  53751\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "165a4784-7c90-4f7a-f87e-fdcb212571d4"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=200, batch_size=32)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/200\n",
            "40/40 [==============================] - 8s 96ms/step - loss: 0.0594\n",
            "Epoch 2/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0108\n",
            "Epoch 3/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0086\n",
            "Epoch 4/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0086\n",
            "Epoch 5/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0070\n",
            "Epoch 6/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0071\n",
            "Epoch 7/200\n",
            "40/40 [==============================] - 4s 90ms/step - loss: 0.0064\n",
            "Epoch 8/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0066\n",
            "Epoch 9/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0060\n",
            "Epoch 10/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0057\n",
            "Epoch 11/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0057\n",
            "Epoch 12/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0049\n",
            "Epoch 13/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0052\n",
            "Epoch 14/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0053\n",
            "Epoch 15/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0041\n",
            "Epoch 16/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0043\n",
            "Epoch 17/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0045\n",
            "Epoch 18/200\n",
            "40/40 [==============================] - 4s 102ms/step - loss: 0.0043\n",
            "Epoch 19/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0042\n",
            "Epoch 20/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0038\n",
            "Epoch 21/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0041\n",
            "Epoch 22/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0036\n",
            "Epoch 23/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0037\n",
            "Epoch 24/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0040\n",
            "Epoch 25/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0033\n",
            "Epoch 26/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0039\n",
            "Epoch 27/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0035\n",
            "Epoch 28/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0028\n",
            "Epoch 29/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0035\n",
            "Epoch 30/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0030\n",
            "Epoch 31/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0031\n",
            "Epoch 32/200\n",
            "40/40 [==============================] - 4s 103ms/step - loss: 0.0030\n",
            "Epoch 33/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0031\n",
            "Epoch 34/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0026\n",
            "Epoch 35/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0028\n",
            "Epoch 36/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0027\n",
            "Epoch 37/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0026\n",
            "Epoch 38/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0026\n",
            "Epoch 39/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0025\n",
            "Epoch 40/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0023\n",
            "Epoch 41/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0023\n",
            "Epoch 42/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0021\n",
            "Epoch 43/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0023\n",
            "Epoch 44/200\n",
            "40/40 [==============================] - 4s 93ms/step - loss: 0.0025\n",
            "Epoch 45/200\n",
            "40/40 [==============================] - 4s 93ms/step - loss: 0.0022\n",
            "Epoch 46/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0022\n",
            "Epoch 47/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0020\n",
            "Epoch 48/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0021\n",
            "Epoch 49/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0019\n",
            "Epoch 50/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0019\n",
            "Epoch 51/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0021\n",
            "Epoch 52/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0020\n",
            "Epoch 53/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0018\n",
            "Epoch 54/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0018\n",
            "Epoch 55/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0018\n",
            "Epoch 56/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0019\n",
            "Epoch 57/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0017\n",
            "Epoch 58/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0018\n",
            "Epoch 59/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0015\n",
            "Epoch 60/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0017\n",
            "Epoch 61/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0018\n",
            "Epoch 62/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0017\n",
            "Epoch 63/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0017\n",
            "Epoch 64/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0016\n",
            "Epoch 65/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0017\n",
            "Epoch 66/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 67/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0016\n",
            "Epoch 68/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0017\n",
            "Epoch 69/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0016\n",
            "Epoch 70/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0016\n",
            "Epoch 71/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0015\n",
            "Epoch 72/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0017\n",
            "Epoch 73/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0015\n",
            "Epoch 74/200\n",
            "40/40 [==============================] - 4s 93ms/step - loss: 0.0014\n",
            "Epoch 75/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0017\n",
            "Epoch 76/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0015\n",
            "Epoch 77/200\n",
            "40/40 [==============================] - 4s 93ms/step - loss: 0.0014\n",
            "Epoch 78/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0015\n",
            "Epoch 79/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0014\n",
            "Epoch 80/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 81/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0014\n",
            "Epoch 82/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0017\n",
            "Epoch 83/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0015\n",
            "Epoch 84/200\n",
            "40/40 [==============================] - 4s 93ms/step - loss: 0.0014\n",
            "Epoch 85/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0015\n",
            "Epoch 86/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0014\n",
            "Epoch 87/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0016\n",
            "Epoch 88/200\n",
            "40/40 [==============================] - 4s 102ms/step - loss: 0.0014\n",
            "Epoch 89/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0015\n",
            "Epoch 90/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0014\n",
            "Epoch 91/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0015\n",
            "Epoch 92/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0015\n",
            "Epoch 93/200\n",
            "40/40 [==============================] - 4s 93ms/step - loss: 0.0014\n",
            "Epoch 94/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 95/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 96/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0013\n",
            "Epoch 97/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 98/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0015\n",
            "Epoch 99/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0015\n",
            "Epoch 100/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0015\n",
            "Epoch 101/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0015\n",
            "Epoch 102/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0014\n",
            "Epoch 103/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 104/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0013\n",
            "Epoch 105/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0015\n",
            "Epoch 106/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0014\n",
            "Epoch 107/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0014\n",
            "Epoch 108/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0016\n",
            "Epoch 109/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0013\n",
            "Epoch 110/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 111/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0012\n",
            "Epoch 112/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0015\n",
            "Epoch 113/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0014\n",
            "Epoch 114/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0014\n",
            "Epoch 115/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 116/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 117/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0014\n",
            "Epoch 118/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0015\n",
            "Epoch 119/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0014\n",
            "Epoch 120/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0012\n",
            "Epoch 121/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 122/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 123/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0014\n",
            "Epoch 124/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0016\n",
            "Epoch 125/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 126/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 127/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 128/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0015\n",
            "Epoch 129/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0013\n",
            "Epoch 130/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0014\n",
            "Epoch 131/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0014\n",
            "Epoch 132/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0013\n",
            "Epoch 133/200\n",
            "40/40 [==============================] - 4s 101ms/step - loss: 0.0012\n",
            "Epoch 134/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 135/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0015\n",
            "Epoch 136/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0012\n",
            "Epoch 137/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0015\n",
            "Epoch 138/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0015\n",
            "Epoch 139/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0014\n",
            "Epoch 140/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 141/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0013\n",
            "Epoch 142/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0013\n",
            "Epoch 143/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0014\n",
            "Epoch 144/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0015\n",
            "Epoch 145/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0013\n",
            "Epoch 146/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0014\n",
            "Epoch 147/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0013\n",
            "Epoch 148/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 149/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0013\n",
            "Epoch 150/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0016\n",
            "Epoch 151/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0012\n",
            "Epoch 152/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0014\n",
            "Epoch 153/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0012\n",
            "Epoch 154/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0014\n",
            "Epoch 155/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0013\n",
            "Epoch 156/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0013\n",
            "Epoch 157/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0014\n",
            "Epoch 158/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0013\n",
            "Epoch 159/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0014\n",
            "Epoch 160/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 161/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 162/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 163/200\n",
            "40/40 [==============================] - 4s 95ms/step - loss: 0.0012\n",
            "Epoch 164/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0016\n",
            "Epoch 165/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0016\n",
            "Epoch 166/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0015\n",
            "Epoch 167/200\n",
            "40/40 [==============================] - 4s 104ms/step - loss: 0.0013\n",
            "Epoch 168/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0013\n",
            "Epoch 169/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0013\n",
            "Epoch 170/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0013\n",
            "Epoch 171/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0013\n",
            "Epoch 172/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0012\n",
            "Epoch 173/200\n",
            "40/40 [==============================] - 4s 102ms/step - loss: 0.0014\n",
            "Epoch 174/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0013\n",
            "Epoch 175/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 176/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0013\n",
            "Epoch 177/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 178/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0014\n",
            "Epoch 179/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0013\n",
            "Epoch 180/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0012\n",
            "Epoch 181/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0014\n",
            "Epoch 182/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 183/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0015\n",
            "Epoch 184/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0013\n",
            "Epoch 185/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0013\n",
            "Epoch 186/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0013\n",
            "Epoch 187/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0016\n",
            "Epoch 188/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0012\n",
            "Epoch 189/200\n",
            "40/40 [==============================] - 4s 99ms/step - loss: 0.0013\n",
            "Epoch 190/200\n",
            "40/40 [==============================] - 4s 97ms/step - loss: 0.0013\n",
            "Epoch 191/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0014\n",
            "Epoch 192/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0013\n",
            "Epoch 193/200\n",
            "40/40 [==============================] - 4s 94ms/step - loss: 0.0013\n",
            "Epoch 194/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 195/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0014\n",
            "Epoch 196/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0013\n",
            "Epoch 197/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0012\n",
            "Epoch 198/200\n",
            "40/40 [==============================] - 4s 96ms/step - loss: 0.0014\n",
            "Epoch 199/200\n",
            "40/40 [==============================] - 4s 98ms/step - loss: 0.0012\n",
            "Epoch 200/200\n",
            "40/40 [==============================] - 4s 100ms/step - loss: 0.0013\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f3f67879550>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "822947e9-d3ac-4f78-9af4-071e1decd5ac"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "outputs": [],
      "metadata": {
        "id": "rTXJN51l9Y-F"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ],
      "metadata": {
        "id": "H-D-XHyRjFMp"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": ""
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "e59760b8-34d2-455a-b131-f1699a7a8b24"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<IPython.core.display.Image object>"
            ],
            "image/png": ""
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ],
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 644
        },
        "outputId": "03964af1-4e6f-4608-8ac1-7df15acf8b5c"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MSE:  0.0014508989775100852\n",
            "RMSE:  0.03809066785329558\n",
            "MAE:  0.030087983861459763\n"
          ]
        }
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "276279d0-9c46-457b-d607-e8484d7a3b61"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE:'+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n')\n",
        "error_file.close()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive/\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "WARNING:absl:Found untraced functions such as gru_cell_1_layer_call_and_return_conditional_losses, gru_cell_1_layer_call_fn, gru_cell_1_layer_call_fn, gru_cell_1_layer_call_and_return_conditional_losses, gru_cell_1_layer_call_and_return_conditional_losses while saving (showing 5 of 5). These functions will not be directly callable after loading.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_Treasury10y/assets\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_Treasury10y/assets\n"
          ]
        }
      ],
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "305c4b3a-5141-482f-a910-26058615ee4a"
      }
    }
  ]
}