{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "GRU_LSTM_EURCHF.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPcwn8oLE4v5XrXHy9Tte3Y",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "ee25221f9140447ba6c3c302ac01f771": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_97c4b034d8594796930b31eed50b1f1e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_83b7880a02db42f09c966101341e8459",
              "IPY_MODEL_e6bdf7e0447e4bd286334fe0fce8796e"
            ]
          }
        },
        "97c4b034d8594796930b31eed50b1f1e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "83b7880a02db42f09c966101341e8459": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_e3a7ecfa4af346baa9236fa778d221ba",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.84MB of 0.84MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_555be9943b354afe9a024ee1b0c91397"
          }
        },
        "e6bdf7e0447e4bd286334fe0fce8796e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_209ac5fc1d3c446cacf8e0fede717981",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c6feee63c59a4e2f98fd53d5d1085c37"
          }
        },
        "e3a7ecfa4af346baa9236fa778d221ba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "555be9943b354afe9a024ee1b0c91397": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "209ac5fc1d3c446cacf8e0fede717981": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c6feee63c59a4e2f98fd53d5d1085c37": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "caae7538896f4c4b8a0179aa814c369a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b46c428e4ff44e238e8dfc842af33b15",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a219dbe248cc4add9b112d72ba9fbd4b",
              "IPY_MODEL_59f0505dfb264947af8b2896e51e91dd"
            ]
          }
        },
        "b46c428e4ff44e238e8dfc842af33b15": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a219dbe248cc4add9b112d72ba9fbd4b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_0a550c344e3f46bfbdb718266dabb331",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.85MB of 0.85MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_572c266e53004678b55c1e211b982dea"
          }
        },
        "59f0505dfb264947af8b2896e51e91dd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b790cfcd04684926b806c7f90401cd9c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d1ba62deb62543c9985e1e303dbbdbbb"
          }
        },
        "0a550c344e3f46bfbdb718266dabb331": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "572c266e53004678b55c1e211b982dea": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b790cfcd04684926b806c7f90401cd9c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d1ba62deb62543c9985e1e303dbbdbbb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ca64138244024774ba5514e965032c12": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_703179fb8f9440719a6224a5e9d0966d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3aa402daa6214c648e7f89d18bc640f9",
              "IPY_MODEL_6a594830c221496391b89de8019f7e62"
            ]
          }
        },
        "703179fb8f9440719a6224a5e9d0966d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3aa402daa6214c648e7f89d18bc640f9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_f42303b66d1f449e9ea6ce9cd72c66fc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.87MB of 0.87MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_00043d68261f4de2aa53c39f853e519a"
          }
        },
        "6a594830c221496391b89de8019f7e62": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_bc9f11f910c745918e72c55b4d8bb7ee",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_43efde0c5a5f4c22af06af1c47556421"
          }
        },
        "f42303b66d1f449e9ea6ce9cd72c66fc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "00043d68261f4de2aa53c39f853e519a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bc9f11f910c745918e72c55b4d8bb7ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "43efde0c5a5f4c22af06af1c47556421": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3a0a10f3f2a044c6989d694f3ef5092f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_adcba9d28d944c21a9bcf5425a65fceb",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_4444242335b846e98c7baae9f773f964",
              "IPY_MODEL_6b805f3cae024829bd046e926ceef5b2"
            ]
          }
        },
        "adcba9d28d944c21a9bcf5425a65fceb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4444242335b846e98c7baae9f773f964": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_fd2b307b4b7f48ba99db53c89bb84afe",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.90MB of 0.90MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ae2a59a8548a47a7994184afaea61f69"
          }
        },
        "6b805f3cae024829bd046e926ceef5b2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_29eb01608d4943819a124e684f886d40",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_cf1bb7a0175c4be9a677f3d3fb027350"
          }
        },
        "fd2b307b4b7f48ba99db53c89bb84afe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ae2a59a8548a47a7994184afaea61f69": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "29eb01608d4943819a124e684f886d40": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "cf1bb7a0175c4be9a677f3d3fb027350": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ff076f5623204bd5802e38d498387055": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e1ef8f8af0e24435924833dc7b05afe3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a43be94a260d4c039de63c3f9a4c78cf",
              "IPY_MODEL_69d48131d5024a999cfb5fab96afd3aa"
            ]
          }
        },
        "e1ef8f8af0e24435924833dc7b05afe3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a43be94a260d4c039de63c3f9a4c78cf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_3b4e461f449f46d995ef6105bc7bdd12",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.74MB of 0.74MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e608f8c8c97b42e6a19b41b3d8ad96a3"
          }
        },
        "69d48131d5024a999cfb5fab96afd3aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9e641b25b780402580c3678a3909ef0a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4e91b0d878a94898b86064b02eb76674"
          }
        },
        "3b4e461f449f46d995ef6105bc7bdd12": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e608f8c8c97b42e6a19b41b3d8ad96a3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9e641b25b780402580c3678a3909ef0a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4e91b0d878a94898b86064b02eb76674": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "00605a77740044c9ae53992b0d74b074": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_62acd9e873014a59a49b6caec64f4c87",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_b72d459c9be84d079756c09d7518c24f",
              "IPY_MODEL_68218778767a48178d1debb418c04ea3"
            ]
          }
        },
        "62acd9e873014a59a49b6caec64f4c87": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b72d459c9be84d079756c09d7518c24f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_0456ec58e45f43c082098b76ef926500",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.95MB of 0.95MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a1094d8d4ec348d69e886e5912f9d72e"
          }
        },
        "68218778767a48178d1debb418c04ea3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_4bb72b5f39154a4dabec30a62f422df0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a8b86532817f47e48a8e05ad25dd27f4"
          }
        },
        "0456ec58e45f43c082098b76ef926500": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a1094d8d4ec348d69e886e5912f9d72e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4bb72b5f39154a4dabec30a62f422df0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a8b86532817f47e48a8e05ad25dd27f4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7c415426de94459eb17459f78863e9d1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c96dd44458fe4965899e5312d6249389",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_dad2800cf8c340af900599e2995ed2b0",
              "IPY_MODEL_6a0f3e432f4349ba9d529ecc5609d57e"
            ]
          }
        },
        "c96dd44458fe4965899e5312d6249389": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dad2800cf8c340af900599e2995ed2b0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_21f503802faf4957babee414906a81e3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.98MB of 0.98MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_cb4fcc2c8b164fbcb10019f9518aeaa8"
          }
        },
        "6a0f3e432f4349ba9d529ecc5609d57e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_08f1737613294926beca24014368eb92",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a7e555e58913416dbecfec135909600a"
          }
        },
        "21f503802faf4957babee414906a81e3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "cb4fcc2c8b164fbcb10019f9518aeaa8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "08f1737613294926beca24014368eb92": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a7e555e58913416dbecfec135909600a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "33662b77e7114c479b5d5628b3591eb9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a76582b4bd8e40babcbd89021b11b707",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_526b4b8c01bf462d98698c8d7bf98244",
              "IPY_MODEL_b4113f3ce14c4652be18bef16b323201"
            ]
          }
        },
        "a76582b4bd8e40babcbd89021b11b707": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "526b4b8c01bf462d98698c8d7bf98244": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_00df06bbbe354560a613a89e94c39bce",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.82MB of 0.82MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_11b88fc5ffde498d85af4d5a1853f79b"
          }
        },
        "b4113f3ce14c4652be18bef16b323201": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_bad193d7942e48f5b40d73ce9c6109ca",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_40ac09bf898a40158b5fe0e82c46b7a1"
          }
        },
        "00df06bbbe354560a613a89e94c39bce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "11b88fc5ffde498d85af4d5a1853f79b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bad193d7942e48f5b40d73ce9c6109ca": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "40ac09bf898a40158b5fe0e82c46b7a1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "905ed0a0196f41baa203618a7fe5a95b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_46e3e3085bb240ec9fda779b88e042d2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_cd36ec7afffa467fa8596ef0a28c39e9",
              "IPY_MODEL_6ba2cfb014ef4f94aaec300d55ae2d9a"
            ]
          }
        },
        "46e3e3085bb240ec9fda779b88e042d2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cd36ec7afffa467fa8596ef0a28c39e9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_52c557e2b99f40e8a871b68eddca9c7d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.85MB of 0.85MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2375206e8d124ac6b3bb4360faefcbae"
          }
        },
        "6ba2cfb014ef4f94aaec300d55ae2d9a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6eb9eaac9664433681d3f571dbaccf4d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1d08a9114154468aa34a4234770cd70a"
          }
        },
        "52c557e2b99f40e8a871b68eddca9c7d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2375206e8d124ac6b3bb4360faefcbae": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6eb9eaac9664433681d3f571dbaccf4d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1d08a9114154468aa34a4234770cd70a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c734f774695b4dc8ad4e4d7990331175": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3edf2a64b65a45a194750496b5888201",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_be189eddf2ec4853a11c8d34da4424fc",
              "IPY_MODEL_cf16a5e07ad44e01bd2f1b35e8987670"
            ]
          }
        },
        "3edf2a64b65a45a194750496b5888201": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "be189eddf2ec4853a11c8d34da4424fc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_727d119e5d444ff991c12400d4b17e1a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.89MB of 0.89MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_73f63a34cd9146a2b559dd0d07ac3281"
          }
        },
        "cf16a5e07ad44e01bd2f1b35e8987670": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_07c41c879b2d47298128b6b06ebaceee",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_75a119013f934382bd6f2a0e86c5a79c"
          }
        },
        "727d119e5d444ff991c12400d4b17e1a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "73f63a34cd9146a2b559dd0d07ac3281": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "07c41c879b2d47298128b6b06ebaceee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "75a119013f934382bd6f2a0e86c5a79c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ef442d5343c54ddea91a02a1d4a2155d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_06e7b7ee930442efb5a918fdba80a589",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_ac99b7b8e9de49ac82affe4dc5578626",
              "IPY_MODEL_41a1eae7643c423dbf9d7ad1b475356e"
            ]
          }
        },
        "06e7b7ee930442efb5a918fdba80a589": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ac99b7b8e9de49ac82affe4dc5578626": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_127f416de8c14ded863a338d44e1a2bc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.08MB of 1.08MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3a6ae9380d8442e08b3a44182fd8ab29"
          }
        },
        "41a1eae7643c423dbf9d7ad1b475356e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_c1dbb00c28744ef59ab0090792742d50",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c6d6cb50410d4f0fa3ced495efb7efbb"
          }
        },
        "127f416de8c14ded863a338d44e1a2bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3a6ae9380d8442e08b3a44182fd8ab29": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c1dbb00c28744ef59ab0090792742d50": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c6d6cb50410d4f0fa3ced495efb7efbb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a9270c940bad4c389470c1879556ee80": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_29d2ae9fae33484588020668bac45a14",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d7336cebc93a422795e5d4e1418c3a9c",
              "IPY_MODEL_1c253c3b399244f79d962306dbadd167"
            ]
          }
        },
        "29d2ae9fae33484588020668bac45a14": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d7336cebc93a422795e5d4e1418c3a9c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_46ebbd3595cc4833b49064b7510cb31f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 0.92MB of 0.92MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_90b91a5871c343478803989232303259"
          }
        },
        "1c253c3b399244f79d962306dbadd167": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_21358c37f5054342905d4aeee355ea39",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_36345a045d9a414cb0a6d38586550f38"
          }
        },
        "46ebbd3595cc4833b49064b7510cb31f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "90b91a5871c343478803989232303259": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "21358c37f5054342905d4aeee355ea39": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "36345a045d9a414cb0a6d38586550f38": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b4af440fd8af456eae3464fdeba8c955": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_6f9e2500cf414f4c90bac2561a13241a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_92b0b1234e004e1db4619ccae174d162",
              "IPY_MODEL_2890fe41f4f34cc0941c20571bbddf5a"
            ]
          }
        },
        "6f9e2500cf414f4c90bac2561a13241a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "92b0b1234e004e1db4619ccae174d162": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2f863ec1ef494142bf5634a7b55e6a64",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.13MB of 1.13MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ab137226d2c14638810ca24027dc54a0"
          }
        },
        "2890fe41f4f34cc0941c20571bbddf5a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_de321cb2fb1b437e8098d23091d2e9ce",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_32225f0f042343a3b3f07acc8fc13675"
          }
        },
        "2f863ec1ef494142bf5634a7b55e6a64": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ab137226d2c14638810ca24027dc54a0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "de321cb2fb1b437e8098d23091d2e9ce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "32225f0f042343a3b3f07acc8fc13675": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4d712f6174ad46e9b262fd4d89c86327": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_25d60e4ce4d04025a6ae04444dc7a0c7",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_2a86749c007c460d8fbfaa7a54c34954",
              "IPY_MODEL_591b35461e6f432aa72a9f01358280dc"
            ]
          }
        },
        "25d60e4ce4d04025a6ae04444dc7a0c7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2a86749c007c460d8fbfaa7a54c34954": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8c36c19d45874dd1883f7aea3503019d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.22MB of 1.22MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_7314c4e234224da19603d06055f359bf"
          }
        },
        "591b35461e6f432aa72a9f01358280dc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_2aaf211747ad4b2283419c26b80e71aa",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_44486a7b2ed44c71989e55d5ce8304c4"
          }
        },
        "8c36c19d45874dd1883f7aea3503019d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "7314c4e234224da19603d06055f359bf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2aaf211747ad4b2283419c26b80e71aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "44486a7b2ed44c71989e55d5ce8304c4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d4edb7b85ae54de188e6c0ba4de31a08": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_030537ddf2804b6ea2b9cb8e84a2017b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_517fbb5cb7c84225933c31e73f0810b9",
              "IPY_MODEL_3a4e3a9f07154c39816da566ff798478"
            ]
          }
        },
        "030537ddf2804b6ea2b9cb8e84a2017b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "517fbb5cb7c84225933c31e73f0810b9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d987c8838b9c4695b189b575a8b0e55e",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.23MB of 1.23MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_394be6c5f0f444f5add9e1ec0a697f03"
          }
        },
        "3a4e3a9f07154c39816da566ff798478": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0bf864b9ee5f480ab21d6ed0a60d496d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1d673195eef44a69af0cb33bd3ae006b"
          }
        },
        "d987c8838b9c4695b189b575a8b0e55e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "394be6c5f0f444f5add9e1ec0a697f03": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0bf864b9ee5f480ab21d6ed0a60d496d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1d673195eef44a69af0cb33bd3ae006b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "785dcc5e97024e0eb589a31c9d67da86": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_09f279b8171e4b809cfe36fe3ce839f9",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7717e47bfe534a50b944c2da325c11a0",
              "IPY_MODEL_451744e04fbe428aab4beb6be9b0bd54"
            ]
          }
        },
        "09f279b8171e4b809cfe36fe3ce839f9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7717e47bfe534a50b944c2da325c11a0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_9d29b3767b0c46c69d5e71d18f62cd9a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.26MB of 1.26MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_05af53125639426b8a4ca51b295d693f"
          }
        },
        "451744e04fbe428aab4beb6be9b0bd54": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_767cd8a58b354dc9a9a75edc889c1725",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6491ba75a7824820aa5466bfda23135b"
          }
        },
        "9d29b3767b0c46c69d5e71d18f62cd9a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "05af53125639426b8a4ca51b295d693f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "767cd8a58b354dc9a9a75edc889c1725": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6491ba75a7824820aa5466bfda23135b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7294a1e992c941ba8ff0eb52d9401292": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_44a174bb349a4fa6bd294c769db12c44",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_046827b8ed5e4e6ab1be41c153aa1e65",
              "IPY_MODEL_8466e0871ce34d13a265443b526faf71"
            ]
          }
        },
        "44a174bb349a4fa6bd294c769db12c44": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "046827b8ed5e4e6ab1be41c153aa1e65": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_447d2eaf74e74177b644f842ebca4c5d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.30MB of 1.30MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_24272c6374c341419a5bdef2eae6492c"
          }
        },
        "8466e0871ce34d13a265443b526faf71": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_9bb6ee2e25b049cbb31904c712c78a25",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e19249f8e7cc4bf7aa29035fe94691d7"
          }
        },
        "447d2eaf74e74177b644f842ebca4c5d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "24272c6374c341419a5bdef2eae6492c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9bb6ee2e25b049cbb31904c712c78a25": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e19249f8e7cc4bf7aa29035fe94691d7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "441590961ce24fa99c58dbbc7e2d0040": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_48bdd4f5c21f4a9d9222040010eee656",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_999a0293a39e4e9da3f280510568b43c",
              "IPY_MODEL_e6e5ee0bcfbd407e84b6979a1d92d4cf"
            ]
          }
        },
        "48bdd4f5c21f4a9d9222040010eee656": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "999a0293a39e4e9da3f280510568b43c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_853eb1c4faec48fbbbe5a825c4b98830",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.31MB of 1.31MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b444864af3494425ba76045a71cafc30"
          }
        },
        "e6e5ee0bcfbd407e84b6979a1d92d4cf": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e67bde11320f42e6bd634cd5669285bc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_afdd297e878d488ab387b20555f8158d"
          }
        },
        "853eb1c4faec48fbbbe5a825c4b98830": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b444864af3494425ba76045a71cafc30": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e67bde11320f42e6bd634cd5669285bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "afdd297e878d488ab387b20555f8158d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "092bd26d6c1242ab83e3a4b9115682aa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_06b258d594a14afaa62d0837b3d9abf3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_98aebe650d9a4a0f9801ab8ce3f67569",
              "IPY_MODEL_e7699ad9cee040d088507bd4b537ed6d"
            ]
          }
        },
        "06b258d594a14afaa62d0837b3d9abf3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "98aebe650d9a4a0f9801ab8ce3f67569": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_ccaf1b91bd024ffc84ae34c252c25ccc",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.34MB of 1.34MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ff96501c55f84980a824f7210ddb5e35"
          }
        },
        "e7699ad9cee040d088507bd4b537ed6d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6a7f9820dc8e4f3ca72874cdab7324d6",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_62f6f9301bba4366ae7ac2297b8a6e3b"
          }
        },
        "ccaf1b91bd024ffc84ae34c252c25ccc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ff96501c55f84980a824f7210ddb5e35": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6a7f9820dc8e4f3ca72874cdab7324d6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "62f6f9301bba4366ae7ac2297b8a6e3b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "600bfc2fa8f24583891d6b706bbd42b8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0a065aa1a5764f4d839ea3e9216202ea",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_28bd293214b64ac0bd13d999624edfde",
              "IPY_MODEL_0eca7dc1f1c64a2ba2c8c2081f536aea"
            ]
          }
        },
        "0a065aa1a5764f4d839ea3e9216202ea": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "28bd293214b64ac0bd13d999624edfde": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_2c52df07fd1c413490b555809d0fafe0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.37MB of 1.37MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5269ce30346a4e0bb9fc7decf1b5c1a3"
          }
        },
        "0eca7dc1f1c64a2ba2c8c2081f536aea": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_af36c9b72f234b4cbb6fdca91e3fc8e3",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a95b5b1b4ad44df888c362550f14a503"
          }
        },
        "2c52df07fd1c413490b555809d0fafe0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5269ce30346a4e0bb9fc7decf1b5c1a3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "af36c9b72f234b4cbb6fdca91e3fc8e3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a95b5b1b4ad44df888c362550f14a503": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "16e7b1e1b9c54b94bcce0bd47677bdeb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d490628ef2e8470cac372637f18dcc84",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_a7a93ba296ad4fa7a2212fe27e5d7214",
              "IPY_MODEL_1c72e23752334a5b8670b72d76747e1f"
            ]
          }
        },
        "d490628ef2e8470cac372637f18dcc84": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a7a93ba296ad4fa7a2212fe27e5d7214": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_5e6c5d33a3b44cb480c34dbbe62f8c8b",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.42MB of 1.42MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_91fc001b9bd746eca7f9852698466621"
          }
        },
        "1c72e23752334a5b8670b72d76747e1f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_46c26f694e5345cf8a249f603aacba5c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3db86185e43a444f88a41e0d43de9e12"
          }
        },
        "5e6c5d33a3b44cb480c34dbbe62f8c8b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "91fc001b9bd746eca7f9852698466621": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "46c26f694e5345cf8a249f603aacba5c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3db86185e43a444f88a41e0d43de9e12": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "88c7541ca08f455897a26e3ba192e3fd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b3ce419c4cfd4b8fbb46c0a55bb449c8",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5cb923b2d3b847889eed7cb35b43abb8",
              "IPY_MODEL_f44f34e5648c47bf9a2f84081b4a8e31"
            ]
          }
        },
        "b3ce419c4cfd4b8fbb46c0a55bb449c8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5cb923b2d3b847889eed7cb35b43abb8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_8085503bf59c4612a869e11286564ceb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.43MB of 1.43MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f4b49460dfa54a45bbcb3c91c089ed7c"
          }
        },
        "f44f34e5648c47bf9a2f84081b4a8e31": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_835ca3ec609f4a2ea9e10093eb994b19",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_491f7e002e10463b8878285f9638cad8"
          }
        },
        "8085503bf59c4612a869e11286564ceb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f4b49460dfa54a45bbcb3c91c089ed7c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "835ca3ec609f4a2ea9e10093eb994b19": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "491f7e002e10463b8878285f9638cad8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "41d899a3c0064a43a3f4dbb648f6eec9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a532bcb25c614386bac462e51c860758",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_bd9caf9a5ef744558d6a4c834b8e5a5e",
              "IPY_MODEL_aa2f2b1ceffe4c3ba0846f5995ef7226"
            ]
          }
        },
        "a532bcb25c614386bac462e51c860758": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bd9caf9a5ef744558d6a4c834b8e5a5e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_c0bd79ee215b43ec8e7f16a8e7e162b9",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.46MB of 1.46MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_38f3cc311071459e976cdac92b3c5e2d"
          }
        },
        "aa2f2b1ceffe4c3ba0846f5995ef7226": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_501490e60f34477a8f80a906797b97e8",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ae765f0afd1c483887738a1f7196be48"
          }
        },
        "c0bd79ee215b43ec8e7f16a8e7e162b9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "38f3cc311071459e976cdac92b3c5e2d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "501490e60f34477a8f80a906797b97e8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ae765f0afd1c483887738a1f7196be48": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "cdd4a21ed19447d2aa2df2ec72be5c03": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_78a1dcd35df84d29ba369a387ea76f13",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e24222ba62df4e1f9b74b5aa5a56162f",
              "IPY_MODEL_b0b7f24ec4ca421f81a14a58b1678181"
            ]
          }
        },
        "78a1dcd35df84d29ba369a387ea76f13": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e24222ba62df4e1f9b74b5aa5a56162f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_6a4e399dc99a460ea8d8455160d32275",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.47MB of 1.47MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ed8c0a4b77d143f985173a24727bc1e2"
          }
        },
        "b0b7f24ec4ca421f81a14a58b1678181": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_6e0fffac6cdb46629409ed9aaf4e8eac",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9378b14ab8ed4c0cb800f864debc1c8e"
          }
        },
        "6a4e399dc99a460ea8d8455160d32275": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ed8c0a4b77d143f985173a24727bc1e2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6e0fffac6cdb46629409ed9aaf4e8eac": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9378b14ab8ed4c0cb800f864debc1c8e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "805455528baa46bda7c850e421e9464e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_1b299d6083234451a7801fd0850891ac",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_10d2b8d4cd4747b7a75b0d839c439560",
              "IPY_MODEL_c0da7331cb894f91ad153d308f5fb399"
            ]
          }
        },
        "1b299d6083234451a7801fd0850891ac": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "10d2b8d4cd4747b7a75b0d839c439560": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_d2c6dd8509594c93ba9f62b6b0b1b090",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.48MB of 1.48MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d923e6956f4f41dbbf96d661c1393708"
          }
        },
        "c0da7331cb894f91ad153d308f5fb399": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5fb627db38984615a4b04aad4c796f27",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f24e9df9c00f457cbd25817dcd7df328"
          }
        },
        "d2c6dd8509594c93ba9f62b6b0b1b090": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d923e6956f4f41dbbf96d661c1393708": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5fb627db38984615a4b04aad4c796f27": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f24e9df9c00f457cbd25817dcd7df328": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e3402613fbd944d0b91f0780888468b6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_b78e4af773274ec78867585df1a76ba1",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_c6c77b204b3b4c47bc0197855ba77099",
              "IPY_MODEL_6a574419e190499dae38b8ef77e051b6"
            ]
          }
        },
        "b78e4af773274ec78867585df1a76ba1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c6c77b204b3b4c47bc0197855ba77099": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "LabelModel",
          "state": {
            "_view_name": "LabelView",
            "style": "IPY_MODEL_56e81c73654f4262b03755310eaa107f",
            "_dom_classes": [],
            "description": "",
            "_model_name": "LabelModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1.54MB of 1.54MB uploaded (0.00MB deduped)\r",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c0eb367ef0694097a3fca14ccb65b185"
          }
        },
        "6a574419e190499dae38b8ef77e051b6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b26774b0ff3a4f5b93e7bb7280f55159",
            "_dom_classes": [],
            "description": "",
            "_model_name": "FloatProgressModel",
            "bar_style": "",
            "max": 1,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f0e663bd9cab43bdbb3bf3a270ce0b78"
          }
        },
        "56e81c73654f4262b03755310eaa107f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c0eb367ef0694097a3fca14ccb65b185": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b26774b0ff3a4f5b93e7bb7280f55159": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f0e663bd9cab43bdbb3bf3a270ce0b78": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acse-2020/acse2020-acse9-finalreport-acse-jaq15/blob/main/notebooks/GRU_LSTM/GRU_LSTM_EURCHF.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5F7GfFTgUo3"
      },
      "source": [
        "# Imports\n",
        "\n",
        "The cells below handle all the necessary imports to run our models, making use of the public repo feeder_repo, linked <!-- [Text](link) -->\n",
        "[here](https://github.com/acse-jaq15/feeder_repo)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HWy9Ay1SGzWa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "05e9b47a-bb33-40cc-b053-aad88ec6ecfe"
      },
      "source": [
        "# clone the feeder repo to get data_reader module and financial time series data\n",
        "!git clone https://github.com/acse-jaq15/feeder_repo.git"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cloning into 'feeder_repo'...\n",
            "remote: Enumerating objects: 147, done.\u001b[K\n",
            "remote: Counting objects: 100% (147/147), done.\u001b[K\n",
            "remote: Compressing objects: 100% (142/142), done.\u001b[K\n",
            "remote: Total 147 (delta 71), reused 6 (delta 2), pack-reused 0\u001b[K\n",
            "Receiving objects: 100% (147/147), 120.19 KiB | 5.22 MiB/s, done.\n",
            "Resolving deltas: 100% (71/71), done.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ChlUNYaiHGM2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "caafd24b-2f19-4fe4-ce3a-846521a7fc42"
      },
      "source": [
        "# using '%' to enforce a permanent change of directory\n",
        "%cd feeder_repo/"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/content/feeder_repo\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "saD-jpvPIfZ8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "637f131d-0e4b-4107-8173-d52678e1d6ca"
      },
      "source": [
        "# checking contents listed correctly, should read:\n",
        "# baseline_model.py data data_reader.py LICENSE README.md security_plotter.py\n",
        "!ls"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "base_model.py  data  data_reader.py  LICENSE  README.md  security_plotter.py\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fRqkwo6kZUz_"
      },
      "source": [
        "import math\n",
        "import sys\n",
        "import keras\n",
        "import os\n",
        "import matplotlib.dates as mdates\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import GRU\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import *\n",
        "from keras.utils.layer_utils import count_params\n",
        "from keras.utils.vis_utils import plot_model\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.model_selection import train_test_split\n",
        "from keras.callbacks import EarlyStopping, Callback\n",
        "from keras.optimizers import RMSprop, SGD, Adam, Nadam\n",
        "from keras.initializers import random_normal"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hzVhwND1HAlw"
      },
      "source": [
        "# appending path with 'feeder_repo' string\n",
        "sys.path.append('feeder_repo')\n",
        "\n",
        "# import Data_Reader class from data_reader module\n",
        "from feeder_repo.data_reader import Data_Reader\n",
        "# import Baseline_Model class from base_model module\n",
        "from feeder_repo.base_model import Base_Model\n",
        "# import Security_Plotter class from security_plotter module\n",
        "from feeder_repo.security_plotter import Security_Plotter"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6-tNDlXuhiCU",
        "outputId": "76f6b43d-6ee8-4928-fd46-23b362aaa188"
      },
      "source": [
        "# checking if the notebook is running on a GPU\n",
        "gpu_info = !nvidia-smi\n",
        "gpu_info = '\\n'.join(gpu_info)\n",
        "if gpu_info.find('failed') >= 0:\n",
        "    print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n",
        "    print('and then re-execute this cell.')\n",
        "else:\n",
        "    print(gpu_info)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mon Jul 19 15:55:35 2021       \n",
            "+-----------------------------------------------------------------------------+\n",
            "| NVIDIA-SMI 470.42.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n",
            "|-------------------------------+----------------------+----------------------+\n",
            "| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n",
            "| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n",
            "|                               |                      |               MIG M. |\n",
            "|===============================+======================+======================|\n",
            "|   0  Tesla V100-SXM2...  Off  | 00000000:00:04.0 Off |                    0 |\n",
            "| N/A   34C    P0    23W / 300W |      0MiB / 16160MiB |      0%      Default |\n",
            "|                               |                      |                  N/A |\n",
            "+-------------------------------+----------------------+----------------------+\n",
            "                                                                               \n",
            "+-----------------------------------------------------------------------------+\n",
            "| Processes:                                                                  |\n",
            "|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n",
            "|        ID   ID                                                   Usage      |\n",
            "|=============================================================================|\n",
            "|  No running processes found                                                 |\n",
            "+-----------------------------------------------------------------------------+\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WB9wD4Aahs8_"
      },
      "source": [
        "# Handling the data\n",
        "Here the Data_Reader class is used to read the time series data and extract training, test and validation sets, along with the relevant X and y values."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vBlKerL-c4-3"
      },
      "source": [
        "# storing the file to be read as a string\n",
        "in_str = 'EURCHF'\n",
        "# storing the year of the time series to be used as test data\n",
        "in_yr = 2019\n",
        "# creating a variable to store the model name\n",
        "model_str = 'GRU_LSTM'\n",
        "# setting our window_length to be 30 days\n",
        "window_len = 30"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hfQJbuBk0vW0"
      },
      "source": [
        "# creating an instance of Data_Reader class\n",
        "in_data = Data_Reader(in_str, in_yr)\n",
        "# calling class method extract_train_test to generate training and test datasets\n",
        "in_data.extract_train_test()\n",
        "# calling class method extract_xy to generate X and y training and test datasets\n",
        "in_data.extract_xy(window_len)\n",
        "\n",
        "# assigning X_train and y_train\n",
        "X_train = in_data.X_train\n",
        "y_train = in_data.y_train\n",
        "\n",
        "# assigning X_test and y_test\n",
        "X_test = in_data.X_test\n",
        "y_test = in_data.y_test\n",
        "\n",
        "# assigning X_val_train and y_val_train\n",
        "X_val_train = in_data.X_val_train\n",
        "y_val_train = in_data.y_val_train\n",
        "\n",
        "# assigning X_val_test and y_val_test\n",
        "X_val_test = in_data.X_val_test\n",
        "y_val_test = in_data.y_val_test"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "X53Fp1Gwh88_"
      },
      "source": [
        "# Setting up wandb itegration\n",
        "Here wandb is used to perform hyperparameter tuning."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aE6cdrSDiHhq",
        "outputId": "d28423c7-68e0-4bf8-d1a7-f8a9db6bdf0f"
      },
      "source": [
        "# installing the wandb library and importing\n",
        "%pip install wandb -q\n",
        "import wandb\n",
        "from wandb.keras import WandbCallback"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[K     |████████████████████████████████| 1.8MB 15.1MB/s \n",
            "\u001b[K     |████████████████████████████████| 174kB 36.8MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 36.0MB/s \n",
            "\u001b[K     |████████████████████████████████| 102kB 13.9MB/s \n",
            "\u001b[K     |████████████████████████████████| 143kB 51.0MB/s \n",
            "\u001b[K     |████████████████████████████████| 71kB 10.8MB/s \n",
            "\u001b[?25h  Building wheel for pathtools (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Building wheel for subprocess32 (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "\u001b[31mERROR: requests 2.23.0 has requirement urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1, but you'll have urllib3 1.26.6 which is incompatible.\u001b[0m\n",
            "\u001b[31mERROR: datascience 0.10.6 has requirement folium==0.2.1, but you'll have folium 0.8.3 which is incompatible.\u001b[0m\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pbgZaoQDiIKX"
      },
      "source": [
        "!pip install wandb -qq"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1WHkW0XyiKVL",
        "outputId": "ba903a16-fd48-4d5a-87a8-51d32db62f87"
      },
      "source": [
        "# logging in so the hyperparameter tunings sweeps can be saved\n",
        "!wandb login"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/requests/__init__.py:91: RequestsDependencyWarning: urllib3 (1.26.6) or chardet (3.0.4) doesn't match a supported version!\n",
            "  RequestsDependencyWarning)\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter: \n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j91IBGuSid5w"
      },
      "source": [
        "# configuring the sweep, making use of a random search methodology\n",
        "sweep_config = {\n",
        "    'method': 'random', #grid, random\n",
        "    'metric': {\n",
        "      'name': 'mse',\n",
        "      'goal': 'minimize'   \n",
        "    },\n",
        "    'parameters': {\n",
        "        'epochs': {\n",
        "            'values': [50, 100, 200]\n",
        "        },\n",
        "        'batch_size': {\n",
        "            'values': [128, 64, 32]\n",
        "        },\n",
        "        'learning_rate': {\n",
        "            'values': [0.005, 0.001, 0.0005]\n",
        "        },\n",
        "        'dropout': {\n",
        "            'values': [0.1, 0.2, 0.3]\n",
        "        },\n",
        "        'optimizer': {\n",
        "            'values': ['adam', 'nadam', 'rmsprop']\n",
        "        },\n",
        "        'activation': {\n",
        "            'values': ['tanh', 'relu', 'selu']\n",
        "        }\n",
        "    }\n",
        "}"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "V0Sr9HsorH4E"
      },
      "source": [
        "# wandb calls this training function to run through the hyperparameter search\n",
        "def train():\n",
        "    # default values for searching\n",
        "    config_defaults = {\n",
        "        'epochs': 100,\n",
        "        'batch_size': 32,\n",
        "        'learning_rate': 0.005,\n",
        "        'optimizer': 'adam',\n",
        "        'activation': 'tanh',\n",
        "        'momentum': 0.9,\n",
        "        'seed': 42\n",
        "    }\n",
        "\n",
        "    # Initialize a new wandb run\n",
        "    wandb.init(config=config_defaults)\n",
        "    \n",
        "    # Config is a variable that holds and saves hyperparameters and inputs\n",
        "    config = wandb.config\n",
        "\n",
        "    # setting keras model to sequential mode\n",
        "    model = Sequential()\n",
        "\n",
        "    # layer 1\n",
        "    model.add(GRU(units=64, activation=config.activation, return_sequences=True, input_shape=(window_len, 1)))\n",
        "    model.add(Dropout(config.dropout))\n",
        "    # layer 2\n",
        "    model.add(LSTM(units=64, activation=config.activation))\n",
        "    model.add(Dropout(0.1))\n",
        "    # layer 3\n",
        "    model.add(Dense(1))\n",
        "\n",
        "    # Define the optimizer\n",
        "    if config.optimizer=='sgd':\n",
        "      optimizer = SGD(learning_rate=config.learning_rate, decay=1e-5, momentum=config.momentum, nesterov=True)\n",
        "    elif config.optimizer=='rmsprop':\n",
        "      optimizer = RMSprop(learning_rate=config.learning_rate, decay=1e-5)\n",
        "    elif config.optimizer=='adam':\n",
        "      optimizer = Adam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "    elif config.optimizer=='nadam':\n",
        "      optimizer = Nadam(learning_rate=config.learning_rate, beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "    model.compile(loss = \"mean_squared_error\", optimizer=optimizer, metrics=['mean_squared_error', 'mean_absolute_error'])\n",
        "\n",
        "    model.fit(X_val_train, y_val_train, batch_size=config.batch_size,\n",
        "              epochs=config.epochs,\n",
        "              validation_data=(X_val_test, y_val_test),\n",
        "              callbacks=[WandbCallback(validation_data=(X_val_test, y_val_test)),\n",
        "                          EarlyStopping(patience=10, restore_best_weights=True)])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JwZO6oAFU1LN",
        "outputId": "c673a4e4-6a6c-41bb-b3a3-69f97c06dd98"
      },
      "source": [
        "# setting up our sweep_id\n",
        "sweep_id = wandb.sweep(sweep_config, project='ACSE_9_'+model_str)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Create sweep with ID: 52hhdord\n",
            "Sweep URL: https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "ee25221f9140447ba6c3c302ac01f771",
            "97c4b034d8594796930b31eed50b1f1e",
            "83b7880a02db42f09c966101341e8459",
            "e6bdf7e0447e4bd286334fe0fce8796e",
            "e3a7ecfa4af346baa9236fa778d221ba",
            "555be9943b354afe9a024ee1b0c91397",
            "209ac5fc1d3c446cacf8e0fede717981",
            "c6feee63c59a4e2f98fd53d5d1085c37",
            "caae7538896f4c4b8a0179aa814c369a",
            "b46c428e4ff44e238e8dfc842af33b15",
            "a219dbe248cc4add9b112d72ba9fbd4b",
            "59f0505dfb264947af8b2896e51e91dd",
            "0a550c344e3f46bfbdb718266dabb331",
            "572c266e53004678b55c1e211b982dea",
            "b790cfcd04684926b806c7f90401cd9c",
            "d1ba62deb62543c9985e1e303dbbdbbb",
            "ca64138244024774ba5514e965032c12",
            "703179fb8f9440719a6224a5e9d0966d",
            "3aa402daa6214c648e7f89d18bc640f9",
            "6a594830c221496391b89de8019f7e62",
            "f42303b66d1f449e9ea6ce9cd72c66fc",
            "00043d68261f4de2aa53c39f853e519a",
            "bc9f11f910c745918e72c55b4d8bb7ee",
            "43efde0c5a5f4c22af06af1c47556421",
            "3a0a10f3f2a044c6989d694f3ef5092f",
            "adcba9d28d944c21a9bcf5425a65fceb",
            "4444242335b846e98c7baae9f773f964",
            "6b805f3cae024829bd046e926ceef5b2",
            "fd2b307b4b7f48ba99db53c89bb84afe",
            "ae2a59a8548a47a7994184afaea61f69",
            "29eb01608d4943819a124e684f886d40",
            "cf1bb7a0175c4be9a677f3d3fb027350",
            "ff076f5623204bd5802e38d498387055",
            "e1ef8f8af0e24435924833dc7b05afe3",
            "a43be94a260d4c039de63c3f9a4c78cf",
            "69d48131d5024a999cfb5fab96afd3aa",
            "3b4e461f449f46d995ef6105bc7bdd12",
            "e608f8c8c97b42e6a19b41b3d8ad96a3",
            "9e641b25b780402580c3678a3909ef0a",
            "4e91b0d878a94898b86064b02eb76674",
            "00605a77740044c9ae53992b0d74b074",
            "62acd9e873014a59a49b6caec64f4c87",
            "b72d459c9be84d079756c09d7518c24f",
            "68218778767a48178d1debb418c04ea3",
            "0456ec58e45f43c082098b76ef926500",
            "a1094d8d4ec348d69e886e5912f9d72e",
            "4bb72b5f39154a4dabec30a62f422df0",
            "a8b86532817f47e48a8e05ad25dd27f4",
            "7c415426de94459eb17459f78863e9d1",
            "c96dd44458fe4965899e5312d6249389",
            "dad2800cf8c340af900599e2995ed2b0",
            "6a0f3e432f4349ba9d529ecc5609d57e",
            "21f503802faf4957babee414906a81e3",
            "cb4fcc2c8b164fbcb10019f9518aeaa8",
            "08f1737613294926beca24014368eb92",
            "a7e555e58913416dbecfec135909600a",
            "33662b77e7114c479b5d5628b3591eb9",
            "a76582b4bd8e40babcbd89021b11b707",
            "526b4b8c01bf462d98698c8d7bf98244",
            "b4113f3ce14c4652be18bef16b323201",
            "00df06bbbe354560a613a89e94c39bce",
            "11b88fc5ffde498d85af4d5a1853f79b",
            "bad193d7942e48f5b40d73ce9c6109ca",
            "40ac09bf898a40158b5fe0e82c46b7a1",
            "905ed0a0196f41baa203618a7fe5a95b",
            "46e3e3085bb240ec9fda779b88e042d2",
            "cd36ec7afffa467fa8596ef0a28c39e9",
            "6ba2cfb014ef4f94aaec300d55ae2d9a",
            "52c557e2b99f40e8a871b68eddca9c7d",
            "2375206e8d124ac6b3bb4360faefcbae",
            "6eb9eaac9664433681d3f571dbaccf4d",
            "1d08a9114154468aa34a4234770cd70a",
            "c734f774695b4dc8ad4e4d7990331175",
            "3edf2a64b65a45a194750496b5888201",
            "be189eddf2ec4853a11c8d34da4424fc",
            "cf16a5e07ad44e01bd2f1b35e8987670",
            "727d119e5d444ff991c12400d4b17e1a",
            "73f63a34cd9146a2b559dd0d07ac3281",
            "07c41c879b2d47298128b6b06ebaceee",
            "75a119013f934382bd6f2a0e86c5a79c",
            "ef442d5343c54ddea91a02a1d4a2155d",
            "06e7b7ee930442efb5a918fdba80a589",
            "ac99b7b8e9de49ac82affe4dc5578626",
            "41a1eae7643c423dbf9d7ad1b475356e",
            "127f416de8c14ded863a338d44e1a2bc",
            "3a6ae9380d8442e08b3a44182fd8ab29",
            "c1dbb00c28744ef59ab0090792742d50",
            "c6d6cb50410d4f0fa3ced495efb7efbb",
            "a9270c940bad4c389470c1879556ee80",
            "29d2ae9fae33484588020668bac45a14",
            "d7336cebc93a422795e5d4e1418c3a9c",
            "1c253c3b399244f79d962306dbadd167",
            "46ebbd3595cc4833b49064b7510cb31f",
            "90b91a5871c343478803989232303259",
            "21358c37f5054342905d4aeee355ea39",
            "36345a045d9a414cb0a6d38586550f38",
            "b4af440fd8af456eae3464fdeba8c955",
            "6f9e2500cf414f4c90bac2561a13241a",
            "92b0b1234e004e1db4619ccae174d162",
            "2890fe41f4f34cc0941c20571bbddf5a",
            "2f863ec1ef494142bf5634a7b55e6a64",
            "ab137226d2c14638810ca24027dc54a0",
            "de321cb2fb1b437e8098d23091d2e9ce",
            "32225f0f042343a3b3f07acc8fc13675",
            "4d712f6174ad46e9b262fd4d89c86327",
            "25d60e4ce4d04025a6ae04444dc7a0c7",
            "2a86749c007c460d8fbfaa7a54c34954",
            "591b35461e6f432aa72a9f01358280dc",
            "8c36c19d45874dd1883f7aea3503019d",
            "7314c4e234224da19603d06055f359bf",
            "2aaf211747ad4b2283419c26b80e71aa",
            "44486a7b2ed44c71989e55d5ce8304c4",
            "d4edb7b85ae54de188e6c0ba4de31a08",
            "030537ddf2804b6ea2b9cb8e84a2017b",
            "517fbb5cb7c84225933c31e73f0810b9",
            "3a4e3a9f07154c39816da566ff798478",
            "d987c8838b9c4695b189b575a8b0e55e",
            "394be6c5f0f444f5add9e1ec0a697f03",
            "0bf864b9ee5f480ab21d6ed0a60d496d",
            "1d673195eef44a69af0cb33bd3ae006b",
            "785dcc5e97024e0eb589a31c9d67da86",
            "09f279b8171e4b809cfe36fe3ce839f9",
            "7717e47bfe534a50b944c2da325c11a0",
            "451744e04fbe428aab4beb6be9b0bd54",
            "9d29b3767b0c46c69d5e71d18f62cd9a",
            "05af53125639426b8a4ca51b295d693f",
            "767cd8a58b354dc9a9a75edc889c1725",
            "6491ba75a7824820aa5466bfda23135b",
            "7294a1e992c941ba8ff0eb52d9401292",
            "44a174bb349a4fa6bd294c769db12c44",
            "046827b8ed5e4e6ab1be41c153aa1e65",
            "8466e0871ce34d13a265443b526faf71",
            "447d2eaf74e74177b644f842ebca4c5d",
            "24272c6374c341419a5bdef2eae6492c",
            "9bb6ee2e25b049cbb31904c712c78a25",
            "e19249f8e7cc4bf7aa29035fe94691d7",
            "441590961ce24fa99c58dbbc7e2d0040",
            "48bdd4f5c21f4a9d9222040010eee656",
            "999a0293a39e4e9da3f280510568b43c",
            "e6e5ee0bcfbd407e84b6979a1d92d4cf",
            "853eb1c4faec48fbbbe5a825c4b98830",
            "b444864af3494425ba76045a71cafc30",
            "e67bde11320f42e6bd634cd5669285bc",
            "afdd297e878d488ab387b20555f8158d",
            "092bd26d6c1242ab83e3a4b9115682aa",
            "06b258d594a14afaa62d0837b3d9abf3",
            "98aebe650d9a4a0f9801ab8ce3f67569",
            "e7699ad9cee040d088507bd4b537ed6d",
            "ccaf1b91bd024ffc84ae34c252c25ccc",
            "ff96501c55f84980a824f7210ddb5e35",
            "6a7f9820dc8e4f3ca72874cdab7324d6",
            "62f6f9301bba4366ae7ac2297b8a6e3b",
            "600bfc2fa8f24583891d6b706bbd42b8",
            "0a065aa1a5764f4d839ea3e9216202ea",
            "28bd293214b64ac0bd13d999624edfde",
            "0eca7dc1f1c64a2ba2c8c2081f536aea",
            "2c52df07fd1c413490b555809d0fafe0",
            "5269ce30346a4e0bb9fc7decf1b5c1a3",
            "af36c9b72f234b4cbb6fdca91e3fc8e3",
            "a95b5b1b4ad44df888c362550f14a503",
            "16e7b1e1b9c54b94bcce0bd47677bdeb",
            "d490628ef2e8470cac372637f18dcc84",
            "a7a93ba296ad4fa7a2212fe27e5d7214",
            "1c72e23752334a5b8670b72d76747e1f",
            "5e6c5d33a3b44cb480c34dbbe62f8c8b",
            "91fc001b9bd746eca7f9852698466621",
            "46c26f694e5345cf8a249f603aacba5c",
            "3db86185e43a444f88a41e0d43de9e12",
            "88c7541ca08f455897a26e3ba192e3fd",
            "b3ce419c4cfd4b8fbb46c0a55bb449c8",
            "5cb923b2d3b847889eed7cb35b43abb8",
            "f44f34e5648c47bf9a2f84081b4a8e31",
            "8085503bf59c4612a869e11286564ceb",
            "f4b49460dfa54a45bbcb3c91c089ed7c",
            "835ca3ec609f4a2ea9e10093eb994b19",
            "491f7e002e10463b8878285f9638cad8",
            "41d899a3c0064a43a3f4dbb648f6eec9",
            "a532bcb25c614386bac462e51c860758",
            "bd9caf9a5ef744558d6a4c834b8e5a5e",
            "aa2f2b1ceffe4c3ba0846f5995ef7226",
            "c0bd79ee215b43ec8e7f16a8e7e162b9",
            "38f3cc311071459e976cdac92b3c5e2d",
            "501490e60f34477a8f80a906797b97e8",
            "ae765f0afd1c483887738a1f7196be48",
            "cdd4a21ed19447d2aa2df2ec72be5c03",
            "78a1dcd35df84d29ba369a387ea76f13",
            "e24222ba62df4e1f9b74b5aa5a56162f",
            "b0b7f24ec4ca421f81a14a58b1678181",
            "6a4e399dc99a460ea8d8455160d32275",
            "ed8c0a4b77d143f985173a24727bc1e2",
            "6e0fffac6cdb46629409ed9aaf4e8eac",
            "9378b14ab8ed4c0cb800f864debc1c8e",
            "805455528baa46bda7c850e421e9464e",
            "1b299d6083234451a7801fd0850891ac",
            "10d2b8d4cd4747b7a75b0d839c439560",
            "c0da7331cb894f91ad153d308f5fb399",
            "d2c6dd8509594c93ba9f62b6b0b1b090",
            "d923e6956f4f41dbbf96d661c1393708",
            "5fb627db38984615a4b04aad4c796f27",
            "f24e9df9c00f457cbd25817dcd7df328",
            "e3402613fbd944d0b91f0780888468b6",
            "b78e4af773274ec78867585df1a76ba1",
            "c6c77b204b3b4c47bc0197855ba77099",
            "6a574419e190499dae38b8ef77e051b6",
            "56e81c73654f4262b03755310eaa107f",
            "c0eb367ef0694097a3fca14ccb65b185",
            "b26774b0ff3a4f5b93e7bb7280f55159",
            "f0e663bd9cab43bdbb3bf3a270ce0b78"
          ]
        },
        "id": "ZfSCGWfluFw0",
        "outputId": "d18d9320-b6fa-4b55-e642-f1422352835b"
      },
      "source": [
        "# initialising a new sweep\n",
        "wandb.agent(sweep_id, train, project='ACSE_9_'+model_str)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: kaphbd98 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33macse-jaq15\u001b[0m (use `wandb login --relogin` to force relogin)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">polished-sweep-1</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/kaphbd98\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/kaphbd98</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_155613-kaphbd98</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 27s 273ms/step - loss: 0.1094 - mean_squared_error: 0.1094 - mean_absolute_error: 0.2569 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1077\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0739 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0790\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0605 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0751\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0550 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0721\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0506 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0704\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0458 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0667\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0461 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0668\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0432 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0634\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0478 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0671\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0489 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0630\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0419 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0625\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0434 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0608\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0427 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0612\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0400 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0601\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0395 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0590\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0392 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0618\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0390 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0606\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0416 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0573\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0384 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0560\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0360 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0595\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0398 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0671\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0470 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0554\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0368 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0591\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0394 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0542\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 114ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0346 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0559\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0372 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0589\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0374 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0521\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0372 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0513\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0358 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0515\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0350 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0532\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0380 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0511\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0351 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0498\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0325 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0532\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0329 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0502\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0334 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0510\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0337 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0515\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0396 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0501\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0356 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0486\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0349 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0499\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0363 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0518\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0352 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0478\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0335 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0333 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0474\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0313 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0503\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0337 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0464\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0547\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0356 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0482\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0330 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0509\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0316 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0497\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0362 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0472\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0321 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0456\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0340 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0455\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0307 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0448\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0293 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0470\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0336 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0449\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0317 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0482\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0311 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0301 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0442\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0296 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0506\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0374 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0450\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0357 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0444\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0309 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0443\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0294 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0488\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0344 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0485\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0302 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0319 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0435\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0301 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0435\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0308 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0445\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0301 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0323 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0333 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0439\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0296 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0433\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0281 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0434\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0285 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0305 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0428\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0274 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0436\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0355 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0422\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0304 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0434\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0300 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0427\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0282 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0429\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0341 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0473\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0333 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0419\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0296 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0422\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0294 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0420\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0273 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0427\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0296 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0442\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0299 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0416\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0308 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0418\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 113ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0281 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0333 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0273 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0445\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0288 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0282 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0271 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0447\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0308 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0417\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0288 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0411\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0277 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0417\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0299 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0416\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0291 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0411\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0286 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0267 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0275 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0413\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0264 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0415\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0276 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0296 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0298 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0261 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0293 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0406\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0300 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0274 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0409\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0282 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0416\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0281 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0408\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0259 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0438\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0313 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0273 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0413\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0273 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0287 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0404\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0277 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0403\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0314 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0400\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0265 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0401\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0286 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0284 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0289 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0423\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0283 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0404\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0264 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0400\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0280 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0287 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0421\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0258 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0401\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0263 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0321 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0401\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0266 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 171<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ee25221f9140447ba6c3c302ac01f771",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.79MB of 0.79MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_155613-kaphbd98/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_155613-kaphbd98/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>132</td></tr><tr><td>loss</td><td>0.0019</td></tr><tr><td>mean_squared_error</td><td>0.0019</td></tr><tr><td>mean_absolute_error</td><td>0.02684</td></tr><tr><td>val_loss</td><td>0.00275</td></tr><tr><td>val_mean_squared_error</td><td>0.00275</td></tr><tr><td>val_mean_absolute_error</td><td>0.04086</td></tr><tr><td>_runtime</td><td>169</td></tr><tr><td>_timestamp</td><td>1626710342</td></tr><tr><td>_step</td><td>132</td></tr><tr><td>best_val_loss</td><td>0.00271</td></tr><tr><td>best_epoch</td><td>122</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▅▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▅▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▆▄▄▃▃▃▃▂▂▂▃▂▂▃▂▂▂▂▂▂▂▁▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂</td></tr><tr><td>val_loss</td><td>█▇▅▅▅▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▅▅▅▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▅▅▅▄▄▄▃▃▃▃▃▃▃▂▂▂▂▃▂▂▂▂▁▁▁▁▂▁▁▁▁▁▂▁▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">polished-sweep-1</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/kaphbd98\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/kaphbd98</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 8lzj0b34 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">firm-sweep-2</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/8lzj0b34\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/8lzj0b34</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_155912-8lzj0b34</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "8/8 [==============================] - 8s 128ms/step - loss: 0.1663 - mean_squared_error: 0.1663 - mean_absolute_error: 0.3212 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0959\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0547 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0693\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0476 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0732\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0125 - mean_squared_error: 0.0125 - mean_absolute_error: 0.0858 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0604\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0366 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0568\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0392 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0693\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0584 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0641\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0721 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0607\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0487 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0604\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0500 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0754\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0666 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0644\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0555 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0502\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0388 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0486\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0391 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0482\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0432 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0537\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0519 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0678\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0630 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0537\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0441 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0497\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0345 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0390 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0499\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0405 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0456\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0345 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0713\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0633 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0734\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0541 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0633\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0522 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0570\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0543 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0432\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0319 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0438\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0314 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0342 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0451\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0336 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0523\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0453 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0510\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0442 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0479\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0495 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0495\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0448 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0423\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0328 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0430\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0361 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0460\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0378 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0343 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0261 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0434\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0343 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0459\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0329 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0404\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0371 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0460\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0324 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0300 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0416\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0350 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0500\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0395 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0478\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0346 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0401\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0275 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0417\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0422 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0297 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 652<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "caae7538896f4c4b8a0179aa814c369a",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.82MB of 0.82MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_155912-8lzj0b34/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_155912-8lzj0b34/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00185</td></tr><tr><td>mean_squared_error</td><td>0.00185</td></tr><tr><td>mean_absolute_error</td><td>0.02701</td></tr><tr><td>val_loss</td><td>0.0027</td></tr><tr><td>val_mean_squared_error</td><td>0.0027</td></tr><tr><td>val_mean_absolute_error</td><td>0.04057</td></tr><tr><td>_runtime</td><td>18</td></tr><tr><td>_timestamp</td><td>1626710370</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.0027</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▃▂▂▃▂▂▂▁▁▂▂▂▁▁▂▃▂▂▁▁▁▂▂▂▂▁▁▁▁▁▂▁▁▂▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▅▃▄▃▃▃▃▂▂▂▄▃▂▂▂▄▄▃▁▁▁▁▂▂▂▁▂▁▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▅▃▄▃▃▃▃▂▂▂▄▃▂▂▂▄▄▃▁▁▁▁▂▂▂▁▂▁▁▁▁▂▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▅▄▅▄▄▄▄▂▂▂▄▃▂▂▂▅▅▄▁▁▁▂▂▂▂▁▂▁▁▁▁▂▁▁▂▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">firm-sweep-2</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/8lzj0b34\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/8lzj0b34</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: juoibgrx with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sage-sweep-3</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/juoibgrx\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/juoibgrx</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_155940-juoibgrx</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 8s 191ms/step - loss: 0.2853 - mean_squared_error: 0.2853 - mean_absolute_error: 0.4728 - val_loss: 0.0264 - val_mean_squared_error: 0.0264 - val_mean_absolute_error: 0.1357\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0657 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1047\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0082 - mean_squared_error: 0.0082 - mean_absolute_error: 0.0555 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0947\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0076 - mean_squared_error: 0.0076 - mean_absolute_error: 0.0549 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0879\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0074 - mean_squared_error: 0.0074 - mean_absolute_error: 0.0593 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0844\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0513 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0783\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0480 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0756\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0459 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0737\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0556 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0737\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 2s 113ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0487 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0698\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0465 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0697\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0471 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0701\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0427 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0817\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0565 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0667\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0415 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0650\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0472 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0651\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0475 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0610\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0489 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0587\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0398 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0581\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0418 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0594\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0406 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0583\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0438 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0666\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0440 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0564\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 2s 115ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0403 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0590\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 2s 115ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0429 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0555\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0402 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0560\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0411 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0591\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0410 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0563\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0382 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0597\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0393 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0554\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 2s 111ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0444 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0723\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 2s 117ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0424 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0598\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0397 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0571\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 2s 115ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0385 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0561\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 2s 117ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0380 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0551\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0420 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0566\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0402 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0572\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0386 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0570\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0391 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0566\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0357 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0551\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 857<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ca64138244024774ba5514e965032c12",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.84MB of 0.84MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_155940-juoibgrx/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_155940-juoibgrx/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>39</td></tr><tr><td>loss</td><td>0.00297</td></tr><tr><td>mean_squared_error</td><td>0.00297</td></tr><tr><td>mean_absolute_error</td><td>0.03697</td></tr><tr><td>val_loss</td><td>0.00534</td></tr><tr><td>val_mean_squared_error</td><td>0.00534</td></tr><tr><td>val_mean_absolute_error</td><td>0.05509</td></tr><tr><td>_runtime</td><td>87</td></tr><tr><td>_timestamp</td><td>1626710467</td></tr><tr><td>_step</td><td>39</td></tr><tr><td>best_val_loss</td><td>0.0053</td></tr><tr><td>best_epoch</td><td>29</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▄▄▄▃▃▂▃▂▂▂▃▂▂▂▂▁▁▁▁▂▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▄▄▄▃▃▂▃▂▂▂▃▂▂▂▂▁▁▁▁▂▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▄▄▃▃▃▃▂▂▂▃▂▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sage-sweep-3</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/juoibgrx\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/juoibgrx</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: t9lmgn4q with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">peach-sweep-4</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/t9lmgn4q\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/t9lmgn4q</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_160117-t9lmgn4q</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "32/32 [==============================] - 5s 41ms/step - loss: 0.0737 - mean_squared_error: 0.0737 - mean_absolute_error: 0.1735 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0732\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0506 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0780\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0503 - val_loss: 0.0115 - val_mean_squared_error: 0.0115 - val_mean_absolute_error: 0.0881\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0550 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0487\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0537 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0747\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0511 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0534\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0398 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0488\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0354 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0423 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0424\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0431 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0422\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0396 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0419\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0351 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0613\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0386 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0412\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0293 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0499\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0391 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0475\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0308 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0441\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0359 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0261 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0406\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0330 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0436\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0361 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0385\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0284 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0389\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0290 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0388\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0290 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0394\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0263 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0381\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0262 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0372\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0283 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0445\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0431\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0240 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0372\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0233 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0432\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0267 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0360\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0232 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0392\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0216 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0380\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0246 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0392\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0268 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0382\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0251 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0375\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0250 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0370\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.0186e-04 - mean_squared_error: 9.0186e-04 - mean_absolute_error: 0.0216 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0451\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0243 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0363\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0226 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0376\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0214 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0366\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0230 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0405\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0226 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0232 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0358\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0221 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0360\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0280 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0368\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0228 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0358\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 7.4453e-04 - mean_squared_error: 7.4453e-04 - mean_absolute_error: 0.0194 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0365\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 6.5147e-04 - mean_squared_error: 6.5147e-04 - mean_absolute_error: 0.0175 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0377\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 9.3834e-04 - mean_squared_error: 9.3834e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0374\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0231 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0365\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1032<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3a0a10f3f2a044c6989d694f3ef5092f",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.49MB of 0.49MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160117-t9lmgn4q/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160117-t9lmgn4q/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00151</td></tr><tr><td>mean_squared_error</td><td>0.00151</td></tr><tr><td>mean_absolute_error</td><td>0.0215</td></tr><tr><td>val_loss</td><td>0.00232</td></tr><tr><td>val_mean_squared_error</td><td>0.00232</td></tr><tr><td>val_mean_absolute_error</td><td>0.03653</td></tr><tr><td>_runtime</td><td>30</td></tr><tr><td>_timestamp</td><td>1626710507</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.0022</td></tr><tr><td>best_epoch</td><td>43</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▃▄▃▃▃▃▂▂▂▂▂▂▁▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▆▇█▃▃▃▂▂▂▄▂▃▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▆▇█▃▃▃▂▂▂▄▂▃▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▆▇█▃▃▃▂▂▂▄▂▃▂▁▂▂▁▁▁▁▂▂▁▂▁▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">peach-sweep-4</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/t9lmgn4q\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/t9lmgn4q</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 4q9qbqmj with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">feasible-sweep-5</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/4q9qbqmj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/4q9qbqmj</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_160216-4q9qbqmj</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 8s 155ms/step - loss: 0.1766 - mean_squared_error: 0.1766 - mean_absolute_error: 0.3399 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1124\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0102 - mean_squared_error: 0.0102 - mean_absolute_error: 0.0639 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0986\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0579 - val_loss: 0.0134 - val_mean_squared_error: 0.0134 - val_mean_absolute_error: 0.0900\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0567 - val_loss: 0.0153 - val_mean_squared_error: 0.0153 - val_mean_absolute_error: 0.0926\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0569 - val_loss: 0.0144 - val_mean_squared_error: 0.0144 - val_mean_absolute_error: 0.0894\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0553 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0795\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0500 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0795\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0514 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0735\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0451 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0721\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0474 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0708\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0461 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0689\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0460 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0673\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0412 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0661\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0424 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0613\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0446 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0595\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0445 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0658\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0448 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0569\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0441 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0652\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0417 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0569\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0407 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0575\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0391 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0556\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0404 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0564\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0438 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0526\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0382 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0523\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0398 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0549\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 4s 111ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0407 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0509\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0375 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0549\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0384 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0529\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0395 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0370 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0544\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0390 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0480\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0377 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0542\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 4s 113ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0400 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0500\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0477\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0342 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0468\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0357 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0469\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0360 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0566\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0350 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0476\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0376 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0498\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0357 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0613\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0368 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0344 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0464\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 4s 132ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0353 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0491\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0342 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0463\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0322 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0454\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0343 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0470\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0340 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0471\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0342 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0538\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0299 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0459\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0335 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0454\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1237<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ff076f5623204bd5802e38d498387055",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.71MB of 0.71MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160216-4q9qbqmj/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160216-4q9qbqmj/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00273</td></tr><tr><td>mean_squared_error</td><td>0.00273</td></tr><tr><td>mean_absolute_error</td><td>0.03205</td></tr><tr><td>val_loss</td><td>0.00377</td></tr><tr><td>val_mean_squared_error</td><td>0.00377</td></tr><tr><td>val_mean_absolute_error</td><td>0.04537</td></tr><tr><td>_runtime</td><td>202</td></tr><tr><td>_timestamp</td><td>1626710738</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.0036</td></tr><tr><td>best_epoch</td><td>44</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▅▆▄▄▄▄▄▃▃▃▃▂▃▂▂▂▂▂▁▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▅▆▄▄▄▄▄▃▃▃▃▂▃▂▂▂▂▂▁▂▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▆▆▅▅▄▄▃▃▃▃▃▂▃▂▂▂▂▂▂▂▂▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▂▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">feasible-sweep-5</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/4q9qbqmj\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/4q9qbqmj</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 7i18kh9n with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">genial-sweep-6</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/7i18kh9n\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/7i18kh9n</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_160555-7i18kh9n</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 8s 158ms/step - loss: 0.1108 - mean_squared_error: 0.1108 - mean_absolute_error: 0.2230 - val_loss: 0.0111 - val_mean_squared_error: 0.0111 - val_mean_absolute_error: 0.0787\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0108 - mean_squared_error: 0.0108 - mean_absolute_error: 0.0692 - val_loss: 0.0107 - val_mean_squared_error: 0.0107 - val_mean_absolute_error: 0.0753\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0559 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0732\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0486 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0601\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0497 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0716\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0463 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0550\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0394 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0559\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0418 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0544\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0409 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0513\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0431 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0493\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0352 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0397 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0518\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0403 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0479\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0344 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0479\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0332 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0487\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0347 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0512\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0325 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0462\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0327 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0471\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0322 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0454\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0316 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0587\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0379 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0435\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0286 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0439\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0319 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0432\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0317 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0441\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0299 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0302 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0441\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0326 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0429\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0324 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0329 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0425\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0279 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0270 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0429\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0380 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0424\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0288 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0565\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0380 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0422\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0318 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0275 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0424\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0285 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0412\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 4s 130ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0273 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0407\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0294 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0410\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0276 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0258 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0259 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0257 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0475\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0302 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0428\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0261 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0404\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0261 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0401\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0262 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0250 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0406\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0282 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1454<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "00605a77740044c9ae53992b0d74b074",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.91MB of 0.91MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160555-7i18kh9n/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160555-7i18kh9n/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00184</td></tr><tr><td>mean_squared_error</td><td>0.00184</td></tr><tr><td>mean_absolute_error</td><td>0.02632</td></tr><tr><td>val_loss</td><td>0.00283</td></tr><tr><td>val_mean_squared_error</td><td>0.00283</td></tr><tr><td>val_mean_absolute_error</td><td>0.04112</td></tr><tr><td>_runtime</td><td>204</td></tr><tr><td>_timestamp</td><td>1626710959</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00273</td></tr><tr><td>best_epoch</td><td>46</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>██▆▅▃▃▄▃▂▃▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▃▁▁▁▁▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>██▆▅▃▃▄▃▂▃▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▃▁▁▁▁▁▁▁▂▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▇▅▄▄▄▃▃▃▂▂▃▂▂▂▂▂▂▂▂▂▁▁▂▁▄▁▁▁▁▁▁▁▂▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">genial-sweep-6</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/7i18kh9n\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/7i18kh9n</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: p9l7obme with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">polar-sweep-7</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/p9l7obme\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/p9l7obme</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_160929-p9l7obme</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "16/16 [==============================] - 5s 73ms/step - loss: 0.1268 - mean_squared_error: 0.1268 - mean_absolute_error: 0.2701 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0895\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0112 - mean_squared_error: 0.0112 - mean_absolute_error: 0.0791 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0648\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0489 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0323 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0476\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0343 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0477\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0327 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0450\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0299 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0442\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0351 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0445\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0289 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0446\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0317 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0426\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0293 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0435\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0307 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0416\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0292 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0426\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0282 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0317 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0295 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0403\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0288 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0405\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0287 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0397\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0270 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0404\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0259 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0390\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0275 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0288 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0387\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0291 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0385\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0242 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0385\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0279 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0386\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0242 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0429\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0303 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0458\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0296 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0390\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0253 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0376\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0256 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0373\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0376\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0247 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0374\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0241 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0368\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0273 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0405\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0277 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0448\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0298 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0419\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0284 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0386\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0238 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0366\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0270 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0362\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0223 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0367\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0267 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0362\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0383\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0265 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0371\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0240 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0364\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0266 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0360\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0250 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0363\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0231 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0373\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0245 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0359\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0214 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0377\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0246 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0358\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0234 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0358\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0228 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0361\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0231 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0361\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 0s 15ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0227 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0353\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0203 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0355\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0247 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0359\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0209 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0378\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0364\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0245 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0355\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0218 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0362\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0247 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0359\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 0s 11ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0231 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0363\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0236 - val_loss: 0.0021 - val_mean_squared_error: 0.0021 - val_mean_absolute_error: 0.0350\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0237 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0371\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0244 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0355\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1701<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "7c415426de94459eb17459f78863e9d1",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.50MB of 0.50MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160929-p9l7obme/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_160929-p9l7obme/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>64</td></tr><tr><td>loss</td><td>0.00167</td></tr><tr><td>mean_squared_error</td><td>0.00167</td></tr><tr><td>mean_absolute_error</td><td>0.02233</td></tr><tr><td>val_loss</td><td>0.0022</td></tr><tr><td>val_mean_squared_error</td><td>0.0022</td></tr><tr><td>val_mean_absolute_error</td><td>0.03547</td></tr><tr><td>_runtime</td><td>23</td></tr><tr><td>_timestamp</td><td>1626710992</td></tr><tr><td>_step</td><td>64</td></tr><tr><td>best_val_loss</td><td>0.00213</td></tr><tr><td>best_epoch</td><td>54</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▂▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▂▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▃▃▂▂▂▂▂▂▂▂▂▁▁▁▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▁▂▂▂▃▃▃▃▃▃▃▃▄▄▄▅▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇▇█</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▁▂▂▂▃▃▃▃▃▃▃▃▄▄▄▅▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇▇█</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">polar-sweep-7</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/p9l7obme\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/p9l7obme</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: we2k9j6t with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">dauntless-sweep-8</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/we2k9j6t\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/we2k9j6t</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_161002-we2k9j6t</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 6s 242ms/step - loss: 0.2227 - mean_squared_error: 0.2227 - mean_absolute_error: 0.3783 - val_loss: 0.0167 - val_mean_squared_error: 0.0167 - val_mean_absolute_error: 0.1060\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0171 - mean_squared_error: 0.0171 - mean_absolute_error: 0.0987 - val_loss: 0.0463 - val_mean_squared_error: 0.0463 - val_mean_absolute_error: 0.1877\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0339 - mean_squared_error: 0.0339 - mean_absolute_error: 0.1499 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0826\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0122 - mean_squared_error: 0.0122 - mean_absolute_error: 0.0780 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0766\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0619 - val_loss: 0.0228 - val_mean_squared_error: 0.0228 - val_mean_absolute_error: 0.1259\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0233 - mean_squared_error: 0.0233 - mean_absolute_error: 0.1227 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0627\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0079 - mean_squared_error: 0.0079 - mean_absolute_error: 0.0636 - val_loss: 0.0147 - val_mean_squared_error: 0.0147 - val_mean_absolute_error: 0.0974\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0124 - mean_squared_error: 0.0124 - mean_absolute_error: 0.0904 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0780\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0766 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0798\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0109 - mean_squared_error: 0.0109 - mean_absolute_error: 0.0790 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0624\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0616 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0683\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0130 - mean_squared_error: 0.0130 - mean_absolute_error: 0.0879 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0681\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0522 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0561\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0563 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0669\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0571 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0573\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0587 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0597\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0529 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0523\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0608 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0601\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0420 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0467\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0613 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0481\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0428 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0635\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0570 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0585\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0590 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0444\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0429 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0567\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0487 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0432\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0412 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0484\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0459 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0475\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0472 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0460\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0441 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0449 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0497\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0467 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0466\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0470 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0421\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0347 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0574\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0582 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0431\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0427 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0455\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0380 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0567\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0514 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0541\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0478 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0416\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 1s 143ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0418 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0501\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0396 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0461\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0411 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0498\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 1s 143ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0406 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0401\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0383 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0389 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0399\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0370 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0422\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0383 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0405\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0462 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0452\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0351 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0534\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0505 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0454\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 1s 110ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0365 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0540\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0466 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0461\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 1s 114ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0404 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0490\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 1s 113ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0409 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0575\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 1s 110ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0405 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0446\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 1957<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "33662b77e7114c479b5d5628b3591eb9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.79MB of 0.79MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161002-we2k9j6t/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161002-we2k9j6t/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>53</td></tr><tr><td>loss</td><td>0.00288</td></tr><tr><td>mean_squared_error</td><td>0.00288</td></tr><tr><td>mean_absolute_error</td><td>0.03556</td></tr><tr><td>val_loss</td><td>0.00305</td></tr><tr><td>val_mean_squared_error</td><td>0.00305</td></tr><tr><td>val_mean_absolute_error</td><td>0.04456</td></tr><tr><td>_runtime</td><td>64</td></tr><tr><td>_timestamp</td><td>1626711066</td></tr><tr><td>_step</td><td>53</td></tr><tr><td>best_val_loss</td><td>0.00269</td></tr><tr><td>best_epoch</td><td>43</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▃▂▂▂▂▁▂▂▁▂▂▁▁▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>▃█▂▄▂▃▂▂▂▂▂▂▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>▃█▂▄▂▃▂▂▂▂▂▂▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>▄█▃▅▂▄▃▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▂▁▂▂▁▁▁▁▁▁▁▂▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">dauntless-sweep-8</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/we2k9j6t\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/we2k9j6t</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 02d7hq6j with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">generous-sweep-9</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/02d7hq6j\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/02d7hq6j</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_161117-02d7hq6j</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 9s 160ms/step - loss: 0.1397 - mean_squared_error: 0.1397 - mean_absolute_error: 0.2881 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1055\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0597 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0870\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0569 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0801\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0494 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0773\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0502 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0742\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 112ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0474 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0760\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 114ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0491 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0689\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0481 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0679\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0434 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0659\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0459 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0622\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0489 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0768\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0493 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0720\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0475 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0622\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0457 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0579\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0428 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0602\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0415 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0594\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0403 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0565\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0414 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0540\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 4s 132ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0402 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0685\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0451 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0545\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0405 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0607\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 4s 117ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0423 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0540\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0400 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0544\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0386 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0542\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0409 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0543\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0407 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0559\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0393 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0566\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0386 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0523\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0389 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0514\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0410 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0543\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0342 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0514\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0383 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0540\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0355 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0522\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0417 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0497\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0370 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0519\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0380 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0389 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0582\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0365 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0513\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0357 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0519\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0378 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0508\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0344 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0528\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0351 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0490\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0320 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0377 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0488\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 3s 108ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0327 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0528\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 4s 115ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0335 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0481\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0352 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0486\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0325 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0492\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 4s 130ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0357 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0512\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0356 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0516\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2188<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "905ed0a0196f41baa203618a7fe5a95b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.81MB of 0.81MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161117-02d7hq6j/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161117-02d7hq6j/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00287</td></tr><tr><td>mean_squared_error</td><td>0.00287</td></tr><tr><td>mean_absolute_error</td><td>0.03362</td></tr><tr><td>val_loss</td><td>0.00434</td></tr><tr><td>val_mean_squared_error</td><td>0.00434</td></tr><tr><td>val_mean_absolute_error</td><td>0.05155</td></tr><tr><td>_runtime</td><td>203</td></tr><tr><td>_timestamp</td><td>1626711280</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00413</td></tr><tr><td>best_epoch</td><td>45</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▅▄▄▃▃▃▄▃▂▂▂▂▂▃▂▂▂▂▂▂▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▅▄▄▃▃▃▄▃▂▂▂▂▂▃▂▂▂▂▂▂▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▅▅▄▄▃▃▅▄▃▂▂▂▂▃▃▂▂▂▂▂▂▁▁▂▁▁▁▂▁▁▂▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">generous-sweep-9</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/02d7hq6j\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/02d7hq6j</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: lsmxzgj4 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">zesty-sweep-10</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/lsmxzgj4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/lsmxzgj4</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_161451-lsmxzgj4</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "8/8 [==============================] - 5s 263ms/step - loss: 0.2962 - mean_squared_error: 0.2962 - mean_absolute_error: 0.4961 - val_loss: 0.0970 - val_mean_squared_error: 0.0970 - val_mean_absolute_error: 0.2407\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0810 - mean_squared_error: 0.0810 - mean_absolute_error: 0.2184 - val_loss: 0.0331 - val_mean_squared_error: 0.0331 - val_mean_absolute_error: 0.1584\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - mean_absolute_error: 0.0935 - val_loss: 0.0255 - val_mean_squared_error: 0.0255 - val_mean_absolute_error: 0.1367\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0663 - val_loss: 0.0229 - val_mean_squared_error: 0.0229 - val_mean_absolute_error: 0.1252\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0736 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1088\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0642 - val_loss: 0.0188 - val_mean_squared_error: 0.0188 - val_mean_absolute_error: 0.1074\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0111 - mean_squared_error: 0.0111 - mean_absolute_error: 0.0715 - val_loss: 0.0187 - val_mean_squared_error: 0.0187 - val_mean_absolute_error: 0.1087\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0604 - val_loss: 0.0192 - val_mean_squared_error: 0.0192 - val_mean_absolute_error: 0.1086\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0644 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1040\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0087 - mean_squared_error: 0.0087 - mean_absolute_error: 0.0630 - val_loss: 0.0159 - val_mean_squared_error: 0.0159 - val_mean_absolute_error: 0.1001\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0501 - val_loss: 0.0166 - val_mean_squared_error: 0.0166 - val_mean_absolute_error: 0.1004\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0573 - val_loss: 0.0162 - val_mean_squared_error: 0.0162 - val_mean_absolute_error: 0.0991\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0093 - mean_squared_error: 0.0093 - mean_absolute_error: 0.0629 - val_loss: 0.0150 - val_mean_squared_error: 0.0150 - val_mean_absolute_error: 0.0947\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0075 - mean_squared_error: 0.0075 - mean_absolute_error: 0.0567 - val_loss: 0.0169 - val_mean_squared_error: 0.0169 - val_mean_absolute_error: 0.0996\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0552 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0922\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0500 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0907\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0452 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0881\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0555 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0856\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0462 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0868\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0528 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0891\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0540 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0819\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0542 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0825\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0497 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0821\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0445 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0857\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0523 - val_loss: 0.0151 - val_mean_squared_error: 0.0151 - val_mean_absolute_error: 0.0916\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0103 - mean_squared_error: 0.0103 - mean_absolute_error: 0.0642 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0772\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0437 - val_loss: 0.0129 - val_mean_squared_error: 0.0129 - val_mean_absolute_error: 0.0842\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0476 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0771\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0084 - mean_squared_error: 0.0084 - mean_absolute_error: 0.0572 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0760\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 1s 110ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0415 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0832\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0576 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0741\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0442 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0737\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0447 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0756\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0483 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0776\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0486 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0726\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0495 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0713\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0435 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0733\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0455 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0696\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0500 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0717\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0475 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0726\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0519 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0687\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 1s 145ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0434 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0677\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0420 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0700\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0453 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0669\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0441 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0669\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0424 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0742\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0451 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0679\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0444 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0705\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0486 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0693\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0410 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0699\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0078 - mean_squared_error: 0.0078 - mean_absolute_error: 0.0588 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0645\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0381 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0647\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0386 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0726\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0485 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0628\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0439 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0636\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0387 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0630\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0491 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0650\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0457 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0623\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0433 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0626\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0428 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0618\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0468 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0672\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0473 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0643\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0386 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0592\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0422 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0593\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0392 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0583\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0422 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0583\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0394 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0577\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0434 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0644\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 1s 145ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0439 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0642\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0476 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0580\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0366 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0589\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0438 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0588\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0413 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0568\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0359 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0618\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0443 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0553\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0365 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0579\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0384 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0615\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0441 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0579\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 1s 144ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0463 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0581\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0405 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0565\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0379 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0616\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0435 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0562\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0406 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0580\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0369 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0682\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0461 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0536\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0379 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0548\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0395 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0532\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0362 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0551\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0414 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0563\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0375 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0535\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0382 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0537\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0359 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0537\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0421 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0525\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0329 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0550\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0395 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0527\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0392 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0525\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0379 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0519\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0334 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0522\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0413 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0540\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0343 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0546\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0403 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0524\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0351 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0520\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0355 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0520\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0323 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0555\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0388 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0510\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0340 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0533\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0321 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0590\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0425 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0516\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0356 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0534\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0375 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0529\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0343 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0593\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0423 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0520\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0345 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0534\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2435<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c734f774695b4dc8ad4e4d7990331175",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.85MB of 0.85MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161451-lsmxzgj4/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161451-lsmxzgj4/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>112</td></tr><tr><td>loss</td><td>0.00332</td></tr><tr><td>mean_squared_error</td><td>0.00332</td></tr><tr><td>mean_absolute_error</td><td>0.03737</td></tr><tr><td>val_loss</td><td>0.00473</td></tr><tr><td>val_mean_squared_error</td><td>0.00473</td></tr><tr><td>val_mean_absolute_error</td><td>0.05342</td></tr><tr><td>_runtime</td><td>126</td></tr><tr><td>_timestamp</td><td>1626711417</td></tr><tr><td>_step</td><td>112</td></tr><tr><td>best_val_loss</td><td>0.00459</td></tr><tr><td>best_epoch</td><td>102</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">zesty-sweep-10</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/lsmxzgj4\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/lsmxzgj4</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: c9tc6ebk with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">misty-sweep-11</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/c9tc6ebk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/c9tc6ebk</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_161731-c9tc6ebk</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 6s 254ms/step - loss: 0.4356 - mean_squared_error: 0.4356 - mean_absolute_error: 0.5098 - val_loss: 0.0135 - val_mean_squared_error: 0.0135 - val_mean_absolute_error: 0.0909\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0906 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0661\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0548 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0596\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0490 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0604\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0053 - mean_squared_error: 0.0053 - mean_absolute_error: 0.0407 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0520\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0600 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0705\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0539 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0517\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0378 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0549\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0469 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0498\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0346 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0620\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0071 - mean_squared_error: 0.0071 - mean_absolute_error: 0.0652 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0496\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0429 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0507\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 1s 173ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0391 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0550\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0585 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0560\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0502 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0550\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0467 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0459\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0346 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0488\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0317 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0511\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0656 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0589\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0454 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0450\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0375 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0434\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0356 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0458\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0339 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0470\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0368 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0463\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0429 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0512\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0425 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0583\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0463 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0401\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0279 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0433\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0285 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0410 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0520\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0499 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0431\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0408 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0496\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0390 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0273 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0496\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0418 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0349 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0578\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0460 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0467\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0325 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 1s 144ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0312 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0451\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 1s 139ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0405 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0458\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0311 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0404\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0276 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0390\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0284 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0441\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0354 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0396\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0258 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0438\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 2859<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ef442d5343c54ddea91a02a1d4a2155d",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.05MB of 1.05MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161731-c9tc6ebk/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161731-c9tc6ebk/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>44</td></tr><tr><td>loss</td><td>0.00183</td></tr><tr><td>mean_squared_error</td><td>0.00183</td></tr><tr><td>mean_absolute_error</td><td>0.02718</td></tr><tr><td>val_loss</td><td>0.00328</td></tr><tr><td>val_mean_squared_error</td><td>0.00328</td></tr><tr><td>val_mean_absolute_error</td><td>0.04379</td></tr><tr><td>_runtime</td><td>56</td></tr><tr><td>_timestamp</td><td>1626711507</td></tr><tr><td>_step</td><td>44</td></tr><tr><td>best_val_loss</td><td>0.00259</td></tr><tr><td>best_epoch</td><td>34</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▂▁▁▁▂▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▃▃▅▂▃▄▂▂▃▃▃▂▂▃▁▁▂▂▁▂▂▁▁▂▁▂▁▂▁▁▁▂▂▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▃▃▅▂▃▄▂▂▃▃▃▂▂▃▁▁▂▂▁▂▂▁▁▂▁▂▁▂▁▁▁▂▂▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▄▃▅▃▃▄▂▃▃▃▃▂▂▄▂▂▂▂▂▃▄▂▁▃▂▂▁▂▁▂▁▂▂▁▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">misty-sweep-11</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/c9tc6ebk\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/c9tc6ebk</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ipfpsoqs with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: rmsprop\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">rich-sweep-12</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ipfpsoqs\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ipfpsoqs</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_161913-ipfpsoqs</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 5s 250ms/step - loss: 0.3766 - mean_squared_error: 0.3766 - mean_absolute_error: 0.5234 - val_loss: 0.1067 - val_mean_squared_error: 0.1067 - val_mean_absolute_error: 0.2528\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.1068 - mean_squared_error: 0.1068 - mean_absolute_error: 0.2688 - val_loss: 0.0338 - val_mean_squared_error: 0.0338 - val_mean_absolute_error: 0.1563\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0182 - mean_squared_error: 0.0182 - mean_absolute_error: 0.1068 - val_loss: 0.0235 - val_mean_squared_error: 0.0235 - val_mean_absolute_error: 0.1192\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0144 - mean_squared_error: 0.0144 - mean_absolute_error: 0.0880 - val_loss: 0.0242 - val_mean_squared_error: 0.0242 - val_mean_absolute_error: 0.1248\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0179 - mean_squared_error: 0.0179 - mean_absolute_error: 0.1072 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1159\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0185 - mean_squared_error: 0.0185 - mean_absolute_error: 0.1145 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0993\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0210 - mean_squared_error: 0.0210 - mean_absolute_error: 0.1171 - val_loss: 0.0225 - val_mean_squared_error: 0.0225 - val_mean_absolute_error: 0.1190\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0170 - mean_squared_error: 0.0170 - mean_absolute_error: 0.1112 - val_loss: 0.0209 - val_mean_squared_error: 0.0209 - val_mean_absolute_error: 0.1143\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0208 - mean_squared_error: 0.0208 - mean_absolute_error: 0.1209 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0863\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0166 - mean_squared_error: 0.0166 - mean_absolute_error: 0.0986 - val_loss: 0.0184 - val_mean_squared_error: 0.0184 - val_mean_absolute_error: 0.1083\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0189 - mean_squared_error: 0.0189 - mean_absolute_error: 0.1090 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0943\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 1s 139ms/step - loss: 0.0161 - mean_squared_error: 0.0161 - mean_absolute_error: 0.1026 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0648\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0089 - mean_squared_error: 0.0089 - mean_absolute_error: 0.0661 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0717\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0141 - mean_squared_error: 0.0141 - mean_absolute_error: 0.0896 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0626\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0725 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0812\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0127 - mean_squared_error: 0.0127 - mean_absolute_error: 0.0884 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0902\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0114 - mean_squared_error: 0.0114 - mean_absolute_error: 0.0839 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0779\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0101 - mean_squared_error: 0.0101 - mean_absolute_error: 0.0816 - val_loss: 0.0104 - val_mean_squared_error: 0.0104 - val_mean_absolute_error: 0.0832\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0107 - mean_squared_error: 0.0107 - mean_absolute_error: 0.0778 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0834\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0817 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0790\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0070 - mean_squared_error: 0.0070 - mean_absolute_error: 0.0605 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.1018\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0716 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0700\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3069<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "a9270c940bad4c389470c1879556ee80",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.90MB of 0.90MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161913-ipfpsoqs/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161913-ipfpsoqs/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>21</td></tr><tr><td>loss</td><td>0.00607</td></tr><tr><td>mean_squared_error</td><td>0.00607</td></tr><tr><td>mean_absolute_error</td><td>0.0585</td></tr><tr><td>val_loss</td><td>0.00818</td></tr><tr><td>val_mean_squared_error</td><td>0.00818</td></tr><tr><td>val_mean_absolute_error</td><td>0.06996</td></tr><tr><td>_runtime</td><td>32</td></tr><tr><td>_timestamp</td><td>1626711585</td></tr><tr><td>_step</td><td>21</td></tr><tr><td>best_val_loss</td><td>0.00668</td></tr><tr><td>best_epoch</td><td>11</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr><tr><td>loss</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▄▂▁▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▂▁▁</td></tr><tr><td>val_loss</td><td>█▃▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_squared_error</td><td>█▃▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▂▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▃▃▂▃▃▂▃▂▁▁▁▂▂▂▂▂▂▂▁</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">rich-sweep-12</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ipfpsoqs\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ipfpsoqs</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: ysz1by2s with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">crimson-sweep-13</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ysz1by2s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ysz1by2s</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_161956-ysz1by2s</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "32/32 [==============================] - 5s 56ms/step - loss: 0.0927 - mean_squared_error: 0.0927 - mean_absolute_error: 0.2053 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0874\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0481 - val_loss: 0.0113 - val_mean_squared_error: 0.0113 - val_mean_absolute_error: 0.0793\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0081 - mean_squared_error: 0.0081 - mean_absolute_error: 0.0534 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0771\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0444 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0689\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0420 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0698\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0417 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0642\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0409 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0616\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0392 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0588\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0355 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0576\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0393 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0553\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0353 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0618\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0362 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0544\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0382 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0524\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0372 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0513\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0344 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0515\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0385 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0576\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0387 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0498\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0324 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0494\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0368 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0513\n",
            "Epoch 20/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0330 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0473\n",
            "Epoch 21/100\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0318 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0473\n",
            "Epoch 22/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0299 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0497\n",
            "Epoch 23/100\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0349 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0464\n",
            "Epoch 24/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0315 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 25/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0361 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0474\n",
            "Epoch 26/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0329 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0452\n",
            "Epoch 27/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0314 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0451\n",
            "Epoch 28/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0279 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0455\n",
            "Epoch 29/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0319 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0438\n",
            "Epoch 30/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0299 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0447\n",
            "Epoch 31/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0301 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0436\n",
            "Epoch 32/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0311 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0468\n",
            "Epoch 33/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0311 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0433\n",
            "Epoch 34/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0323 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0444\n",
            "Epoch 35/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0265 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0439\n",
            "Epoch 36/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0287 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0420\n",
            "Epoch 37/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0293 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0418\n",
            "Epoch 38/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0314 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0416\n",
            "Epoch 39/100\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0267 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 40/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0280 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0460\n",
            "Epoch 41/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0333 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0462\n",
            "Epoch 42/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0285 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0420\n",
            "Epoch 43/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0270 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0410\n",
            "Epoch 44/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0259 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0419\n",
            "Epoch 45/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0265 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0409\n",
            "Epoch 46/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0280 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0404\n",
            "Epoch 47/100\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0259 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 48/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0259 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0434\n",
            "Epoch 49/100\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0274 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0407\n",
            "Epoch 50/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0281 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0415\n",
            "Epoch 51/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0241 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 52/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0272 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0402\n",
            "Epoch 53/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0254 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0400\n",
            "Epoch 54/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0252 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0396\n",
            "Epoch 55/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0246 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0406\n",
            "Epoch 56/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0242 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0398\n",
            "Epoch 57/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0257 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0394\n",
            "Epoch 58/100\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0232 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0394\n",
            "Epoch 59/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0284 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0411\n",
            "Epoch 60/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0239 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0426\n",
            "Epoch 61/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0263 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0396\n",
            "Epoch 62/100\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0263 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0397\n",
            "Epoch 63/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0248 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0398\n",
            "Epoch 64/100\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0253 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0437\n",
            "Epoch 65/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0239 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0401\n",
            "Epoch 66/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0263 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0398\n",
            "Epoch 67/100\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0251 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0392\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3198<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b4af440fd8af456eae3464fdeba8c955",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.10MB of 1.10MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161956-ysz1by2s/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_161956-ysz1by2s/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>66</td></tr><tr><td>loss</td><td>0.0018</td></tr><tr><td>mean_squared_error</td><td>0.0018</td></tr><tr><td>mean_absolute_error</td><td>0.02462</td></tr><tr><td>val_loss</td><td>0.00271</td></tr><tr><td>val_mean_squared_error</td><td>0.00271</td></tr><tr><td>val_mean_absolute_error</td><td>0.03923</td></tr><tr><td>_runtime</td><td>38</td></tr><tr><td>_timestamp</td><td>1626711634</td></tr><tr><td>_step</td><td>66</td></tr><tr><td>best_val_loss</td><td>0.00268</td></tr><tr><td>best_epoch</td><td>56</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▃▂▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▇▅▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▇▅▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▅▅▄▄▄▃▃▄▃▃▂▂▂▂▂▂▂▂▂▁▁▂▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">crimson-sweep-13</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ysz1by2s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/ysz1by2s</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: mrzjnvtp with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">winter-sweep-14</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/mrzjnvtp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/mrzjnvtp</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_162046-mrzjnvtp</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "8/8 [==============================] - 4s 130ms/step - loss: 0.1939 - mean_squared_error: 0.1939 - mean_absolute_error: 0.3676 - val_loss: 0.0602 - val_mean_squared_error: 0.0602 - val_mean_absolute_error: 0.2209\n",
            "Epoch 2/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0324 - mean_squared_error: 0.0324 - mean_absolute_error: 0.1506 - val_loss: 0.0156 - val_mean_squared_error: 0.0156 - val_mean_absolute_error: 0.0963\n",
            "Epoch 3/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0171 - mean_squared_error: 0.0171 - mean_absolute_error: 0.1006 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0802\n",
            "Epoch 4/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0576 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0916\n",
            "Epoch 5/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0570 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0729\n",
            "Epoch 6/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0499 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0698\n",
            "Epoch 7/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0428 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0676\n",
            "Epoch 8/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0407 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0650\n",
            "Epoch 9/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0395 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0635\n",
            "Epoch 10/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0391 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0625\n",
            "Epoch 11/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0389 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0619\n",
            "Epoch 12/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0374 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0613\n",
            "Epoch 13/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0386 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0613\n",
            "Epoch 14/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0376 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0606\n",
            "Epoch 15/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0358 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0603\n",
            "Epoch 16/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0362 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0596\n",
            "Epoch 17/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0360 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0590\n",
            "Epoch 18/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0352 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0588\n",
            "Epoch 19/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0364 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0581\n",
            "Epoch 20/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0377 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0576\n",
            "Epoch 21/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0358 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0573\n",
            "Epoch 22/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0349 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0569\n",
            "Epoch 23/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0342 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0565\n",
            "Epoch 24/200\n",
            "8/8 [==============================] - 0s 11ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0365 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0563\n",
            "Epoch 25/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0365 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0557\n",
            "Epoch 26/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0331 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0566\n",
            "Epoch 27/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0350 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0551\n",
            "Epoch 28/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0337 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0554\n",
            "Epoch 29/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0356 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0543\n",
            "Epoch 30/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0338 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0539\n",
            "Epoch 31/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0344 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0540\n",
            "Epoch 32/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0345 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0528\n",
            "Epoch 33/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0327 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0540\n",
            "Epoch 34/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0360 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0524\n",
            "Epoch 35/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0304 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0527\n",
            "Epoch 36/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0343 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0517\n",
            "Epoch 37/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0331 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0514\n",
            "Epoch 38/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0345 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0512\n",
            "Epoch 39/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0333 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0509\n",
            "Epoch 40/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0310 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0518\n",
            "Epoch 41/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0305 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0503\n",
            "Epoch 42/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0349 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0518\n",
            "Epoch 43/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0361 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0509\n",
            "Epoch 44/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0349 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0504\n",
            "Epoch 45/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0331 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0506\n",
            "Epoch 46/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0334 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0491\n",
            "Epoch 47/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0336 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0489\n",
            "Epoch 48/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0337 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0489\n",
            "Epoch 49/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0325 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 50/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0332 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0486\n",
            "Epoch 51/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0307 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0482\n",
            "Epoch 52/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0337 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0480\n",
            "Epoch 53/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0329 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0478\n",
            "Epoch 54/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0297 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0476\n",
            "Epoch 55/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0309 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0503\n",
            "Epoch 56/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0349 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0486\n",
            "Epoch 57/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0327 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0471\n",
            "Epoch 58/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0323 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0488\n",
            "Epoch 59/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0325 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 60/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0294 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 61/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0312 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0465\n",
            "Epoch 62/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0296 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0462\n",
            "Epoch 63/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0297 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0462\n",
            "Epoch 64/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0298 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0458\n",
            "Epoch 65/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0317 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0456\n",
            "Epoch 66/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0322 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 67/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0291 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 68/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0281 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0455\n",
            "Epoch 69/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0309 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0450\n",
            "Epoch 70/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0326 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0468\n",
            "Epoch 71/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0313 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0447\n",
            "Epoch 72/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0296 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0452\n",
            "Epoch 73/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0302 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0446\n",
            "Epoch 74/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0313 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0445\n",
            "Epoch 75/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0305 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0442\n",
            "Epoch 76/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0303 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0439\n",
            "Epoch 77/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0284 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0447\n",
            "Epoch 78/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0311 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0438\n",
            "Epoch 79/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0296 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0448\n",
            "Epoch 80/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0329 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 81/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0301 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0433\n",
            "Epoch 82/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0282 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0432\n",
            "Epoch 83/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0272 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0431\n",
            "Epoch 84/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0285 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0433\n",
            "Epoch 85/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0281 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0446\n",
            "Epoch 86/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0302 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0429\n",
            "Epoch 87/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0285 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0435\n",
            "Epoch 88/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0298 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0432\n",
            "Epoch 89/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0309 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0437\n",
            "Epoch 90/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0278 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0429\n",
            "Epoch 91/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0279 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0426\n",
            "Epoch 92/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0277 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0423\n",
            "Epoch 93/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0267 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0423\n",
            "Epoch 94/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0277 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0424\n",
            "Epoch 95/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0308 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0421\n",
            "Epoch 96/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0290 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0431\n",
            "Epoch 97/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0284 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0419\n",
            "Epoch 98/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0280 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 99/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0306 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0419\n",
            "Epoch 100/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0285 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0420\n",
            "Epoch 101/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0295 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0416\n",
            "Epoch 102/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0268 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0416\n",
            "Epoch 103/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0279 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0416\n",
            "Epoch 104/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0271 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0429\n",
            "Epoch 105/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0260 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 106/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0286 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0416\n",
            "Epoch 107/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0274 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0425\n",
            "Epoch 108/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0282 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0412\n",
            "Epoch 109/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0269 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0417\n",
            "Epoch 110/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0268 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0415\n",
            "Epoch 111/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0279 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0434\n",
            "Epoch 112/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0300 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0430\n",
            "Epoch 113/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0278 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0414\n",
            "Epoch 114/200\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0275 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0408\n",
            "Epoch 115/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0269 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0408\n",
            "Epoch 116/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0272 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0427\n",
            "Epoch 117/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0304 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0413\n",
            "Epoch 118/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0284 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0421\n",
            "Epoch 119/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0290 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0406\n",
            "Epoch 120/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0267 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0408\n",
            "Epoch 121/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0273 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0418\n",
            "Epoch 122/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0291 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 123/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0261 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0424\n",
            "Epoch 124/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0271 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0403\n",
            "Epoch 125/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0270 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 126/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0278 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0413\n",
            "Epoch 127/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0276 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0403\n",
            "Epoch 128/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0262 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 129/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0276 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0406\n",
            "Epoch 130/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0266 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0412\n",
            "Epoch 131/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0277 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0406\n",
            "Epoch 132/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0275 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0399\n",
            "Epoch 133/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0294 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0399\n",
            "Epoch 134/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0266 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0399\n",
            "Epoch 135/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0254 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0399\n",
            "Epoch 136/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0263 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0397\n",
            "Epoch 137/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0269 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0425\n",
            "Epoch 138/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0275 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0427\n",
            "Epoch 139/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0274 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0409\n",
            "Epoch 140/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0267 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0397\n",
            "Epoch 141/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0257 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0396\n",
            "Epoch 142/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0252 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0394\n",
            "Epoch 143/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0267 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0404\n",
            "Epoch 144/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0255 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0396\n",
            "Epoch 145/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0244 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0401\n",
            "Epoch 146/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 147/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0263 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0396\n",
            "Epoch 148/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0243 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0405\n",
            "Epoch 149/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0273 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0394\n",
            "Epoch 150/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0258 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0392\n",
            "Epoch 151/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0244 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 152/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0249 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0391\n",
            "Epoch 153/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0256 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0391\n",
            "Epoch 154/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0244 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 155/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0246 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 156/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0240 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 157/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0393\n",
            "Epoch 158/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0258 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0390\n",
            "Epoch 159/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0245 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 160/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0236 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0404\n",
            "Epoch 161/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0262 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0397\n",
            "Epoch 162/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0249 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 163/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0260 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0388\n",
            "Epoch 164/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0253 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0388\n",
            "Epoch 165/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0256 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0398\n",
            "Epoch 166/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0251 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0412\n",
            "Epoch 167/200\n",
            "8/8 [==============================] - 0s 12ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0264 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0389\n",
            "Epoch 168/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0234 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0399\n",
            "Epoch 169/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0248 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0445\n",
            "Epoch 170/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0282 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 171/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0266 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0398\n",
            "Epoch 172/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0246 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0386\n",
            "Epoch 173/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0241 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0387\n",
            "Epoch 174/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0267 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0386\n",
            "Epoch 175/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0244 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0390\n",
            "Epoch 176/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0242 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0385\n",
            "Epoch 177/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0238 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0391\n",
            "Epoch 178/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0245 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0386\n",
            "Epoch 179/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0255 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0389\n",
            "Epoch 180/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0254 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0385\n",
            "Epoch 181/200\n",
            "8/8 [==============================] - 0s 52ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0239 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0384\n",
            "Epoch 182/200\n",
            "8/8 [==============================] - 0s 28ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0254 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0383\n",
            "Epoch 183/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0268 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 184/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0234 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0389\n",
            "Epoch 185/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0274 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 186/200\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0261 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n",
            "Epoch 187/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0259 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0381\n",
            "Epoch 188/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0246 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0383\n",
            "Epoch 189/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0232 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n",
            "Epoch 190/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0235 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0383\n",
            "Epoch 191/200\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0233 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0384\n",
            "Epoch 192/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0232 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 193/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0225 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 194/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0223 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 195/200\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0258 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0387\n",
            "Epoch 196/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0238 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0381\n",
            "Epoch 197/200\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0245 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0383\n",
            "Epoch 198/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0242 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n",
            "Epoch 199/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0244 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 200/200\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0255 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 3464<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4d712f6174ad46e9b262fd4d89c86327",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.16MB of 1.16MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162046-mrzjnvtp/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162046-mrzjnvtp/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>199</td></tr><tr><td>loss</td><td>0.00164</td></tr><tr><td>mean_squared_error</td><td>0.00164</td></tr><tr><td>mean_absolute_error</td><td>0.02398</td></tr><tr><td>val_loss</td><td>0.00257</td></tr><tr><td>val_mean_squared_error</td><td>0.00257</td></tr><tr><td>val_mean_absolute_error</td><td>0.03821</td></tr><tr><td>_runtime</td><td>38</td></tr><tr><td>_timestamp</td><td>1626711684</td></tr><tr><td>_step</td><td>199</td></tr><tr><td>best_val_loss</td><td>0.00251</td></tr><tr><td>best_epoch</td><td>194</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▂▂▂▂▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▂▁▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">winter-sweep-14</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/mrzjnvtp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/mrzjnvtp</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: n6mxb993 with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">skilled-sweep-15</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/n6mxb993\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/n6mxb993</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_162148-n6mxb993</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 6s 282ms/step - loss: 0.2421 - mean_squared_error: 0.2421 - mean_absolute_error: 0.4527 - val_loss: 0.1338 - val_mean_squared_error: 0.1338 - val_mean_absolute_error: 0.2983\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.1490 - mean_squared_error: 0.1490 - mean_absolute_error: 0.3436 - val_loss: 0.0244 - val_mean_squared_error: 0.0244 - val_mean_absolute_error: 0.1225\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0119 - mean_squared_error: 0.0119 - mean_absolute_error: 0.0791 - val_loss: 0.0203 - val_mean_squared_error: 0.0203 - val_mean_absolute_error: 0.1195\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0077 - mean_squared_error: 0.0077 - mean_absolute_error: 0.0606 - val_loss: 0.0185 - val_mean_squared_error: 0.0185 - val_mean_absolute_error: 0.1123\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 1s 143ms/step - loss: 0.0092 - mean_squared_error: 0.0092 - mean_absolute_error: 0.0588 - val_loss: 0.0155 - val_mean_squared_error: 0.0155 - val_mean_absolute_error: 0.1003\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0468 - val_loss: 0.0130 - val_mean_squared_error: 0.0130 - val_mean_absolute_error: 0.0895\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0462 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0865\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0457 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0827\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0449 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0804\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0443 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0777\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0461 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0757\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0482 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0745\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0412 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0745\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 1s 139ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0396 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0733\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0409 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0756\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0466 - val_loss: 0.0091 - val_mean_squared_error: 0.0091 - val_mean_absolute_error: 0.0706\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0437 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0694\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0394 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0683\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0410 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0686\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0418 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0654\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0410 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0649\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0422 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0646\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0419 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0634\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0401 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0628\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0407 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0642\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0422 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0631\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0368 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0663\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0385 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0629\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0394 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0635\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0382 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0629\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0406 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0580\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0401 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0620\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0375 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0610\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0372 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0654\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0444 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0582\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0381 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0611\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0390 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0627\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0386 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0588\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0343 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0626\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0408 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0584\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0354 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0592\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0389 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0616\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0375 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0571\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0355 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0562\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0374 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0565\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0374 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0568\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0362 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0627\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 1s 116ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0379 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0582\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0350 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0549\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0340 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0563\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0350 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0565\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0361 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0536\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0357 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0560\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0361 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0544\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0372 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0556\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0336 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0552\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0347 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0542\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0364 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0590\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0361 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0555\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0338 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0534\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0357 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0547\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0338 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0543\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0338 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0542\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0338 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0563\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0341 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0532\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 1s 128ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0350 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0538\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0362 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0533\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0345 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0515\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0354 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0533\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0346 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0541\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0309 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0574\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 1s 117ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0382 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0547\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0330 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0527\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0368 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0534\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0336 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0511\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0333 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0512\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 1s 144ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0369 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0536\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 1s 139ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0342 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0566\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0345 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0514\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0352 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0532\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0312 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0540\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0382 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0514\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0334 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0514\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0350 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0527\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0328 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0572\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0357 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0591\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0362 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0516\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0344 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0515\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0317 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0516\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0343 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0553\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0330 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0525\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 1s 145ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0319 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0526\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 1s 139ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0355 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0552\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4131<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d4edb7b85ae54de188e6c0ba4de31a08",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.19MB of 1.19MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162148-n6mxb993/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162148-n6mxb993/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>92</td></tr><tr><td>loss</td><td>0.00282</td></tr><tr><td>mean_squared_error</td><td>0.00282</td></tr><tr><td>mean_absolute_error</td><td>0.03573</td></tr><tr><td>val_loss</td><td>0.00507</td></tr><tr><td>val_mean_squared_error</td><td>0.00507</td></tr><tr><td>val_mean_absolute_error</td><td>0.05521</td></tr><tr><td>_runtime</td><td>109</td></tr><tr><td>_timestamp</td><td>1626711817</td></tr><tr><td>_step</td><td>92</td></tr><tr><td>best_val_loss</td><td>0.00459</td></tr><tr><td>best_epoch</td><td>82</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">skilled-sweep-15</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/n6mxb993\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/n6mxb993</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: d3vtxh9s with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">charmed-sweep-16</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/d3vtxh9s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/d3vtxh9s</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_162350-d3vtxh9s</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "16/16 [==============================] - 6s 171ms/step - loss: 0.4396 - mean_squared_error: 0.4396 - mean_absolute_error: 0.4479 - val_loss: 0.0146 - val_mean_squared_error: 0.0146 - val_mean_absolute_error: 0.0974\n",
            "Epoch 2/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0100 - mean_squared_error: 0.0100 - mean_absolute_error: 0.0766 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0620\n",
            "Epoch 3/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0506 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0482\n",
            "Epoch 4/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0424 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0458\n",
            "Epoch 5/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0385 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0454\n",
            "Epoch 6/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0394 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0442\n",
            "Epoch 7/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0363 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0455\n",
            "Epoch 8/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0342 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0434\n",
            "Epoch 9/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0351 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0421\n",
            "Epoch 10/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0314 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 11/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0315 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0417\n",
            "Epoch 12/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0339 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 13/100\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0336 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0428\n",
            "Epoch 14/100\n",
            "16/16 [==============================] - 2s 137ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0308 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0448\n",
            "Epoch 15/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0332 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 16/100\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0363 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0407\n",
            "Epoch 17/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0331 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0412\n",
            "Epoch 18/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0317 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0450\n",
            "Epoch 19/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0284 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0415\n",
            "Epoch 20/100\n",
            "16/16 [==============================] - 2s 136ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0297 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0406\n",
            "Epoch 21/100\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0292 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0412\n",
            "Epoch 22/100\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0281 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0405\n",
            "Epoch 23/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0317 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0436\n",
            "Epoch 24/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0300 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0435\n",
            "Epoch 25/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0295 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0533\n",
            "Epoch 26/100\n",
            "16/16 [==============================] - 2s 117ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0379 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0403\n",
            "Epoch 27/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0302 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0438\n",
            "Epoch 28/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0353 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 29/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0252 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0409\n",
            "Epoch 30/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0299 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0414\n",
            "Epoch 31/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0283 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 32/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0249 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0388\n",
            "Epoch 33/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0292 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0394\n",
            "Epoch 34/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0264 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0396\n",
            "Epoch 35/100\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0256 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0388\n",
            "Epoch 36/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0245 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0378\n",
            "Epoch 37/100\n",
            "16/16 [==============================] - 2s 117ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0235 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0393\n",
            "Epoch 38/100\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0242 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0387\n",
            "Epoch 39/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0249 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0383\n",
            "Epoch 40/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0231 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0379\n",
            "Epoch 41/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0254 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0399\n",
            "Epoch 42/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0268 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0399\n",
            "Epoch 43/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0252 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0379\n",
            "Epoch 44/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0222 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0414\n",
            "Epoch 45/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0278 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 46/100\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0392\n",
            "Epoch 47/100\n",
            "16/16 [==============================] - 2s 132ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0262 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0381\n",
            "Epoch 48/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0244 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0405\n",
            "Epoch 49/100\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0256 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0391\n",
            "Epoch 50/100\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 9.6682e-04 - mean_squared_error: 9.6682e-04 - mean_absolute_error: 0.0218 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0373\n",
            "Epoch 51/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0225 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0377\n",
            "Epoch 52/100\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0231 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0415\n",
            "Epoch 53/100\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0254 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0381\n",
            "Epoch 54/100\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0211 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0371\n",
            "Epoch 55/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0250 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0436\n",
            "Epoch 56/100\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0269 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0403\n",
            "Epoch 57/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0274 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0366\n",
            "Epoch 58/100\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0259 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0387\n",
            "Epoch 59/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0249 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0380\n",
            "Epoch 60/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 9.8999e-04 - mean_squared_error: 9.8999e-04 - mean_absolute_error: 0.0215 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0370\n",
            "Epoch 61/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0213 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0375\n",
            "Epoch 62/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0241 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0369\n",
            "Epoch 63/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0209 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0366\n",
            "Epoch 64/100\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0221 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0365\n",
            "Epoch 65/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 9.8114e-04 - mean_squared_error: 9.8114e-04 - mean_absolute_error: 0.0206 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0374\n",
            "Epoch 66/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0240 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0370\n",
            "Epoch 67/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0218 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0389\n",
            "Epoch 68/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0263 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0370\n",
            "Epoch 69/100\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0221 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0373\n",
            "Epoch 70/100\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0216 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0365\n",
            "Epoch 71/100\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0229 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0366\n",
            "Epoch 72/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0215 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0368\n",
            "Epoch 73/100\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0217 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0374\n",
            "Epoch 74/100\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0215 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0370\n",
            "Epoch 75/100\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 8.7338e-04 - mean_squared_error: 8.7338e-04 - mean_absolute_error: 0.0198 - val_loss: 0.0022 - val_mean_squared_error: 0.0022 - val_mean_absolute_error: 0.0372\n",
            "Epoch 76/100\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0220 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0395\n",
            "Epoch 77/100\n",
            "16/16 [==============================] - 2s 115ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0231 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0369\n",
            "Epoch 78/100\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0192 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0373\n",
            "Epoch 79/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 8.9333e-04 - mean_squared_error: 8.9333e-04 - mean_absolute_error: 0.0183 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0372\n",
            "Epoch 80/100\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0259 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 81/100\n",
            "16/16 [==============================] - 2s 132ms/step - loss: 9.3449e-04 - mean_squared_error: 9.3449e-04 - mean_absolute_error: 0.0208 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0386\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4489<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "785dcc5e97024e0eb589a31c9d67da86",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.22MB of 1.22MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162350-d3vtxh9s/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162350-d3vtxh9s/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>80</td></tr><tr><td>loss</td><td>0.00147</td></tr><tr><td>mean_squared_error</td><td>0.00147</td></tr><tr><td>mean_absolute_error</td><td>0.02134</td></tr><tr><td>val_loss</td><td>0.00233</td></tr><tr><td>val_mean_squared_error</td><td>0.00233</td></tr><tr><td>val_mean_absolute_error</td><td>0.03859</td></tr><tr><td>_runtime</td><td>171</td></tr><tr><td>_timestamp</td><td>1626712001</td></tr><tr><td>_step</td><td>80</td></tr><tr><td>best_val_loss</td><td>0.00219</td></tr><tr><td>best_epoch</td><td>70</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▂▂▁▁▁▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▂▂▁▁▁▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▂▂▂▃▂▂▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">charmed-sweep-16</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/d3vtxh9s\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/d3vtxh9s</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 5oxf972z with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">charmed-sweep-17</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5oxf972z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5oxf972z</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_162730-5oxf972z</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "8/8 [==============================] - 6s 255ms/step - loss: 0.1865 - mean_squared_error: 0.1865 - mean_absolute_error: 0.3406 - val_loss: 0.0283 - val_mean_squared_error: 0.0283 - val_mean_absolute_error: 0.1414\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 1s 143ms/step - loss: 0.0172 - mean_squared_error: 0.0172 - mean_absolute_error: 0.0982 - val_loss: 0.0136 - val_mean_squared_error: 0.0136 - val_mean_absolute_error: 0.0932\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 1s 146ms/step - loss: 0.0113 - mean_squared_error: 0.0113 - mean_absolute_error: 0.0751 - val_loss: 0.0122 - val_mean_squared_error: 0.0122 - val_mean_absolute_error: 0.0857\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0617 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0746\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0555 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0763\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0542 - val_loss: 0.0093 - val_mean_squared_error: 0.0093 - val_mean_absolute_error: 0.0710\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0493 - val_loss: 0.0083 - val_mean_squared_error: 0.0083 - val_mean_absolute_error: 0.0693\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0491 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0668\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0462 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0658\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0445 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0636\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0454 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0622\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0444 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0621\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0437 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0606\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0434 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0622\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 1s 145ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0399 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0606\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0418 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0589\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0385 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0591\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0379 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0583\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0413 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0581\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0403 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0566\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0402 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0560\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0402 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0549\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 1s 147ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0394 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0554\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0378 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0552\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0367 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0538\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0376 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0526\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0384 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0528\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0363 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0518\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0362 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0528\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0379 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0505\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 1s 143ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0355 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0519\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0369 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0511\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0387 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0502\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0366 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0495\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 1s 132ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0382 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0490\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0372 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0496\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 1s 145ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0363 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0489\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0342 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0483\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0357 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0487\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0350 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0488\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0321 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0498\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0343 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0513\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0360 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0480\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0348 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0337 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0470\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0339 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0484\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0321 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0487\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0330 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0481\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0345 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0480\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0322 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0469\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 1s 146ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0336 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0458\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0305 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0458\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0342 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0333 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0451\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0315 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0462\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0339 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0454\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0302 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0454\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0324 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0464\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0335 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0459\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0309 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0451\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 1s 142ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0337 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0444\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0356 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 1s 113ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0333 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0450\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0318 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0458\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0337 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0448\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 1s 115ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0320 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0457\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 1s 118ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0308 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0446\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0305 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0465\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0309 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0450\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0311 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0430\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0295 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0454\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0303 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0456\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0340 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0434\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0324 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0433\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0298 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0429\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0296 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0435\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0304 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0432\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0312 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0450\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0296 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0443\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0304 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0440\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0291 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0429\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0275 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0422\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0302 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0418\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 1s 120ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0283 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0421\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0293 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0420\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0290 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0421\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 1s 125ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0284 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0418\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0296 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0438\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0308 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0425\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0287 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0423\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0276 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0433\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0293 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0436\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 4829<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "7294a1e992c941ba8ff0eb52d9401292",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.26MB of 1.26MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162730-5oxf972z/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_162730-5oxf972z/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>91</td></tr><tr><td>loss</td><td>0.00213</td></tr><tr><td>mean_squared_error</td><td>0.00213</td></tr><tr><td>mean_absolute_error</td><td>0.02787</td></tr><tr><td>val_loss</td><td>0.00312</td></tr><tr><td>val_mean_squared_error</td><td>0.00312</td></tr><tr><td>val_mean_absolute_error</td><td>0.0436</td></tr><tr><td>_runtime</td><td>109</td></tr><tr><td>_timestamp</td><td>1626712159</td></tr><tr><td>_step</td><td>91</td></tr><tr><td>best_val_loss</td><td>0.00302</td></tr><tr><td>best_epoch</td><td>81</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">charmed-sweep-17</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5oxf972z\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5oxf972z</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 5m21u3uz with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">helpful-sweep-18</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5m21u3uz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5m21u3uz</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_163014-5m21u3uz</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/50\n",
            "32/32 [==============================] - 5s 52ms/step - loss: 0.2144 - mean_squared_error: 0.2144 - mean_absolute_error: 0.3695 - val_loss: 0.0175 - val_mean_squared_error: 0.0175 - val_mean_absolute_error: 0.1092\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0514 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0937\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0065 - mean_squared_error: 0.0065 - mean_absolute_error: 0.0447 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0871\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0453 - val_loss: 0.0117 - val_mean_squared_error: 0.0117 - val_mean_absolute_error: 0.0841\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0413 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0816\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0073 - mean_squared_error: 0.0073 - mean_absolute_error: 0.0449 - val_loss: 0.0105 - val_mean_squared_error: 0.0105 - val_mean_absolute_error: 0.0785\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0375 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0772\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0373 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0765\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0395 - val_loss: 0.0099 - val_mean_squared_error: 0.0099 - val_mean_absolute_error: 0.0744\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0410 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0710\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0413 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0692\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0354 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0664\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0365 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0648\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0392 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0638\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0349 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0623\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0388 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0609\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0354 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0603\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0335 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0598\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0335 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0594\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0359 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0567\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0352 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0592\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0356 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0566\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0361 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0554\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0315 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0549\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0315 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0565\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0339 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0542\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0329 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0559\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0320 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0521\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0347 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0511\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0334 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0525\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0386 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0501\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0315 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0515\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0324 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0514\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0331 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0493\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0284 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0487\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0323 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0487\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0317 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0481\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0289 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0489\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0307 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0479\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0310 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0476\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0303 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0279 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0463\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0298 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0459\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0336 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0456\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0304 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0476\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0302 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0300 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0450\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0289 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0450\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 0s 14ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0301 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0445\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0326 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0450\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5192<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "441590961ce24fa99c58dbbc7e2d0040",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.28MB of 1.28MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163014-5m21u3uz/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163014-5m21u3uz/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.0024</td></tr><tr><td>mean_squared_error</td><td>0.0024</td></tr><tr><td>mean_absolute_error</td><td>0.03053</td></tr><tr><td>val_loss</td><td>0.00351</td></tr><tr><td>val_mean_squared_error</td><td>0.00351</td></tr><tr><td>val_mean_absolute_error</td><td>0.04502</td></tr><tr><td>_runtime</td><td>33</td></tr><tr><td>_timestamp</td><td>1626712247</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00351</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▅▄▄▄▄▃▃▃▃▃▃▂▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▅▄▄▄▄▃▃▃▃▃▃▂▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▆▅▅▅▄▄▄▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">helpful-sweep-18</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5m21u3uz\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/5m21u3uz</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: bkxcarrv with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: selu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">blooming-sweep-19</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/bkxcarrv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/bkxcarrv</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_163102-bkxcarrv</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "16/16 [==============================] - 6s 178ms/step - loss: 0.1855 - mean_squared_error: 0.1855 - mean_absolute_error: 0.3115 - val_loss: 0.0158 - val_mean_squared_error: 0.0158 - val_mean_absolute_error: 0.0986\n",
            "Epoch 2/50\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0085 - mean_squared_error: 0.0085 - mean_absolute_error: 0.0651 - val_loss: 0.0123 - val_mean_squared_error: 0.0123 - val_mean_absolute_error: 0.0865\n",
            "Epoch 3/50\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0080 - mean_squared_error: 0.0080 - mean_absolute_error: 0.0575 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0707\n",
            "Epoch 4/50\n",
            "16/16 [==============================] - 2s 117ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0469 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0670\n",
            "Epoch 5/50\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0479 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0678\n",
            "Epoch 6/50\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0455 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0613\n",
            "Epoch 7/50\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0497 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0605\n",
            "Epoch 8/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0421 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0591\n",
            "Epoch 9/50\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0390 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0572\n",
            "Epoch 10/50\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0406 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0570\n",
            "Epoch 11/50\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0393 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0535\n",
            "Epoch 12/50\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0356 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0556\n",
            "Epoch 13/50\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0358 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0583\n",
            "Epoch 14/50\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0378 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0504\n",
            "Epoch 15/50\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0346 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 16/50\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0376 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0496\n",
            "Epoch 17/50\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0341 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0525\n",
            "Epoch 18/50\n",
            "16/16 [==============================] - 2s 138ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0336 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0517\n",
            "Epoch 19/50\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0353 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0567\n",
            "Epoch 20/50\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0397 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0531\n",
            "Epoch 21/50\n",
            "16/16 [==============================] - 2s 132ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0364 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0474\n",
            "Epoch 22/50\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0339 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0475\n",
            "Epoch 23/50\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0332 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0480\n",
            "Epoch 24/50\n",
            "16/16 [==============================] - 2s 114ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0337 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0483\n",
            "Epoch 25/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0337 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0453\n",
            "Epoch 26/50\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0305 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 27/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0353 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0466\n",
            "Epoch 28/50\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0305 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0457\n",
            "Epoch 29/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0326 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0466\n",
            "Epoch 30/50\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0328 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0470\n",
            "Epoch 31/50\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0380 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0453\n",
            "Epoch 32/50\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0361 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0467\n",
            "Epoch 33/50\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0314 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0443\n",
            "Epoch 34/50\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0319 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0438\n",
            "Epoch 35/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0305 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0452\n",
            "Epoch 36/50\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0284 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0435\n",
            "Epoch 37/50\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0318 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0445\n",
            "Epoch 38/50\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0294 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 39/50\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0272 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0428\n",
            "Epoch 40/50\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0290 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0429\n",
            "Epoch 41/50\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0259 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0424\n",
            "Epoch 42/50\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0296 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0432\n",
            "Epoch 43/50\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0278 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 44/50\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0271 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0423\n",
            "Epoch 45/50\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0293 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0418\n",
            "Epoch 46/50\n",
            "16/16 [==============================] - 2s 136ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0285 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0422\n",
            "Epoch 47/50\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0280 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0425\n",
            "Epoch 48/50\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0283 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0433\n",
            "Epoch 49/50\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0295 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0427\n",
            "Epoch 50/50\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0293 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0425\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5407<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "092bd26d6c1242ab83e3a4b9115682aa",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.31MB of 1.31MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163102-bkxcarrv/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163102-bkxcarrv/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00221</td></tr><tr><td>mean_squared_error</td><td>0.00221</td></tr><tr><td>mean_absolute_error</td><td>0.02946</td></tr><tr><td>val_loss</td><td>0.00317</td></tr><tr><td>val_mean_squared_error</td><td>0.00317</td></tr><tr><td>val_mean_absolute_error</td><td>0.04245</td></tr><tr><td>_runtime</td><td>111</td></tr><tr><td>_timestamp</td><td>1626712373</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.003</td></tr><tr><td>best_epoch</td><td>44</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▅▄▃▃▃▃▂▃▃▂▂▂▂▃▂▂▂▂▂▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">blooming-sweep-19</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/bkxcarrv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/bkxcarrv</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: odxlgtxb with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">giddy-sweep-20</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/odxlgtxb\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/odxlgtxb</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_163346-odxlgtxb</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "32/32 [==============================] - 4s 37ms/step - loss: 0.1106 - mean_squared_error: 0.1106 - mean_absolute_error: 0.2491 - val_loss: 0.0173 - val_mean_squared_error: 0.0173 - val_mean_absolute_error: 0.1051\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0567 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0718\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0385 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0667\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0324 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0653\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0346 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0622\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0323 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0605\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0358 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0578\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0305 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0567\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0297 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0567\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 1s 23ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0326 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0565\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 0s 15ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0386 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0547\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0324 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0530\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0323 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0518\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0312 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0509\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0296 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0492\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0334 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0518\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0319 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0536\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0319 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0480\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0291 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0471\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0306 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0455\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0303 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0451\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0273 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0455\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0289 - val_loss: 0.0035 - val_mean_squared_error: 0.0035 - val_mean_absolute_error: 0.0444\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0278 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0446\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0278 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0344 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0434\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0304 - val_loss: 0.0034 - val_mean_squared_error: 0.0034 - val_mean_absolute_error: 0.0432\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0311 - val_loss: 0.0032 - val_mean_squared_error: 0.0032 - val_mean_absolute_error: 0.0424\n",
            "Epoch 29/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0283 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0422\n",
            "Epoch 30/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0276 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0453\n",
            "Epoch 31/200\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0273 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0417\n",
            "Epoch 32/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0268 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0412\n",
            "Epoch 33/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0302 - val_loss: 0.0033 - val_mean_squared_error: 0.0033 - val_mean_absolute_error: 0.0428\n",
            "Epoch 34/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0271 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0411\n",
            "Epoch 35/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0271 - val_loss: 0.0031 - val_mean_squared_error: 0.0031 - val_mean_absolute_error: 0.0417\n",
            "Epoch 36/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0273 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0402\n",
            "Epoch 37/200\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0252 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0406\n",
            "Epoch 38/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0289 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0407\n",
            "Epoch 39/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0296 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0414\n",
            "Epoch 40/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0283 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0410\n",
            "Epoch 41/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0273 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0397\n",
            "Epoch 42/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0288 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0404\n",
            "Epoch 43/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0249 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0391\n",
            "Epoch 44/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0256 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0401\n",
            "Epoch 45/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0256 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0396\n",
            "Epoch 46/200\n",
            "32/32 [==============================] - 0s 9ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0234 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0393\n",
            "Epoch 47/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0268 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0387\n",
            "Epoch 48/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0270 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0386\n",
            "Epoch 49/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0285 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0405\n",
            "Epoch 50/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0263 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0385\n",
            "Epoch 51/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0239 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 52/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0265 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0385\n",
            "Epoch 53/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0277 - val_loss: 0.0029 - val_mean_squared_error: 0.0029 - val_mean_absolute_error: 0.0407\n",
            "Epoch 54/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0278 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0397\n",
            "Epoch 55/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0261 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0382\n",
            "Epoch 56/200\n",
            "32/32 [==============================] - 0s 10ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0250 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0378\n",
            "Epoch 57/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.8421e-04 - mean_squared_error: 9.8421e-04 - mean_absolute_error: 0.0222 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0388\n",
            "Epoch 58/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0230 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0378\n",
            "Epoch 59/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0255 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0377\n",
            "Epoch 60/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0248 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0379\n",
            "Epoch 61/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 9.9125e-04 - mean_squared_error: 9.9125e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0402\n",
            "Epoch 62/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0013 - mean_squared_error: 0.0013 - mean_absolute_error: 0.0246 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0372\n",
            "Epoch 63/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0243 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0406\n",
            "Epoch 64/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0243 - val_loss: 0.0026 - val_mean_squared_error: 0.0026 - val_mean_absolute_error: 0.0382\n",
            "Epoch 65/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0010 - mean_squared_error: 0.0010 - mean_absolute_error: 0.0233 - val_loss: 0.0028 - val_mean_squared_error: 0.0028 - val_mean_absolute_error: 0.0425\n",
            "Epoch 66/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0266 - val_loss: 0.0030 - val_mean_squared_error: 0.0030 - val_mean_absolute_error: 0.0412\n",
            "Epoch 67/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0287 - val_loss: 0.0025 - val_mean_squared_error: 0.0025 - val_mean_absolute_error: 0.0378\n",
            "Epoch 68/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0243 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0369\n",
            "Epoch 69/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0223 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 70/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0253 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0372\n",
            "Epoch 71/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 9.9206e-04 - mean_squared_error: 9.9206e-04 - mean_absolute_error: 0.0209 - val_loss: 0.0027 - val_mean_squared_error: 0.0027 - val_mean_absolute_error: 0.0394\n",
            "Epoch 72/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0012 - mean_squared_error: 0.0012 - mean_absolute_error: 0.0252 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0390\n",
            "Epoch 73/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0234 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0367\n",
            "Epoch 74/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.8607e-04 - mean_squared_error: 9.8607e-04 - mean_absolute_error: 0.0223 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0388\n",
            "Epoch 75/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0242 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0379\n",
            "Epoch 76/200\n",
            "32/32 [==============================] - 0s 11ms/step - loss: 0.0014 - mean_squared_error: 0.0014 - mean_absolute_error: 0.0234 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0372\n",
            "Epoch 77/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 9.8484e-04 - mean_squared_error: 9.8484e-04 - mean_absolute_error: 0.0213 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0370\n",
            "Epoch 78/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0253 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0371\n",
            "Epoch 79/200\n",
            "32/32 [==============================] - 0s 13ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0258 - val_loss: 0.0024 - val_mean_squared_error: 0.0024 - val_mean_absolute_error: 0.0370\n",
            "Epoch 80/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0221 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0364\n",
            "Epoch 81/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0228 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0365\n",
            "Epoch 82/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0011 - mean_squared_error: 0.0011 - mean_absolute_error: 0.0218 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0366\n",
            "Epoch 83/200\n",
            "32/32 [==============================] - 0s 12ms/step - loss: 0.0016 - mean_squared_error: 0.0016 - mean_absolute_error: 0.0211 - val_loss: 0.0023 - val_mean_squared_error: 0.0023 - val_mean_absolute_error: 0.0367\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5640<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "600bfc2fa8f24583891d6b706bbd42b8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.34MB of 1.34MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163346-odxlgtxb/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163346-odxlgtxb/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>82</td></tr><tr><td>loss</td><td>0.00151</td></tr><tr><td>mean_squared_error</td><td>0.00151</td></tr><tr><td>mean_absolute_error</td><td>0.02158</td></tr><tr><td>val_loss</td><td>0.00231</td></tr><tr><td>val_mean_squared_error</td><td>0.00231</td></tr><tr><td>val_mean_absolute_error</td><td>0.03665</td></tr><tr><td>_runtime</td><td>41</td></tr><tr><td>_timestamp</td><td>1626712467</td></tr><tr><td>_step</td><td>82</td></tr><tr><td>best_val_loss</td><td>0.0023</td></tr><tr><td>best_epoch</td><td>72</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▄▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▄▃▃▃▃▂▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">giddy-sweep-20</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/odxlgtxb\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/odxlgtxb</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Sweep Agent: Waiting for job.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Job received.\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: i57sz3zp with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 64\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sweet-sweep-21</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/i57sz3zp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/i57sz3zp</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_163515-i57sz3zp</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "16/16 [==============================] - 6s 193ms/step - loss: 0.2952 - mean_squared_error: 0.2952 - mean_absolute_error: 0.4964 - val_loss: 0.1221 - val_mean_squared_error: 0.1221 - val_mean_absolute_error: 0.2796\n",
            "Epoch 2/200\n",
            "16/16 [==============================] - 2s 132ms/step - loss: 0.1186 - mean_squared_error: 0.1186 - mean_absolute_error: 0.2925 - val_loss: 0.0454 - val_mean_squared_error: 0.0454 - val_mean_absolute_error: 0.1772\n",
            "Epoch 3/200\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0194 - mean_squared_error: 0.0194 - mean_absolute_error: 0.1109 - val_loss: 0.0193 - val_mean_squared_error: 0.0193 - val_mean_absolute_error: 0.1128\n",
            "Epoch 4/200\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0096 - mean_squared_error: 0.0096 - mean_absolute_error: 0.0719 - val_loss: 0.0168 - val_mean_squared_error: 0.0168 - val_mean_absolute_error: 0.1066\n",
            "Epoch 5/200\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0542 - val_loss: 0.0137 - val_mean_squared_error: 0.0137 - val_mean_absolute_error: 0.0930\n",
            "Epoch 6/200\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0063 - mean_squared_error: 0.0063 - mean_absolute_error: 0.0517 - val_loss: 0.0121 - val_mean_squared_error: 0.0121 - val_mean_absolute_error: 0.0857\n",
            "Epoch 7/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0474 - val_loss: 0.0116 - val_mean_squared_error: 0.0116 - val_mean_absolute_error: 0.0833\n",
            "Epoch 8/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0064 - mean_squared_error: 0.0064 - mean_absolute_error: 0.0509 - val_loss: 0.0109 - val_mean_squared_error: 0.0109 - val_mean_absolute_error: 0.0800\n",
            "Epoch 9/200\n",
            "16/16 [==============================] - 2s 136ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0507 - val_loss: 0.0108 - val_mean_squared_error: 0.0108 - val_mean_absolute_error: 0.0791\n",
            "Epoch 10/200\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0506 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0802\n",
            "Epoch 11/200\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0499 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0752\n",
            "Epoch 12/200\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0496 - val_loss: 0.0100 - val_mean_squared_error: 0.0100 - val_mean_absolute_error: 0.0759\n",
            "Epoch 13/200\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0459 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0730\n",
            "Epoch 14/200\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0438 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0726\n",
            "Epoch 15/200\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0454 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0723\n",
            "Epoch 16/200\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0475 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0719\n",
            "Epoch 17/200\n",
            "16/16 [==============================] - 2s 120ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0446 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0690\n",
            "Epoch 18/200\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0463 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0697\n",
            "Epoch 19/200\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0447 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0693\n",
            "Epoch 20/200\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0470 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0670\n",
            "Epoch 21/200\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0447 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0682\n",
            "Epoch 22/200\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0470 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0660\n",
            "Epoch 23/200\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0480 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0666\n",
            "Epoch 24/200\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0425 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0662\n",
            "Epoch 25/200\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0416 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0640\n",
            "Epoch 26/200\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0411 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0635\n",
            "Epoch 27/200\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0421 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0633\n",
            "Epoch 28/200\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0428 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0620\n",
            "Epoch 29/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0432 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0607\n",
            "Epoch 30/200\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0394 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0604\n",
            "Epoch 31/200\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0370 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0601\n",
            "Epoch 32/200\n",
            "16/16 [==============================] - 2s 132ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0434 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0644\n",
            "Epoch 33/200\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0420 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0601\n",
            "Epoch 34/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0384 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0598\n",
            "Epoch 35/200\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0401 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0608\n",
            "Epoch 36/200\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0414 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0607\n",
            "Epoch 37/200\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0406 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0605\n",
            "Epoch 38/200\n",
            "16/16 [==============================] - 2s 136ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0399 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0594\n",
            "Epoch 39/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0420 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0572\n",
            "Epoch 40/200\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0398 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0573\n",
            "Epoch 41/200\n",
            "16/16 [==============================] - 2s 132ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0378 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0590\n",
            "Epoch 42/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0389 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0569\n",
            "Epoch 43/200\n",
            "16/16 [==============================] - 2s 134ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0351 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0583\n",
            "Epoch 44/200\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0388 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0558\n",
            "Epoch 45/200\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0396 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0558\n",
            "Epoch 46/200\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0401 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0569\n",
            "Epoch 47/200\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0370 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0577\n",
            "Epoch 48/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0379 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0565\n",
            "Epoch 49/200\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0412 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0554\n",
            "Epoch 50/200\n",
            "16/16 [==============================] - 2s 116ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0387 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0571\n",
            "Epoch 51/200\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0381 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0559\n",
            "Epoch 52/200\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0352 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0561\n",
            "Epoch 53/200\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0404 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0567\n",
            "Epoch 54/200\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0363 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0540\n",
            "Epoch 55/200\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0366 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0550\n",
            "Epoch 56/200\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0386 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0558\n",
            "Epoch 57/200\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0365 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0533\n",
            "Epoch 58/200\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0346 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0531\n",
            "Epoch 59/200\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0367 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0565\n",
            "Epoch 60/200\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0375 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0551\n",
            "Epoch 61/200\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0377 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0542\n",
            "Epoch 62/200\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0367 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0538\n",
            "Epoch 63/200\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0375 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0556\n",
            "Epoch 64/200\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0373 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0544\n",
            "Epoch 65/200\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0361 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0531\n",
            "Epoch 66/200\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0385 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0545\n",
            "Epoch 67/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0387 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0543\n",
            "Epoch 68/200\n",
            "16/16 [==============================] - 2s 131ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0365 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0543\n",
            "Epoch 69/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0352 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0521\n",
            "Epoch 70/200\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0354 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0539\n",
            "Epoch 71/200\n",
            "16/16 [==============================] - 2s 137ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0348 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0541\n",
            "Epoch 72/200\n",
            "16/16 [==============================] - 2s 133ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0356 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0541\n",
            "Epoch 73/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0344 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0516\n",
            "Epoch 74/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0361 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0532\n",
            "Epoch 75/200\n",
            "16/16 [==============================] - 2s 132ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0359 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0524\n",
            "Epoch 76/200\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0379 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0537\n",
            "Epoch 77/200\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0361 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0520\n",
            "Epoch 78/200\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0351 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0538\n",
            "Epoch 79/200\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0370 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0524\n",
            "Epoch 80/200\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0336 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0522\n",
            "Epoch 81/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0363 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0519\n",
            "Epoch 82/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0340 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0521\n",
            "Epoch 83/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0354 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0508\n",
            "Epoch 84/200\n",
            "16/16 [==============================] - 2s 136ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0366 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0515\n",
            "Epoch 85/200\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0361 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0531\n",
            "Epoch 86/200\n",
            "16/16 [==============================] - 2s 136ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0336 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0538\n",
            "Epoch 87/200\n",
            "16/16 [==============================] - 2s 143ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0327 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0519\n",
            "Epoch 88/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0345 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0508\n",
            "Epoch 89/200\n",
            "16/16 [==============================] - 2s 136ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0314 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0517\n",
            "Epoch 90/200\n",
            "16/16 [==============================] - 2s 135ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0357 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0519\n",
            "Epoch 91/200\n",
            "16/16 [==============================] - 2s 139ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0352 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0522\n",
            "Epoch 92/200\n",
            "16/16 [==============================] - 2s 129ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0331 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0498\n",
            "Epoch 93/200\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0336 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 94/200\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0320 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0515\n",
            "Epoch 95/200\n",
            "16/16 [==============================] - 2s 128ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0373 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0507\n",
            "Epoch 96/200\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0346 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0499\n",
            "Epoch 97/200\n",
            "16/16 [==============================] - 2s 130ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0428 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0522\n",
            "Epoch 98/200\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0338 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0515\n",
            "Epoch 99/200\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0354 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 100/200\n",
            "16/16 [==============================] - 2s 124ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0320 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0481\n",
            "Epoch 101/200\n",
            "16/16 [==============================] - 2s 126ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0340 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0521\n",
            "Epoch 102/200\n",
            "16/16 [==============================] - 2s 119ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0337 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0495\n",
            "Epoch 103/200\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0333 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0529\n",
            "Epoch 104/200\n",
            "16/16 [==============================] - 2s 118ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0327 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0490\n",
            "Epoch 105/200\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0347 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0513\n",
            "Epoch 106/200\n",
            "16/16 [==============================] - 2s 122ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0358 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0535\n",
            "Epoch 107/200\n",
            "16/16 [==============================] - 2s 121ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0348 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0482\n",
            "Epoch 108/200\n",
            "16/16 [==============================] - 2s 127ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0347 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0503\n",
            "Epoch 109/200\n",
            "16/16 [==============================] - 2s 125ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0310 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0499\n",
            "Epoch 110/200\n",
            "16/16 [==============================] - 2s 123ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0317 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0491\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 5960<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "16e7b1e1b9c54b94bcce0bd47677bdeb",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.38MB of 1.38MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163515-i57sz3zp/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163515-i57sz3zp/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>109</td></tr><tr><td>loss</td><td>0.00236</td></tr><tr><td>mean_squared_error</td><td>0.00236</td></tr><tr><td>mean_absolute_error</td><td>0.03239</td></tr><tr><td>val_loss</td><td>0.00414</td></tr><tr><td>val_mean_squared_error</td><td>0.00414</td></tr><tr><td>val_mean_absolute_error</td><td>0.04912</td></tr><tr><td>_runtime</td><td>236</td></tr><tr><td>_timestamp</td><td>1626712751</td></tr><tr><td>_step</td><td>109</td></tr><tr><td>best_val_loss</td><td>0.00406</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sweet-sweep-21</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/i57sz3zp\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/i57sz3zp</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 1vdsbx5t with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.001\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">silver-sweep-22</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/1vdsbx5t\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/1vdsbx5t</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_163955-1vdsbx5t</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "8/8 [==============================] - 5s 253ms/step - loss: 0.2619 - mean_squared_error: 0.2619 - mean_absolute_error: 0.4639 - val_loss: 0.0504 - val_mean_squared_error: 0.0504 - val_mean_absolute_error: 0.1730\n",
            "Epoch 2/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0434 - mean_squared_error: 0.0434 - mean_absolute_error: 0.1641 - val_loss: 0.0291 - val_mean_squared_error: 0.0291 - val_mean_absolute_error: 0.1420\n",
            "Epoch 3/50\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0136 - mean_squared_error: 0.0136 - mean_absolute_error: 0.0864 - val_loss: 0.0200 - val_mean_squared_error: 0.0200 - val_mean_absolute_error: 0.1118\n",
            "Epoch 4/50\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - mean_absolute_error: 0.0889 - val_loss: 0.0177 - val_mean_squared_error: 0.0177 - val_mean_absolute_error: 0.1120\n",
            "Epoch 5/50\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0724 - val_loss: 0.0154 - val_mean_squared_error: 0.0154 - val_mean_absolute_error: 0.1018\n",
            "Epoch 6/50\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0580 - val_loss: 0.0124 - val_mean_squared_error: 0.0124 - val_mean_absolute_error: 0.0893\n",
            "Epoch 7/50\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0067 - mean_squared_error: 0.0067 - mean_absolute_error: 0.0543 - val_loss: 0.0120 - val_mean_squared_error: 0.0120 - val_mean_absolute_error: 0.0863\n",
            "Epoch 8/50\n",
            "8/8 [==============================] - 1s 126ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0516 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0807\n",
            "Epoch 9/50\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0069 - mean_squared_error: 0.0069 - mean_absolute_error: 0.0510 - val_loss: 0.0101 - val_mean_squared_error: 0.0101 - val_mean_absolute_error: 0.0778\n",
            "Epoch 10/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0457 - val_loss: 0.0097 - val_mean_squared_error: 0.0097 - val_mean_absolute_error: 0.0760\n",
            "Epoch 11/50\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0469 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0755\n",
            "Epoch 12/50\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0443 - val_loss: 0.0092 - val_mean_squared_error: 0.0092 - val_mean_absolute_error: 0.0747\n",
            "Epoch 13/50\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0458 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0741\n",
            "Epoch 14/50\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0483 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0727\n",
            "Epoch 15/50\n",
            "8/8 [==============================] - 1s 123ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0430 - val_loss: 0.0087 - val_mean_squared_error: 0.0087 - val_mean_absolute_error: 0.0715\n",
            "Epoch 16/50\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0433 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0715\n",
            "Epoch 17/50\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0442 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0689\n",
            "Epoch 18/50\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0414 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0686\n",
            "Epoch 19/50\n",
            "8/8 [==============================] - 1s 139ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0421 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0672\n",
            "Epoch 20/50\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0434 - val_loss: 0.0081 - val_mean_squared_error: 0.0081 - val_mean_absolute_error: 0.0677\n",
            "Epoch 21/50\n",
            "8/8 [==============================] - 1s 131ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0418 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0655\n",
            "Epoch 22/50\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0057 - mean_squared_error: 0.0057 - mean_absolute_error: 0.0438 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0648\n",
            "Epoch 23/50\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0407 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0642\n",
            "Epoch 24/50\n",
            "8/8 [==============================] - 1s 134ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0441 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0646\n",
            "Epoch 25/50\n",
            "8/8 [==============================] - 1s 140ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0412 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0626\n",
            "Epoch 26/50\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0408 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0627\n",
            "Epoch 27/50\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0410 - val_loss: 0.0069 - val_mean_squared_error: 0.0069 - val_mean_absolute_error: 0.0616\n",
            "Epoch 28/50\n",
            "8/8 [==============================] - 1s 136ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0408 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0609\n",
            "Epoch 29/50\n",
            "8/8 [==============================] - 1s 148ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0387 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0608\n",
            "Epoch 30/50\n",
            "8/8 [==============================] - 1s 138ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0362 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0605\n",
            "Epoch 31/50\n",
            "8/8 [==============================] - 1s 145ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0386 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0597\n",
            "Epoch 32/50\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0387 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0587\n",
            "Epoch 33/50\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0398 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0605\n",
            "Epoch 34/50\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0406 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0589\n",
            "Epoch 35/50\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0409 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0575\n",
            "Epoch 36/50\n",
            "8/8 [==============================] - 1s 141ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0398 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0586\n",
            "Epoch 37/50\n",
            "8/8 [==============================] - 1s 119ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0390 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0587\n",
            "Epoch 38/50\n",
            "8/8 [==============================] - 1s 129ms/step - loss: 0.0050 - mean_squared_error: 0.0050 - mean_absolute_error: 0.0418 - val_loss: 0.0061 - val_mean_squared_error: 0.0061 - val_mean_absolute_error: 0.0576\n",
            "Epoch 39/50\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0393 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0566\n",
            "Epoch 40/50\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0375 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0576\n",
            "Epoch 41/50\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0386 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0568\n",
            "Epoch 42/50\n",
            "8/8 [==============================] - 1s 121ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0386 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0557\n",
            "Epoch 43/50\n",
            "8/8 [==============================] - 1s 127ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0384 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0569\n",
            "Epoch 44/50\n",
            "8/8 [==============================] - 1s 137ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0391 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0562\n",
            "Epoch 45/50\n",
            "8/8 [==============================] - 1s 135ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0356 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0553\n",
            "Epoch 46/50\n",
            "8/8 [==============================] - 1s 133ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0371 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0561\n",
            "Epoch 47/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0359 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0548\n",
            "Epoch 48/50\n",
            "8/8 [==============================] - 1s 122ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0380 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0547\n",
            "Epoch 49/50\n",
            "8/8 [==============================] - 1s 130ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0396 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0544\n",
            "Epoch 50/50\n",
            "8/8 [==============================] - 1s 124ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0386 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0548\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6385<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "88c7541ca08f455897a26e3ba192e3fd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.40MB of 1.40MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163955-1vdsbx5t/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_163955-1vdsbx5t/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00335</td></tr><tr><td>mean_squared_error</td><td>0.00335</td></tr><tr><td>mean_absolute_error</td><td>0.03757</td></tr><tr><td>val_loss</td><td>0.00521</td></tr><tr><td>val_mean_squared_error</td><td>0.00521</td></tr><tr><td>val_mean_absolute_error</td><td>0.05481</td></tr><tr><td>_runtime</td><td>64</td></tr><tr><td>_timestamp</td><td>1626712859</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00521</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▆▄▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">silver-sweep-22</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/1vdsbx5t\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/1vdsbx5t</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: fsu099sn with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.1\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">sweet-sweep-23</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/fsu099sn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/fsu099sn</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_164139-fsu099sn</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 9s 156ms/step - loss: 0.3003 - mean_squared_error: 0.3003 - mean_absolute_error: 0.4814 - val_loss: 0.0238 - val_mean_squared_error: 0.0238 - val_mean_absolute_error: 0.1314\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0579 - val_loss: 0.0142 - val_mean_squared_error: 0.0142 - val_mean_absolute_error: 0.0937\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0443 - val_loss: 0.0125 - val_mean_squared_error: 0.0125 - val_mean_absolute_error: 0.0860\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0461 - val_loss: 0.0143 - val_mean_squared_error: 0.0143 - val_mean_absolute_error: 0.0904\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0072 - mean_squared_error: 0.0072 - mean_absolute_error: 0.0509 - val_loss: 0.0114 - val_mean_squared_error: 0.0114 - val_mean_absolute_error: 0.0806\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0066 - mean_squared_error: 0.0066 - mean_absolute_error: 0.0451 - val_loss: 0.0102 - val_mean_squared_error: 0.0102 - val_mean_absolute_error: 0.0755\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0429 - val_loss: 0.0103 - val_mean_squared_error: 0.0103 - val_mean_absolute_error: 0.0740\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 118ms/step - loss: 0.0049 - mean_squared_error: 0.0049 - mean_absolute_error: 0.0427 - val_loss: 0.0094 - val_mean_squared_error: 0.0094 - val_mean_absolute_error: 0.0731\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0480 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0707\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0376 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0684\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0383 - val_loss: 0.0086 - val_mean_squared_error: 0.0086 - val_mean_absolute_error: 0.0674\n",
            "Epoch 12/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0422 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0639\n",
            "Epoch 13/50\n",
            "32/32 [==============================] - 4s 132ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0376 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0624\n",
            "Epoch 14/50\n",
            "32/32 [==============================] - 4s 134ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0383 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0631\n",
            "Epoch 15/50\n",
            "32/32 [==============================] - 4s 134ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0370 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0610\n",
            "Epoch 16/50\n",
            "32/32 [==============================] - 4s 139ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0347 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0603\n",
            "Epoch 17/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0369 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0569\n",
            "Epoch 18/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0383 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0570\n",
            "Epoch 19/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0321 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0590\n",
            "Epoch 20/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0369 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0581\n",
            "Epoch 21/50\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0362 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0569\n",
            "Epoch 22/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0351 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0628\n",
            "Epoch 23/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0361 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0546\n",
            "Epoch 24/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0364 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0516\n",
            "Epoch 25/50\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0365 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0542\n",
            "Epoch 26/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0348 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0557\n",
            "Epoch 27/50\n",
            "32/32 [==============================] - 4s 130ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0357 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0548\n",
            "Epoch 28/50\n",
            "32/32 [==============================] - 4s 136ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0334 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0571\n",
            "Epoch 29/50\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0346 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0528\n",
            "Epoch 30/50\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0351 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0516\n",
            "Epoch 31/50\n",
            "32/32 [==============================] - 4s 133ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0325 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0501\n",
            "Epoch 32/50\n",
            "32/32 [==============================] - 4s 132ms/step - loss: 0.0068 - mean_squared_error: 0.0068 - mean_absolute_error: 0.0418 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0512\n",
            "Epoch 33/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0327 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0523\n",
            "Epoch 34/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0358 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0512\n",
            "Epoch 35/50\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0344 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0529\n",
            "Epoch 36/50\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0329 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0496\n",
            "Epoch 37/50\n",
            "32/32 [==============================] - 4s 136ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0339 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0515\n",
            "Epoch 38/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0349 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0489\n",
            "Epoch 39/50\n",
            "32/32 [==============================] - 4s 132ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0315 - val_loss: 0.0073 - val_mean_squared_error: 0.0073 - val_mean_absolute_error: 0.0671\n",
            "Epoch 40/50\n",
            "32/32 [==============================] - 4s 133ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0373 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0502\n",
            "Epoch 41/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0332 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0510\n",
            "Epoch 42/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0308 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0502\n",
            "Epoch 43/50\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0328 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0527\n",
            "Epoch 44/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0304 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0497\n",
            "Epoch 45/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0327 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0493\n",
            "Epoch 46/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0309 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0499\n",
            "Epoch 47/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0325 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0493\n",
            "Epoch 48/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0344 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0484\n",
            "Epoch 49/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0308 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0514\n",
            "Epoch 50/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0335 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0487\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6590<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "41d899a3c0064a43a3f4dbb648f6eec9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.42MB of 1.42MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_164139-fsu099sn/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_164139-fsu099sn/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>49</td></tr><tr><td>loss</td><td>0.00286</td></tr><tr><td>mean_squared_error</td><td>0.00286</td></tr><tr><td>mean_absolute_error</td><td>0.03319</td></tr><tr><td>val_loss</td><td>0.00398</td></tr><tr><td>val_mean_squared_error</td><td>0.00398</td></tr><tr><td>val_mean_absolute_error</td><td>0.04868</td></tr><tr><td>_runtime</td><td>216</td></tr><tr><td>_timestamp</td><td>1626713115</td></tr><tr><td>_step</td><td>49</td></tr><tr><td>best_val_loss</td><td>0.00398</td></tr><tr><td>best_epoch</td><td>49</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▄▅▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▅▄▅▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▅▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">sweet-sweep-23</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/fsu099sn\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/fsu099sn</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: wbgqa2ow with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 200\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">still-sweep-24</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/wbgqa2ow\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/wbgqa2ow</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_164626-wbgqa2ow</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/200\n",
            "32/32 [==============================] - 9s 164ms/step - loss: 0.1173 - mean_squared_error: 0.1173 - mean_absolute_error: 0.2493 - val_loss: 0.0140 - val_mean_squared_error: 0.0140 - val_mean_absolute_error: 0.0939\n",
            "Epoch 2/200\n",
            "32/32 [==============================] - 4s 135ms/step - loss: 0.0094 - mean_squared_error: 0.0094 - mean_absolute_error: 0.0617 - val_loss: 0.0089 - val_mean_squared_error: 0.0089 - val_mean_absolute_error: 0.0726\n",
            "Epoch 3/200\n",
            "32/32 [==============================] - 4s 135ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0432 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0659\n",
            "Epoch 4/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0416 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0699\n",
            "Epoch 5/200\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0436 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0616\n",
            "Epoch 6/200\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0404 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0582\n",
            "Epoch 7/200\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0438 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0562\n",
            "Epoch 8/200\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0408 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0588\n",
            "Epoch 9/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0414 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0537\n",
            "Epoch 10/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0393 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0561\n",
            "Epoch 11/200\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0059 - mean_squared_error: 0.0059 - mean_absolute_error: 0.0403 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0502\n",
            "Epoch 12/200\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0345 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0507\n",
            "Epoch 13/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0404 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0531\n",
            "Epoch 14/200\n",
            "32/32 [==============================] - 4s 134ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0423 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0499\n",
            "Epoch 15/200\n",
            "32/32 [==============================] - 4s 137ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0368 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0529\n",
            "Epoch 16/200\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0357 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0516\n",
            "Epoch 17/200\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0330 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0515\n",
            "Epoch 18/200\n",
            "32/32 [==============================] - 4s 130ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0308 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0480\n",
            "Epoch 19/200\n",
            "32/32 [==============================] - 4s 131ms/step - loss: 0.0018 - mean_squared_error: 0.0018 - mean_absolute_error: 0.0305 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0540\n",
            "Epoch 20/200\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0395 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 21/200\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0352 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0595\n",
            "Epoch 22/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0323 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0503\n",
            "Epoch 23/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0310 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0569\n",
            "Epoch 24/200\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0347 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0574\n",
            "Epoch 25/200\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0294 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0564\n",
            "Epoch 26/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0288 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0498\n",
            "Epoch 27/200\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0276 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0513\n",
            "Epoch 28/200\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0015 - mean_squared_error: 0.0015 - mean_absolute_error: 0.0266 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0538\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6839<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "cdd4a21ed19447d2aa2df2ec72be5c03",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.44MB of 1.44MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_164626-wbgqa2ow/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_164626-wbgqa2ow/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>27</td></tr><tr><td>loss</td><td>0.00215</td></tr><tr><td>mean_squared_error</td><td>0.00215</td></tr><tr><td>mean_absolute_error</td><td>0.02795</td></tr><tr><td>val_loss</td><td>0.00523</td></tr><tr><td>val_mean_squared_error</td><td>0.00523</td></tr><tr><td>val_mean_absolute_error</td><td>0.05382</td></tr><tr><td>_runtime</td><td>125</td></tr><tr><td>_timestamp</td><td>1626713311</td></tr><tr><td>_step</td><td>27</td></tr><tr><td>best_val_loss</td><td>0.00393</td></tr><tr><td>best_epoch</td><td>17</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr><tr><td>loss</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▄▄▄▃▂▂▂▂▂▁▂▂▁▂▂▂▁▂▁▃▂▂▂▂▁▂▂</td></tr><tr><td>val_mean_squared_error</td><td>█▄▄▄▃▂▂▂▂▂▁▂▂▁▂▂▂▁▂▁▃▂▂▂▂▁▂▂</td></tr><tr><td>val_mean_absolute_error</td><td>█▅▄▄▃▃▂▃▂▂▁▂▂▁▂▂▂▁▂▁▃▁▂▃▂▁▂▂</td></tr><tr><td>_runtime</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▇▇▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">still-sweep-24</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/wbgqa2ow\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/wbgqa2ow</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: dkwplsan with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">lyric-sweep-25</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/dkwplsan\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/dkwplsan</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_164908-dkwplsan</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/100\n",
            "32/32 [==============================] - 9s 161ms/step - loss: 0.0843 - mean_squared_error: 0.0843 - mean_absolute_error: 0.2140 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0747\n",
            "Epoch 2/100\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0060 - mean_squared_error: 0.0060 - mean_absolute_error: 0.0510 - val_loss: 0.0072 - val_mean_squared_error: 0.0072 - val_mean_absolute_error: 0.0618\n",
            "Epoch 3/100\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0045 - mean_squared_error: 0.0045 - mean_absolute_error: 0.0451 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0654\n",
            "Epoch 4/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0502 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0542\n",
            "Epoch 5/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0404 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0580\n",
            "Epoch 6/100\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0061 - mean_squared_error: 0.0061 - mean_absolute_error: 0.0438 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0524\n",
            "Epoch 7/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0394 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0576\n",
            "Epoch 8/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0451 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0529\n",
            "Epoch 9/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0380 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0494\n",
            "Epoch 10/100\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0388 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0526\n",
            "Epoch 11/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0366 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0560\n",
            "Epoch 12/100\n",
            "32/32 [==============================] - 4s 125ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0311 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0534\n",
            "Epoch 13/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0382 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0573\n",
            "Epoch 14/100\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0325 - val_loss: 0.0066 - val_mean_squared_error: 0.0066 - val_mean_absolute_error: 0.0629\n",
            "Epoch 15/100\n",
            "32/32 [==============================] - 4s 135ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0354 - val_loss: 0.0046 - val_mean_squared_error: 0.0046 - val_mean_absolute_error: 0.0515\n",
            "Epoch 16/100\n",
            "32/32 [==============================] - 4s 127ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0311 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0571\n",
            "Epoch 17/100\n",
            "32/32 [==============================] - 4s 130ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0297 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0566\n",
            "Epoch 18/100\n",
            "32/32 [==============================] - 4s 139ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0329 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0612\n",
            "Epoch 19/100\n",
            "32/32 [==============================] - 4s 129ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0303 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0589\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 6996<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "805455528baa46bda7c850e421e9464e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 1.46MB of 1.46MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_164908-dkwplsan/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_164908-dkwplsan/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>18</td></tr><tr><td>loss</td><td>0.00229</td></tr><tr><td>mean_squared_error</td><td>0.00229</td></tr><tr><td>mean_absolute_error</td><td>0.03019</td></tr><tr><td>val_loss</td><td>0.00602</td></tr><tr><td>val_mean_squared_error</td><td>0.00602</td></tr><tr><td>val_mean_absolute_error</td><td>0.05892</td></tr><tr><td>_runtime</td><td>89</td></tr><tr><td>_timestamp</td><td>1626713437</td></tr><tr><td>_step</td><td>18</td></tr><tr><td>best_val_loss</td><td>0.00437</td></tr><tr><td>best_epoch</td><td>8</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr><tr><td>loss</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▃▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▅▆▂▃▂▂▂▁▁▂▂▃▄▁▃▃▃▃</td></tr><tr><td>val_mean_squared_error</td><td>█▅▆▂▃▂▂▂▁▁▂▂▃▄▁▃▃▃▃</td></tr><tr><td>val_mean_absolute_error</td><td>█▄▅▂▃▂▃▂▁▂▃▂▃▅▂▃▃▄▄</td></tr><tr><td>_runtime</td><td>▁▁▂▂▃▃▃▄▄▄▅▅▆▆▆▇▇██</td></tr><tr><td>_timestamp</td><td>▁▁▂▂▃▃▃▄▄▄▅▅▆▆▆▇▇██</td></tr><tr><td>_step</td><td>▁▁▂▂▃▃▃▄▄▅▅▅▆▆▆▇▇██</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">lyric-sweep-25</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/dkwplsan\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/dkwplsan</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: 0c483luv with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: tanh\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 128\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.2\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 100\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.0005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: nadam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">unique-sweep-26</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/0c483luv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/0c483luv</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_165051-0c483luv</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "8/8 [==============================] - 4s 136ms/step - loss: 0.1491 - mean_squared_error: 0.1491 - mean_absolute_error: 0.3432 - val_loss: 0.0145 - val_mean_squared_error: 0.0145 - val_mean_absolute_error: 0.0938\n",
            "Epoch 2/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0095 - mean_squared_error: 0.0095 - mean_absolute_error: 0.0678 - val_loss: 0.0138 - val_mean_squared_error: 0.0138 - val_mean_absolute_error: 0.0932\n",
            "Epoch 3/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0058 - mean_squared_error: 0.0058 - mean_absolute_error: 0.0522 - val_loss: 0.0112 - val_mean_squared_error: 0.0112 - val_mean_absolute_error: 0.0840\n",
            "Epoch 4/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0056 - mean_squared_error: 0.0056 - mean_absolute_error: 0.0484 - val_loss: 0.0110 - val_mean_squared_error: 0.0110 - val_mean_absolute_error: 0.0821\n",
            "Epoch 5/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0054 - mean_squared_error: 0.0054 - mean_absolute_error: 0.0468 - val_loss: 0.0106 - val_mean_squared_error: 0.0106 - val_mean_absolute_error: 0.0795\n",
            "Epoch 6/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0040 - mean_squared_error: 0.0040 - mean_absolute_error: 0.0425 - val_loss: 0.0098 - val_mean_squared_error: 0.0098 - val_mean_absolute_error: 0.0764\n",
            "Epoch 7/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0046 - mean_squared_error: 0.0046 - mean_absolute_error: 0.0408 - val_loss: 0.0096 - val_mean_squared_error: 0.0096 - val_mean_absolute_error: 0.0748\n",
            "Epoch 8/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0062 - mean_squared_error: 0.0062 - mean_absolute_error: 0.0444 - val_loss: 0.0095 - val_mean_squared_error: 0.0095 - val_mean_absolute_error: 0.0737\n",
            "Epoch 9/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0411 - val_loss: 0.0090 - val_mean_squared_error: 0.0090 - val_mean_absolute_error: 0.0722\n",
            "Epoch 10/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0408 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0712\n",
            "Epoch 11/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0374 - val_loss: 0.0088 - val_mean_squared_error: 0.0088 - val_mean_absolute_error: 0.0705\n",
            "Epoch 12/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0403 - val_loss: 0.0084 - val_mean_squared_error: 0.0084 - val_mean_absolute_error: 0.0702\n",
            "Epoch 13/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0381 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0691\n",
            "Epoch 14/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0401 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0684\n",
            "Epoch 15/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0405 - val_loss: 0.0082 - val_mean_squared_error: 0.0082 - val_mean_absolute_error: 0.0678\n",
            "Epoch 16/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0358 - val_loss: 0.0080 - val_mean_squared_error: 0.0080 - val_mean_absolute_error: 0.0672\n",
            "Epoch 17/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0388 - val_loss: 0.0078 - val_mean_squared_error: 0.0078 - val_mean_absolute_error: 0.0664\n",
            "Epoch 18/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0365 - val_loss: 0.0076 - val_mean_squared_error: 0.0076 - val_mean_absolute_error: 0.0659\n",
            "Epoch 19/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0370 - val_loss: 0.0075 - val_mean_squared_error: 0.0075 - val_mean_absolute_error: 0.0649\n",
            "Epoch 20/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0366 - val_loss: 0.0074 - val_mean_squared_error: 0.0074 - val_mean_absolute_error: 0.0643\n",
            "Epoch 21/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0351 - val_loss: 0.0079 - val_mean_squared_error: 0.0079 - val_mean_absolute_error: 0.0653\n",
            "Epoch 22/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0368 - val_loss: 0.0070 - val_mean_squared_error: 0.0070 - val_mean_absolute_error: 0.0627\n",
            "Epoch 23/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0336 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0621\n",
            "Epoch 24/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0347 - val_loss: 0.0067 - val_mean_squared_error: 0.0067 - val_mean_absolute_error: 0.0620\n",
            "Epoch 25/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0364 - val_loss: 0.0071 - val_mean_squared_error: 0.0071 - val_mean_absolute_error: 0.0617\n",
            "Epoch 26/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0325 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0610\n",
            "Epoch 27/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0353 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0617\n",
            "Epoch 28/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0055 - mean_squared_error: 0.0055 - mean_absolute_error: 0.0420 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0603\n",
            "Epoch 29/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0358 - val_loss: 0.0065 - val_mean_squared_error: 0.0065 - val_mean_absolute_error: 0.0594\n",
            "Epoch 30/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0361 - val_loss: 0.0064 - val_mean_squared_error: 0.0064 - val_mean_absolute_error: 0.0588\n",
            "Epoch 31/100\n",
            "8/8 [==============================] - 0s 14ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0324 - val_loss: 0.0062 - val_mean_squared_error: 0.0062 - val_mean_absolute_error: 0.0606\n",
            "Epoch 32/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0369 - val_loss: 0.0068 - val_mean_squared_error: 0.0068 - val_mean_absolute_error: 0.0599\n",
            "Epoch 33/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0371 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0578\n",
            "Epoch 34/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0376 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0577\n",
            "Epoch 35/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0348 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0568\n",
            "Epoch 36/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0353 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0565\n",
            "Epoch 37/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0327 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0564\n",
            "Epoch 38/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0344 - val_loss: 0.0057 - val_mean_squared_error: 0.0057 - val_mean_absolute_error: 0.0582\n",
            "Epoch 39/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0368 - val_loss: 0.0060 - val_mean_squared_error: 0.0060 - val_mean_absolute_error: 0.0562\n",
            "Epoch 40/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0352 - val_loss: 0.0055 - val_mean_squared_error: 0.0055 - val_mean_absolute_error: 0.0554\n",
            "Epoch 41/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0346 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0552\n",
            "Epoch 42/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0336 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0548\n",
            "Epoch 43/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0342 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0540\n",
            "Epoch 44/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0326 - val_loss: 0.0056 - val_mean_squared_error: 0.0056 - val_mean_absolute_error: 0.0542\n",
            "Epoch 45/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0339 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0533\n",
            "Epoch 46/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0341 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0550\n",
            "Epoch 47/100\n",
            "8/8 [==============================] - 0s 19ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0344 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0533\n",
            "Epoch 48/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0042 - mean_squared_error: 0.0042 - mean_absolute_error: 0.0401 - val_loss: 0.0051 - val_mean_squared_error: 0.0051 - val_mean_absolute_error: 0.0528\n",
            "Epoch 49/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0333 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0527\n",
            "Epoch 50/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0319 - val_loss: 0.0053 - val_mean_squared_error: 0.0053 - val_mean_absolute_error: 0.0526\n",
            "Epoch 51/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0309 - val_loss: 0.0050 - val_mean_squared_error: 0.0050 - val_mean_absolute_error: 0.0544\n",
            "Epoch 52/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0337 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0517\n",
            "Epoch 53/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0340 - val_loss: 0.0049 - val_mean_squared_error: 0.0049 - val_mean_absolute_error: 0.0513\n",
            "Epoch 54/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0347 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0519\n",
            "Epoch 55/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0324 - val_loss: 0.0052 - val_mean_squared_error: 0.0052 - val_mean_absolute_error: 0.0523\n",
            "Epoch 56/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0340 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0510\n",
            "Epoch 57/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0311 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0504\n",
            "Epoch 58/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0318 - val_loss: 0.0048 - val_mean_squared_error: 0.0048 - val_mean_absolute_error: 0.0504\n",
            "Epoch 59/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0335 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0501\n",
            "Epoch 60/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0340 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0498\n",
            "Epoch 61/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0346 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0498\n",
            "Epoch 62/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0312 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0508\n",
            "Epoch 63/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0346 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0499\n",
            "Epoch 64/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0031 - mean_squared_error: 0.0031 - mean_absolute_error: 0.0305 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0492\n",
            "Epoch 65/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0314 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0490\n",
            "Epoch 66/100\n",
            "8/8 [==============================] - 0s 13ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0329 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0497\n",
            "Epoch 67/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0323 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0489\n",
            "Epoch 68/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0317 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0488\n",
            "Epoch 69/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0356 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0484\n",
            "Epoch 70/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0326 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0485\n",
            "Epoch 71/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0041 - mean_squared_error: 0.0041 - mean_absolute_error: 0.0332 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0499\n",
            "Epoch 72/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0311 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0494\n",
            "Epoch 73/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0327 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0496\n",
            "Epoch 74/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0328 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0492\n",
            "Epoch 75/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0355 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0480\n",
            "Epoch 76/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0026 - mean_squared_error: 0.0026 - mean_absolute_error: 0.0326 - val_loss: 0.0042 - val_mean_squared_error: 0.0042 - val_mean_absolute_error: 0.0484\n",
            "Epoch 77/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0317 - val_loss: 0.0044 - val_mean_squared_error: 0.0044 - val_mean_absolute_error: 0.0520\n",
            "Epoch 78/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0358 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0481\n",
            "Epoch 79/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0315 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0474\n",
            "Epoch 80/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0036 - mean_squared_error: 0.0036 - mean_absolute_error: 0.0321 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0477\n",
            "Epoch 81/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0047 - mean_squared_error: 0.0047 - mean_absolute_error: 0.0359 - val_loss: 0.0043 - val_mean_squared_error: 0.0043 - val_mean_absolute_error: 0.0480\n",
            "Epoch 82/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0020 - mean_squared_error: 0.0020 - mean_absolute_error: 0.0304 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0470\n",
            "Epoch 83/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0033 - mean_squared_error: 0.0033 - mean_absolute_error: 0.0350 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0475\n",
            "Epoch 84/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0313 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0482\n",
            "Epoch 85/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0302 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0471\n",
            "Epoch 86/100\n",
            "8/8 [==============================] - 0s 21ms/step - loss: 0.0021 - mean_squared_error: 0.0021 - mean_absolute_error: 0.0290 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 87/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0292 - val_loss: 0.0041 - val_mean_squared_error: 0.0041 - val_mean_absolute_error: 0.0466\n",
            "Epoch 88/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0023 - mean_squared_error: 0.0023 - mean_absolute_error: 0.0307 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0462\n",
            "Epoch 89/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0028 - mean_squared_error: 0.0028 - mean_absolute_error: 0.0310 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0462\n",
            "Epoch 90/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0024 - mean_squared_error: 0.0024 - mean_absolute_error: 0.0313 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0467\n",
            "Epoch 91/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0030 - mean_squared_error: 0.0030 - mean_absolute_error: 0.0313 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0463\n",
            "Epoch 92/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0324 - val_loss: 0.0038 - val_mean_squared_error: 0.0038 - val_mean_absolute_error: 0.0457\n",
            "Epoch 93/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0022 - mean_squared_error: 0.0022 - mean_absolute_error: 0.0308 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0459\n",
            "Epoch 94/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0017 - mean_squared_error: 0.0017 - mean_absolute_error: 0.0271 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0456\n",
            "Epoch 95/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0286 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0470\n",
            "Epoch 96/100\n",
            "8/8 [==============================] - 0s 15ms/step - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0306 - val_loss: 0.0040 - val_mean_squared_error: 0.0040 - val_mean_absolute_error: 0.0466\n",
            "Epoch 97/100\n",
            "8/8 [==============================] - 0s 16ms/step - loss: 0.0037 - mean_squared_error: 0.0037 - mean_absolute_error: 0.0326 - val_loss: 0.0039 - val_mean_squared_error: 0.0039 - val_mean_absolute_error: 0.0459\n",
            "Epoch 98/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0039 - mean_squared_error: 0.0039 - mean_absolute_error: 0.0341 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0450\n",
            "Epoch 99/100\n",
            "8/8 [==============================] - 0s 18ms/step - loss: 0.0019 - mean_squared_error: 0.0019 - mean_absolute_error: 0.0303 - val_loss: 0.0037 - val_mean_squared_error: 0.0037 - val_mean_absolute_error: 0.0450\n",
            "Epoch 100/100\n",
            "8/8 [==============================] - 0s 17ms/step - loss: 0.0027 - mean_squared_error: 0.0027 - mean_absolute_error: 0.0303 - val_loss: 0.0036 - val_mean_squared_error: 0.0036 - val_mean_absolute_error: 0.0450\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<br/>Waiting for W&B process to finish, PID 7108<br/>Program ended successfully."
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e3402613fbd944d0b91f0780888468b6",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "VBox(children=(Label(value=' 0.93MB of 0.93MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find user logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_165051-0c483luv/logs/debug.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Find internal logs for this run at: <code>/content/feeder_repo/wandb/run-20210719_165051-0c483luv/logs/debug-internal.log</code>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run summary:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>99</td></tr><tr><td>loss</td><td>0.00257</td></tr><tr><td>mean_squared_error</td><td>0.00257</td></tr><tr><td>mean_absolute_error</td><td>0.03102</td></tr><tr><td>val_loss</td><td>0.00364</td></tr><tr><td>val_mean_squared_error</td><td>0.00364</td></tr><tr><td>val_mean_absolute_error</td><td>0.04498</td></tr><tr><td>_runtime</td><td>27</td></tr><tr><td>_timestamp</td><td>1626713478</td></tr><tr><td>_step</td><td>99</td></tr><tr><td>best_val_loss</td><td>0.00364</td></tr><tr><td>best_epoch</td><td>99</td></tr></table>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<h3>Run history:</h3><br/><style>\n",
              "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
              "    </style><table class=\"wandb\">\n",
              "<tr><td>epoch</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr><tr><td>loss</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_squared_error</td><td>█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>mean_absolute_error</td><td>█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_loss</td><td>█▆▅▅▄▄▄▄▄▃▃▃▃▃▂▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_squared_error</td><td>█▆▅▅▄▄▄▄▄▃▃▃▃▃▂▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁</td></tr><tr><td>val_mean_absolute_error</td><td>█▇▅▅▅▄▄▄▄▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁</td></tr><tr><td>_runtime</td><td>▁▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_timestamp</td><td>▁▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████</td></tr><tr><td>_step</td><td>▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███</td></tr></table><br/>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "Synced 5 W&B file(s), 1 media file(s), 2 artifact file(s) and 2 other file(s)"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                    <br/>Synced <strong style=\"color:#cdcd00\">unique-sweep-26</strong>: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/0c483luv\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/0c483luv</a><br/>\n",
              "                "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Agent Starting Run: kh6vksck with config:\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tactivation: relu\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tbatch_size: 32\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tdropout: 0.3\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tepochs: 50\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \tlearning_rate: 0.005\n",
            "\u001b[34m\u001b[1mwandb\u001b[0m: \toptimizer: adam\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "                Tracking run with wandb version 0.11.0<br/>\n",
              "                Syncing run <strong style=\"color:#cdcd00\">fanciful-sweep-27</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
              "                Project page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM</a><br/>\n",
              "                Sweep page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/sweeps/52hhdord</a><br/>\n",
              "Run page: <a href=\"https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/kh6vksck\" target=\"_blank\">https://wandb.ai/acse-jaq15/ACSE_9_GRU_LSTM/runs/kh6vksck</a><br/>\n",
              "                Run data is saved locally in <code>/content/feeder_repo/wandb/run-20210719_165135-kh6vksck</code><br/><br/>\n",
              "            "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:Layer gru will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "WARNING:tensorflow:Layer lstm will not use cuDNN kernels since it doesn't meet the criteria. It will use a generic GPU kernel as fallback when running on GPU.\n",
            "Epoch 1/50\n",
            "32/32 [==============================] - 9s 166ms/step - loss: 0.0847 - mean_squared_error: 0.0847 - mean_absolute_error: 0.1881 - val_loss: 0.0085 - val_mean_squared_error: 0.0085 - val_mean_absolute_error: 0.0712\n",
            "Epoch 2/50\n",
            "32/32 [==============================] - 4s 128ms/step - loss: 0.0052 - mean_squared_error: 0.0052 - mean_absolute_error: 0.0473 - val_loss: 0.0077 - val_mean_squared_error: 0.0077 - val_mean_absolute_error: 0.0633\n",
            "Epoch 3/50\n",
            "32/32 [==============================] - 4s 126ms/step - loss: 0.0044 - mean_squared_error: 0.0044 - mean_absolute_error: 0.0466 - val_loss: 0.0058 - val_mean_squared_error: 0.0058 - val_mean_absolute_error: 0.0545\n",
            "Epoch 4/50\n",
            "32/32 [==============================] - 4s 120ms/step - loss: 0.0038 - mean_squared_error: 0.0038 - mean_absolute_error: 0.0418 - val_loss: 0.0063 - val_mean_squared_error: 0.0063 - val_mean_absolute_error: 0.0570\n",
            "Epoch 5/50\n",
            "32/32 [==============================] - 4s 124ms/step - loss: 0.0048 - mean_squared_error: 0.0048 - mean_absolute_error: 0.0439 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0501\n",
            "Epoch 6/50\n",
            "32/32 [==============================] - 4s 121ms/step - loss: 0.0032 - mean_squared_error: 0.0032 - mean_absolute_error: 0.0403 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0518\n",
            "Epoch 7/50\n",
            "32/32 [==============================] - 4s 119ms/step - loss: 0.0035 - mean_squared_error: 0.0035 - mean_absolute_error: 0.0401 - val_loss: 0.0045 - val_mean_squared_error: 0.0045 - val_mean_absolute_error: 0.0488\n",
            "Epoch 8/50\n",
            "32/32 [==============================] - 4s 123ms/step - loss: 0.0043 - mean_squared_error: 0.0043 - mean_absolute_error: 0.0422 - val_loss: 0.0054 - val_mean_squared_error: 0.0054 - val_mean_absolute_error: 0.0569\n",
            "Epoch 9/50\n",
            "32/32 [==============================] - 4s 122ms/step - loss: 0.0051 - mean_squared_error: 0.0051 - mean_absolute_error: 0.0410 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0500\n",
            "Epoch 10/50\n",
            "32/32 [==============================] - 4s 116ms/step - loss: 0.0029 - mean_squared_error: 0.0029 - mean_absolute_error: 0.0336 - val_loss: 0.0047 - val_mean_squared_error: 0.0047 - val_mean_absolute_error: 0.0499\n",
            "Epoch 11/50\n",
            "32/32 [==============================] - 4s 133ms/step - loss: 0.0025 - mean_squared_error: 0.0025 - mean_absolute_error: 0.0344 - val_loss: 0.0059 - val_mean_squared_error: 0.0059 - val_mean_absolute_error: 0.0580\n",
            "Epoch 12/50\n",
            "25/32 [======================>.......] - ETA: 0s - loss: 0.0034 - mean_squared_error: 0.0034 - mean_absolute_error: 0.0381"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\u001b[34m\u001b[1mwandb\u001b[0m: Ctrl + C detected. Stopping sweep.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gFTu29dbi18i"
      },
      "source": [
        "# Setting up the best model\n",
        "Using the best values from the hyperparamter search with wandb, the most optimal model configuration is used."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NwsO8cDJPMdj"
      },
      "source": [
        "# picking the best values\n",
        "best_config = {\n",
        "    'epochs': 200,\n",
        "    'batch_size': 64,\n",
        "    'learning_rate': 0.001,\n",
        "    'dropout': 0.1,\n",
        "    'optimizer': 'adam',\n",
        "    'activation': 'tanh'\n",
        "}"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OU7NXYBg1T4r",
        "outputId": "e231c1b0-a52f-4d55-a309-346753023b0a"
      },
      "source": [
        "# clearing the settings on the keras backend\n",
        "keras.backend.clear_session()\n",
        "\n",
        "# setting keras model to sequential mode\n",
        "model = Sequential()\n",
        "\n",
        "# layer 1\n",
        "model.add(GRU(units=64, activation=best_config['activation'], return_sequences=True, input_shape=(window_len, 1)))\n",
        "model.add(Dropout(best_config['dropout']))\n",
        "# layer 2\n",
        "model.add(LSTM(units=64, activation=best_config['activation']))\n",
        "model.add(Dropout(0.1))\n",
        "# layer 3\n",
        "model.add(Dense(1))\n",
        "\n",
        "# defining the optimiser\n",
        "if best_config['optimizer'] == 'sgd':\n",
        "  optimizer = SGD(learning_rate=best_config['learning_rate'], decay=1e-5, momentum=0.9, nesterov=True)\n",
        "elif best_config['optimizer'] == 'rmsprop':\n",
        "  optimizer = RMSprop(learning_rate=best_config['learning_rate'], decay=1e-5)\n",
        "elif best_config['optimizer'] == 'adam':\n",
        "  optimizer = Adam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "elif best_config['optimizer'] == 'nadam':\n",
        "  optimizer = Nadam(learning_rate=best_config['learning_rate'], beta_1=0.9, beta_2=0.999, clipnorm=1.0)\n",
        "\n",
        "# compile the model\n",
        "model.compile(optimizer, loss='mean_squared_error')\n",
        "\n",
        "# counting the number of trainable parameters\n",
        "trainable_count = count_params(model.trainable_weights)\n",
        "print('Total number of trainable parameters: ', trainable_count)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Total number of trainable parameters:  45953\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5UG8j_4r7kSu",
        "outputId": "c09bf360-8891-41aa-defc-501b6036b72a"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "gru (GRU)                    (None, 30, 64)            12864     \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, 30, 64)            0         \n",
            "_________________________________________________________________\n",
            "lstm (LSTM)                  (None, 64)                33024     \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 64)                0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 1)                 65        \n",
            "=================================================================\n",
            "Total params: 45,953\n",
            "Trainable params: 45,953\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "W3v718GcE39o",
        "outputId": "4d37205a-39dd-427d-c971-30a069674609"
      },
      "source": [
        "# fitting the model to the training dataset\n",
        "model.fit(X_train, y_train, epochs=best_config['epochs'], batch_size=best_config['batch_size'])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "20/20 [==============================] - 3s 7ms/step - loss: 0.1692\n",
            "Epoch 2/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0116\n",
            "Epoch 3/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0051\n",
            "Epoch 4/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0044\n",
            "Epoch 5/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0038\n",
            "Epoch 6/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0029\n",
            "Epoch 7/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0033\n",
            "Epoch 8/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0031\n",
            "Epoch 9/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0026\n",
            "Epoch 10/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0033\n",
            "Epoch 11/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0029\n",
            "Epoch 12/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0027\n",
            "Epoch 13/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0032\n",
            "Epoch 14/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0034\n",
            "Epoch 15/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0026\n",
            "Epoch 16/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0038\n",
            "Epoch 17/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0035\n",
            "Epoch 18/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0028\n",
            "Epoch 19/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0022\n",
            "Epoch 20/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0021\n",
            "Epoch 21/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0026\n",
            "Epoch 22/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0025\n",
            "Epoch 23/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 24/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0019\n",
            "Epoch 25/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0025\n",
            "Epoch 26/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0021\n",
            "Epoch 27/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 28/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 29/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0027\n",
            "Epoch 30/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0023\n",
            "Epoch 31/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0019\n",
            "Epoch 32/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0020\n",
            "Epoch 33/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 34/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0025\n",
            "Epoch 35/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0029\n",
            "Epoch 36/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0019\n",
            "Epoch 37/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0022\n",
            "Epoch 38/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0018\n",
            "Epoch 39/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0024\n",
            "Epoch 40/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 41/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0016\n",
            "Epoch 42/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0021\n",
            "Epoch 43/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0043\n",
            "Epoch 44/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0022\n",
            "Epoch 45/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0026\n",
            "Epoch 46/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 47/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0038\n",
            "Epoch 48/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 49/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0025\n",
            "Epoch 50/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0021\n",
            "Epoch 51/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0017\n",
            "Epoch 52/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0018\n",
            "Epoch 53/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0016\n",
            "Epoch 54/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0018\n",
            "Epoch 55/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0014\n",
            "Epoch 56/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0030\n",
            "Epoch 57/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0022\n",
            "Epoch 58/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0029\n",
            "Epoch 59/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0018\n",
            "Epoch 60/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 61/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0018\n",
            "Epoch 62/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0015\n",
            "Epoch 63/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0013\n",
            "Epoch 64/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0023\n",
            "Epoch 65/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0021\n",
            "Epoch 66/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 67/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0032\n",
            "Epoch 68/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0021\n",
            "Epoch 69/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0022\n",
            "Epoch 70/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 71/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0026\n",
            "Epoch 72/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0030\n",
            "Epoch 73/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0017\n",
            "Epoch 74/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 75/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 76/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0015\n",
            "Epoch 77/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0017\n",
            "Epoch 78/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0016\n",
            "Epoch 79/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0020\n",
            "Epoch 80/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0015\n",
            "Epoch 81/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0014\n",
            "Epoch 82/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0017\n",
            "Epoch 83/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 84/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0029\n",
            "Epoch 85/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0022\n",
            "Epoch 86/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 87/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0018\n",
            "Epoch 88/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0023\n",
            "Epoch 89/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0016\n",
            "Epoch 90/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 91/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0029\n",
            "Epoch 92/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 93/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 9.9620e-04\n",
            "Epoch 94/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0010\n",
            "Epoch 95/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0016\n",
            "Epoch 96/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 97/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0014\n",
            "Epoch 98/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0036\n",
            "Epoch 99/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0014\n",
            "Epoch 100/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.7013e-04\n",
            "Epoch 101/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0011\n",
            "Epoch 102/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 103/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0014\n",
            "Epoch 104/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0011\n",
            "Epoch 105/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.5517e-04\n",
            "Epoch 106/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0019\n",
            "Epoch 107/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 108/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0026\n",
            "Epoch 109/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0020\n",
            "Epoch 110/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 111/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0014\n",
            "Epoch 112/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0012\n",
            "Epoch 113/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0028\n",
            "Epoch 114/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0017\n",
            "Epoch 115/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.6898e-04\n",
            "Epoch 116/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0023\n",
            "Epoch 117/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0014\n",
            "Epoch 118/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0017\n",
            "Epoch 119/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0013\n",
            "Epoch 120/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 9.5202e-04\n",
            "Epoch 121/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0020\n",
            "Epoch 122/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 123/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0010\n",
            "Epoch 124/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0012\n",
            "Epoch 125/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0029\n",
            "Epoch 126/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0018\n",
            "Epoch 127/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0016\n",
            "Epoch 128/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 129/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 130/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 131/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 132/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 133/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.3325e-04\n",
            "Epoch 134/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0012\n",
            "Epoch 135/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 9.4845e-04\n",
            "Epoch 136/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 137/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0016\n",
            "Epoch 138/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 139/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 140/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 141/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 8.1461e-04\n",
            "Epoch 142/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 8.5577e-04\n",
            "Epoch 143/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0016\n",
            "Epoch 144/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0010\n",
            "Epoch 145/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 9.9142e-04\n",
            "Epoch 146/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 147/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 148/200\n",
            "20/20 [==============================] - 0s 9ms/step - loss: 0.0013\n",
            "Epoch 149/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0019\n",
            "Epoch 150/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.0565e-04\n",
            "Epoch 151/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 152/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0019\n",
            "Epoch 153/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0028\n",
            "Epoch 154/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 7.5431e-04\n",
            "Epoch 155/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 156/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 157/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 9.2308e-04\n",
            "Epoch 158/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0013\n",
            "Epoch 159/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 8.0114e-04\n",
            "Epoch 160/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0017\n",
            "Epoch 161/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 162/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0018\n",
            "Epoch 163/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 9.2072e-04\n",
            "Epoch 164/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0019\n",
            "Epoch 165/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 166/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0016\n",
            "Epoch 167/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 7.0058e-04\n",
            "Epoch 168/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0013\n",
            "Epoch 169/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 7.3085e-04\n",
            "Epoch 170/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 171/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0021\n",
            "Epoch 172/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 7.5712e-04\n",
            "Epoch 173/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 6.8496e-04\n",
            "Epoch 174/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0015\n",
            "Epoch 175/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 8.3160e-04\n",
            "Epoch 176/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 8.8550e-04\n",
            "Epoch 177/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0011\n",
            "Epoch 178/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0012\n",
            "Epoch 179/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 7.2131e-04\n",
            "Epoch 180/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0015\n",
            "Epoch 181/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.6534e-04\n",
            "Epoch 182/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0018\n",
            "Epoch 183/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 184/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 7.6266e-04\n",
            "Epoch 185/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0011\n",
            "Epoch 186/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.0022\n",
            "Epoch 187/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0012\n",
            "Epoch 188/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0014\n",
            "Epoch 189/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.3186e-04\n",
            "Epoch 190/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0010\n",
            "Epoch 191/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 6.6594e-04\n",
            "Epoch 192/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0020\n",
            "Epoch 193/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 6.2734e-04\n",
            "Epoch 194/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.6597e-04\n",
            "Epoch 195/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0028\n",
            "Epoch 196/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0011\n",
            "Epoch 197/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0013\n",
            "Epoch 198/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.0019\n",
            "Epoch 199/200\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 9.8676e-04\n",
            "Epoch 200/200\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 9.2216e-04\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7fe0916b57d0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rTXJN51l9Y-F"
      },
      "source": [
        "# creating an instance of Baseline_Model class using X_test\n",
        "base_model = Base_Model(X_test, window_len)\n",
        "# calling predict_y method\n",
        "base_model.predict_y(in_data.test_len - window_len)\n",
        "\n",
        "# using the model to predict y from X_test\n",
        "y_pred = model.predict(X_test)\n",
        "# assigning y_dummy variable to .y_pred class attribute\n",
        "y_dummy = base_model.y_pred\n",
        "\n",
        "# calling class method extract_real_price to generate unnormalised prices\n",
        "in_data.extract_real_prices(y_pred, y_dummy)\n",
        "\n",
        "# assinging y_true variable\n",
        "y_true = in_data.y_true\n",
        "\n",
        "# assigning actual_price, predicted_price and dummy_price\n",
        "actual_price = in_data.actual_price\n",
        "predicted_price = in_data.predicted_price\n",
        "dummy_price = in_data.dummy_price"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H-D-XHyRjFMp"
      },
      "source": [
        "# Plotting the prediction results and getting errors\n",
        "The cells below plot the actual, predicted and dummy prices using the Security_Plotter class before finally saving the model and plot."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 395
        },
        "id": "PgjvooOD3jq3",
        "outputId": "12bb6234-aa9c-4493-d22b-7aa4b0669241"
      },
      "source": [
        "plotter = Security_Plotter(in_data, actual_price, predicted_price,\n",
        "                            dummy_price, in_data.train_len, window_len, in_str, model_str)\n",
        "\n",
        "plotter.single_plot()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AxaH7IUCxSXw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 644
        },
        "outputId": "3fdd0e01-4df6-4ced-c1f5-5e318991473b"
      },
      "source": [
        "plot_model(model, show_shapes=True, expand_nested=True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bFfQGfb79SJS",
        "outputId": "6de09fbf-7db8-434c-82d9-6b6c17e9cead"
      },
      "source": [
        "# calculating mean squared error\n",
        "mse = mean_squared_error(y_true, y_pred)\n",
        "d_mse = mean_squared_error(y_true, y_dummy)\n",
        "\n",
        "# calculating root mean squared error\n",
        "rmse = mean_squared_error(y_true, y_pred, squared=False)\n",
        "d_rmse = mean_squared_error(y_true, y_dummy, squared=False)\n",
        "\n",
        "# calculating mean absolute error\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "d_mae = mean_absolute_error(y_true, y_dummy)\n",
        "\n",
        "print('MSE: ', mse)\n",
        "print('RMSE: ', rmse)\n",
        "print('MAE: ', mae)\n",
        "print('Dummy MSE: ', d_mse)\n",
        "print('Dummy RMSE: ', d_rmse)\n",
        "print('Dummy MAE: ', d_mae)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MSE:  0.0023282941317949567\n",
            "RMSE:  0.04825240026977888\n",
            "MAE:  0.03821386466834084\n",
            "Dummy MSE:  0.01696823190684472\n",
            "Dummy RMSE:  0.13026216606077423\n",
            "Dummy MAE:  0.10864031818078547\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4YttzJHHU4-s",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9ed087e0-3175-4179-9b1e-50de3e2f4e07"
      },
      "source": [
        "# creating a string to save the model based on model name\n",
        "save_path = '/content/gdrive/My Drive/models/'+model_str+'_'+in_str+'/'\n",
        "# mounting google drive for easy storage of model\n",
        "from google.colab import drive\n",
        "# mounting the drive\n",
        "drive.mount('/content/gdrive/')\n",
        "# making the relevant directory to store the model\n",
        "os.mkdir(save_path)\n",
        "# saving the model\n",
        "keras.models.save_model(model, save_path)\n",
        "# saving the model graph\n",
        "model_graph = plot_model(model, to_file=save_path+model_str+'_'+in_str+'_graph_.png', show_shapes=True, expand_nested=True)\n",
        "# saving the matplotlib plot\n",
        "plotter.fig.savefig(save_path+model_str+'_'+in_str+'_plot.png', bbox_inches='tight')\n",
        "# saving the error metrics as a text file\n",
        "error_file = open(save_path+model_str+'_'+in_str+'_metrics.txt', 'w+')\n",
        "error_file.write('MSE: '+str(mse)+'\\n'+'RMSE: '+str(rmse)+'\\n'+'MAE: '+str(mae)+'\\n'+\n",
        "                 'Dummy MSE: '+str(d_mse)+'\\n'+'Dummy RMSE: '+str(d_rmse)+'\\n'+'Dummy MAE: '+str(d_mae))\n",
        "error_file.close()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/gdrive/\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "WARNING:absl:Found untraced functions such as gru_cell_layer_call_and_return_conditional_losses, gru_cell_layer_call_fn, lstm_cell_layer_call_and_return_conditional_losses, lstm_cell_layer_call_fn, gru_cell_layer_call_fn while saving (showing 5 of 10). These functions will not be directly callable after loading.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_LSTM_EURCHF/assets\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:tensorflow:Assets written to: /content/gdrive/My Drive/models/GRU_LSTM_EURCHF/assets\n"
          ],
          "name": "stderr"
        }
      ]
    }
  ]
}